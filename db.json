{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":1,"renderable":0},{"_id":"source/README.md","path":"README.md","modified":1,"renderable":0},{"_id":"source/robots.txt","path":"robots.txt","modified":1,"renderable":0},{"_id":"source/images/2019-2-26.png","path":"images/2019-2-26.png","modified":1,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/bitbug_favicon -16x16.ico","path":"images/bitbug_favicon -16x16.ico","modified":1,"renderable":1},{"_id":"themes/next/source/images/bitbug_favicon-3x32.ico","path":"images/bitbug_favicon-3x32.ico","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"themes/next/source/uploads/avatar.png","path":"uploads/avatar.png","modified":1,"renderable":1},{"_id":"themes/next/source/uploads/notfound.gif","path":"uploads/notfound.gif","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/schemes/muse.js","path":"js/src/schemes/muse.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"109833a1caf13cc5305f1c288b98e4f77c19df4a","modified":1588233505396},{"_id":"source/README.md","hash":"77b0d98e16ba11d1ef35936e1d3bb865a842912c","modified":1588233505396},{"_id":"source/robots.txt","hash":"a7593476994d284c7265a8de84793557f7b42a51","modified":1588233505404},{"_id":"themes/next/.all-contributorsrc","hash":"e32dc4075e304af04b98d0726d489081bea722c0","modified":1588233505412},{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1588233505412},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1588233505412},{"_id":"themes/next/.eslintrc.json","hash":"cc5f297f0322672fe3f684f823bc4659e4a54c41","modified":1588233505412},{"_id":"themes/next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1588233505412},{"_id":"themes/next/.gitignore","hash":"a18c2e83bb20991b899b58e6aeadcb87dd8aa16e","modified":1588233505412},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1588233505412},{"_id":"themes/next/.travis.yml","hash":"3d1dc928c4a97933e64379cfde749dedf62f252c","modified":1588233505412},{"_id":"themes/next/README.md","hash":"b4f780a96b0e5d3737eb93bc00da6de91f042c4b","modified":1588233505412},{"_id":"themes/next/_config.yml","hash":"0ea983314eb795dc0f4538d6a3170889df112644","modified":1588233505412},{"_id":"themes/next/bower.json","hash":"c2d363510f82ea3672dae230ebc51da6ef10ec6f","modified":1588233505412},{"_id":"themes/next/crowdin.yml","hash":"e026078448c77dcdd9ef50256bb6635a8f83dca6","modified":1588233505412},{"_id":"themes/next/gulpfile.coffee","hash":"48d2f9fa88a4210308fc41cc7d3f6d53989f71b7","modified":1588233505416},{"_id":"themes/next/package.json","hash":"ab9e5be34a934b9bb74a155d7e187f0785445df6","modified":1588233505420},{"_id":"source/404/404.html","hash":"7c85bc76e7f5b3b0334a13613c4ed7995212623e","modified":1588233505396},{"_id":"source/_posts/1-2-3-map-parseInt-报错问解决办法.md","hash":"cc1c1da7b881878c9cc6eabd164720ebfa8f7a7e","modified":1588233505396},{"_id":"source/_posts/element-ui-上传组件函数自定义参数传递.md","hash":"5e36afa303c8d4522fc46fe526c09a5d78100aed","modified":1588233505396},{"_id":"source/_posts/element-ui-表格中的form的input动态验证规则.md","hash":"42cc6e0d00dcf02c99ac0b0502f92503d5122a4f","modified":1588233505396},{"_id":"source/_posts/js判断一个变量是对象还是数组的实用方法记录.md","hash":"80bfbd1234d2f0633079f63fa9e27e3cb567a1a5","modified":1588233505396},{"_id":"source/_posts/ubantu-apt-get-install方式安装mysql.md","hash":"d260ff3b0977dcb505df8fe2a8394f0d931ea48e","modified":1588233505396},{"_id":"source/_posts/webpack4从头构建一个简单的vue2项目.md","hash":"235e7322f36fd871862fe714ecdf1106795826cd","modified":1588233505396},{"_id":"source/_posts/windows下使用nexus搭建私有仓库并使用vue-cli-3-搭建组件库.md","hash":"6f2117b60f70327fbd803ba5b08be81f65ca8495","modified":1588233505400},{"_id":"source/_posts/一个奇葩的表格统计需求.md","hash":"9ffacff2d180468ee698c1251e93ed83cca69862","modified":1588233505400},{"_id":"source/_posts/在-create-react-app-中使用Ant-Design中的坑.md","hash":"e79ccb6153a2ea76d1b561769452d61598168d03","modified":1591268317122},{"_id":"source/_posts/在重启阿里云ubantu后nginx、mysql、pm2等的重启.md","hash":"39ec760ca19d6321eb37ea550e5b759d8b5b2d95","modified":1588233505404},{"_id":"source/_posts/实现一个简单的深拷贝.md","hash":"a4d8b9be5844c0d30c75357ff69c68d2bb6f13a2","modified":1588233505404},{"_id":"source/_posts/怎么样在别的电脑同步更新发表hexo博客？.md","hash":"234da4ba8a366acad1b8499f8e690275cae62e51","modified":1588233505404},{"_id":"source/_posts/用Xshell登录阿里云服务器.md","hash":"3a7c705541aaf0524b2715283a202574488d15e3","modified":1588233505404},{"_id":"source/_posts/用hexo-github搭建个人博客.md","hash":"060736d713be165c1077ecf3864576c0f6b8f025","modified":1588233505404},{"_id":"source/_posts/解决npm-install安装任何包都报错的问题.md","hash":"c7ec3e5fef5fbcaad4811871cbd47c23ac1503ad","modified":1588233505404},{"_id":"source/_posts/记录element-ui-二次封装table时formatter的使用问题.md","hash":"dd6102b45909b93a51db4fa8bfad2bcc1538e4ff","modified":1588233505404},{"_id":"source/_posts/运行yarn-eject-后-yarn-start-报错.md","hash":"8b03e0969ffc680946a9458168f77907908b0928","modified":1591268749409},{"_id":"source/_posts/部署在github-page的hexo博客绑定二级域名.md","hash":"0cde8df4920ac6febd578d2f8f456551fa1b2c52","modified":1588233505404},{"_id":"source/about/index.md","hash":"3afa92c5b5a9eba79280391c829eed6ab87a36dd","modified":1588233505404},{"_id":"source/archives/index.md","hash":"b4fa267fc5848ea8311aa9104faa0c9fcfe26ddf","modified":1588233505404},{"_id":"source/categories/index.md","hash":"400225648ece83791339fd036ced172f2ec39bc3","modified":1588233505404},{"_id":"source/images/2019-2-26.png","hash":"8f24528dfcc0382abcd8fe829c34ad7501827c46","modified":1588233505404},{"_id":"source/tags/index.md","hash":"77f0641e5989c61b5360063f826369bc7d27acdd","modified":1588233505404},{"_id":"themes/next/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1588233505412},{"_id":"themes/next/docs/ALGOLIA-SEARCH.md","hash":"141e989844d0b5ae2e09fb162a280715afb39b0d","modified":1588233505412},{"_id":"themes/next/docs/AUTHORS.md","hash":"7b24be2891167bdedb9284a682c2344ec63e50b5","modified":1588233505412},{"_id":"themes/next/docs/DATA-FILES.md","hash":"8e1962dd3e1b700169b3ae5bba43992f100651ce","modified":1588233505412},{"_id":"themes/next/docs/INSTALLATION.md","hash":"2bbdd6c1751b2b42ce9b9335da420c6026a483e9","modified":1588233505412},{"_id":"themes/next/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"212a36d57495990b5f56e46ca8dce1d76c199660","modified":1588233505416},{"_id":"themes/next/docs/LICENSE.txt","hash":"368bf2c29d70f27d8726dd914f1b3211cae4bbab","modified":1588233505416},{"_id":"themes/next/docs/MATH.md","hash":"e6023505dcccaef0b856102543585a13fc6af0b1","modified":1588233505416},{"_id":"themes/next/docs/UPDATE-FROM-5.1.X.md","hash":"ad57c168d12ba01cf144a1ea0627b2ffd1847d3e","modified":1588233505416},{"_id":"themes/next/languages/de.yml","hash":"fb478c5040a4e58a4c1ad5fb52a91e5983d65a3a","modified":1588233505416},{"_id":"themes/next/languages/default.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1588233505416},{"_id":"themes/next/languages/en.yml","hash":"c540c3a0d7db2d4239293c8783881962640b6c34","modified":1588233505416},{"_id":"themes/next/languages/fr.yml","hash":"0162a85ae4175e66882a9ead1249fedb89200467","modified":1588233505416},{"_id":"themes/next/languages/id.yml","hash":"e7fb582e117a0785036dcdbb853a6551263d6aa6","modified":1588233505416},{"_id":"themes/next/languages/it.yml","hash":"62ef41d0a9a3816939cb4d93a524e6930ab9c517","modified":1588233505416},{"_id":"themes/next/languages/ja.yml","hash":"e331b15b1fda0f2285d25853f834682ab8dc3c39","modified":1588233505416},{"_id":"themes/next/languages/ko.yml","hash":"fae155018ae0efdf68669b2c7dd3f959c2e45cc9","modified":1588233505416},{"_id":"themes/next/languages/nl.yml","hash":"bb9ce8adfa5ee94bc6b5fac6ad24ba4605d180d3","modified":1588233505416},{"_id":"themes/next/languages/pt-BR.yml","hash":"bfc80c8a363fa2e8dde38ea2bc85cd19e15ab653","modified":1588233505416},{"_id":"themes/next/languages/pt.yml","hash":"3cb51937d13ff12fcce747f972ccb664840a9ef3","modified":1588233505416},{"_id":"themes/next/languages/ru.yml","hash":"db0644e738d2306ac38567aa183ca3e859a3980f","modified":1588233505416},{"_id":"themes/next/languages/tr.yml","hash":"c5f0c20743b1dd52ccb256050b1397d023e6bcd9","modified":1588233505416},{"_id":"themes/next/languages/uk.yml","hash":"1eb59e581568da9a81d6e20541b4ada5fc1c55c0","modified":1588233505416},{"_id":"themes/next/languages/vi.yml","hash":"8da921dd8335dd676efce31bf75fdd4af7ce6448","modified":1588233505416},{"_id":"themes/next/languages/zh-HK.yml","hash":"7903b96912c605e630fb695534012501b2fad805","modified":1588233505416},{"_id":"themes/next/languages/zh-Hans.yml","hash":"fbbf3a0b664ae8e927c700b0a813692b94345156","modified":1588233505416},{"_id":"themes/next/languages/zh-TW.yml","hash":"6e6d2cd8f4244cb1b349b94904cb4770935acefd","modified":1588233505416},{"_id":"themes/next/layout/_layout.swig","hash":"dfe9704bd19b3db501aeb7d64168d7aaf6e2585a","modified":1588233505416},{"_id":"themes/next/layout/archive.swig","hash":"2b6450c6b6d2bcbcd123ad9f59922a5e323d77a5","modified":1588233505420},{"_id":"themes/next/layout/category.swig","hash":"5d955284a42f802a48560b4452c80906a5d1da02","modified":1588233505420},{"_id":"themes/next/layout/index.swig","hash":"c2a3896c64e96790edc10426ef586b6186a87f46","modified":1588233505420},{"_id":"themes/next/layout/page.swig","hash":"2d0e80e8a4dcba665704882b9dc5858c187acc31","modified":1588233505420},{"_id":"themes/next/layout/post.swig","hash":"f74929fd792541916eb25c2addfb35431be071ba","modified":1588233505420},{"_id":"themes/next/layout/schedule.swig","hash":"3268dd3d90d8b0e142cfa1a2ebb23355baeda148","modified":1588233505420},{"_id":"themes/next/layout/tag.swig","hash":"ba402ce8fd55e80b240e019e8d8c48949b194373","modified":1588233505420},{"_id":"themes/next/scripts/merge-configs.js","hash":"33afe97284d34542015d358a720823feeebef120","modified":1588233505424},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1588233505424},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1588233505432},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1588233505432},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1588233505432},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1588233505428},{"_id":"source/_posts/element-ui-上传组件函数自定义参数传递/1.png","hash":"ead49f0f3a675a1a0df47a2d8bf6ffaa2ad41550","modified":1588233505396},{"_id":"source/_posts/element-ui-上传组件函数自定义参数传递/2.png","hash":"e796281bac9aadf1cf2d35abed8bb11b194883fe","modified":1588233505396},{"_id":"source/_posts/element-ui-上传组件函数自定义参数传递/3.png","hash":"b75fe1970b5278c5f1d4f5001bb55e9c053fff52","modified":1588233505396},{"_id":"source/_posts/element-ui-表格中的form的input动态验证规则/1.png","hash":"10264588102714359a980206c040c9ddb7cea605","modified":1588233505396},{"_id":"source/_posts/element-ui-表格中的form的input动态验证规则/2.png","hash":"191416348a4434089560929f5e2b547f2af24ac6","modified":1588233505396},{"_id":"source/_posts/element-ui-表格中的form的input动态验证规则/4.png","hash":"94d20fcae17886203ecc58e493d72f22dd181656","modified":1588233505396},{"_id":"source/_posts/element-ui-表格中的form的input动态验证规则/3.png","hash":"86ec7353f6c193a4ac6eb7d770656cf24dbb8524","modified":1588233505396},{"_id":"source/_posts/element-ui-表格中的form的input动态验证规则/5.png","hash":"6408623a332923fdd073c3a3d01d4b51801a5f28","modified":1588233505396},{"_id":"source/_posts/js判断一个变量是对象还是数组的实用方法记录/2.jpg","hash":"6398dc248ae2a9353582e519c092755498c00e06","modified":1588233505396},{"_id":"source/_posts/js判断一个变量是对象还是数组的实用方法记录/1.jpg","hash":"fbee0ee26b8db424d8925521f8b055ddef18d6fd","modified":1588233505396},{"_id":"source/_posts/webpack4从头构建一个简单的vue2项目/2.png","hash":"de756293494f1fa6b4ae40745a94b8ad6283626c","modified":1588233505396},{"_id":"source/_posts/webpack4从头构建一个简单的vue2项目/1.png","hash":"28803ad48576d6031fc620df00df92edd8a5c734","modified":1588233505396},{"_id":"source/_posts/windows下使用nexus搭建私有仓库并使用vue-cli-3-搭建组件库/5.png","hash":"3bc26eb6ffe01b4e0dcc1f49010fabd7e4926b0f","modified":1588233505400},{"_id":"source/_posts/windows下使用nexus搭建私有仓库并使用vue-cli-3-搭建组件库/8.png","hash":"01fb060c882bf14fe637dcf42ca3d8f6679bb714","modified":1588233505400},{"_id":"source/_posts/一个奇葩的表格统计需求/1.jpg","hash":"fc04a6cc872c75700ecd6309e9e53d1554fe2144","modified":1588233505400},{"_id":"source/_posts/一个奇葩的表格统计需求/2.jpg","hash":"ce92e8d091db7c19c8dab1d66729fb3c4da46acc","modified":1588233505400},{"_id":"source/_posts/一个奇葩的表格统计需求/3.jpg","hash":"6400106d296b6b7b8f23ea43eb577a67f67285f6","modified":1588233505404},{"_id":"source/_posts/一个奇葩的表格统计需求/4.jpg","hash":"ed6a9f4361a1b8ebc3241b58a854b776a464f023","modified":1588233505404},{"_id":"source/_posts/一个奇葩的表格统计需求/5.jpg","hash":"865b0520708a7083a5fdfa9361ee9618980d1046","modified":1588233505404},{"_id":"source/_posts/在重启阿里云ubantu后nginx、mysql、pm2等的重启/1.png","hash":"c4d1d5125b4342b9f8d4e53bbdc6566503b7720a","modified":1588233505404},{"_id":"source/_posts/在重启阿里云ubantu后nginx、mysql、pm2等的重启/2.png","hash":"66c168b48969d70bcecbad6c19912c469d9e0371","modified":1588233505404},{"_id":"source/_posts/在重启阿里云ubantu后nginx、mysql、pm2等的重启/3.png","hash":"48e6e7149dbb223027a3bfcb2154398fb5e43b3d","modified":1588233505404},{"_id":"source/_posts/用Xshell登录阿里云服务器/1.jpg","hash":"254327df897d4e2794f3e6a43e9a7a7723878e8e","modified":1588233505404},{"_id":"source/_posts/用Xshell登录阿里云服务器/2.jpg","hash":"4c38193b9449eae96842fade756be47374426fb9","modified":1588233505404},{"_id":"source/_posts/记录element-ui-二次封装table时formatter的使用问题/1.png","hash":"ea2de96dfa875f22ae64a5aed7c64d02eed58889","modified":1588233505404},{"_id":"source/_posts/记录element-ui-二次封装table时formatter的使用问题/2.png","hash":"dcac407692b787cbf57033c800fbea954e716ea0","modified":1588233505404},{"_id":"source/_posts/记录element-ui-二次封装table时formatter的使用问题/3.png","hash":"e3cda13ef4ae41ef6d02c790714f190f7f53eeb4","modified":1588233505404},{"_id":"themes/next/docs/ru/DATA-FILES.md","hash":"d6d20f60f77a76c77f8e65d0c9adbd79d0274557","modified":1588233505416},{"_id":"themes/next/docs/ru/INSTALLATION.md","hash":"6c5d69e94961c793da156217ecf1179e868d7ba1","modified":1588233505416},{"_id":"themes/next/docs/ru/README.md","hash":"953deb732e0b3b22c423122a189d6847d908c4b8","modified":1588233505416},{"_id":"themes/next/docs/ru/UPDATE-FROM-5.1.X.md","hash":"b1dd18d9b890b21718883ea1832e7e02a773104a","modified":1588233505416},{"_id":"themes/next/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"6855402e2ef59aae307e8bd2a990647d3a605eb8","modified":1588233505416},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"a45a791b49954331390d548ac34169d573ea5922","modified":1588233505416},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"bd2c955d9b7b1b45bd74a4536717d547e03fcde3","modified":1588233505416},{"_id":"themes/next/docs/zh-CN/DATA-FILES.md","hash":"f3eec572a7d83542e2710a7404082014aaa1a5e7","modified":1588233505416},{"_id":"themes/next/docs/zh-CN/INSTALLATION.md","hash":"b19a6e0ae96eb7c756fb5b1ba03934c7f9cbb3c3","modified":1588233505416},{"_id":"themes/next/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"115ffbde2b3ce01ef1f8c2b3833e6f6794650132","modified":1588233505416},{"_id":"themes/next/docs/zh-CN/MATH.md","hash":"b76ccbc658024e86639cfa5f8a3817647fc8d651","modified":1588233505416},{"_id":"themes/next/docs/zh-CN/README.md","hash":"15e55eb77616500fa4c64982d6bad9ac17a46e2a","modified":1588233505416},{"_id":"themes/next/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"5da70d7fa0c988a66a469b9795d33d471a4a4433","modified":1588233505416},{"_id":"themes/next/layout/_custom/head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1588233505416},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1588233505416},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1588233505416},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"89b0a0e64637bf5b0cfea0a23642df3d95eedfa4","modified":1588233505416},{"_id":"themes/next/layout/_macro/post.swig","hash":"870e220950eb49fd459d5eab026daf189c19d326","modified":1588233505416},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"a1ded7ba92354ed55ae20a0b6bcc15bbb4b801c2","modified":1588233505416},{"_id":"themes/next/layout/_partials/comments.swig","hash":"07340f3a4c8d8a9dd491d1eba18d985ecc0855a2","modified":1588233505416},{"_id":"themes/next/layout/_partials/footer.swig","hash":"07f88421bda86d9d5ff32d130b1cb1196b99a326","modified":1588233505416},{"_id":"themes/next/layout/_partials/github-banner.swig","hash":"a6ed0b4d6140bdfc5ea4995bb13d969cce50e74a","modified":1588233505416},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"dbe321bcf3cf45917cc11a3e3f50d8572bac2c70","modified":1588233505416},{"_id":"themes/next/layout/_partials/post-edit.swig","hash":"06dac109504812b63766a80ede9ddacbd42d227d","modified":1588233505416},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"d01881f8056203c4b6920328db8c2ae8fa662a08","modified":1588233505420},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"d66bc7ec3cc03f60fcc7d555368a5b9b010f7f11","modified":1588233505420},{"_id":"themes/next/layout/_scripts/noscript.swig","hash":"edaff4766e0c05fd5c889d9dd32884d376bef9d9","modified":1588233505420},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"c4c58ea2bd4cf10372a5e46dbec1b9a2e0e69f0f","modified":1588233505420},{"_id":"themes/next/layout/_third-party/baidu-push.swig","hash":"6a02a9ca16dc43b7dc3fcce57b4e5fcb593c34da","modified":1588233505420},{"_id":"themes/next/layout/_third-party/bookmark.swig","hash":"10b61a8bac671e375916a4d234c120117098a78f","modified":1588233505420},{"_id":"themes/next/layout/_third-party/copy-code.swig","hash":"4148001b0b3f8a29b13ba5cd3f6f636c9cb260b0","modified":1588233505420},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"d359e638a86bd9664101c48e9344f21ec96e6a15","modified":1588233505420},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"2c4a66be4677d3e4dec3f169ac8a769098dad1fe","modified":1588233505420},{"_id":"themes/next/layout/_third-party/pangu.swig","hash":"c28f9dc96ab735daeb7f599f86470aa5a83c03cf","modified":1588233505420},{"_id":"themes/next/layout/_third-party/pdf.swig","hash":"5453d76e00bfcd1d732fc5f41828a90eb681f645","modified":1588233505420},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"cbe40cb67dad15ade967b0f396c1a95b6871f76a","modified":1588233505420},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"272c46f03766ea0c169163342bb98f09f561cf4c","modified":1588233505420},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"1b250c1b7945cb1029b9e855edb09854f7c8250a","modified":1588233505420},{"_id":"themes/next/scripts/helpers/engine.js","hash":"60eb1554456d9d0e5afc4a2d16f1580a0aa02da8","modified":1588233505424},{"_id":"themes/next/scripts/helpers/next-url.js","hash":"15582e823d228c0b2288543c1eb460c40afad29b","modified":1588233505424},{"_id":"themes/next/scripts/tags/button.js","hash":"08d5dfe05335f57d3e8392a74315766dafa52538","modified":1588233505424},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"f13430d9d1c9773b390787c2f046bb1f12a79878","modified":1588233505424},{"_id":"themes/next/scripts/tags/exturl.js","hash":"7ded3e7a78380b32de3e12f156e0978ef5c2890a","modified":1588233505424},{"_id":"themes/next/scripts/tags/full-image.js","hash":"22de989163c4678278c8a112160be6977f570234","modified":1588233505424},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"4775fffa526f1f7b40aa1f1c0a171dbcf5963df7","modified":1588233505424},{"_id":"themes/next/scripts/tags/include-raw.js","hash":"5db59d56f4f4082382bf1c16722e6c383892b0c5","modified":1588233505424},{"_id":"themes/next/scripts/tags/label.js","hash":"76735c88cfba2e53649387a7fa5176706c2d3c0c","modified":1588233505424},{"_id":"themes/next/scripts/tags/note.js","hash":"84ce2d2c0646baafc82083e261b093b1c515f63c","modified":1588233505424},{"_id":"themes/next/scripts/tags/tabs.js","hash":"8b1e9043db8f19ea4a12c473b3f729bd3b5bcb0e","modified":1588233505424},{"_id":"themes/next/source/css/main.styl","hash":"e010ec8ac73268a0f137204c89e0080ab8d59b3d","modified":1588233505428},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1588233505428},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1588233505428},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1588233505428},{"_id":"themes/next/source/images/bitbug_favicon -16x16.ico","hash":"c5aeb4da5f32d485c5c4e270d3ee0e082b63784f","modified":1588233505428},{"_id":"themes/next/source/images/bitbug_favicon-3x32.ico","hash":"0ce6be69735bdaff0ce533f2f20be12177a58d23","modified":1588233505428},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1588233505428},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1588233505428},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1588233505428},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1588233505428},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1588233505428},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1588233505428},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1588233505428},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1588233505428},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1588233505428},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1588233505428},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1588233505428},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1588233505428},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1588233505428},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1588233505428},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1588233505428},{"_id":"themes/next/source/uploads/avatar.png","hash":"b7cbde16b4bdd0328a6dbf0631148bbfbb58468b","modified":1588233505432},{"_id":"themes/next/source/uploads/notfound.gif","hash":"e81b9256b56fb39d2f56024f866b03b7917525a8","modified":1588233505432},{"_id":"source/_posts/windows下使用nexus搭建私有仓库并使用vue-cli-3-搭建组件库/2.png","hash":"a480d8818d822a6c51dde17499df0a6c64cfe047","modified":1588233505400},{"_id":"source/_posts/windows下使用nexus搭建私有仓库并使用vue-cli-3-搭建组件库/1.png","hash":"a2fcee8cbf0721c4570f35de3d1d1f80d917f518","modified":1588233505400},{"_id":"source/_posts/windows下使用nexus搭建私有仓库并使用vue-cli-3-搭建组件库/3.png","hash":"3a7461c78e868e285c9fd4d8a7119f25cc822cfe","modified":1588233505400},{"_id":"source/_posts/windows下使用nexus搭建私有仓库并使用vue-cli-3-搭建组件库/4.png","hash":"639b4a65f4fb9149c89c5e989613c99d9af9a8a2","modified":1588233505400},{"_id":"source/_posts/windows下使用nexus搭建私有仓库并使用vue-cli-3-搭建组件库/6.png","hash":"8919bf9a4cf99efcfbd6768f2fefb5c43ba58083","modified":1588233505400},{"_id":"source/_posts/windows下使用nexus搭建私有仓库并使用vue-cli-3-搭建组件库/7.png","hash":"db86d672a7e1476aaa7f9fe033287f97114fc7f5","modified":1588233505400},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1588233505428},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1588233505428},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1588233505428},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1588233505428},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1588233505428},{"_id":"themes/next/layout/_macro/menu/menu-badge.swig","hash":"65c5e585982dae7ae1542cada71858b4ea1f73d6","modified":1588233505416},{"_id":"themes/next/layout/_macro/menu/menu-item.swig","hash":"fb33f499022cd02722f834fcef1a0e193362cfde","modified":1588233505416},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"fc6bafc8c633afadc538c5afa5620ea2a1cdcb84","modified":1588233505416},{"_id":"themes/next/layout/_partials/head/head-unique.swig","hash":"dc53a41196b675268bfd2a944f6258c57ed44e91","modified":1588233505416},{"_id":"themes/next/layout/_partials/head/head.swig","hash":"6a825ce9412339ec4a128d9714804994cb85522c","modified":1588233505416},{"_id":"themes/next/layout/_partials/header/brand.swig","hash":"58e2e153e8b67e643b24453a1e1cceaae3323647","modified":1588233505416},{"_id":"themes/next/layout/_partials/header/index.swig","hash":"2082f5077551123e695e8afec471c9c44b436acb","modified":1588233505416},{"_id":"themes/next/layout/_partials/header/menu.swig","hash":"71af31fea5913fd30c233e555ef13cf2c9768f72","modified":1588233505416},{"_id":"themes/next/layout/_partials/header/sub-menu.swig","hash":"5adc60100e129c1d0307bdcaa0c7b8e8375a6ea4","modified":1588233505416},{"_id":"themes/next/layout/_partials/page/breadcrumb.swig","hash":"69722be16ce5eae5c027168f9b2fded4776e1b53","modified":1588233505416},{"_id":"themes/next/layout/_partials/page/page-header.swig","hash":"2940df694fff28e8bf71b6546b4162f1e38227db","modified":1588233505416},{"_id":"themes/next/layout/_partials/post/post-copyright.swig","hash":"2f73cc9ffb63534f0b6d8f0e9ee853c1af1b1244","modified":1588233505416},{"_id":"themes/next/layout/_partials/post/post-related.swig","hash":"eea95b785c9c36d28e1839619793f66e89773bee","modified":1588233505416},{"_id":"themes/next/layout/_partials/post/reward.swig","hash":"c33691d9b4ff3a69603ad04c9ab264eb68ea43a9","modified":1588233505420},{"_id":"themes/next/layout/_partials/post/wechat-subscriber.swig","hash":"d63208ee20529450c35de8fe80ef41fffa831dc9","modified":1588233505420},{"_id":"themes/next/layout/_partials/search/algolia-search.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1588233505420},{"_id":"themes/next/layout/_partials/search/index.swig","hash":"20074bc05fed0703e6b00f471d7e5faee084b59a","modified":1588233505420},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1588233505420},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"a5587bd1f60d35e58618576cec45e662aa44ea1f","modified":1588233505420},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"15b542f5b06b7532234af367340b9ed9fcebb0ac","modified":1588233505420},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"6f181cc188ecbe5e607fd989756e470d4cb9765d","modified":1588233505420},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"c7f2855f19dfdf18aba8c58d55b7489e631ed035","modified":1588233505420},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"ffc8e8836714ea79abeb77b75859634615652877","modified":1588233505420},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"108b157fbd1ac3baaf19ae87234fa8728ab79556","modified":1588233505420},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"be24f204a515d5211bf3ba98a030e3bf61d4cc16","modified":1588233505420},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"94e106755c5fb6f40431b621beeba0bd33877e57","modified":1588233505420},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"a5723950c343d220270bfd27bd30050eda6c3fb3","modified":1588233505420},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"798d67e4a736613ab899eabe6529091bbcda7850","modified":1588233505420},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"591b2ccd9713ccb922b9fcf5e278b6de9c5ec30b","modified":1588233505420},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"8eadb929c9e50e58502ccad2dc2657746f8c592a","modified":1588233505420},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"08cd47ef8572121b7811342d3c9a84a338a18191","modified":1588233505420},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"050ea01f25cfe492be9bb77b409644d623fdf2dc","modified":1588233505420},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"fae69a0e1a1d42f7bb44e594a29857d94594698b","modified":1588233505420},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"866012e74109383c98b31e6062bc735068ac6014","modified":1588233505420},{"_id":"themes/next/layout/_third-party/analytics/growingio.swig","hash":"4a966b7ffe2d80ff1b3dd0fd14b355766dc5c70f","modified":1588233505420},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"438c6f5e6665d72f4ea7ee206011d669246f6102","modified":1588233505420},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"5ced33d88f0e7c7546b8da7ff096c59bb0207cdf","modified":1588233505420},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"f240a50cd9b627620d9a374a29cf95f0c5e99d7c","modified":1588233505420},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"92e04a2b9e0c3df594bc22235d1894e5ad458dfc","modified":1588233505420},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"cbf620cf2a78e3ac736cdd7e768513cfd6946e83","modified":1588233505420},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"3533167c4295637b91d90f3bae7c651cd128bb6e","modified":1588233505420},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"3cfeafefc672d9a7704650ebfb2f9d8668b38d9a","modified":1588233505420},{"_id":"themes/next/layout/_third-party/comments/gitalk.swig","hash":"197207078ff0f4d46417b4413493e02cda0b85f4","modified":1588233505420},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"dbe94dd94678ee8e4002b06bb1e9ead2e59e44bf","modified":1588233505420},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"a4ab8095bf60def5823bf6b7b91a92a356a4c098","modified":1588233505420},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"5856d5f701e51dfae1fd6fb486cefde67effd555","modified":1588233505420},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"210f0c152bc4a9375ed364398ce309f09ebafd10","modified":1588233505420},{"_id":"themes/next/layout/_third-party/math/index.swig","hash":"a7e304b05a44279d3e4f611908d7faef9dc14d7c","modified":1588233505420},{"_id":"themes/next/layout/_third-party/math/katex.swig","hash":"c2cb2f384bc30d31cdccf9794a729c03e687b45c","modified":1588233505420},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"b3eaab6a269aa3fcbafe24fd06f0c9206dc12716","modified":1588233505420},{"_id":"themes/next/scripts/filters/after_post_render/exturl.js","hash":"1c30b09d1855f1720f71f5956e0c9ca4d57b1231","modified":1588233505424},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1588233505428},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1588233505428},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"2640a54fa63bdd4c547eab7ce2fc1192cf0ccec8","modified":1588233505428},{"_id":"themes/next/layout/_third-party/search/algolia-search.swig","hash":"cd86bed852fec6e6933898067122a03755bc17f0","modified":1588233505420},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"086f5979b3de091c3378512e6c5c2f8fcb4f6298","modified":1588233505428},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"a8aa41625b94cf17a7f473ed10dcbe683b1db705","modified":1588233505428},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"be087dcc060e8179f7e7f60ab4feb65817bd3d9f","modified":1588233505428},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"fc15e277d1504532a09b7b1bd31f900ad95ec4b8","modified":1588233505428},{"_id":"themes/next/source/css/_variables/base.styl","hash":"d0e97b205d3320421c380f2eee445457430c8152","modified":1588233505428},{"_id":"themes/next/source/js/src/affix.js","hash":"a2aab233d99297435a5274bf512c3c753fe08e80","modified":1588233505428},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"1f7f10c579e7703d0f6acb8b73f3d78a07d0c623","modified":1588233505428},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"1c41508b83cb0c4512e64b4d63afa1be954ce8ef","modified":1588233505428},{"_id":"themes/next/source/js/src/exturl.js","hash":"54825acc8de4793feac415be227b965428f4e97d","modified":1588233505428},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1588233505428},{"_id":"themes/next/source/js/src/motion.js","hash":"7933a30382a84b655238f6e78d42ea1b99af4de6","modified":1588233505428},{"_id":"themes/next/source/js/src/post-details.js","hash":"0dde5e6d4547587662a3256317a9d5d1db507692","modified":1588233505428},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"d07b3776708d4ae79ed2037c4c7391d5c9b06b19","modified":1588233505428},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fa3c92968bcdbcb8d95a1729f7659d9753cbd077","modified":1588233505428},{"_id":"themes/next/source/js/src/utils.js","hash":"1e515f5c5e9872b875090481b5bebfbf175d32fe","modified":1588233505428},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1588233505428},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1588233505428},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1588233505428},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1588233505428},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1588233505428},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1588233505432},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1588233505432},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1588233505432},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"ea94aa85034c6d1b6bb865aecea55c73f8a14501","modified":1588233505420},{"_id":"themes/next/layout/_third-party/math/mathjax.swig","hash":"c76c7ac9b97e74908467701b10e25707ba5c979e","modified":1588233505420},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1588233505432},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"837ff3718cb5a63eb01a451e35989fd1dfe4218c","modified":1588233505424},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"31050fc7a25784805b4843550151c93bfa55c9c8","modified":1588233505424},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"7e509c7c28c59f905b847304dd3d14d94b6f3b8e","modified":1588233505424},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1588233505424},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1588233505424},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"c5d48863f332ff8ce7c88dec2c893f709d7331d3","modified":1588233505424},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"61ca40856e5cacd48e0fa9728fde4605c7dd4c94","modified":1588233505424},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"7e51ea64611ab5d678c112b4688d4db4fd2737e2","modified":1588233505428},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"8c68d36d1c74628be58cb61e66948868a8c7588d","modified":1588233505428},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"e3ad313825d7ad03e24bb76d036deeb50587022b","modified":1588233505428},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"4fd38490b01af4f977b53aefc433cd2f981cde14","modified":1588233505428},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1588233505428},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1588233505428},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"6f1a0fe6b45eb8849114b8b60ba600767d08b6df","modified":1588233505428},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"0bef9f0dc134215bc4d0984ba3a16a1a0b6f87ec","modified":1588233505428},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"fe03041c387347e0bcf8efd1b4cf205ece66c339","modified":1588233505428},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1588233505428},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"fe2dc74726a515549956d233becda188da64f948","modified":1588233505428},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"fa33213aceed7bf4bf25437ca9c1a00f7734ae65","modified":1588233505428},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"a5bef4fdde80951f3b8c154d79cb1e581638a988","modified":1588233505428},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"2dd866817d0bc7d179e81855f8fbcbb5d3c883fc","modified":1588233505428},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"9a5e3c6da76f6d5bed70c38fdf5796faa759d473","modified":1588233505428},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1588233505428},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"fc160583f742c94316a0fee05c18468033173534","modified":1588233505428},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"936132428a0d35b3947ccedd4c379940abcf223a","modified":1588233505428},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"a5bef4fdde80951f3b8c154d79cb1e581638a988","modified":1588233505428},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"d5e8ea6336bc2e237d501ed0d5bbcbbfe296c832","modified":1588233505428},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"09b5054ae34ba83c0d614821e574da265af55a14","modified":1588233505428},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"9b076c92abdadcf9acee75da64592ff3badd69b8","modified":1588233505428},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"74c7dccf0a3ee9fc2ca25ad8e998243191813a0e","modified":1588233505428},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1588233505428},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"fd54eb599d5003bbb1aabc08596bc24a3fa3294f","modified":1588233505428},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"b5b936dddb7b4de4720cd1e8428b30a2f06d63fb","modified":1588233505428},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"5779cc8086b1cfde9bc4f1afdd85223bdc45f0a0","modified":1588233505428},{"_id":"themes/next/source/js/src/schemes/muse.js","hash":"e9bfa6b343b67625f58757efce46ccdaac8f308c","modified":1588233505428},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"9eb63cba0327d3d11b6cbfcbe40b88e97a8378a3","modified":1588233505428},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1588233505428},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1588233505428},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1588233505428},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1588233505432},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1588233505432},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1588233505432},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1588233505432},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1588233505432},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"4cfeec9434a72d5efc6ca225d3445d084d4590f7","modified":1588233505424},{"_id":"themes/next/source/css/_common/components/header/github-banner.styl","hash":"9e0f215868df17cb27a4a522fd31156c66428c2d","modified":1588233505424},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"7cc3f36222494c9a1325c5347d7eb9ae53755a32","modified":1588233505424},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1588233505424},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"05e68adae13f4d99a6ac6493daab39c92e39a6bd","modified":1588233505424},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"c0d9e18a9210fdcaf33e488518b3b288eb58c0a1","modified":1588233505424},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1588233505424},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1588233505424},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"9c59dbc1a6f2b4f15d8ae499f7aa227d9b0e3058","modified":1588233505424},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1588233505424},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"6904fd7ea6455e008d9884558b68254608af9a3c","modified":1588233505424},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"2d142c6f39853916256ad8fc79eb6b85f4001ae8","modified":1588233505424},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1588233505424},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"fb451dc4cc0355b57849c27d3eb110c73562f794","modified":1588233505424},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1588233505424},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"61af2f656f6e916f9920277bd048c5d58ff32a60","modified":1588233505424},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1588233505424},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"3b5a37ba5e70f92c1ee707c8053524e38adbb710","modified":1588233505424},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"2356226157e8068b0e9bbe2f7d0f74e1ab49199b","modified":1588233505424},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"300491cf0e80c34faf5f83a2846c177759ac653f","modified":1588233505424},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"2bbdf4b59117b54482dda6ea82a5286c8a3fe267","modified":1588233505424},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"0bf899fab331add63f0c8ead31ca3a3db2ad74d9","modified":1588233505424},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"42a0769311856a7ea3ede1c8656fb5646994a238","modified":1588233505424},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"1cf64afd4b49143972f7617869539be3adb91a5e","modified":1588233505424},{"_id":"themes/next/source/css/_common/components/post/post-reading_progress.styl","hash":"0e8294d042d7d28c680ead48baa9e3c777d407c5","modified":1588233505424},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"b5e5aa7074a965e396229c5bd263fb406770ce5f","modified":1588233505424},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1588233505424},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1588233505424},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"8e058c99dd7d41f0bd34c7c28b6ac9fbb17dcb5e","modified":1588233505424},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1588233505424},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"a6c24393dffbdd94dd5c01cdbec5e180b0bfbbbd","modified":1588233505424},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"3039df53b94b0847b0c451d2d227270b479cc184","modified":1588233505424},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"35c0350096921dd8e2222ec41b6c17a4ea6b44f2","modified":1588233505424},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"cee0e70d1a6ea963bfd707bf9cedb8a4637f64c2","modified":1588233505424},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"b34bb2ea4d16e47e6fdc06cd4feb32d93ccbd779","modified":1588233505424},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1588233505424},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"b964782056658ac785ec6070e747c97a5e234ddb","modified":1588233505424},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"9a3bfc878ca797946815bed23cd6f92b24a16358","modified":1588233505424},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"671a7f8aa138259172e7c6268d82d7a62a1e036a","modified":1588233505424},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"9ab4e05e7b78af755ebdcbb71731fd723ed2d7f5","modified":1588233505424},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"e73db17c210ada503aafca2daaf84a9bfd34be75","modified":1588233505424},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"c11ef42781111d061ed5b6c14dd4359e2cba88be","modified":1588233505424},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1588233505424},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"6ec8ea7b11a146777b6b8da0f71f0cc1dbd129df","modified":1588233505424},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1588233505424},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1588233505424},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"070251836b57027c8240c51e41cb8e8c999c4525","modified":1588233505424},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"0e760758221d4919902bda7c4d3bb96c94a678db","modified":1588233505424},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"75f7876136fe1cae9b42d2c220e7f8b37b8d2f55","modified":1588233505424},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"5e340ee2407a4e39cd708794cfcc718a5f398d7b","modified":1588233505424},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"7d2222f66a1c1a0a3cc90bfd5d817d9b859f4a68","modified":1588233505424},{"_id":"themes/next/source/css/_common/components/third-party/gitalk.styl","hash":"ac7753d536341aa824d7bce0332735e838916995","modified":1588233505424},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"c415729e0f0d2439e63b93cec7ae32df54db87b4","modified":1588233505424},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"7059e24235b7c57a07f3f8abaa06b0bd6a7eda2f","modified":1588233505424},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1588233505424},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"a5e3e6b4b4b814a9fe40b34d784fed67d6d977fa","modified":1588233505424},{"_id":"themes/next/source/css/_common/components/third-party/related-posts.styl","hash":"2d4f318644bf37c50e5b1fab8d62b2673fbab9e8","modified":1588233505424},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"190ad18f45b8a69cef13b2fdd2254893d06ec2c3","modified":1588233505428},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1588233505428},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1588233505428},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1588233505428},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1588233505432},{"_id":"public/baidusitemap.xml","hash":"8de9f4c9606b75ddffe191727716d707b4e348c4","modified":1591268798458},{"_id":"public/search.xml","hash":"b1942ef64b9c279eba2c3f51d3811e5c4a6e9ecf","modified":1591268798459},{"_id":"public/sitemap.xml","hash":"24d904d9e432b0efb30d363f92026d0fb628cae5","modified":1591268798470},{"_id":"public/404.html","hash":"11e942775606f57e27342eda755ee7a0c2dd978f","modified":1591268798478},{"_id":"public/about/index.html","hash":"241213c04e3c386eb64cfb69c72892064eeab150","modified":1591268798478},{"_id":"public/archives/index.html","hash":"790f5f7c793f17e91b7571a87e538be9c0a3f436","modified":1591268798478},{"_id":"public/categories/index.html","hash":"3b7ee2531e5dc58144d2ee3022a7f6b4ffbfba85","modified":1591268798479},{"_id":"public/tags/index.html","hash":"f3be319e6bad77dd88bd82c323b43bad49dc97af","modified":1591268798479},{"_id":"public/posts/e1691e31/index.html","hash":"4de348a3b37eccf3ebc5e7e09affa92b349e3a8f","modified":1591268798479},{"_id":"public/posts/204a2bf8/index.html","hash":"86e6df4e7267536d8f1d75f77e762335e376245e","modified":1591268798479},{"_id":"public/posts/73a5b140/index.html","hash":"a2f977495154ca14216bb36fcbc7a01eede21eba","modified":1591268798479},{"_id":"public/posts/c20fd3fa/index.html","hash":"053715b139887a3d20878974c2569f8d2cd24a2e","modified":1591268798479},{"_id":"public/posts/507fa396/index.html","hash":"cf58365ebc8ab810c910f5159150eab4ebfab314","modified":1591268798479},{"_id":"public/posts/d86f9c95/index.html","hash":"b1b23088e9e6c91f5be3eca2c06c16dc3056b893","modified":1591268798479},{"_id":"public/posts/13666/index.html","hash":"f36f691f19dfd356e0e778773b0cbf7c8721d7b8","modified":1591268798479},{"_id":"public/posts/60785/index.html","hash":"fa6aa6fcd3fcde0e89b63132b16c131cf8185d7f","modified":1591268798479},{"_id":"public/posts/845b95cc/index.html","hash":"869efb13656c58f63a1fc807b40787b7a53e216f","modified":1591268798479},{"_id":"public/posts/3156ccd5/index.html","hash":"832a636098722b245bbdc3823b93f1d93b47acb5","modified":1591268798479},{"_id":"public/posts/301aa86/index.html","hash":"e1be99e1a63d593b7d42b857472d2cced1e6f835","modified":1591268798479},{"_id":"public/posts/7f247ba3/index.html","hash":"cfe88534e7e32c7ac37b84875a0a16d0f57327bf","modified":1591268798479},{"_id":"public/posts/b38ec8f3/index.html","hash":"2bdfa9199a32d7106f8bcb03b4b41b03ce894c39","modified":1591268798479},{"_id":"public/posts/25ca6631/index.html","hash":"02f12113ed3c8ebbcc9984f455520975ab88f18d","modified":1591268798479},{"_id":"public/posts/1428c068/index.html","hash":"4f9188a0ed48bd8f34407bdfc9df16caa47e0735","modified":1591268798480},{"_id":"public/posts/367b716d/index.html","hash":"62f0f035f6f963a08eaac9e31bfe9d786005f315","modified":1591268798480},{"_id":"public/posts/4443dac6/index.html","hash":"2a4be53c2e2eed5c96ad357ff0716727c697c863","modified":1591268798480},{"_id":"public/posts/a7642960/index.html","hash":"b313e8db195613f9b1ec6976737180d69c7e6862","modified":1591268798480},{"_id":"public/archives/page/2/index.html","hash":"5c39ffa87f3987c37a252b66046d02c33b3cd7e1","modified":1591268798480},{"_id":"public/archives/2019/index.html","hash":"30598372907320f4481588a4ec5463d240b4af04","modified":1591268798480},{"_id":"public/archives/2019/page/2/index.html","hash":"2fd681a1739bff9ab6c2daf47270346785bb54d4","modified":1591268798480},{"_id":"public/archives/2019/02/index.html","hash":"aaebc8b475345cd0c9073f6930958c7950c7d8e6","modified":1591268798480},{"_id":"public/archives/2019/03/index.html","hash":"c4409843ea56aafa685cbbf72d752d7c31810b72","modified":1591268798480},{"_id":"public/archives/2019/04/index.html","hash":"398d0ae34bcd4489d38b719d3717e9782ffe9724","modified":1591268798480},{"_id":"public/archives/2019/05/index.html","hash":"f1c2c685b9ea8478fcbf296e2d7f0576d71d4458","modified":1591268798480},{"_id":"public/archives/2019/06/index.html","hash":"36eb8dc51371826ee24227ec818b0ee9726f8251","modified":1591268798480},{"_id":"public/archives/2019/07/index.html","hash":"67a185c72fb4d101b727ad8affb22222798afdfc","modified":1591268798480},{"_id":"public/archives/2019/08/index.html","hash":"f8173e3f5d6a6b59b45561b1f4d07cf0e8b8427e","modified":1591268798480},{"_id":"public/archives/2020/index.html","hash":"d73b597a2fececaa55b743930a9cac1b5a3761e6","modified":1591268798481},{"_id":"public/archives/2020/06/index.html","hash":"921d87833b0df7e449b594d1d181c3f30e8610b2","modified":1591268798481},{"_id":"public/categories/前端/index.html","hash":"12cda9bd6d195e740c755a7f7971b58f2f449d21","modified":1591268798481},{"_id":"public/categories/前端/page/2/index.html","hash":"66563f14b1b35691c55a2d346420086c42434264","modified":1591268798481},{"_id":"public/categories/linux/index.html","hash":"15d538ff3230b40caaab0940a1cc5043d5f9ffe8","modified":1591268798481},{"_id":"public/categories/vue/index.html","hash":"7ef4589e6a3c173c738d2e64827cee00bd3abd1a","modified":1591268798481},{"_id":"public/categories/技术/index.html","hash":"730f8d58a636948502a9fe3ebe7f3aaa1bf12574","modified":1591268798481},{"_id":"public/categories/vue/js/index.html","hash":"a88a29d57c2f5a6cae0dc84fb2cf33f6457d3c6f","modified":1591268798481},{"_id":"public/index.html","hash":"ef846f31fce53f2cfd808375d007b1c8aa74c380","modified":1591268798481},{"_id":"public/page/2/index.html","hash":"1ee0d7c1c30d23b5c4e77d9b5cc67b1a66a46ffc","modified":1591268798481},{"_id":"public/tags/element-ui/index.html","hash":"22ed84d37e4a372dedb0cf48f2fb49bf8dabd086","modified":1591268798481},{"_id":"public/tags/vue/index.html","hash":"f8ac6ba6109a5a3d1a9e051fa34ed940cb7f66c6","modified":1591268798481},{"_id":"public/tags/js/index.html","hash":"864a71eb0214a758c6ef6c53a6ed166a3a3bbdb2","modified":1591268798481},{"_id":"public/tags/linux/index.html","hash":"0ac03282e237276642c776804726eb9eb0043177","modified":1591268798481},{"_id":"public/tags/nodejs/index.html","hash":"07f03cd8c3694851aa385e5fe390af5b0f38ed37","modified":1591268798481},{"_id":"public/tags/webpack/index.html","hash":"4194ba8fa3ecd65ad9245fa3a89daa6d91f709eb","modified":1591268798481},{"_id":"public/tags/nexus/index.html","hash":"4934e7ef6cd6fe86e6bb9e3d2f33e40fa6426b2d","modified":1591268798481},{"_id":"public/tags/react/index.html","hash":"9793843b1ae671982e838f8d44ec93a3df153c45","modified":1591268798481},{"_id":"public/tags/技术/index.html","hash":"2f61e9802bcd463c18f9d62ba964842b68bf9171","modified":1591268798481},{"_id":"public/CNAME","hash":"109833a1caf13cc5305f1c288b98e4f77c19df4a","modified":1591268798493},{"_id":"public/README.md","hash":"77b0d98e16ba11d1ef35936e1d3bb865a842912c","modified":1591268798493},{"_id":"public/robots.txt","hash":"a7593476994d284c7265a8de84793557f7b42a51","modified":1591268798493},{"_id":"public/images/2019-2-26.png","hash":"8f24528dfcc0382abcd8fe829c34ad7501827c46","modified":1591268798493},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1591268798493},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1591268798493},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1591268798493},{"_id":"public/images/bitbug_favicon -16x16.ico","hash":"c5aeb4da5f32d485c5c4e270d3ee0e082b63784f","modified":1591268798493},{"_id":"public/images/bitbug_favicon-3x32.ico","hash":"0ce6be69735bdaff0ce533f2f20be12177a58d23","modified":1591268798493},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1591268798493},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1591268798493},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1591268798493},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1591268798493},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1591268798493},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1591268798493},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1591268798494},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1591268798494},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1591268798494},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1591268798494},{"_id":"public/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1591268798494},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1591268798494},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1591268798494},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1591268798494},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1591268798494},{"_id":"public/uploads/avatar.png","hash":"b7cbde16b4bdd0328a6dbf0631148bbfbb58468b","modified":1591268798494},{"_id":"public/uploads/notfound.gif","hash":"e81b9256b56fb39d2f56024f866b03b7917525a8","modified":1591268798494},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1591268798494},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1591268798494},{"_id":"public/posts/367b716d/1.jpg","hash":"fbee0ee26b8db424d8925521f8b055ddef18d6fd","modified":1591268798494},{"_id":"public/posts/367b716d/2.jpg","hash":"6398dc248ae2a9353582e519c092755498c00e06","modified":1591268798494},{"_id":"public/posts/b38ec8f3/1.png","hash":"28803ad48576d6031fc620df00df92edd8a5c734","modified":1591268798494},{"_id":"public/posts/b38ec8f3/2.png","hash":"de756293494f1fa6b4ae40745a94b8ad6283626c","modified":1591268798494},{"_id":"public/posts/d86f9c95/1.jpg","hash":"254327df897d4e2794f3e6a43e9a7a7723878e8e","modified":1591268798494},{"_id":"public/posts/845b95cc/1.png","hash":"ead49f0f3a675a1a0df47a2d8bf6ffaa2ad41550","modified":1591268798494},{"_id":"public/posts/845b95cc/2.png","hash":"e796281bac9aadf1cf2d35abed8bb11b194883fe","modified":1591268798494},{"_id":"public/posts/845b95cc/3.png","hash":"b75fe1970b5278c5f1d4f5001bb55e9c053fff52","modified":1591268798494},{"_id":"public/posts/c20fd3fa/1.png","hash":"c4d1d5125b4342b9f8d4e53bbdc6566503b7720a","modified":1591268798494},{"_id":"public/posts/c20fd3fa/2.png","hash":"66c168b48969d70bcecbad6c19912c469d9e0371","modified":1591268798494},{"_id":"public/posts/7f247ba3/1.png","hash":"ea2de96dfa875f22ae64a5aed7c64d02eed58889","modified":1591268798494},{"_id":"public/posts/7f247ba3/2.png","hash":"dcac407692b787cbf57033c800fbea954e716ea0","modified":1591268798494},{"_id":"public/posts/7f247ba3/3.png","hash":"e3cda13ef4ae41ef6d02c790714f190f7f53eeb4","modified":1591268798495},{"_id":"public/posts/3156ccd5/1.png","hash":"10264588102714359a980206c040c9ddb7cea605","modified":1591268798495},{"_id":"public/posts/3156ccd5/2.png","hash":"191416348a4434089560929f5e2b547f2af24ac6","modified":1591268798495},{"_id":"public/posts/3156ccd5/3.png","hash":"86ec7353f6c193a4ac6eb7d770656cf24dbb8524","modified":1591268798495},{"_id":"public/posts/3156ccd5/4.png","hash":"94d20fcae17886203ecc58e493d72f22dd181656","modified":1591268798495},{"_id":"public/posts/3156ccd5/5.png","hash":"6408623a332923fdd073c3a3d01d4b51801a5f28","modified":1591268798495},{"_id":"public/posts/507fa396/1.jpg","hash":"fc04a6cc872c75700ecd6309e9e53d1554fe2144","modified":1591268798495},{"_id":"public/posts/507fa396/2.jpg","hash":"ce92e8d091db7c19c8dab1d66729fb3c4da46acc","modified":1591268798495},{"_id":"public/posts/507fa396/3.jpg","hash":"6400106d296b6b7b8f23ea43eb577a67f67285f6","modified":1591268798495},{"_id":"public/posts/507fa396/4.jpg","hash":"ed6a9f4361a1b8ebc3241b58a854b776a464f023","modified":1591268798495},{"_id":"public/posts/507fa396/5.jpg","hash":"865b0520708a7083a5fdfa9361ee9618980d1046","modified":1591268798495},{"_id":"public/posts/73a5b140/5.png","hash":"3bc26eb6ffe01b4e0dcc1f49010fabd7e4926b0f","modified":1591268798495},{"_id":"public/posts/d86f9c95/2.jpg","hash":"4c38193b9449eae96842fade756be47374426fb9","modified":1591268798985},{"_id":"public/posts/c20fd3fa/3.png","hash":"48e6e7149dbb223027a3bfcb2154398fb5e43b3d","modified":1591268798987},{"_id":"public/posts/73a5b140/2.png","hash":"a480d8818d822a6c51dde17499df0a6c64cfe047","modified":1591268798987},{"_id":"public/posts/73a5b140/3.png","hash":"3a7461c78e868e285c9fd4d8a7119f25cc822cfe","modified":1591268798987},{"_id":"public/posts/73a5b140/4.png","hash":"639b4a65f4fb9149c89c5e989613c99d9af9a8a2","modified":1591268798987},{"_id":"public/posts/73a5b140/6.png","hash":"8919bf9a4cf99efcfbd6768f2fefb5c43ba58083","modified":1591268798987},{"_id":"public/posts/73a5b140/7.png","hash":"db86d672a7e1476aaa7f9fe033287f97114fc7f5","modified":1591268798987},{"_id":"public/posts/73a5b140/8.png","hash":"01fb060c882bf14fe637dcf42ca3d8f6679bb714","modified":1591268798987},{"_id":"public/js/src/affix.js","hash":"a2aab233d99297435a5274bf512c3c753fe08e80","modified":1591268799017},{"_id":"public/js/src/algolia-search.js","hash":"1f7f10c579e7703d0f6acb8b73f3d78a07d0c623","modified":1591268799017},{"_id":"public/js/src/bootstrap.js","hash":"1c41508b83cb0c4512e64b4d63afa1be954ce8ef","modified":1591268799018},{"_id":"public/js/src/exturl.js","hash":"54825acc8de4793feac415be227b965428f4e97d","modified":1591268799018},{"_id":"public/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1591268799018},{"_id":"public/js/src/motion.js","hash":"7933a30382a84b655238f6e78d42ea1b99af4de6","modified":1591268799018},{"_id":"public/js/src/post-details.js","hash":"0dde5e6d4547587662a3256317a9d5d1db507692","modified":1591268799018},{"_id":"public/js/src/scroll-cookie.js","hash":"d07b3776708d4ae79ed2037c4c7391d5c9b06b19","modified":1591268799018},{"_id":"public/js/src/scrollspy.js","hash":"fa3c92968bcdbcb8d95a1729f7659d9753cbd077","modified":1591268799018},{"_id":"public/js/src/utils.js","hash":"1e515f5c5e9872b875090481b5bebfbf175d32fe","modified":1591268799018},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1591268799018},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1591268799018},{"_id":"public/js/src/schemes/muse.js","hash":"e9bfa6b343b67625f58757efce46ccdaac8f308c","modified":1591268799018},{"_id":"public/js/src/schemes/pisces.js","hash":"9eb63cba0327d3d11b6cbfcbe40b88e97a8378a3","modified":1591268799018},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1591268799018},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1591268799018},{"_id":"public/css/main.css","hash":"e06df03b8f8135fc18ffb7d311a0ef59d55938f8","modified":1591268799018},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1591268799018},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1591268799019},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1591268799019},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1591268799019},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1591268799019},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1591268799019},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1591268799019},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1591268799019},{"_id":"public/posts/73a5b140/1.png","hash":"a2fcee8cbf0721c4570f35de3d1d1f80d917f518","modified":1591268799019},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1591268799073}],"Category":[{"name":"前端","_id":"ckb0ocrus000440m0mh4ojhjv"},{"name":"linux","_id":"ckb0ocrvc000o40m0ryr3rm1g"},{"name":"vue","_id":"ckb0ocrvg000w40m0iw2rn2bv"},{"name":"技术","_id":"ckb0ocrvi001640m08narj1xo"},{"name":"js","parent":"ckb0ocrvg000w40m0iw2rn2bv","_id":"ckb0ocrvm001f40m0jaqukbri"}],"Data":[],"Page":[{"title":"404-对不起！您访问的页面不存在","toc":false,"comments":0,"_content":"<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"UTF-8\" http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no\">\n<title>404-对不起！您访问的页面不存在</title>\n<style type=\"text/css\">\n    *{\n        margin: 0;\n        padding: 0;\n    }\n    .container{\n        margin: 0 auto;    \n    \ttext-align: center; \n    }\n    .img-notfound{\n        width: 400px\n    }\n    @media screen and (max-width: 600px) {\n        .container{\n            margin: 0 auto;\n            width: 100%;\n        }\n    }\n</style>\n</head>\n \n<body> \n    <div class=\"container\">\n        <div class=\"mod-notfound\">\n            <img class=\"img-notfound\" src=\"/uploads/notfound.gif\">\n            <h3 style=\"line-height: 70px\">啊~哦~ 您要查看的页面不存在！</h3>\n            <p style=\"margin-bottom: 30px\">请检查您输入的网址是否正确</p>\n            <p style=\"font-size: 14px; line-height: 20px\">您可以回到 \n                <a href=\"/\">网站首页</a> 或<a href=\"javascript:;\" target=\"_blank\" onclick=\"window.history.go(-1)\">返回上一页</a> \n            </p>\n        </div>\n    </div>\n</body> \n</html>\n</html>\n","source":"404/404.html","raw":"---\ntitle: 404-对不起！您访问的页面不存在\ntoc: false\ncomments: false\npermalink: /404\n---\n<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"UTF-8\" http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no\">\n<title>404-对不起！您访问的页面不存在</title>\n<style type=\"text/css\">\n    *{\n        margin: 0;\n        padding: 0;\n    }\n    .container{\n        margin: 0 auto;    \n    \ttext-align: center; \n    }\n    .img-notfound{\n        width: 400px\n    }\n    @media screen and (max-width: 600px) {\n        .container{\n            margin: 0 auto;\n            width: 100%;\n        }\n    }\n</style>\n</head>\n \n<body> \n    <div class=\"container\">\n        <div class=\"mod-notfound\">\n            <img class=\"img-notfound\" src=\"/uploads/notfound.gif\">\n            <h3 style=\"line-height: 70px\">啊~哦~ 您要查看的页面不存在！</h3>\n            <p style=\"margin-bottom: 30px\">请检查您输入的网址是否正确</p>\n            <p style=\"font-size: 14px; line-height: 20px\">您可以回到 \n                <a href=\"/\">网站首页</a> 或<a href=\"javascript:;\" target=\"_blank\" onclick=\"window.history.go(-1)\">返回上一页</a> \n            </p>\n        </div>\n    </div>\n</body> \n</html>\n</html>\n","date":"2020-04-30T07:58:25.396Z","updated":"2020-04-30T07:58:25.396Z","path":"/404.html","layout":"page","_id":"ckb0ocrug000040m0eyruqfkm","content":"<!DOCTYPE html>\n<html>\n<head><meta name=\"generator\" content=\"Hexo 3.9.0\">\n<meta charset=\"UTF-8\" http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no\">\n<title>404-对不起！您访问的页面不存在</title>\n<style type=\"text/css\">\n    *{\n        margin: 0;\n        padding: 0;\n    }\n    .container{\n        margin: 0 auto;    \n    \ttext-align: center; \n    }\n    .img-notfound{\n        width: 400px\n    }\n    @media screen and (max-width: 600px) {\n        .container{\n            margin: 0 auto;\n            width: 100%;\n        }\n    }\n</style>\n</head>\n \n<body> \n    <div class=\"container\">\n        <div class=\"mod-notfound\">\n            <img class=\"img-notfound\" src=\"/uploads/notfound.gif\">\n            <h3 style=\"line-height: 70px\">啊~哦~ 您要查看的页面不存在！</h3>\n            <p style=\"margin-bottom: 30px\">请检查您输入的网址是否正确</p>\n            <p style=\"font-size: 14px; line-height: 20px\">您可以回到 \n                <a href=\"/\">网站首页</a> 或<a href=\"javascript:;\" target=\"_blank\" onclick=\"window.history.go(-1)\">返回上一页</a> \n            </p>\n        </div>\n    </div>\n</body> \n</html>\n\n","site":{"data":{}},"excerpt":"","more":"<!DOCTYPE html>\n<html>\n<head><meta name=\"generator\" content=\"Hexo 3.9.0\">\n<meta charset=\"UTF-8\" http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no\">\n<title>404-对不起！您访问的页面不存在</title>\n<style type=\"text/css\">\n    *{\n        margin: 0;\n        padding: 0;\n    }\n    .container{\n        margin: 0 auto;    \n    \ttext-align: center; \n    }\n    .img-notfound{\n        width: 400px\n    }\n    @media screen and (max-width: 600px) {\n        .container{\n            margin: 0 auto;\n            width: 100%;\n        }\n    }\n</style>\n</head>\n \n<body> \n    <div class=\"container\">\n        <div class=\"mod-notfound\">\n            <img class=\"img-notfound\" src=\"/uploads/notfound.gif\">\n            <h3 style=\"line-height: 70px\">啊~哦~ 您要查看的页面不存在！</h3>\n            <p style=\"margin-bottom: 30px\">请检查您输入的网址是否正确</p>\n            <p style=\"font-size: 14px; line-height: 20px\">您可以回到 \n                <a href=\"/\">网站首页</a> 或<a href=\"javascript:;\" target=\"_blank\" onclick=\"window.history.go(-1)\">返回上一页</a> \n            </p>\n        </div>\n    </div>\n</body> \n</html>\n\n"},{"title":"关于","date":"2019-02-18T14:03:57.000Z","toc":false,"comments":0,"_content":"## 建立此博客的初衷\n\n自己在工作以及学习过程中难免会遇到一些困难，或者会发现一些对于工作、对于自己技术有帮助的技术点，希望能够把解决困难的方法，遇到好的技术形成一篇篇博客，需要的时候能够打开来看看，希望对自己的技术成长有帮助，也希望能够帮助他人。\n\n## 关于作者\n\n本人自2015年就开始从事web前端开发工作了，虽然没有能在腾讯、阿里、百度等等大厂工作过，但是自己的技术成长也挺快，熟练使用vue，jquery，bootstrap，element-ui等框架，自己参与过商城网站的前端开发、各种类型的后台管理系统前端的开发以及移动端的web（包括app内的h5），微信h5以及小程序前端。对于后端不敢说精通，但是使用过nodejs搭建过一款记账小程序(“账目随身记”)的后台以及使用nodejs搭建过公司官网的后台。学习后端并不是想往后端方向发展，而是更好地与后端工程师进行合作，更好地把前端工作做好。\n","source":"about/index.md","raw":"---\ntitle: 关于\ndate: 2019-02-18 22:03:57\ntoc: false\ncomments: false\n---\n## 建立此博客的初衷\n\n自己在工作以及学习过程中难免会遇到一些困难，或者会发现一些对于工作、对于自己技术有帮助的技术点，希望能够把解决困难的方法，遇到好的技术形成一篇篇博客，需要的时候能够打开来看看，希望对自己的技术成长有帮助，也希望能够帮助他人。\n\n## 关于作者\n\n本人自2015年就开始从事web前端开发工作了，虽然没有能在腾讯、阿里、百度等等大厂工作过，但是自己的技术成长也挺快，熟练使用vue，jquery，bootstrap，element-ui等框架，自己参与过商城网站的前端开发、各种类型的后台管理系统前端的开发以及移动端的web（包括app内的h5），微信h5以及小程序前端。对于后端不敢说精通，但是使用过nodejs搭建过一款记账小程序(“账目随身记”)的后台以及使用nodejs搭建过公司官网的后台。学习后端并不是想往后端方向发展，而是更好地与后端工程师进行合作，更好地把前端工作做好。\n","updated":"2020-04-30T07:58:25.404Z","path":"about/index.html","layout":"page","_id":"ckb0ocruk000240m0qti7194y","content":"<h2 id=\"建立此博客的初衷\"><a href=\"#建立此博客的初衷\" class=\"headerlink\" title=\"建立此博客的初衷\"></a>建立此博客的初衷</h2><p>自己在工作以及学习过程中难免会遇到一些困难，或者会发现一些对于工作、对于自己技术有帮助的技术点，希望能够把解决困难的方法，遇到好的技术形成一篇篇博客，需要的时候能够打开来看看，希望对自己的技术成长有帮助，也希望能够帮助他人。</p>\n<h2 id=\"关于作者\"><a href=\"#关于作者\" class=\"headerlink\" title=\"关于作者\"></a>关于作者</h2><p>本人自2015年就开始从事web前端开发工作了，虽然没有能在腾讯、阿里、百度等等大厂工作过，但是自己的技术成长也挺快，熟练使用vue，jquery，bootstrap，element-ui等框架，自己参与过商城网站的前端开发、各种类型的后台管理系统前端的开发以及移动端的web（包括app内的h5），微信h5以及小程序前端。对于后端不敢说精通，但是使用过nodejs搭建过一款记账小程序(“账目随身记”)的后台以及使用nodejs搭建过公司官网的后台。学习后端并不是想往后端方向发展，而是更好地与后端工程师进行合作，更好地把前端工作做好。</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"建立此博客的初衷\"><a href=\"#建立此博客的初衷\" class=\"headerlink\" title=\"建立此博客的初衷\"></a>建立此博客的初衷</h2><p>自己在工作以及学习过程中难免会遇到一些困难，或者会发现一些对于工作、对于自己技术有帮助的技术点，希望能够把解决困难的方法，遇到好的技术形成一篇篇博客，需要的时候能够打开来看看，希望对自己的技术成长有帮助，也希望能够帮助他人。</p>\n<h2 id=\"关于作者\"><a href=\"#关于作者\" class=\"headerlink\" title=\"关于作者\"></a>关于作者</h2><p>本人自2015年就开始从事web前端开发工作了，虽然没有能在腾讯、阿里、百度等等大厂工作过，但是自己的技术成长也挺快，熟练使用vue，jquery，bootstrap，element-ui等框架，自己参与过商城网站的前端开发、各种类型的后台管理系统前端的开发以及移动端的web（包括app内的h5），微信h5以及小程序前端。对于后端不敢说精通，但是使用过nodejs搭建过一款记账小程序(“账目随身记”)的后台以及使用nodejs搭建过公司官网的后台。学习后端并不是想往后端方向发展，而是更好地与后端工程师进行合作，更好地把前端工作做好。</p>\n"},{"title":"archives","date":"2019-02-18T14:04:42.000Z","toc":false,"comments":0,"_content":"","source":"archives/index.md","raw":"---\ntitle: archives\ndate: 2019-02-18 22:04:42\ntoc: false\ncomments: false\n---\n","updated":"2020-04-30T07:58:25.404Z","path":"archives/index.html","layout":"page","_id":"ckb0ocrut000640m06ucyhvlo","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"分类","date":"2019-02-18T14:04:24.000Z","type":"categories","toc":false,"comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2019-02-18 22:04:24\ntype: \"categories\"\ntoc: false\ncomments: false\n---\n","updated":"2020-04-30T07:58:25.404Z","path":"categories/index.html","layout":"page","_id":"ckb0ocruw000840m0jpljs205","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"标签","date":"2019-02-18T14:03:13.000Z","type":"tags","toc":false,"comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2019-02-18 22:03:13\ntype: \"tags\"\ntoc: false\ncomments: false\n---\n","updated":"2020-04-30T07:58:25.404Z","path":"tags/index.html","layout":"page","_id":"ckb0ocrv2000a40m05yj7uqfi","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"element-ui 上传组件函数自定义参数传递","abbrlink":"845b95cc","date":"2019-05-07T12:09:05.000Z","_content":"\n有时候在表格中需要在每行中有上传需求时，需要定位到是哪一行上传的图片，然后才能组合数组发送到后端，这个时候默认的参数就无法满足我们的需求了，我们需要根据当前行的index来一一对应当前行的文件上传。比如要实现下面的效果：\n![](3.png)\n要实现参数的自定义，我们需要在vue模板中修改函数调用的方式，通过类似：`((val)=>{func(val)})`的方式来调用相应的函数。\n![](1.png)\n以及在文件编辑时要注意修改:file-list为表格中的字段，才能一一对应上\n![](2.png)\n","source":"_posts/element-ui-上传组件函数自定义参数传递.md","raw":"---\ntitle: element-ui 上传组件函数自定义参数传递\ntags:\n  - element-ui\n  - vue\ncategories: 前端\nabbrlink: 845b95cc\ndate: 2019-05-07 20:09:05\n---\n\n有时候在表格中需要在每行中有上传需求时，需要定位到是哪一行上传的图片，然后才能组合数组发送到后端，这个时候默认的参数就无法满足我们的需求了，我们需要根据当前行的index来一一对应当前行的文件上传。比如要实现下面的效果：\n![](3.png)\n要实现参数的自定义，我们需要在vue模板中修改函数调用的方式，通过类似：`((val)=>{func(val)})`的方式来调用相应的函数。\n![](1.png)\n以及在文件编辑时要注意修改:file-list为表格中的字段，才能一一对应上\n![](2.png)\n","slug":"element-ui-上传组件函数自定义参数传递","published":1,"updated":"2020-04-30T07:58:25.396Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0ocruh000140m0232f9ul2","content":"<p>有时候在表格中需要在每行中有上传需求时，需要定位到是哪一行上传的图片，然后才能组合数组发送到后端，这个时候默认的参数就无法满足我们的需求了，我们需要根据当前行的index来一一对应当前行的文件上传。比如要实现下面的效果：<br><img src=\"3.png\" alt><br>要实现参数的自定义，我们需要在vue模板中修改函数调用的方式，通过类似：<code>((val)=&gt;{func(val)})</code>的方式来调用相应的函数。<br><img src=\"1.png\" alt><br>以及在文件编辑时要注意修改:file-list为表格中的字段，才能一一对应上<br><img src=\"2.png\" alt></p>\n","site":{"data":{}},"excerpt":"","more":"<p>有时候在表格中需要在每行中有上传需求时，需要定位到是哪一行上传的图片，然后才能组合数组发送到后端，这个时候默认的参数就无法满足我们的需求了，我们需要根据当前行的index来一一对应当前行的文件上传。比如要实现下面的效果：<br><img src=\"3.png\" alt><br>要实现参数的自定义，我们需要在vue模板中修改函数调用的方式，通过类似：<code>((val)=&gt;{func(val)})</code>的方式来调用相应的函数。<br><img src=\"1.png\" alt><br>以及在文件编辑时要注意修改:file-list为表格中的字段，才能一一对应上<br><img src=\"2.png\" alt></p>\n"},{"title":"[\"1\", \"2\", \"3\"].map(parseInt)报错问题解决办法","abbrlink":"1428c068","date":"2019-03-30T03:41:08.000Z","_content":"\n第一次使用 `[\"1\", \"2\", \"3\"].map(parseInt)`时，以为会得到[1,2,3]这个结果，结果很不幸得到的是[1,NaN,NaN]，为什么会这样呢，其实是因为map函数传递的是三个参数`value,index,arry`,而parseInt函数传递的是`value,radix`，`radix`不传时默认使用10，表示十进制，但是如果radix在2-36之外会返回NaN。\n好了，既然已经知道了原因，那么应该怎么修改，才能得到正确的结果呢，\n很简单，把map和parseIntDe完整参数写出来就可以了`[\"1\", \"2\", \"3\"].map((value,index,array)=>parseInt(value,10));` 给parseInt指定10进制，用es5的写法则是\n```\n[\"1\", \"2\", \"3\"].map(function(value,index,array){\n\treturn parseInt(value,10)\n});  //返回 [1,2,3]\n```","source":"_posts/1-2-3-map-parseInt-报错问解决办法.md","raw":"---\ntitle: '[\"1\", \"2\", \"3\"].map(parseInt)报错问题解决办法'\ntags: js\ncategories: 前端\nabbrlink: 1428c068\ndate: 2019-03-30 11:41:08\n---\n\n第一次使用 `[\"1\", \"2\", \"3\"].map(parseInt)`时，以为会得到[1,2,3]这个结果，结果很不幸得到的是[1,NaN,NaN]，为什么会这样呢，其实是因为map函数传递的是三个参数`value,index,arry`,而parseInt函数传递的是`value,radix`，`radix`不传时默认使用10，表示十进制，但是如果radix在2-36之外会返回NaN。\n好了，既然已经知道了原因，那么应该怎么修改，才能得到正确的结果呢，\n很简单，把map和parseIntDe完整参数写出来就可以了`[\"1\", \"2\", \"3\"].map((value,index,array)=>parseInt(value,10));` 给parseInt指定10进制，用es5的写法则是\n```\n[\"1\", \"2\", \"3\"].map(function(value,index,array){\n\treturn parseInt(value,10)\n});  //返回 [1,2,3]\n```","slug":"1-2-3-map-parseInt-报错问解决办法","published":1,"updated":"2020-04-30T07:58:25.396Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0ocrul000340m0aria481d","content":"<p>第一次使用 <code>[&quot;1&quot;, &quot;2&quot;, &quot;3&quot;].map(parseInt)</code>时，以为会得到[1,2,3]这个结果，结果很不幸得到的是[1,NaN,NaN]，为什么会这样呢，其实是因为map函数传递的是三个参数<code>value,index,arry</code>,而parseInt函数传递的是<code>value,radix</code>，<code>radix</code>不传时默认使用10，表示十进制，但是如果radix在2-36之外会返回NaN。<br>好了，既然已经知道了原因，那么应该怎么修改，才能得到正确的结果呢，<br>很简单，把map和parseIntDe完整参数写出来就可以了<code>[&quot;1&quot;, &quot;2&quot;, &quot;3&quot;].map((value,index,array)=&gt;parseInt(value,10));</code> 给parseInt指定10进制，用es5的写法则是<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"string\">\"1\"</span>, <span class=\"string\">\"2\"</span>, <span class=\"string\">\"3\"</span>].map(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">value,index,array</span>)</span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"built_in\">parseInt</span>(value,<span class=\"number\">10</span>)</span><br><span class=\"line\">&#125;);  <span class=\"comment\">//返回 [1,2,3]</span></span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>第一次使用 <code>[&quot;1&quot;, &quot;2&quot;, &quot;3&quot;].map(parseInt)</code>时，以为会得到[1,2,3]这个结果，结果很不幸得到的是[1,NaN,NaN]，为什么会这样呢，其实是因为map函数传递的是三个参数<code>value,index,arry</code>,而parseInt函数传递的是<code>value,radix</code>，<code>radix</code>不传时默认使用10，表示十进制，但是如果radix在2-36之外会返回NaN。<br>好了，既然已经知道了原因，那么应该怎么修改，才能得到正确的结果呢，<br>很简单，把map和parseIntDe完整参数写出来就可以了<code>[&quot;1&quot;, &quot;2&quot;, &quot;3&quot;].map((value,index,array)=&gt;parseInt(value,10));</code> 给parseInt指定10进制，用es5的写法则是<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"string\">\"1\"</span>, <span class=\"string\">\"2\"</span>, <span class=\"string\">\"3\"</span>].map(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">value,index,array</span>)</span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"built_in\">parseInt</span>(value,<span class=\"number\">10</span>)</span><br><span class=\"line\">&#125;);  <span class=\"comment\">//返回 [1,2,3]</span></span><br></pre></td></tr></table></figure></p>\n"},{"title":"element-ui 表格中的form的input动态验证规则","abbrlink":"3156ccd5","date":"2019-04-27T13:23:46.000Z","_content":"### 表格中的input需要做某些校验，比如，“本次报销金额”要小于“未报销金额”，这就有点麻烦了，我们都知道，element的form的验证规则rules都是在初始化的时候就定好了的，比如时间验证：\n```\ndate2: [\n    { type: 'date', required: true, message: '请选择时间', trigger: 'change' }\n],\n```\n而我们项目中的是这样的:\n![](4.png) 又不想自定义指令来做，还是看下element能不能做吧，于是就开始看文档，发现只能用自定义rules，但是自定义指令，写死的规则也不符合要求啊，因为表格的数据都是不固定的，\n首先我们把表格的数据源字段移到我们的form中\n![](1.png)\n![](2.png)\n![](3.png)\n然后自定义规则：\n![](5.png)\n这里需要用到一些技巧，比如在模板中，\n```\n:prop=\"`inputTaxTable.${scope.$index}.thisApplyMoney`\"\n```\n在需要校验的列中，`inputTaxTable.${scope.$index}.thisApplyMoney` 查找当前行的数据源，\n\n以及查找“未报销金额”这行的数据来跟当前金额进行对比的时候，保证找到的当前行的数据。\n```\n //field字段中包含了该行表格的index\n    let field=rule.field;//规则名称\n    let _fieldArr=[];\n    _fieldArr=field.split('.');\n    let _index=_fieldArr[1];//得到表格的第n行\n\n    if(Number.parseFloat(value)>Number.parseFloat(this.ruleForm.inputTaxTable[_index].notApplyMoney)){\n        return callback(new Error('不可大于未报销金额'));\n    }else{\n        callback()  //这里一定要这样返回，否则validate函数只会执行一次\n    }\n    \n}\n```\n\n\n","source":"_posts/element-ui-表格中的form的input动态验证规则.md","raw":"---\ntitle: element-ui 表格中的form的input动态验证规则\ntags:\n  - element-ui\n  - vue\ncategories: 前端\nabbrlink: 3156ccd5\ndate: 2019-04-27 21:23:46\n---\n### 表格中的input需要做某些校验，比如，“本次报销金额”要小于“未报销金额”，这就有点麻烦了，我们都知道，element的form的验证规则rules都是在初始化的时候就定好了的，比如时间验证：\n```\ndate2: [\n    { type: 'date', required: true, message: '请选择时间', trigger: 'change' }\n],\n```\n而我们项目中的是这样的:\n![](4.png) 又不想自定义指令来做，还是看下element能不能做吧，于是就开始看文档，发现只能用自定义rules，但是自定义指令，写死的规则也不符合要求啊，因为表格的数据都是不固定的，\n首先我们把表格的数据源字段移到我们的form中\n![](1.png)\n![](2.png)\n![](3.png)\n然后自定义规则：\n![](5.png)\n这里需要用到一些技巧，比如在模板中，\n```\n:prop=\"`inputTaxTable.${scope.$index}.thisApplyMoney`\"\n```\n在需要校验的列中，`inputTaxTable.${scope.$index}.thisApplyMoney` 查找当前行的数据源，\n\n以及查找“未报销金额”这行的数据来跟当前金额进行对比的时候，保证找到的当前行的数据。\n```\n //field字段中包含了该行表格的index\n    let field=rule.field;//规则名称\n    let _fieldArr=[];\n    _fieldArr=field.split('.');\n    let _index=_fieldArr[1];//得到表格的第n行\n\n    if(Number.parseFloat(value)>Number.parseFloat(this.ruleForm.inputTaxTable[_index].notApplyMoney)){\n        return callback(new Error('不可大于未报销金额'));\n    }else{\n        callback()  //这里一定要这样返回，否则validate函数只会执行一次\n    }\n    \n}\n```\n\n\n","slug":"element-ui-表格中的form的input动态验证规则","published":1,"updated":"2020-04-30T07:58:25.396Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0ocruu000740m08b182q93","content":"<h3 id=\"表格中的input需要做某些校验，比如，“本次报销金额”要小于“未报销金额”，这就有点麻烦了，我们都知道，element的form的验证规则rules都是在初始化的时候就定好了的，比如时间验证：\"><a href=\"#表格中的input需要做某些校验，比如，“本次报销金额”要小于“未报销金额”，这就有点麻烦了，我们都知道，element的form的验证规则rules都是在初始化的时候就定好了的，比如时间验证：\" class=\"headerlink\" title=\"表格中的input需要做某些校验，比如，“本次报销金额”要小于“未报销金额”，这就有点麻烦了，我们都知道，element的form的验证规则rules都是在初始化的时候就定好了的，比如时间验证：\"></a>表格中的input需要做某些校验，比如，“本次报销金额”要小于“未报销金额”，这就有点麻烦了，我们都知道，element的form的验证规则rules都是在初始化的时候就定好了的，比如时间验证：</h3><figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">date2:</span> [</span><br><span class=\"line\">    &#123; <span class=\"string\">type:</span> <span class=\"string\">'date'</span>, <span class=\"string\">required:</span> <span class=\"literal\">true</span>, <span class=\"string\">message:</span> <span class=\"string\">'请选择时间'</span>, <span class=\"string\">trigger:</span> <span class=\"string\">'change'</span> &#125;</span><br><span class=\"line\">],</span><br></pre></td></tr></table></figure>\n<p>而我们项目中的是这样的:<br><img src=\"4.png\" alt> 又不想自定义指令来做，还是看下element能不能做吧，于是就开始看文档，发现只能用自定义rules，但是自定义指令，写死的规则也不符合要求啊，因为表格的数据都是不固定的，<br>首先我们把表格的数据源字段移到我们的form中<br><img src=\"1.png\" alt><br><img src=\"2.png\" alt><br><img src=\"3.png\" alt><br>然后自定义规则：<br><img src=\"5.png\" alt><br>这里需要用到一些技巧，比如在模板中，<br><figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:prop=<span class=\"string\">\"`inputTaxTable.<span class=\"subst\">$&#123;scope.$index&#125;</span>.thisApplyMoney`\"</span></span><br></pre></td></tr></table></figure></p>\n<p>在需要校验的列中，<code>inputTaxTable.${scope.$index}.thisApplyMoney</code> 查找当前行的数据源，</p>\n<p>以及查找“未报销金额”这行的数据来跟当前金额进行对比的时候，保证找到的当前行的数据。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"comment\">//field字段中包含了该行表格的index</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> field=rule.field;<span class=\"comment\">//规则名称</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> _fieldArr=[];</span><br><span class=\"line\">    _fieldArr=field.split(<span class=\"string\">'.'</span>);</span><br><span class=\"line\">    <span class=\"keyword\">let</span> _index=_fieldArr[<span class=\"number\">1</span>];<span class=\"comment\">//得到表格的第n行</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"built_in\">Number</span>.parseFloat(value)&gt;<span class=\"built_in\">Number</span>.parseFloat(<span class=\"keyword\">this</span>.ruleForm.inputTaxTable[_index].notApplyMoney))&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> callback(<span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'不可大于未报销金额'</span>));</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        callback()  <span class=\"comment\">//这里一定要这样返回，否则validate函数只会执行一次</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"表格中的input需要做某些校验，比如，“本次报销金额”要小于“未报销金额”，这就有点麻烦了，我们都知道，element的form的验证规则rules都是在初始化的时候就定好了的，比如时间验证：\"><a href=\"#表格中的input需要做某些校验，比如，“本次报销金额”要小于“未报销金额”，这就有点麻烦了，我们都知道，element的form的验证规则rules都是在初始化的时候就定好了的，比如时间验证：\" class=\"headerlink\" title=\"表格中的input需要做某些校验，比如，“本次报销金额”要小于“未报销金额”，这就有点麻烦了，我们都知道，element的form的验证规则rules都是在初始化的时候就定好了的，比如时间验证：\"></a>表格中的input需要做某些校验，比如，“本次报销金额”要小于“未报销金额”，这就有点麻烦了，我们都知道，element的form的验证规则rules都是在初始化的时候就定好了的，比如时间验证：</h3><figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">date2:</span> [</span><br><span class=\"line\">    &#123; <span class=\"string\">type:</span> <span class=\"string\">'date'</span>, <span class=\"string\">required:</span> <span class=\"literal\">true</span>, <span class=\"string\">message:</span> <span class=\"string\">'请选择时间'</span>, <span class=\"string\">trigger:</span> <span class=\"string\">'change'</span> &#125;</span><br><span class=\"line\">],</span><br></pre></td></tr></table></figure>\n<p>而我们项目中的是这样的:<br><img src=\"4.png\" alt> 又不想自定义指令来做，还是看下element能不能做吧，于是就开始看文档，发现只能用自定义rules，但是自定义指令，写死的规则也不符合要求啊，因为表格的数据都是不固定的，<br>首先我们把表格的数据源字段移到我们的form中<br><img src=\"1.png\" alt><br><img src=\"2.png\" alt><br><img src=\"3.png\" alt><br>然后自定义规则：<br><img src=\"5.png\" alt><br>这里需要用到一些技巧，比如在模板中，<br><figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:prop=<span class=\"string\">\"`inputTaxTable.<span class=\"subst\">$&#123;scope.$index&#125;</span>.thisApplyMoney`\"</span></span><br></pre></td></tr></table></figure></p>\n<p>在需要校验的列中，<code>inputTaxTable.${scope.$index}.thisApplyMoney</code> 查找当前行的数据源，</p>\n<p>以及查找“未报销金额”这行的数据来跟当前金额进行对比的时候，保证找到的当前行的数据。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"comment\">//field字段中包含了该行表格的index</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> field=rule.field;<span class=\"comment\">//规则名称</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> _fieldArr=[];</span><br><span class=\"line\">    _fieldArr=field.split(<span class=\"string\">'.'</span>);</span><br><span class=\"line\">    <span class=\"keyword\">let</span> _index=_fieldArr[<span class=\"number\">1</span>];<span class=\"comment\">//得到表格的第n行</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"built_in\">Number</span>.parseFloat(value)&gt;<span class=\"built_in\">Number</span>.parseFloat(<span class=\"keyword\">this</span>.ruleForm.inputTaxTable[_index].notApplyMoney))&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> callback(<span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'不可大于未报销金额'</span>));</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        callback()  <span class=\"comment\">//这里一定要这样返回，否则validate函数只会执行一次</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n"},{"title":"js判断一个变量是对象还是数组的实用方法记录","abbrlink":"367b716d","date":"2019-03-14T02:54:51.000Z","_content":"在实际开发中，经常需要检测一个变量的类型，是字符串、数字、布尔还是对象、数组？还是null、undefined？ 对于字符串和数字、布尔这种基本类型，用typeof()来检测就足够了，但是typeof用在数组和对象、null之间就不灵了。\n![](1.jpg)\n由图中可以看出，变量为null，数组，对象的abc使用typeof检测出来的都是object，没有办法进一步区分。\n\n### 使用constructor检测\n![](2.jpg)\n\n```\n    var arr=[1,2];\n    var obj={};\n    console.log(arr.constructor === Array) //true\n    console.log(obj.constructor === Array) //false\n    \n```\n### 使用instanceof \n```\n    var arr=[1,2];\n    var obj={};\n    console.log(arr instanceof Array); //true\n\tconsole.log(obj instanceof Array); //false\n\n```\nconstructor和instanceof 在iframe下使用时会失效，每个iframe都有一套环境，都有一个window，不共享原型链。\n\n\n<font color=\"red\">下面的代码取自网络</font>\n```\n    var iframe = document.createElement('iframe'); //创建iframe\n    document.body.appendChild(iframe); //添加到body中\n    xArray = window.frames[window.frames.length-1].Array;\n    var arr = new xArray(1,2,3); // 声明数组[1,2,3]\n    alert(arr instanceof Array); // false\n    alert(arr.constructor === Array); // false \n\n```\n为什么会出现这样的情况呢？原因就是：在当前窗口引入框架，其实就是引入了window对象，当我们在遍历iframe框架里的变量时使用arr instanceof Array 或者arr.constructor === Array，要注意这个Array是当前window对象的Array，而不是构造出arr的iframe里的window，所以会返回false。\n\n### 使用toString方法\n\n```\n    var arr=[1,2];\n    var obj={};\n    console.log(Object.prototype.toString.call(arr)); // \"[object Array]\"\n\tconsole.log(Object.prototype.toString.call(obj)); // \"[object Object]\"\n```\n\n### 使用Array.isArray() \nECMAScript5将Array.isArray()正式引入JavaScript，目的就是准确地检测一个值是否为数组。IE9+、 Firefox 4+、Safari 5+、Opera 10.5+和 Chrome都实现了这个方法。但是在IE8之前的版本是不支持的。\n\n<font color=\"red\">综合上述方法，自己封装一个函数</font>\n```\n    var arr = [];\n    var arr2 = {};\n    function isArrayFn(value){\n        if (typeof Array.isArray === \"function\") {\n            //先检测是否有isArray方法\n            return Array.isArray(value);\n        }else{\n            //不支持isArray方法，则使用toString方法\n            return Object.prototype.toString.call(value) === \"[object Array]\";\n            //如果是对象则是\"[object Object]\"\n        }\n    }\n    console.log(isArrayFn(arr)); // true\n    console.log(isArrayFn(arr2)); // false\n\n```\n","source":"_posts/js判断一个变量是对象还是数组的实用方法记录.md","raw":"---\ntitle: js判断一个变量是对象还是数组的实用方法记录\ntags: js\ncategories: 前端\nabbrlink: 367b716d\ndate: 2019-03-14 10:54:51\n---\n在实际开发中，经常需要检测一个变量的类型，是字符串、数字、布尔还是对象、数组？还是null、undefined？ 对于字符串和数字、布尔这种基本类型，用typeof()来检测就足够了，但是typeof用在数组和对象、null之间就不灵了。\n![](1.jpg)\n由图中可以看出，变量为null，数组，对象的abc使用typeof检测出来的都是object，没有办法进一步区分。\n\n### 使用constructor检测\n![](2.jpg)\n\n```\n    var arr=[1,2];\n    var obj={};\n    console.log(arr.constructor === Array) //true\n    console.log(obj.constructor === Array) //false\n    \n```\n### 使用instanceof \n```\n    var arr=[1,2];\n    var obj={};\n    console.log(arr instanceof Array); //true\n\tconsole.log(obj instanceof Array); //false\n\n```\nconstructor和instanceof 在iframe下使用时会失效，每个iframe都有一套环境，都有一个window，不共享原型链。\n\n\n<font color=\"red\">下面的代码取自网络</font>\n```\n    var iframe = document.createElement('iframe'); //创建iframe\n    document.body.appendChild(iframe); //添加到body中\n    xArray = window.frames[window.frames.length-1].Array;\n    var arr = new xArray(1,2,3); // 声明数组[1,2,3]\n    alert(arr instanceof Array); // false\n    alert(arr.constructor === Array); // false \n\n```\n为什么会出现这样的情况呢？原因就是：在当前窗口引入框架，其实就是引入了window对象，当我们在遍历iframe框架里的变量时使用arr instanceof Array 或者arr.constructor === Array，要注意这个Array是当前window对象的Array，而不是构造出arr的iframe里的window，所以会返回false。\n\n### 使用toString方法\n\n```\n    var arr=[1,2];\n    var obj={};\n    console.log(Object.prototype.toString.call(arr)); // \"[object Array]\"\n\tconsole.log(Object.prototype.toString.call(obj)); // \"[object Object]\"\n```\n\n### 使用Array.isArray() \nECMAScript5将Array.isArray()正式引入JavaScript，目的就是准确地检测一个值是否为数组。IE9+、 Firefox 4+、Safari 5+、Opera 10.5+和 Chrome都实现了这个方法。但是在IE8之前的版本是不支持的。\n\n<font color=\"red\">综合上述方法，自己封装一个函数</font>\n```\n    var arr = [];\n    var arr2 = {};\n    function isArrayFn(value){\n        if (typeof Array.isArray === \"function\") {\n            //先检测是否有isArray方法\n            return Array.isArray(value);\n        }else{\n            //不支持isArray方法，则使用toString方法\n            return Object.prototype.toString.call(value) === \"[object Array]\";\n            //如果是对象则是\"[object Object]\"\n        }\n    }\n    console.log(isArrayFn(arr)); // true\n    console.log(isArrayFn(arr2)); // false\n\n```\n","slug":"js判断一个变量是对象还是数组的实用方法记录","published":1,"updated":"2020-04-30T07:58:25.396Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0ocrv0000940m0l8kux3fn","content":"<p>在实际开发中，经常需要检测一个变量的类型，是字符串、数字、布尔还是对象、数组？还是null、undefined？ 对于字符串和数字、布尔这种基本类型，用typeof()来检测就足够了，但是typeof用在数组和对象、null之间就不灵了。<br><img src=\"1.jpg\" alt><br>由图中可以看出，变量为null，数组，对象的abc使用typeof检测出来的都是object，没有办法进一步区分。</p>\n<h3 id=\"使用constructor检测\"><a href=\"#使用constructor检测\" class=\"headerlink\" title=\"使用constructor检测\"></a>使用constructor检测</h3><p><img src=\"2.jpg\" alt></p>\n<figure class=\"highlight delphi\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr=[<span class=\"number\">1</span>,<span class=\"number\">2</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj=<span class=\"comment\">&#123;&#125;</span>;</span><br><span class=\"line\">console.log(arr<span class=\"function\">.<span class=\"keyword\">constructor</span> === <span class=\"title\">Array</span>) <span class=\"comment\">//true</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">console</span>.<span class=\"title\">log</span><span class=\"params\">(obj.<span class=\"keyword\">constructor</span> === <span class=\"keyword\">Array</span>)</span> <span class=\"comment\">//false</span></span></span><br></pre></td></tr></table></figure>\n<h3 id=\"使用instanceof\"><a href=\"#使用instanceof\" class=\"headerlink\" title=\"使用instanceof\"></a>使用instanceof</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   <span class=\"keyword\">var</span> arr=[<span class=\"number\">1</span>,<span class=\"number\">2</span>];</span><br><span class=\"line\">   <span class=\"keyword\">var</span> obj=&#123;&#125;;</span><br><span class=\"line\">   <span class=\"built_in\">console</span>.log(arr <span class=\"keyword\">instanceof</span> <span class=\"built_in\">Array</span>); <span class=\"comment\">//true</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(obj <span class=\"keyword\">instanceof</span> <span class=\"built_in\">Array</span>); <span class=\"comment\">//false</span></span><br></pre></td></tr></table></figure>\n<p>constructor和instanceof 在iframe下使用时会失效，每个iframe都有一套环境，都有一个window，不共享原型链。</p>\n<p><font color=\"red\">下面的代码取自网络</font><br><figure class=\"highlight delphi\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> iframe = document.createElement(<span class=\"string\">'iframe'</span>); <span class=\"comment\">//创建iframe</span></span><br><span class=\"line\">document.body.appendChild(iframe); <span class=\"comment\">//添加到body中</span></span><br><span class=\"line\">xArray = window.frames[window.frames.length-<span class=\"number\">1</span>].<span class=\"keyword\">Array</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr = new xArray(<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>); <span class=\"comment\">// 声明数组[1,2,3]</span></span><br><span class=\"line\">alert(arr instanceof <span class=\"keyword\">Array</span>); <span class=\"comment\">// false</span></span><br><span class=\"line\">alert(arr<span class=\"function\">.<span class=\"keyword\">constructor</span> === <span class=\"title\">Array</span>);</span> <span class=\"comment\">// false</span></span><br></pre></td></tr></table></figure></p>\n<p>为什么会出现这样的情况呢？原因就是：在当前窗口引入框架，其实就是引入了window对象，当我们在遍历iframe框架里的变量时使用arr instanceof Array 或者arr.constructor === Array，要注意这个Array是当前window对象的Array，而不是构造出arr的iframe里的window，所以会返回false。</p>\n<h3 id=\"使用toString方法\"><a href=\"#使用toString方法\" class=\"headerlink\" title=\"使用toString方法\"></a>使用toString方法</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   <span class=\"keyword\">var</span> arr=[<span class=\"number\">1</span>,<span class=\"number\">2</span>];</span><br><span class=\"line\">   <span class=\"keyword\">var</span> obj=&#123;&#125;;</span><br><span class=\"line\">   <span class=\"built_in\">console</span>.log(<span class=\"built_in\">Object</span>.prototype.toString.call(arr)); <span class=\"comment\">// \"[object Array]\"</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">Object</span>.prototype.toString.call(obj)); <span class=\"comment\">// \"[object Object]\"</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"使用Array-isArray\"><a href=\"#使用Array-isArray\" class=\"headerlink\" title=\"使用Array.isArray()\"></a>使用Array.isArray()</h3><p>ECMAScript5将Array.isArray()正式引入JavaScript，目的就是准确地检测一个值是否为数组。IE9+、 Firefox 4+、Safari 5+、Opera 10.5+和 Chrome都实现了这个方法。但是在IE8之前的版本是不支持的。</p>\n<p><font color=\"red\">综合上述方法，自己封装一个函数</font><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [];</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr2 = &#123;&#125;;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">isArrayFn</span>(<span class=\"params\">value</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> <span class=\"built_in\">Array</span>.isArray === <span class=\"string\">\"function\"</span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">//先检测是否有isArray方法</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"built_in\">Array</span>.isArray(value);</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//不支持isArray方法，则使用toString方法</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"built_in\">Object</span>.prototype.toString.call(value) === <span class=\"string\">\"[object Array]\"</span>;</span><br><span class=\"line\">        <span class=\"comment\">//如果是对象则是\"[object Object]\"</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(isArrayFn(arr)); <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(isArrayFn(arr2)); <span class=\"comment\">// false</span></span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>在实际开发中，经常需要检测一个变量的类型，是字符串、数字、布尔还是对象、数组？还是null、undefined？ 对于字符串和数字、布尔这种基本类型，用typeof()来检测就足够了，但是typeof用在数组和对象、null之间就不灵了。<br><img src=\"1.jpg\" alt><br>由图中可以看出，变量为null，数组，对象的abc使用typeof检测出来的都是object，没有办法进一步区分。</p>\n<h3 id=\"使用constructor检测\"><a href=\"#使用constructor检测\" class=\"headerlink\" title=\"使用constructor检测\"></a>使用constructor检测</h3><p><img src=\"2.jpg\" alt></p>\n<figure class=\"highlight delphi\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr=[<span class=\"number\">1</span>,<span class=\"number\">2</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj=<span class=\"comment\">&#123;&#125;</span>;</span><br><span class=\"line\">console.log(arr<span class=\"function\">.<span class=\"keyword\">constructor</span> === <span class=\"title\">Array</span>) <span class=\"comment\">//true</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">console</span>.<span class=\"title\">log</span><span class=\"params\">(obj.<span class=\"keyword\">constructor</span> === <span class=\"keyword\">Array</span>)</span> <span class=\"comment\">//false</span></span></span><br></pre></td></tr></table></figure>\n<h3 id=\"使用instanceof\"><a href=\"#使用instanceof\" class=\"headerlink\" title=\"使用instanceof\"></a>使用instanceof</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   <span class=\"keyword\">var</span> arr=[<span class=\"number\">1</span>,<span class=\"number\">2</span>];</span><br><span class=\"line\">   <span class=\"keyword\">var</span> obj=&#123;&#125;;</span><br><span class=\"line\">   <span class=\"built_in\">console</span>.log(arr <span class=\"keyword\">instanceof</span> <span class=\"built_in\">Array</span>); <span class=\"comment\">//true</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(obj <span class=\"keyword\">instanceof</span> <span class=\"built_in\">Array</span>); <span class=\"comment\">//false</span></span><br></pre></td></tr></table></figure>\n<p>constructor和instanceof 在iframe下使用时会失效，每个iframe都有一套环境，都有一个window，不共享原型链。</p>\n<p><font color=\"red\">下面的代码取自网络</font><br><figure class=\"highlight delphi\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> iframe = document.createElement(<span class=\"string\">'iframe'</span>); <span class=\"comment\">//创建iframe</span></span><br><span class=\"line\">document.body.appendChild(iframe); <span class=\"comment\">//添加到body中</span></span><br><span class=\"line\">xArray = window.frames[window.frames.length-<span class=\"number\">1</span>].<span class=\"keyword\">Array</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr = new xArray(<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>); <span class=\"comment\">// 声明数组[1,2,3]</span></span><br><span class=\"line\">alert(arr instanceof <span class=\"keyword\">Array</span>); <span class=\"comment\">// false</span></span><br><span class=\"line\">alert(arr<span class=\"function\">.<span class=\"keyword\">constructor</span> === <span class=\"title\">Array</span>);</span> <span class=\"comment\">// false</span></span><br></pre></td></tr></table></figure></p>\n<p>为什么会出现这样的情况呢？原因就是：在当前窗口引入框架，其实就是引入了window对象，当我们在遍历iframe框架里的变量时使用arr instanceof Array 或者arr.constructor === Array，要注意这个Array是当前window对象的Array，而不是构造出arr的iframe里的window，所以会返回false。</p>\n<h3 id=\"使用toString方法\"><a href=\"#使用toString方法\" class=\"headerlink\" title=\"使用toString方法\"></a>使用toString方法</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   <span class=\"keyword\">var</span> arr=[<span class=\"number\">1</span>,<span class=\"number\">2</span>];</span><br><span class=\"line\">   <span class=\"keyword\">var</span> obj=&#123;&#125;;</span><br><span class=\"line\">   <span class=\"built_in\">console</span>.log(<span class=\"built_in\">Object</span>.prototype.toString.call(arr)); <span class=\"comment\">// \"[object Array]\"</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">Object</span>.prototype.toString.call(obj)); <span class=\"comment\">// \"[object Object]\"</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"使用Array-isArray\"><a href=\"#使用Array-isArray\" class=\"headerlink\" title=\"使用Array.isArray()\"></a>使用Array.isArray()</h3><p>ECMAScript5将Array.isArray()正式引入JavaScript，目的就是准确地检测一个值是否为数组。IE9+、 Firefox 4+、Safari 5+、Opera 10.5+和 Chrome都实现了这个方法。但是在IE8之前的版本是不支持的。</p>\n<p><font color=\"red\">综合上述方法，自己封装一个函数</font><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [];</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr2 = &#123;&#125;;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">isArrayFn</span>(<span class=\"params\">value</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> <span class=\"built_in\">Array</span>.isArray === <span class=\"string\">\"function\"</span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">//先检测是否有isArray方法</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"built_in\">Array</span>.isArray(value);</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//不支持isArray方法，则使用toString方法</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"built_in\">Object</span>.prototype.toString.call(value) === <span class=\"string\">\"[object Array]\"</span>;</span><br><span class=\"line\">        <span class=\"comment\">//如果是对象则是\"[object Object]\"</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(isArrayFn(arr)); <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(isArrayFn(arr2)); <span class=\"comment\">// false</span></span><br></pre></td></tr></table></figure></p>\n"},{"title":"ubantu apt-get install方式安装mysql","abbrlink":13666,"date":"2019-05-15T06:41:02.000Z","_content":"\n# 在ubantu上安装mysql并不难，主要是记录下安装数据库时居然不像windows那样选择安装位置，设置用户和密码等\n\n1. `sudo apt-get install mysql-server` 安装mysql核心服务\n2. `sudo apt-get install mysql-server` 安装mysql客户端\n\n安装完成后我们需要去mysql目录查看用户名和密码\n`sudo vim /etc/mysql/debain.cnf`\n```\n[client]\nhost     = localhost\nuser     = debian-sys-maint\npassword = wrMqzOiffsyheEe1\nsocket   = /var/run/mysqld/mysqld.sock\n[mysql_upgrade]\nhost     = localhost\nuser     = debian-sys-maint\npassword = wrMqzOiffsyheEe1\nsocket   = /var/run/mysqld/mysqld.sock\n\n```\n我们用debian-sys-maint用户来登陆\n`mysql -u debian-sys-maint -p`\n输入密码：`wrMqzOiffsyheEe1`\n然后修改密码：\n```\nupdate mysql.user set authentication_string=PASSWORD('root'), plugin='mysql_native_password' where user='root';\n```\n<font color=\"red\">\n注意，authentication_string是密码 ，plugin是验证方式，这两个一定要同时改。从mysql5.7开始root的默认验证方式是auth_socket\n</font>\n可以输入 ` select user, plugin from mysql.user;` 查看到以下内容：\n```\n+------------------+-----------------------+\n| user             | plugin                |\n+------------------+-----------------------+\n| root             | auth_socket           |\n| mysql.session    | mysql_native_password |\n| mysql.sys        | mysql_native_password |\n| debian-sys-maint | mysql_native_password |\n+------------------+-----------------------+\n4 rows in set (0.02 sec)\n\n```\n修改后的：\n```\n+------------------+-----------------------+\n| user             | plugin                |\n+------------------+-----------------------+\n| root             | mysql_native_password |\n| mysql.session    | mysql_native_password |\n| mysql.sys        | mysql_native_password |\n| debian-sys-maint | mysql_native_password |\n+------------------+-----------------------+\n4 rows in set (0.02 sec)\n```\nmysql_native_password这种系统root用户登录时才可以登录数据库的root用户。所以需要把auth_socket改为mysql_native_password，才可以不受系统用户限制。\n\n然后`exit;`推出mysql。`sudo service mysql restart` 重启mysql服务\n\n","source":"_posts/ubantu-apt-get-install方式安装mysql.md","raw":"---\ntitle: ubantu apt-get install方式安装mysql\nabbrlink: 13666\ndate: 2019-05-15 14:41:02\ntags: linux\ncategories: linux\n---\n\n# 在ubantu上安装mysql并不难，主要是记录下安装数据库时居然不像windows那样选择安装位置，设置用户和密码等\n\n1. `sudo apt-get install mysql-server` 安装mysql核心服务\n2. `sudo apt-get install mysql-server` 安装mysql客户端\n\n安装完成后我们需要去mysql目录查看用户名和密码\n`sudo vim /etc/mysql/debain.cnf`\n```\n[client]\nhost     = localhost\nuser     = debian-sys-maint\npassword = wrMqzOiffsyheEe1\nsocket   = /var/run/mysqld/mysqld.sock\n[mysql_upgrade]\nhost     = localhost\nuser     = debian-sys-maint\npassword = wrMqzOiffsyheEe1\nsocket   = /var/run/mysqld/mysqld.sock\n\n```\n我们用debian-sys-maint用户来登陆\n`mysql -u debian-sys-maint -p`\n输入密码：`wrMqzOiffsyheEe1`\n然后修改密码：\n```\nupdate mysql.user set authentication_string=PASSWORD('root'), plugin='mysql_native_password' where user='root';\n```\n<font color=\"red\">\n注意，authentication_string是密码 ，plugin是验证方式，这两个一定要同时改。从mysql5.7开始root的默认验证方式是auth_socket\n</font>\n可以输入 ` select user, plugin from mysql.user;` 查看到以下内容：\n```\n+------------------+-----------------------+\n| user             | plugin                |\n+------------------+-----------------------+\n| root             | auth_socket           |\n| mysql.session    | mysql_native_password |\n| mysql.sys        | mysql_native_password |\n| debian-sys-maint | mysql_native_password |\n+------------------+-----------------------+\n4 rows in set (0.02 sec)\n\n```\n修改后的：\n```\n+------------------+-----------------------+\n| user             | plugin                |\n+------------------+-----------------------+\n| root             | mysql_native_password |\n| mysql.session    | mysql_native_password |\n| mysql.sys        | mysql_native_password |\n| debian-sys-maint | mysql_native_password |\n+------------------+-----------------------+\n4 rows in set (0.02 sec)\n```\nmysql_native_password这种系统root用户登录时才可以登录数据库的root用户。所以需要把auth_socket改为mysql_native_password，才可以不受系统用户限制。\n\n然后`exit;`推出mysql。`sudo service mysql restart` 重启mysql服务\n\n","slug":"ubantu-apt-get-install方式安装mysql","published":1,"updated":"2020-04-30T07:58:25.396Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0ocrv3000b40m08zeus4f1","content":"<h1 id=\"在ubantu上安装mysql并不难，主要是记录下安装数据库时居然不像windows那样选择安装位置，设置用户和密码等\"><a href=\"#在ubantu上安装mysql并不难，主要是记录下安装数据库时居然不像windows那样选择安装位置，设置用户和密码等\" class=\"headerlink\" title=\"在ubantu上安装mysql并不难，主要是记录下安装数据库时居然不像windows那样选择安装位置，设置用户和密码等\"></a>在ubantu上安装mysql并不难，主要是记录下安装数据库时居然不像windows那样选择安装位置，设置用户和密码等</h1><ol>\n<li><code>sudo apt-get install mysql-server</code> 安装mysql核心服务</li>\n<li><code>sudo apt-get install mysql-server</code> 安装mysql客户端</li>\n</ol>\n<p>安装完成后我们需要去mysql目录查看用户名和密码<br><code>sudo vim /etc/mysql/debain.cnf</code><br><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[client]</span><br><span class=\"line\">host     = localhost</span><br><span class=\"line\">user     = debian-sys-maint</span><br><span class=\"line\">password = wrMqzOiffsyheEe1</span><br><span class=\"line\">socket   = /var/run/mysqld/mysqld.sock</span><br><span class=\"line\">[mysql_upgrade]</span><br><span class=\"line\">host     = localhost</span><br><span class=\"line\">user     = debian-sys-maint</span><br><span class=\"line\">password = wrMqzOiffsyheEe1</span><br><span class=\"line\">socket   = /var/run/mysqld/mysqld.sock</span><br></pre></td></tr></table></figure></p>\n<p>我们用debian-sys-maint用户来登陆<br><code>mysql -u debian-sys-maint -p</code><br>输入密码：<code>wrMqzOiffsyheEe1</code><br>然后修改密码：<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">update</span> mysql.user <span class=\"keyword\">set</span> authentication_string=<span class=\"keyword\">PASSWORD</span>(<span class=\"string\">'root'</span>), <span class=\"keyword\">plugin</span>=<span class=\"string\">'mysql_native_password'</span> <span class=\"keyword\">where</span> <span class=\"keyword\">user</span>=<span class=\"string\">'root'</span>;</span><br></pre></td></tr></table></figure></p>\n<p><font color=\"red\"><br>注意，authentication_string是密码 ，plugin是验证方式，这两个一定要同时改。从mysql5.7开始root的默认验证方式是auth_socket<br></font><br>可以输入 <code>select user, plugin from mysql.user;</code> 查看到以下内容：<br><figure class=\"highlight gherkin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">+------------------+-----------------------+</span><br><span class=\"line\">|<span class=\"string\"> user             </span>|<span class=\"string\"> plugin                </span>|</span><br><span class=\"line\">+------------------+-----------------------+</span><br><span class=\"line\">|<span class=\"string\"> root             </span>|<span class=\"string\"> auth_socket           </span>|</span><br><span class=\"line\">|<span class=\"string\"> mysql.session    </span>|<span class=\"string\"> mysql_native_password </span>|</span><br><span class=\"line\">|<span class=\"string\"> mysql.sys        </span>|<span class=\"string\"> mysql_native_password </span>|</span><br><span class=\"line\">|<span class=\"string\"> debian-sys-maint </span>|<span class=\"string\"> mysql_native_password </span>|</span><br><span class=\"line\">+------------------+-----------------------+</span><br><span class=\"line\">4 rows in set (0.02 sec)</span><br></pre></td></tr></table></figure></p>\n<p>修改后的：<br><figure class=\"highlight asciidoc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"code\">+------------------+</span>-----------------------+</span><br><span class=\"line\">| user             | plugin                |</span><br><span class=\"line\"><span class=\"code\">+------------------+</span>-----------------------+</span><br><span class=\"line\">| root             | mysql<span class=\"emphasis\">_native_</span>password |</span><br><span class=\"line\">| mysql.session    | mysql<span class=\"emphasis\">_native_</span>password |</span><br><span class=\"line\">| mysql.sys        | mysql<span class=\"emphasis\">_native_</span>password |</span><br><span class=\"line\">| debian-sys-maint | mysql<span class=\"emphasis\">_native_</span>password |</span><br><span class=\"line\"><span class=\"code\">+------------------+</span>-----------------------+</span><br><span class=\"line\">4 rows in set (0.02 sec)</span><br></pre></td></tr></table></figure></p>\n<p>mysql_native_password这种系统root用户登录时才可以登录数据库的root用户。所以需要把auth_socket改为mysql_native_password，才可以不受系统用户限制。</p>\n<p>然后<code>exit;</code>推出mysql。<code>sudo service mysql restart</code> 重启mysql服务</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"在ubantu上安装mysql并不难，主要是记录下安装数据库时居然不像windows那样选择安装位置，设置用户和密码等\"><a href=\"#在ubantu上安装mysql并不难，主要是记录下安装数据库时居然不像windows那样选择安装位置，设置用户和密码等\" class=\"headerlink\" title=\"在ubantu上安装mysql并不难，主要是记录下安装数据库时居然不像windows那样选择安装位置，设置用户和密码等\"></a>在ubantu上安装mysql并不难，主要是记录下安装数据库时居然不像windows那样选择安装位置，设置用户和密码等</h1><ol>\n<li><code>sudo apt-get install mysql-server</code> 安装mysql核心服务</li>\n<li><code>sudo apt-get install mysql-server</code> 安装mysql客户端</li>\n</ol>\n<p>安装完成后我们需要去mysql目录查看用户名和密码<br><code>sudo vim /etc/mysql/debain.cnf</code><br><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[client]</span><br><span class=\"line\">host     = localhost</span><br><span class=\"line\">user     = debian-sys-maint</span><br><span class=\"line\">password = wrMqzOiffsyheEe1</span><br><span class=\"line\">socket   = /var/run/mysqld/mysqld.sock</span><br><span class=\"line\">[mysql_upgrade]</span><br><span class=\"line\">host     = localhost</span><br><span class=\"line\">user     = debian-sys-maint</span><br><span class=\"line\">password = wrMqzOiffsyheEe1</span><br><span class=\"line\">socket   = /var/run/mysqld/mysqld.sock</span><br></pre></td></tr></table></figure></p>\n<p>我们用debian-sys-maint用户来登陆<br><code>mysql -u debian-sys-maint -p</code><br>输入密码：<code>wrMqzOiffsyheEe1</code><br>然后修改密码：<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">update</span> mysql.user <span class=\"keyword\">set</span> authentication_string=<span class=\"keyword\">PASSWORD</span>(<span class=\"string\">'root'</span>), <span class=\"keyword\">plugin</span>=<span class=\"string\">'mysql_native_password'</span> <span class=\"keyword\">where</span> <span class=\"keyword\">user</span>=<span class=\"string\">'root'</span>;</span><br></pre></td></tr></table></figure></p>\n<p><font color=\"red\"><br>注意，authentication_string是密码 ，plugin是验证方式，这两个一定要同时改。从mysql5.7开始root的默认验证方式是auth_socket<br></font><br>可以输入 <code>select user, plugin from mysql.user;</code> 查看到以下内容：<br><figure class=\"highlight gherkin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">+------------------+-----------------------+</span><br><span class=\"line\">|<span class=\"string\"> user             </span>|<span class=\"string\"> plugin                </span>|</span><br><span class=\"line\">+------------------+-----------------------+</span><br><span class=\"line\">|<span class=\"string\"> root             </span>|<span class=\"string\"> auth_socket           </span>|</span><br><span class=\"line\">|<span class=\"string\"> mysql.session    </span>|<span class=\"string\"> mysql_native_password </span>|</span><br><span class=\"line\">|<span class=\"string\"> mysql.sys        </span>|<span class=\"string\"> mysql_native_password </span>|</span><br><span class=\"line\">|<span class=\"string\"> debian-sys-maint </span>|<span class=\"string\"> mysql_native_password </span>|</span><br><span class=\"line\">+------------------+-----------------------+</span><br><span class=\"line\">4 rows in set (0.02 sec)</span><br></pre></td></tr></table></figure></p>\n<p>修改后的：<br><figure class=\"highlight asciidoc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"code\">+------------------+</span>-----------------------+</span><br><span class=\"line\">| user             | plugin                |</span><br><span class=\"line\"><span class=\"code\">+------------------+</span>-----------------------+</span><br><span class=\"line\">| root             | mysql<span class=\"emphasis\">_native_</span>password |</span><br><span class=\"line\">| mysql.session    | mysql<span class=\"emphasis\">_native_</span>password |</span><br><span class=\"line\">| mysql.sys        | mysql<span class=\"emphasis\">_native_</span>password |</span><br><span class=\"line\">| debian-sys-maint | mysql<span class=\"emphasis\">_native_</span>password |</span><br><span class=\"line\"><span class=\"code\">+------------------+</span>-----------------------+</span><br><span class=\"line\">4 rows in set (0.02 sec)</span><br></pre></td></tr></table></figure></p>\n<p>mysql_native_password这种系统root用户登录时才可以登录数据库的root用户。所以需要把auth_socket改为mysql_native_password，才可以不受系统用户限制。</p>\n<p>然后<code>exit;</code>推出mysql。<code>sudo service mysql restart</code> 重启mysql服务</p>\n"},{"title":"webpack4从头构建一个简单的vue2项目","abbrlink":"b38ec8f3","date":"2019-04-20T08:22:45.000Z","_content":"\n### 前言\nvue早就有成熟的vue-cli工具了，现在是vue-cli 3.0了，但是觉得很有必要自己去实现一下，有助于自己技术的提高，也能更好地去了解webpack。本人是webpack菜鸟，有些资料是网上学习整理过来的。\n\n### 1.新建目录文件夹\n第一步当然是新建工程目录了，具体怎么建就随便了，比如我建立webpackVue这个目录\n### 2.新建package.json文件\npackage.json是nodejs项目必需的配置文件。使用`npm init`,按照提示一步步填写项目名称，作者等信息\n### 3.webpack配置\n新建build文件夹\nbuild目录下新建webpack.base.conf.js,webpack.dev.conf.js,webpack.prod.conf.js文件，webpack.base.conf.js是公共基础配置，webpack.dev.conf.js是生产环境配置文件，webpack.prod.conf.js是生产环境配置。\n创建一个src目录，用来存放我们的项目源文件，然后创建main.js文件，创建一个index.html\n```\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>webpack4搭建vue</title>\n</head>\n<body>\n    <div id=\"app\"></div>\n</body>\n</html>\n```\n![](1.jpg) 目录结构是这样的\n\n下载webpack webpack-dev-server webpack-cli (这里webpack是局部安装)\n`npm i webpack webpack-dev-server webpack-cli -D`\n打开webpack.base.config.js，逐步添加配置\n```\nvar path = require('path');\nvar webpack = require('webpack');\nmodule.exports ={\n    //入口文件\n    entry:{\n        main: path.resolve(__dirname, '../src/main.js')\n    },\n    //输出目录\n    output:{\n        path: path.resolve(__dirname, '../dist'),\n        filename: '[name].[hash].js'\n    },\n    module:{\n        rules:[]\n    },\n    plugins:[\n        new webpack.HashedModuleIdsPlugin(), // 解决vender后面的hash每次都改变\n    ],\n    resolve:{\n\n    }\n}\n```\n### 4.配置loader\n配置babel编译代码：下载babel-loader，babel-core，babel-preset-dev。\n`npm i babel-loader babel-core babel-preset-env -D`\n\nbabel-preset-env 帮助我们配置 babel。我们只需要告诉它我们要兼容的情况（目标运行环境），它就会自动把代码转换为兼容对应环境的代码。\nbabel-core是作为babel的核心存在，babel的核心api都在这个模块里面\n这里有个注意的地方，就是babel的版本的问题，运行的时候根据提示安装合适的版本就好了，这里不记得是babel的哪个工具需要7的版本了。\n在webpack.base.conf.js文件中增加babel配置\n```\nrules:[\n    {\n        test: /\\.js$/, //匹配.js结尾的文件\n        use: ['babel-loader'],\n        exclude:/node_modules/ //排除node_modules里面的js\n    },\n]\n```\n新建.babelrc文件，.babelrc是babel全局配置文件\n```\n{\n    \"presets\":[\n        [\"env\",{\n            \"targets\": {    \n                \"browsers\": [\"> 1%\", \"last 2 versions\", \"not ie <=8\"],\n                //\"chrome\": 52,\n                //\"browsers\": [\"last 2 versions\", \"safari 7\"]\n            },       \n            \"modules\": false\n        }]\n    ]\n}\n```\n#### 下载file-loader\n`npm i file-loader -D`\n继续追加配置\n```\nrules:[\n    {\n        test: /\\.(jpg|png|svg|gif)$/,\n        use:['file-loader']\n    },\n    {\n        test:/\\.(woff|woff2|eot|ttf|otf)$/\n    },\n]\n```\n#### 下载css-loader，vue-style-loader，sass-loader， node-sass，less，less-loader并配置css，scss，sass,less\n`npm i css-loader vue-style-loader sass-loader node-sass less-loader less -D`\n```\nrules:[\n    {\n        test:/\\.(sa|sc|c)ss$/,\n        use:[\n            {\n                loader: 'vue-style-loader'\n            },\n            'css-loader',\n            'sass-loader'\n        ]\n    },\n    {\n        test:/\\.less$/,\n        use:[\n            {\n                loader: 'vue-style-loader'\n            },\n            'css-loader',\n            'sass-loader'\n        ]\n    },\n]\n```\n### 5.处理html文件\n下载html-webpack-plugin\n`npm i html-webpack-plugin -D`\n```\nvar HtmlWebpackPlugin = require('html-webpack-plugin'); //在base配置文件头部引入\nnew HtmlWebpackPlugin({\n    template: path.resolve(__dirname, '../index.html')\n}),\n```\n### 6.解析模块的配置和配置别名\n```\nresolve: {\n    // 能够使用户在引入模块时不带扩展\n    extensions: ['.js', '.json', '.vue', 'css'],\n    //别名\n    alias: {\n        'vue$':'vue/dist/vue.esm.js',\n        '@': path.resolve(__dirname, '../src')\n    }\n    \n}\n```\n### 7.配置webpack.dev.conf.js文件\n下载 webpack-merge，用于合并配置\n`npm i webpack-merge -D`\n```\nvar merge = require('webpack-merge');\nvar baseConfig = require('./webpack.base.conf');\nvar path = require('path');\nvar webpack = require('webpack');\nmodule.exports = merge(baseConfig, {\n    devtool: 'inline-source-map', // 压缩方式\n    mode: 'development',\n    devServer: {\n        hot: true, // 热更新\n        open: true, // 自动打开页面\n        contentBase: path.resolve(__dirname, '../src'), // 告诉服务从哪提供内容\n    },\n    plugins: [\n        new webpack.HotModuleReplacementPlugin(), //开启热更新\n    ]\n})\n```\n### 8.配置webpack.prod.conf.js\n```\nvar merge = require('webpack-merge');\nvar baseConfig = require('./webpack.base.conf');\nvar path = require('path');\nvar webpack = require('webpack');\nmodule.exports = merge(baseConfig, {\n    devtool: 'source-map', // 压缩方式\n    mode: 'production',\n    plugins: [\n\n    ]\n})\n```\n### 9.配置vue-loader\n首先要下载vue，以及vue相关的模块\n`npm i vue vue-loader vue-template-compiler -D`\n继续完善webpack.base.cond.js\n```\nvar VueLoaderPlugin=require('vue-loader/lib/plugin');\n//省略部分代码...\nrules:[\n    {\n        test: /\\.vue$/,\n        use: ['vue-loader'],\n        exclude: /node_modules/\n    },\n]\n//省略部分代码...\nplugins:[\n    new VueLoaderPlugin(), // 它的职责是将你定义过的其它规则复制并应用到 .vue 文件里相应语言的块\n]\n```\n在src目录新建app.vue文件和main.js文件\n```\n//app.vue\n<template>\n    <div>{{str}}</div>\n</template>\n<script>\n  export default {\n    name: 'App',\n    data () {\n      return {\n        str: '欢迎来到自定义webpack4+vue构建'\n      }\n    }\n  }\n</script>\n<style lang=\"scss\">\n  div {\n    color: red;\n  }\n</style>\n```\n```\n//main.js\nimport Vue from 'vue'\nimport App from './App'\n\nnew Vue({\n    el: \"#app\",\n    render: (h) => h(App)\n})\n```\n### 10.配置命令\n\n打开package.json文件，并配置开发和打包命令\n```\n// 省略代码。。。\n\"scripts\": {\n  \"dev\": \"webpack-dev-server  --progress --config build/webpack.dev.conf.js\",\n   \"build\": \"webpack --config build/webpack.prod.conf.js\"\n  }\n\n```\n`npm run dev` 就可以启动项目了\n![](2.png)\n\n## 继续优化...\n\n### 11. 区分环境引入不同地址\n\n新建config文件夹并新建dev.env.js和prod.env.js\n```\n//dev.env.js 开发环境配置\n'use strict'\n\nmodule.exports = {\n    NODE_ENV: \"development\",\n    BASE_API: \"http://1456\",\n}\n```\n\n```\n//prod.env.js 生产环境配置\n'use strict'\n\nmodule.exports = {\n    NODE_ENV: \"production\",    BASE_API: \"http://123.com\",\n}\n\n```\n### 12.优化webpack配置\n解决更改文件打包时dist文件没有清除，再次打包。\n下载clean-webpack-plugin，并配置webpack.prod.conf.js文件\n`npm i clean-webpack-plugin -D`\n\n```\n//webpack.prod.conf.js\n// 引入clean-webpack-plugin\nvar CleanWebpackPlugin = require('clean-webpack-plugin');\n// 省略代码。。。。\nplugins: [\n    new CleanWebPackPlugin();\n]\n\n```\n根据不同环境提取css\n下载mini-css-extract-plugin，并配置webpack.prod.conf.js文件\n`npm i mini-css-extract-plugin -D`\n```\n//webpack.prod.conf.js\nconst MiniCssExtractPlugin = require('mini-css-extract-plugin');\nmodule: {\n    rules: [\n        {\n            test: /\\.(c|sc|sa)ss$/,\n            use: [\n                {\n                loader: MiniCssExtractPlugin.loader,\n                },\n                'css-loader',\n                'sass-loader'\n            ]\n        },\n        {\n        test: /\\.less$/,\n        use: [\n            {\n            loader: MiniCssExtractPlugin.loader,\n            },\n            'css-loader',\n            'less-loader'\n            ]\n        }\n    ]\n},\nplugins: [\n    new MiniCssExtractPlugin({\n        filename: '[name].[hash].css'\n    })\n]\n\n```\n<font color=\"red\">webpack.base.conf.js中删除使用vue-style-loader的代码，并在webpack.dev.conf.js中定义</font>\n\n```\nmodule: {\n    rules: [\n      {\n        test: /\\.(c|sc|sa)ss$/,\n        use: [\n          {\n            loader: 'vue-style-loader',\n          },\n          'css-loader',\n          'sass-loader'\n        ]\n      },\n      {\n        test: /\\.less$/,\n        use: [\n          {\n            loader: 'vue-style-loader',\n          },\n          'css-loader',\n          'less-loader'\n         ]\n      }\n    ]\n  },\n//以上这段webpack.base.conf.js中的代码移到webpack.dev.conf.js中\n```\n[这个配置vue-loader中有提到](https://link.juejin.im?target=https%3A%2F%2Fvue-loader.vuejs.org%2Fzh%2Fguide%2Fextract-css.html%23webpack-4)\n\n#### 第三方库单独打包 \n把依赖的第三方库抽取出来单独打包，加快打包进度\n下载autodll-webpack-plugin\n`npm i autodll-webpack-plugin -D`\n\n在webpack.base.conf.js中配置\n```\n//webpack.base.conf.js\n//省略部分代码\nvar AutodllWebpackpackPlugin = require('autodll-webpack-plugin');\nplugins: [\n    new AutodllWebpackpackPlugin ({\n        inject: true,\n        debugger: true,\n        filename: '[name].js',\n        path: './dll',\n        entry: {\n            vendor: ['vue']\n        }\n    })\n]\n\n```\ntips: inject 为 true，插件会自动把打包出来的第三方库文件插入到 HTML。filename 是打包后文件的名称。path 是打包后的路径。entry 是入口，vendor 是你指定的名称，数组内容就是要打包的第三方库的名称，不要写全路径，Webpack 会自动去 node_modules 中找到的。\n#### 提取公共代码\n在 webpack.base.conf.js的 plugins 属性中添加如下插件对象\n`new webpack.optimize.SplitChunksPlugin()`\n#### 打包时压缩js和css\n下载optimize-css-assets-webpack-plugin和uglifyjs-webpack-plugin\n\n`npm i uglifyjs-webpack-plugin uglifyjs-webpack-plugin optimize-css-assets-webpack-plugin -D`\n\n在webpack.prod.conf.js中分别引入optimize-css-assets-webpack-plugin和uglifyjs-webpack-plugin并增加optimization\n```\n//webpack.prod.conf.js\nvar OptimizeCSSAssetsPlugin = require(\"optimize-css-assets-webpack-plugin\");\nvar UglifyJsPlugin = require(\"uglifyjs-webpack-plugin\");\n// 省略部分代码\noptimization: {\n        minimizer: [\n        // 压缩JS\n        new UglifyJsPlugin({\n        uglifyOptions: {\n            compress: {\n            warnings: false, // 去除警告\n            drop_debugger: true, // 去除debugger\n            drop_console: true // 去除console.log\n            },\n        },\n        cache: true, // 开启缓存\n        parallel: true, // 平行压缩\n        sourceMap: false // set to true if you want JS source maps\n        }),\n        // 压缩css\n        new OptimizeCSSAssetsPlugin({})\n    ]\n},\n\n```\n#### css自动加前缀\n下载postcss-loader 和autoprefixer\n`npm i postcss-loader autoprefixer -D`\n分别在webpack.dev.conf.js和webpack.prod.conf.js的use中添加postcss-loader\n在module中的rules中的use中追加：\n```\nuse: [\n    'postcss-loader'\n]\n```\n在项目下增加postcss.config.js\n```\n// 配置cssz加前缀\nmodule.exports = {\n  plugins: [\n    require('autoprefixer')\n  ]\n}\n```\n差不多就这样了,对了，还有一点就是打包出来的html里面引用`/dll/vendor.js`需要手动改成`./dll/vendor.js`这个下次也要优化下，我记得vue-cli 2版本中有一个地方是可以配置的","source":"_posts/webpack4从头构建一个简单的vue2项目.md","raw":"---\ntitle: webpack4从头构建一个简单的vue2项目\ntags:\n  - nodejs\n  - webpack\n  - vue\ncategories: 前端\nabbrlink: b38ec8f3\ndate: 2019-04-20 16:22:45\n---\n\n### 前言\nvue早就有成熟的vue-cli工具了，现在是vue-cli 3.0了，但是觉得很有必要自己去实现一下，有助于自己技术的提高，也能更好地去了解webpack。本人是webpack菜鸟，有些资料是网上学习整理过来的。\n\n### 1.新建目录文件夹\n第一步当然是新建工程目录了，具体怎么建就随便了，比如我建立webpackVue这个目录\n### 2.新建package.json文件\npackage.json是nodejs项目必需的配置文件。使用`npm init`,按照提示一步步填写项目名称，作者等信息\n### 3.webpack配置\n新建build文件夹\nbuild目录下新建webpack.base.conf.js,webpack.dev.conf.js,webpack.prod.conf.js文件，webpack.base.conf.js是公共基础配置，webpack.dev.conf.js是生产环境配置文件，webpack.prod.conf.js是生产环境配置。\n创建一个src目录，用来存放我们的项目源文件，然后创建main.js文件，创建一个index.html\n```\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>webpack4搭建vue</title>\n</head>\n<body>\n    <div id=\"app\"></div>\n</body>\n</html>\n```\n![](1.jpg) 目录结构是这样的\n\n下载webpack webpack-dev-server webpack-cli (这里webpack是局部安装)\n`npm i webpack webpack-dev-server webpack-cli -D`\n打开webpack.base.config.js，逐步添加配置\n```\nvar path = require('path');\nvar webpack = require('webpack');\nmodule.exports ={\n    //入口文件\n    entry:{\n        main: path.resolve(__dirname, '../src/main.js')\n    },\n    //输出目录\n    output:{\n        path: path.resolve(__dirname, '../dist'),\n        filename: '[name].[hash].js'\n    },\n    module:{\n        rules:[]\n    },\n    plugins:[\n        new webpack.HashedModuleIdsPlugin(), // 解决vender后面的hash每次都改变\n    ],\n    resolve:{\n\n    }\n}\n```\n### 4.配置loader\n配置babel编译代码：下载babel-loader，babel-core，babel-preset-dev。\n`npm i babel-loader babel-core babel-preset-env -D`\n\nbabel-preset-env 帮助我们配置 babel。我们只需要告诉它我们要兼容的情况（目标运行环境），它就会自动把代码转换为兼容对应环境的代码。\nbabel-core是作为babel的核心存在，babel的核心api都在这个模块里面\n这里有个注意的地方，就是babel的版本的问题，运行的时候根据提示安装合适的版本就好了，这里不记得是babel的哪个工具需要7的版本了。\n在webpack.base.conf.js文件中增加babel配置\n```\nrules:[\n    {\n        test: /\\.js$/, //匹配.js结尾的文件\n        use: ['babel-loader'],\n        exclude:/node_modules/ //排除node_modules里面的js\n    },\n]\n```\n新建.babelrc文件，.babelrc是babel全局配置文件\n```\n{\n    \"presets\":[\n        [\"env\",{\n            \"targets\": {    \n                \"browsers\": [\"> 1%\", \"last 2 versions\", \"not ie <=8\"],\n                //\"chrome\": 52,\n                //\"browsers\": [\"last 2 versions\", \"safari 7\"]\n            },       \n            \"modules\": false\n        }]\n    ]\n}\n```\n#### 下载file-loader\n`npm i file-loader -D`\n继续追加配置\n```\nrules:[\n    {\n        test: /\\.(jpg|png|svg|gif)$/,\n        use:['file-loader']\n    },\n    {\n        test:/\\.(woff|woff2|eot|ttf|otf)$/\n    },\n]\n```\n#### 下载css-loader，vue-style-loader，sass-loader， node-sass，less，less-loader并配置css，scss，sass,less\n`npm i css-loader vue-style-loader sass-loader node-sass less-loader less -D`\n```\nrules:[\n    {\n        test:/\\.(sa|sc|c)ss$/,\n        use:[\n            {\n                loader: 'vue-style-loader'\n            },\n            'css-loader',\n            'sass-loader'\n        ]\n    },\n    {\n        test:/\\.less$/,\n        use:[\n            {\n                loader: 'vue-style-loader'\n            },\n            'css-loader',\n            'sass-loader'\n        ]\n    },\n]\n```\n### 5.处理html文件\n下载html-webpack-plugin\n`npm i html-webpack-plugin -D`\n```\nvar HtmlWebpackPlugin = require('html-webpack-plugin'); //在base配置文件头部引入\nnew HtmlWebpackPlugin({\n    template: path.resolve(__dirname, '../index.html')\n}),\n```\n### 6.解析模块的配置和配置别名\n```\nresolve: {\n    // 能够使用户在引入模块时不带扩展\n    extensions: ['.js', '.json', '.vue', 'css'],\n    //别名\n    alias: {\n        'vue$':'vue/dist/vue.esm.js',\n        '@': path.resolve(__dirname, '../src')\n    }\n    \n}\n```\n### 7.配置webpack.dev.conf.js文件\n下载 webpack-merge，用于合并配置\n`npm i webpack-merge -D`\n```\nvar merge = require('webpack-merge');\nvar baseConfig = require('./webpack.base.conf');\nvar path = require('path');\nvar webpack = require('webpack');\nmodule.exports = merge(baseConfig, {\n    devtool: 'inline-source-map', // 压缩方式\n    mode: 'development',\n    devServer: {\n        hot: true, // 热更新\n        open: true, // 自动打开页面\n        contentBase: path.resolve(__dirname, '../src'), // 告诉服务从哪提供内容\n    },\n    plugins: [\n        new webpack.HotModuleReplacementPlugin(), //开启热更新\n    ]\n})\n```\n### 8.配置webpack.prod.conf.js\n```\nvar merge = require('webpack-merge');\nvar baseConfig = require('./webpack.base.conf');\nvar path = require('path');\nvar webpack = require('webpack');\nmodule.exports = merge(baseConfig, {\n    devtool: 'source-map', // 压缩方式\n    mode: 'production',\n    plugins: [\n\n    ]\n})\n```\n### 9.配置vue-loader\n首先要下载vue，以及vue相关的模块\n`npm i vue vue-loader vue-template-compiler -D`\n继续完善webpack.base.cond.js\n```\nvar VueLoaderPlugin=require('vue-loader/lib/plugin');\n//省略部分代码...\nrules:[\n    {\n        test: /\\.vue$/,\n        use: ['vue-loader'],\n        exclude: /node_modules/\n    },\n]\n//省略部分代码...\nplugins:[\n    new VueLoaderPlugin(), // 它的职责是将你定义过的其它规则复制并应用到 .vue 文件里相应语言的块\n]\n```\n在src目录新建app.vue文件和main.js文件\n```\n//app.vue\n<template>\n    <div>{{str}}</div>\n</template>\n<script>\n  export default {\n    name: 'App',\n    data () {\n      return {\n        str: '欢迎来到自定义webpack4+vue构建'\n      }\n    }\n  }\n</script>\n<style lang=\"scss\">\n  div {\n    color: red;\n  }\n</style>\n```\n```\n//main.js\nimport Vue from 'vue'\nimport App from './App'\n\nnew Vue({\n    el: \"#app\",\n    render: (h) => h(App)\n})\n```\n### 10.配置命令\n\n打开package.json文件，并配置开发和打包命令\n```\n// 省略代码。。。\n\"scripts\": {\n  \"dev\": \"webpack-dev-server  --progress --config build/webpack.dev.conf.js\",\n   \"build\": \"webpack --config build/webpack.prod.conf.js\"\n  }\n\n```\n`npm run dev` 就可以启动项目了\n![](2.png)\n\n## 继续优化...\n\n### 11. 区分环境引入不同地址\n\n新建config文件夹并新建dev.env.js和prod.env.js\n```\n//dev.env.js 开发环境配置\n'use strict'\n\nmodule.exports = {\n    NODE_ENV: \"development\",\n    BASE_API: \"http://1456\",\n}\n```\n\n```\n//prod.env.js 生产环境配置\n'use strict'\n\nmodule.exports = {\n    NODE_ENV: \"production\",    BASE_API: \"http://123.com\",\n}\n\n```\n### 12.优化webpack配置\n解决更改文件打包时dist文件没有清除，再次打包。\n下载clean-webpack-plugin，并配置webpack.prod.conf.js文件\n`npm i clean-webpack-plugin -D`\n\n```\n//webpack.prod.conf.js\n// 引入clean-webpack-plugin\nvar CleanWebpackPlugin = require('clean-webpack-plugin');\n// 省略代码。。。。\nplugins: [\n    new CleanWebPackPlugin();\n]\n\n```\n根据不同环境提取css\n下载mini-css-extract-plugin，并配置webpack.prod.conf.js文件\n`npm i mini-css-extract-plugin -D`\n```\n//webpack.prod.conf.js\nconst MiniCssExtractPlugin = require('mini-css-extract-plugin');\nmodule: {\n    rules: [\n        {\n            test: /\\.(c|sc|sa)ss$/,\n            use: [\n                {\n                loader: MiniCssExtractPlugin.loader,\n                },\n                'css-loader',\n                'sass-loader'\n            ]\n        },\n        {\n        test: /\\.less$/,\n        use: [\n            {\n            loader: MiniCssExtractPlugin.loader,\n            },\n            'css-loader',\n            'less-loader'\n            ]\n        }\n    ]\n},\nplugins: [\n    new MiniCssExtractPlugin({\n        filename: '[name].[hash].css'\n    })\n]\n\n```\n<font color=\"red\">webpack.base.conf.js中删除使用vue-style-loader的代码，并在webpack.dev.conf.js中定义</font>\n\n```\nmodule: {\n    rules: [\n      {\n        test: /\\.(c|sc|sa)ss$/,\n        use: [\n          {\n            loader: 'vue-style-loader',\n          },\n          'css-loader',\n          'sass-loader'\n        ]\n      },\n      {\n        test: /\\.less$/,\n        use: [\n          {\n            loader: 'vue-style-loader',\n          },\n          'css-loader',\n          'less-loader'\n         ]\n      }\n    ]\n  },\n//以上这段webpack.base.conf.js中的代码移到webpack.dev.conf.js中\n```\n[这个配置vue-loader中有提到](https://link.juejin.im?target=https%3A%2F%2Fvue-loader.vuejs.org%2Fzh%2Fguide%2Fextract-css.html%23webpack-4)\n\n#### 第三方库单独打包 \n把依赖的第三方库抽取出来单独打包，加快打包进度\n下载autodll-webpack-plugin\n`npm i autodll-webpack-plugin -D`\n\n在webpack.base.conf.js中配置\n```\n//webpack.base.conf.js\n//省略部分代码\nvar AutodllWebpackpackPlugin = require('autodll-webpack-plugin');\nplugins: [\n    new AutodllWebpackpackPlugin ({\n        inject: true,\n        debugger: true,\n        filename: '[name].js',\n        path: './dll',\n        entry: {\n            vendor: ['vue']\n        }\n    })\n]\n\n```\ntips: inject 为 true，插件会自动把打包出来的第三方库文件插入到 HTML。filename 是打包后文件的名称。path 是打包后的路径。entry 是入口，vendor 是你指定的名称，数组内容就是要打包的第三方库的名称，不要写全路径，Webpack 会自动去 node_modules 中找到的。\n#### 提取公共代码\n在 webpack.base.conf.js的 plugins 属性中添加如下插件对象\n`new webpack.optimize.SplitChunksPlugin()`\n#### 打包时压缩js和css\n下载optimize-css-assets-webpack-plugin和uglifyjs-webpack-plugin\n\n`npm i uglifyjs-webpack-plugin uglifyjs-webpack-plugin optimize-css-assets-webpack-plugin -D`\n\n在webpack.prod.conf.js中分别引入optimize-css-assets-webpack-plugin和uglifyjs-webpack-plugin并增加optimization\n```\n//webpack.prod.conf.js\nvar OptimizeCSSAssetsPlugin = require(\"optimize-css-assets-webpack-plugin\");\nvar UglifyJsPlugin = require(\"uglifyjs-webpack-plugin\");\n// 省略部分代码\noptimization: {\n        minimizer: [\n        // 压缩JS\n        new UglifyJsPlugin({\n        uglifyOptions: {\n            compress: {\n            warnings: false, // 去除警告\n            drop_debugger: true, // 去除debugger\n            drop_console: true // 去除console.log\n            },\n        },\n        cache: true, // 开启缓存\n        parallel: true, // 平行压缩\n        sourceMap: false // set to true if you want JS source maps\n        }),\n        // 压缩css\n        new OptimizeCSSAssetsPlugin({})\n    ]\n},\n\n```\n#### css自动加前缀\n下载postcss-loader 和autoprefixer\n`npm i postcss-loader autoprefixer -D`\n分别在webpack.dev.conf.js和webpack.prod.conf.js的use中添加postcss-loader\n在module中的rules中的use中追加：\n```\nuse: [\n    'postcss-loader'\n]\n```\n在项目下增加postcss.config.js\n```\n// 配置cssz加前缀\nmodule.exports = {\n  plugins: [\n    require('autoprefixer')\n  ]\n}\n```\n差不多就这样了,对了，还有一点就是打包出来的html里面引用`/dll/vendor.js`需要手动改成`./dll/vendor.js`这个下次也要优化下，我记得vue-cli 2版本中有一个地方是可以配置的","slug":"webpack4从头构建一个简单的vue2项目","published":1,"updated":"2020-04-30T07:58:25.396Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0ocrv7000e40m0wc9bjmw5","content":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>vue早就有成熟的vue-cli工具了，现在是vue-cli 3.0了，但是觉得很有必要自己去实现一下，有助于自己技术的提高，也能更好地去了解webpack。本人是webpack菜鸟，有些资料是网上学习整理过来的。</p>\n<h3 id=\"1-新建目录文件夹\"><a href=\"#1-新建目录文件夹\" class=\"headerlink\" title=\"1.新建目录文件夹\"></a>1.新建目录文件夹</h3><p>第一步当然是新建工程目录了，具体怎么建就随便了，比如我建立webpackVue这个目录</p>\n<h3 id=\"2-新建package-json文件\"><a href=\"#2-新建package-json文件\" class=\"headerlink\" title=\"2.新建package.json文件\"></a>2.新建package.json文件</h3><p>package.json是nodejs项目必需的配置文件。使用<code>npm init</code>,按照提示一步步填写项目名称，作者等信息</p>\n<h3 id=\"3-webpack配置\"><a href=\"#3-webpack配置\" class=\"headerlink\" title=\"3.webpack配置\"></a>3.webpack配置</h3><p>新建build文件夹<br>build目录下新建webpack.base.conf.js,webpack.dev.conf.js,webpack.prod.conf.js文件，webpack.base.conf.js是公共基础配置，webpack.dev.conf.js是生产环境配置文件，webpack.prod.conf.js是生产环境配置。<br>创建一个src目录，用来存放我们的项目源文件，然后创建main.js文件，创建一个index.html<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width, initial-scale=1.0\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"X-UA-Compatible\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"ie=edge\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>webpack4搭建vue<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p><img src=\"1.jpg\" alt> 目录结构是这样的</p>\n<p>下载webpack webpack-dev-server webpack-cli (这里webpack是局部安装)<br><code>npm i webpack webpack-dev-server webpack-cli -D</code><br>打开webpack.base.config.js，逐步添加配置<br><figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> webpack = <span class=\"built_in\">require</span>(<span class=\"string\">'webpack'</span>);</span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports =&#123;</span><br><span class=\"line\">    <span class=\"comment\">//入口文件</span></span><br><span class=\"line\">    entry:&#123;</span><br><span class=\"line\">        main: path.resolve(__dirname, <span class=\"string\">'../src/main.js'</span>)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">//输出目录</span></span><br><span class=\"line\">    output:&#123;</span><br><span class=\"line\">        path: path.resolve(__dirname, <span class=\"string\">'../dist'</span>),</span><br><span class=\"line\">        filename: <span class=\"string\">'[name].[hash].js'</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"keyword\">module</span>:&#123;</span><br><span class=\"line\">        rules:[]</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    plugins:[</span><br><span class=\"line\">        <span class=\"keyword\">new</span> webpack.HashedModuleIdsPlugin(), <span class=\"comment\">// 解决vender后面的hash每次都改变</span></span><br><span class=\"line\">    ],</span><br><span class=\"line\">    resolve:&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"4-配置loader\"><a href=\"#4-配置loader\" class=\"headerlink\" title=\"4.配置loader\"></a>4.配置loader</h3><p>配置babel编译代码：下载babel-loader，babel-core，babel-preset-dev。<br><code>npm i babel-loader babel-core babel-preset-env -D</code></p>\n<p>babel-preset-env 帮助我们配置 babel。我们只需要告诉它我们要兼容的情况（目标运行环境），它就会自动把代码转换为兼容对应环境的代码。<br>babel-core是作为babel的核心存在，babel的核心api都在这个模块里面<br>这里有个注意的地方，就是babel的版本的问题，运行的时候根据提示安装合适的版本就好了，这里不记得是babel的哪个工具需要7的版本了。<br>在webpack.base.conf.js文件中增加babel配置<br><figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rules:[</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        test: <span class=\"regexp\">/\\.js$/</span>, <span class=\"comment\">//匹配.js结尾的文件</span></span><br><span class=\"line\">        use: [<span class=\"string\">'babel-loader'</span>],</span><br><span class=\"line\">        <span class=\"keyword\">exclude</span>:<span class=\"regexp\">/node_modules/</span> <span class=\"comment\">//排除node_modules里面的js</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure></p>\n<p>新建.babelrc文件，.babelrc是babel全局配置文件<br><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">\"presets\"</span>:[</span><br><span class=\"line\">        [<span class=\"string\">\"env\"</span>,&#123;</span><br><span class=\"line\">            <span class=\"attr\">\"targets\"</span>: &#123;    </span><br><span class=\"line\">                <span class=\"attr\">\"browsers\"</span>: [<span class=\"string\">\"&gt; 1%\"</span>, <span class=\"string\">\"last 2 versions\"</span>, <span class=\"string\">\"not ie &lt;=8\"</span>],</span><br><span class=\"line\">                <span class=\"comment\">//\"chrome\": 52,</span></span><br><span class=\"line\">                <span class=\"comment\">//\"browsers\": [\"last 2 versions\", \"safari 7\"]</span></span><br><span class=\"line\">            &#125;,       </span><br><span class=\"line\">            <span class=\"attr\">\"modules\"</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">        &#125;]</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"下载file-loader\"><a href=\"#下载file-loader\" class=\"headerlink\" title=\"下载file-loader\"></a>下载file-loader</h4><p><code>npm i file-loader -D</code><br>继续追加配置<br><figure class=\"highlight coq\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rules:[</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        test: /\\.(jpg|<span class=\"type\">png</span>|<span class=\"type\">svg</span>|<span class=\"type\">gif</span>)$/,</span><br><span class=\"line\">        use:['file-loader']</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        test:/\\.(woff|<span class=\"type\">woff2</span>|<span class=\"type\">eot</span>|<span class=\"type\">ttf</span>|<span class=\"type\">otf</span>)$/</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"下载css-loader，vue-style-loader，sass-loader，-node-sass，less，less-loader并配置css，scss，sass-less\"><a href=\"#下载css-loader，vue-style-loader，sass-loader，-node-sass，less，less-loader并配置css，scss，sass-less\" class=\"headerlink\" title=\"下载css-loader，vue-style-loader，sass-loader， node-sass，less，less-loader并配置css，scss，sass,less\"></a>下载css-loader，vue-style-loader，sass-loader， node-sass，less，less-loader并配置css，scss，sass,less</h4><p><code>npm i css-loader vue-style-loader sass-loader node-sass less-loader less -D</code><br><figure class=\"highlight sml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rules:[</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        test:/\\.(sa|sc|c)ss$/,</span><br><span class=\"line\">        use:[</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                loader: <span class=\"symbol\">'vue</span>-style-loader'</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            <span class=\"symbol\">'css</span>-loader',</span><br><span class=\"line\">            <span class=\"symbol\">'sass</span>-loader'</span><br><span class=\"line\">        ]</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        test:/\\.less$/,</span><br><span class=\"line\">        use:[</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                loader: <span class=\"symbol\">'vue</span>-style-loader'</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            <span class=\"symbol\">'css</span>-loader',</span><br><span class=\"line\">            <span class=\"symbol\">'sass</span>-loader'</span><br><span class=\"line\">        ]</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"5-处理html文件\"><a href=\"#5-处理html文件\" class=\"headerlink\" title=\"5.处理html文件\"></a>5.处理html文件</h3><p>下载html-webpack-plugin<br><code>npm i html-webpack-plugin -D</code><br><figure class=\"highlight haxe\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> HtmlWebpackPlugin = require(<span class=\"string\">'html-webpack-plugin'</span>); <span class=\"comment\">//在base配置文件头部引入</span></span><br><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"type\">HtmlWebpackPlugin</span>(&#123;</span><br><span class=\"line\">    template: <span class=\"type\">path</span>.resolve(__dirname, <span class=\"string\">'../index.html'</span>)</span><br><span class=\"line\">&#125;),</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"6-解析模块的配置和配置别名\"><a href=\"#6-解析模块的配置和配置别名\" class=\"headerlink\" title=\"6.解析模块的配置和配置别名\"></a>6.解析模块的配置和配置别名</h3><figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">resolve</span>: &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 能够使用户在引入模块时不带扩展</span></span><br><span class=\"line\">    <span class=\"attribute\">extensions</span>: [<span class=\"string\">'.js'</span>, <span class=\"string\">'.json'</span>, <span class=\"string\">'.vue'</span>, <span class=\"string\">'css'</span>],</span><br><span class=\"line\">    <span class=\"comment\">//别名</span></span><br><span class=\"line\">    <span class=\"attribute\">alias</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">'vue$'</span>:<span class=\"string\">'vue/dist/vue.esm.js'</span>,</span><br><span class=\"line\">        <span class=\"string\">'@'</span>: path.resolve(__dirname, <span class=\"string\">'../src'</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"7-配置webpack-dev-conf-js文件\"><a href=\"#7-配置webpack-dev-conf-js文件\" class=\"headerlink\" title=\"7.配置webpack.dev.conf.js文件\"></a>7.配置webpack.dev.conf.js文件</h3><p>下载 webpack-merge，用于合并配置<br><code>npm i webpack-merge -D</code><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> merge = <span class=\"built_in\">require</span>(<span class=\"string\">'webpack-merge'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> baseConfig = <span class=\"built_in\">require</span>(<span class=\"string\">'./webpack.base.conf'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> webpack = <span class=\"built_in\">require</span>(<span class=\"string\">'webpack'</span>);</span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = merge(baseConfig, &#123;</span><br><span class=\"line\">    devtool: <span class=\"string\">'inline-source-map'</span>, <span class=\"comment\">// 压缩方式</span></span><br><span class=\"line\">    mode: <span class=\"string\">'development'</span>,</span><br><span class=\"line\">    devServer: &#123;</span><br><span class=\"line\">        hot: <span class=\"literal\">true</span>, <span class=\"comment\">// 热更新</span></span><br><span class=\"line\">        open: <span class=\"literal\">true</span>, <span class=\"comment\">// 自动打开页面</span></span><br><span class=\"line\">        contentBase: path.resolve(__dirname, <span class=\"string\">'../src'</span>), <span class=\"comment\">// 告诉服务从哪提供内容</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    plugins: [</span><br><span class=\"line\">        <span class=\"keyword\">new</span> webpack.HotModuleReplacementPlugin(), <span class=\"comment\">//开启热更新</span></span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"8-配置webpack-prod-conf-js\"><a href=\"#8-配置webpack-prod-conf-js\" class=\"headerlink\" title=\"8.配置webpack.prod.conf.js\"></a>8.配置webpack.prod.conf.js</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> merge = <span class=\"built_in\">require</span>(<span class=\"string\">'webpack-merge'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> baseConfig = <span class=\"built_in\">require</span>(<span class=\"string\">'./webpack.base.conf'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> webpack = <span class=\"built_in\">require</span>(<span class=\"string\">'webpack'</span>);</span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = merge(baseConfig, &#123;</span><br><span class=\"line\">    devtool: <span class=\"string\">'source-map'</span>, <span class=\"comment\">// 压缩方式</span></span><br><span class=\"line\">    mode: <span class=\"string\">'production'</span>,</span><br><span class=\"line\">    plugins: [</span><br><span class=\"line\"></span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h3 id=\"9-配置vue-loader\"><a href=\"#9-配置vue-loader\" class=\"headerlink\" title=\"9.配置vue-loader\"></a>9.配置vue-loader</h3><p>首先要下载vue，以及vue相关的模块<br><code>npm i vue vue-loader vue-template-compiler -D</code><br>继续完善webpack.base.cond.js<br><figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var VueLoaderPlugin=require(<span class=\"string\">'vue-loader/lib/plugin'</span>);</span><br><span class=\"line\"><span class=\"comment\">//省略部分代码...</span></span><br><span class=\"line\"><span class=\"string\">rules:</span>[</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\"><span class=\"symbol\">        test:</span> <span class=\"regexp\">/\\.vue$/</span>,</span><br><span class=\"line\"><span class=\"symbol\">        use:</span> [<span class=\"string\">'vue-loader'</span>],</span><br><span class=\"line\"><span class=\"symbol\">        exclude:</span> <span class=\"regexp\">/node_modules/</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">]</span><br><span class=\"line\"><span class=\"comment\">//省略部分代码...</span></span><br><span class=\"line\"><span class=\"string\">plugins:</span>[</span><br><span class=\"line\">    <span class=\"keyword\">new</span> VueLoaderPlugin(), <span class=\"comment\">// 它的职责是将你定义过的其它规则复制并应用到 .vue 文件里相应语言的块</span></span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure></p>\n<p>在src目录新建app.vue文件和main.js文件<br><figure class=\"highlight django\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"xml\">//app.vue</span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><span class=\"template-variable\">&#123;&#123;str&#125;&#125;</span><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">  export default &#123;</span></span><br><span class=\"line\"><span class=\"xml\">    name: 'App',</span></span><br><span class=\"line\"><span class=\"xml\">    data () &#123;</span></span><br><span class=\"line\"><span class=\"xml\">      return &#123;</span></span><br><span class=\"line\"><span class=\"xml\">        str: '欢迎来到自定义webpack4+vue构建'</span></span><br><span class=\"line\"><span class=\"xml\">      &#125;</span></span><br><span class=\"line\"><span class=\"xml\">    &#125;</span></span><br><span class=\"line\"><span class=\"xml\">  &#125;</span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"scss\"</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">  div &#123;</span></span><br><span class=\"line\"><span class=\"xml\">    color: red;</span></span><br><span class=\"line\"><span class=\"xml\">  &#125;</span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight coffeescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//main.js</span><br><span class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> App <span class=\"keyword\">from</span> <span class=\"string\">'./App'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">    el: <span class=\"string\">\"#app\"</span>,</span><br><span class=\"line\">    render: <span class=\"function\"><span class=\"params\">(h)</span> =&gt;</span> h(App)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h3 id=\"10-配置命令\"><a href=\"#10-配置命令\" class=\"headerlink\" title=\"10.配置命令\"></a>10.配置命令</h3><p>打开package.json文件，并配置开发和打包命令<br><figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 省略代码。。。</span></span><br><span class=\"line\"><span class=\"string\">\"scripts\"</span>: &#123;</span><br><span class=\"line\">  <span class=\"string\">\"dev\"</span>: <span class=\"string\">\"webpack-dev-server  --progress --config build/webpack.dev.conf.js\"</span>,</span><br><span class=\"line\">   <span class=\"string\">\"build\"</span>: <span class=\"string\">\"webpack --config build/webpack.prod.conf.js\"</span></span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure></p>\n<p><code>npm run dev</code> 就可以启动项目了<br><img src=\"2.png\" alt></p>\n<h2 id=\"继续优化…\"><a href=\"#继续优化…\" class=\"headerlink\" title=\"继续优化…\"></a>继续优化…</h2><h3 id=\"11-区分环境引入不同地址\"><a href=\"#11-区分环境引入不同地址\" class=\"headerlink\" title=\"11. 区分环境引入不同地址\"></a>11. 区分环境引入不同地址</h3><p>新建config文件夹并新建dev.env.js和prod.env.js<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//dev.env.js 开发环境配置</span></span><br><span class=\"line\"><span class=\"meta\">'use strict'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">    NODE_ENV: <span class=\"string\">\"development\"</span>,</span><br><span class=\"line\">    BASE_API: <span class=\"string\">\"http://1456\"</span>,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//prod.env.js 生产环境配置</span></span><br><span class=\"line\"><span class=\"meta\">'use strict'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">    NODE_ENV: <span class=\"string\">\"production\"</span>,    <span class=\"attr\">BASE_API</span>: <span class=\"string\">\"http://123.com\"</span>,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"12-优化webpack配置\"><a href=\"#12-优化webpack配置\" class=\"headerlink\" title=\"12.优化webpack配置\"></a>12.优化webpack配置</h3><p>解决更改文件打包时dist文件没有清除，再次打包。<br>下载clean-webpack-plugin，并配置webpack.prod.conf.js文件<br><code>npm i clean-webpack-plugin -D</code></p>\n<figure class=\"highlight haxe\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//webpack.prod.conf.js</span></span><br><span class=\"line\"><span class=\"comment\">// 引入clean-webpack-plugin</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> CleanWebpackPlugin = require(<span class=\"string\">'clean-webpack-plugin'</span>);</span><br><span class=\"line\"><span class=\"comment\">// 省略代码。。。。</span></span><br><span class=\"line\">plugins: <span class=\"type\"></span>[</span><br><span class=\"line\">    <span class=\"keyword\">new</span> <span class=\"type\">CleanWebPackPlugin</span>();</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<p>根据不同环境提取css<br>下载mini-css-extract-plugin，并配置webpack.prod.conf.js文件<br><code>npm i mini-css-extract-plugin -D</code><br><figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//webpack.prod.conf.js</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> MiniCssExtractPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">'mini-css-extract-plugin'</span>);</span><br><span class=\"line\"><span class=\"keyword\">module</span>: &#123;</span><br><span class=\"line\">    rules: [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            test: <span class=\"regexp\">/\\.(c|sc|sa)ss$/</span>,</span><br><span class=\"line\">            use: [</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                loader: MiniCssExtractPlugin.loader,</span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">                <span class=\"string\">'css-loader'</span>,</span><br><span class=\"line\">                <span class=\"string\">'sass-loader'</span></span><br><span class=\"line\">            ]</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">        test: <span class=\"regexp\">/\\.less$/</span>,</span><br><span class=\"line\">        use: [</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">            loader: MiniCssExtractPlugin.loader,</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            <span class=\"string\">'css-loader'</span>,</span><br><span class=\"line\">            <span class=\"string\">'less-loader'</span></span><br><span class=\"line\">            ]</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">plugins: [</span><br><span class=\"line\">    <span class=\"keyword\">new</span> MiniCssExtractPlugin(&#123;</span><br><span class=\"line\">        filename: <span class=\"string\">'[name].[hash].css'</span></span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure></p>\n<font color=\"red\">webpack.base.conf.js中删除使用vue-style-loader的代码，并在webpack.dev.conf.js中定义</font>\n\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">module</span>: &#123;</span></span><br><span class=\"line\">    <span class=\"symbol\">rules:</span> [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"symbol\">test:</span> /\\.(c<span class=\"params\">|sc|</span>sa)ss$/,</span><br><span class=\"line\">        <span class=\"symbol\">use:</span> [</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            <span class=\"symbol\">loader:</span> <span class=\"string\">'vue-style-loader'</span>,</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          <span class=\"string\">'css-loader'</span>,</span><br><span class=\"line\">          <span class=\"string\">'sass-loader'</span></span><br><span class=\"line\">        ]</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"symbol\">test:</span> /\\.less$/,</span><br><span class=\"line\">        <span class=\"symbol\">use:</span> [</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            <span class=\"symbol\">loader:</span> <span class=\"string\">'vue-style-loader'</span>,</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          <span class=\"string\">'css-loader'</span>,</span><br><span class=\"line\">          <span class=\"string\">'less-loader'</span></span><br><span class=\"line\">         ]</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">/<span class=\"regexp\">/以上这段webpack.base.conf.js中的代码移到webpack.dev.conf.js中</span></span><br></pre></td></tr></table></figure>\n<p><a href=\"https://link.juejin.im?target=https%3A%2F%2Fvue-loader.vuejs.org%2Fzh%2Fguide%2Fextract-css.html%23webpack-4\" target=\"_blank\" rel=\"noopener\">这个配置vue-loader中有提到</a></p>\n<h4 id=\"第三方库单独打包\"><a href=\"#第三方库单独打包\" class=\"headerlink\" title=\"第三方库单独打包\"></a>第三方库单独打包</h4><p>把依赖的第三方库抽取出来单独打包，加快打包进度<br>下载autodll-webpack-plugin<br><code>npm i autodll-webpack-plugin -D</code></p>\n<p>在webpack.base.conf.js中配置<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//webpack.base.conf.js</span></span><br><span class=\"line\"><span class=\"comment\">//省略部分代码</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> AutodllWebpackpackPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">'autodll-webpack-plugin'</span>);</span><br><span class=\"line\">plugins: [</span><br><span class=\"line\">    <span class=\"keyword\">new</span> AutodllWebpackpackPlugin (&#123;</span><br><span class=\"line\">        inject: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"keyword\">debugger</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        filename: <span class=\"string\">'[name].js'</span>,</span><br><span class=\"line\">        path: <span class=\"string\">'./dll'</span>,</span><br><span class=\"line\">        entry: &#123;</span><br><span class=\"line\">            vendor: [<span class=\"string\">'vue'</span>]</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure></p>\n<p>tips: inject 为 true，插件会自动把打包出来的第三方库文件插入到 HTML。filename 是打包后文件的名称。path 是打包后的路径。entry 是入口，vendor 是你指定的名称，数组内容就是要打包的第三方库的名称，不要写全路径，Webpack 会自动去 node_modules 中找到的。</p>\n<h4 id=\"提取公共代码\"><a href=\"#提取公共代码\" class=\"headerlink\" title=\"提取公共代码\"></a>提取公共代码</h4><p>在 webpack.base.conf.js的 plugins 属性中添加如下插件对象<br><code>new webpack.optimize.SplitChunksPlugin()</code></p>\n<h4 id=\"打包时压缩js和css\"><a href=\"#打包时压缩js和css\" class=\"headerlink\" title=\"打包时压缩js和css\"></a>打包时压缩js和css</h4><p>下载optimize-css-assets-webpack-plugin和uglifyjs-webpack-plugin</p>\n<p><code>npm i uglifyjs-webpack-plugin uglifyjs-webpack-plugin optimize-css-assets-webpack-plugin -D</code></p>\n<p>在webpack.prod.conf.js中分别引入optimize-css-assets-webpack-plugin和uglifyjs-webpack-plugin并增加optimization<br><figure class=\"highlight lasso\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//webpack.prod.conf.js</span></span><br><span class=\"line\"><span class=\"built_in\">var</span> OptimizeCSSAssetsPlugin = <span class=\"keyword\">require</span>(<span class=\"string\">\"optimize-css-assets-webpack-plugin\"</span>);</span><br><span class=\"line\"><span class=\"built_in\">var</span> UglifyJsPlugin = <span class=\"keyword\">require</span>(<span class=\"string\">\"uglifyjs-webpack-plugin\"</span>);</span><br><span class=\"line\"><span class=\"comment\">// 省略部分代码</span></span><br><span class=\"line\">optimization: &#123;</span><br><span class=\"line\">        minimizer: <span class=\"meta\">[</span></span><br><span class=\"line\">        <span class=\"comment\">// 压缩JS</span></span><br><span class=\"line\">        <span class=\"literal\">new</span> UglifyJsPlugin(&#123;</span><br><span class=\"line\">        uglifyOptions: &#123;</span><br><span class=\"line\">            compress: &#123;</span><br><span class=\"line\">            warnings: <span class=\"literal\">false</span>, <span class=\"comment\">// 去除警告</span></span><br><span class=\"line\">            drop_debugger: <span class=\"literal\">true</span>, <span class=\"comment\">// 去除debugger</span></span><br><span class=\"line\">            drop_console: <span class=\"literal\">true</span> <span class=\"comment\">// 去除console.log</span></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"keyword\">cache</span>: <span class=\"literal\">true</span>, <span class=\"comment\">// 开启缓存</span></span><br><span class=\"line\">        parallel: <span class=\"literal\">true</span>, <span class=\"comment\">// 平行压缩</span></span><br><span class=\"line\">        sourceMap: <span class=\"literal\">false</span> <span class=\"comment\">// set to true if you want JS source maps</span></span><br><span class=\"line\">        &#125;),</span><br><span class=\"line\">        <span class=\"comment\">// 压缩css</span></span><br><span class=\"line\">        <span class=\"literal\">new</span> OptimizeCSSAssetsPlugin(&#123;&#125;)</span><br><span class=\"line\">    <span class=\"meta\">]</span></span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"css自动加前缀\"><a href=\"#css自动加前缀\" class=\"headerlink\" title=\"css自动加前缀\"></a>css自动加前缀</h4><p>下载postcss-loader 和autoprefixer<br><code>npm i postcss-loader autoprefixer -D</code><br>分别在webpack.dev.conf.js和webpack.prod.conf.js的use中添加postcss-loader<br>在module中的rules中的use中追加：<br><figure class=\"highlight actionscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">use</span>: [</span><br><span class=\"line\">    <span class=\"string\">'postcss-loader'</span></span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure></p>\n<p>在项目下增加postcss.config.js<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 配置cssz加前缀</span></span><br><span class=\"line\"><span class=\"keyword\">module</span>.<span class=\"keyword\">exports</span> = &#123;</span><br><span class=\"line\">  plugins: [</span><br><span class=\"line\">    require(<span class=\"string\">'autoprefixer'</span>)</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>差不多就这样了,对了，还有一点就是打包出来的html里面引用<code>/dll/vendor.js</code>需要手动改成<code>./dll/vendor.js</code>这个下次也要优化下，我记得vue-cli 2版本中有一个地方是可以配置的</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>vue早就有成熟的vue-cli工具了，现在是vue-cli 3.0了，但是觉得很有必要自己去实现一下，有助于自己技术的提高，也能更好地去了解webpack。本人是webpack菜鸟，有些资料是网上学习整理过来的。</p>\n<h3 id=\"1-新建目录文件夹\"><a href=\"#1-新建目录文件夹\" class=\"headerlink\" title=\"1.新建目录文件夹\"></a>1.新建目录文件夹</h3><p>第一步当然是新建工程目录了，具体怎么建就随便了，比如我建立webpackVue这个目录</p>\n<h3 id=\"2-新建package-json文件\"><a href=\"#2-新建package-json文件\" class=\"headerlink\" title=\"2.新建package.json文件\"></a>2.新建package.json文件</h3><p>package.json是nodejs项目必需的配置文件。使用<code>npm init</code>,按照提示一步步填写项目名称，作者等信息</p>\n<h3 id=\"3-webpack配置\"><a href=\"#3-webpack配置\" class=\"headerlink\" title=\"3.webpack配置\"></a>3.webpack配置</h3><p>新建build文件夹<br>build目录下新建webpack.base.conf.js,webpack.dev.conf.js,webpack.prod.conf.js文件，webpack.base.conf.js是公共基础配置，webpack.dev.conf.js是生产环境配置文件，webpack.prod.conf.js是生产环境配置。<br>创建一个src目录，用来存放我们的项目源文件，然后创建main.js文件，创建一个index.html<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width, initial-scale=1.0\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"X-UA-Compatible\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"ie=edge\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>webpack4搭建vue<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p><img src=\"1.jpg\" alt> 目录结构是这样的</p>\n<p>下载webpack webpack-dev-server webpack-cli (这里webpack是局部安装)<br><code>npm i webpack webpack-dev-server webpack-cli -D</code><br>打开webpack.base.config.js，逐步添加配置<br><figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> webpack = <span class=\"built_in\">require</span>(<span class=\"string\">'webpack'</span>);</span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports =&#123;</span><br><span class=\"line\">    <span class=\"comment\">//入口文件</span></span><br><span class=\"line\">    entry:&#123;</span><br><span class=\"line\">        main: path.resolve(__dirname, <span class=\"string\">'../src/main.js'</span>)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">//输出目录</span></span><br><span class=\"line\">    output:&#123;</span><br><span class=\"line\">        path: path.resolve(__dirname, <span class=\"string\">'../dist'</span>),</span><br><span class=\"line\">        filename: <span class=\"string\">'[name].[hash].js'</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"keyword\">module</span>:&#123;</span><br><span class=\"line\">        rules:[]</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    plugins:[</span><br><span class=\"line\">        <span class=\"keyword\">new</span> webpack.HashedModuleIdsPlugin(), <span class=\"comment\">// 解决vender后面的hash每次都改变</span></span><br><span class=\"line\">    ],</span><br><span class=\"line\">    resolve:&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"4-配置loader\"><a href=\"#4-配置loader\" class=\"headerlink\" title=\"4.配置loader\"></a>4.配置loader</h3><p>配置babel编译代码：下载babel-loader，babel-core，babel-preset-dev。<br><code>npm i babel-loader babel-core babel-preset-env -D</code></p>\n<p>babel-preset-env 帮助我们配置 babel。我们只需要告诉它我们要兼容的情况（目标运行环境），它就会自动把代码转换为兼容对应环境的代码。<br>babel-core是作为babel的核心存在，babel的核心api都在这个模块里面<br>这里有个注意的地方，就是babel的版本的问题，运行的时候根据提示安装合适的版本就好了，这里不记得是babel的哪个工具需要7的版本了。<br>在webpack.base.conf.js文件中增加babel配置<br><figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rules:[</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        test: <span class=\"regexp\">/\\.js$/</span>, <span class=\"comment\">//匹配.js结尾的文件</span></span><br><span class=\"line\">        use: [<span class=\"string\">'babel-loader'</span>],</span><br><span class=\"line\">        <span class=\"keyword\">exclude</span>:<span class=\"regexp\">/node_modules/</span> <span class=\"comment\">//排除node_modules里面的js</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure></p>\n<p>新建.babelrc文件，.babelrc是babel全局配置文件<br><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">\"presets\"</span>:[</span><br><span class=\"line\">        [<span class=\"string\">\"env\"</span>,&#123;</span><br><span class=\"line\">            <span class=\"attr\">\"targets\"</span>: &#123;    </span><br><span class=\"line\">                <span class=\"attr\">\"browsers\"</span>: [<span class=\"string\">\"&gt; 1%\"</span>, <span class=\"string\">\"last 2 versions\"</span>, <span class=\"string\">\"not ie &lt;=8\"</span>],</span><br><span class=\"line\">                <span class=\"comment\">//\"chrome\": 52,</span></span><br><span class=\"line\">                <span class=\"comment\">//\"browsers\": [\"last 2 versions\", \"safari 7\"]</span></span><br><span class=\"line\">            &#125;,       </span><br><span class=\"line\">            <span class=\"attr\">\"modules\"</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">        &#125;]</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"下载file-loader\"><a href=\"#下载file-loader\" class=\"headerlink\" title=\"下载file-loader\"></a>下载file-loader</h4><p><code>npm i file-loader -D</code><br>继续追加配置<br><figure class=\"highlight coq\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rules:[</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        test: /\\.(jpg|<span class=\"type\">png</span>|<span class=\"type\">svg</span>|<span class=\"type\">gif</span>)$/,</span><br><span class=\"line\">        use:['file-loader']</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        test:/\\.(woff|<span class=\"type\">woff2</span>|<span class=\"type\">eot</span>|<span class=\"type\">ttf</span>|<span class=\"type\">otf</span>)$/</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"下载css-loader，vue-style-loader，sass-loader，-node-sass，less，less-loader并配置css，scss，sass-less\"><a href=\"#下载css-loader，vue-style-loader，sass-loader，-node-sass，less，less-loader并配置css，scss，sass-less\" class=\"headerlink\" title=\"下载css-loader，vue-style-loader，sass-loader， node-sass，less，less-loader并配置css，scss，sass,less\"></a>下载css-loader，vue-style-loader，sass-loader， node-sass，less，less-loader并配置css，scss，sass,less</h4><p><code>npm i css-loader vue-style-loader sass-loader node-sass less-loader less -D</code><br><figure class=\"highlight sml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rules:[</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        test:/\\.(sa|sc|c)ss$/,</span><br><span class=\"line\">        use:[</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                loader: <span class=\"symbol\">'vue</span>-style-loader'</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            <span class=\"symbol\">'css</span>-loader',</span><br><span class=\"line\">            <span class=\"symbol\">'sass</span>-loader'</span><br><span class=\"line\">        ]</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        test:/\\.less$/,</span><br><span class=\"line\">        use:[</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                loader: <span class=\"symbol\">'vue</span>-style-loader'</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            <span class=\"symbol\">'css</span>-loader',</span><br><span class=\"line\">            <span class=\"symbol\">'sass</span>-loader'</span><br><span class=\"line\">        ]</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"5-处理html文件\"><a href=\"#5-处理html文件\" class=\"headerlink\" title=\"5.处理html文件\"></a>5.处理html文件</h3><p>下载html-webpack-plugin<br><code>npm i html-webpack-plugin -D</code><br><figure class=\"highlight haxe\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> HtmlWebpackPlugin = require(<span class=\"string\">'html-webpack-plugin'</span>); <span class=\"comment\">//在base配置文件头部引入</span></span><br><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"type\">HtmlWebpackPlugin</span>(&#123;</span><br><span class=\"line\">    template: <span class=\"type\">path</span>.resolve(__dirname, <span class=\"string\">'../index.html'</span>)</span><br><span class=\"line\">&#125;),</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"6-解析模块的配置和配置别名\"><a href=\"#6-解析模块的配置和配置别名\" class=\"headerlink\" title=\"6.解析模块的配置和配置别名\"></a>6.解析模块的配置和配置别名</h3><figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">resolve</span>: &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 能够使用户在引入模块时不带扩展</span></span><br><span class=\"line\">    <span class=\"attribute\">extensions</span>: [<span class=\"string\">'.js'</span>, <span class=\"string\">'.json'</span>, <span class=\"string\">'.vue'</span>, <span class=\"string\">'css'</span>],</span><br><span class=\"line\">    <span class=\"comment\">//别名</span></span><br><span class=\"line\">    <span class=\"attribute\">alias</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">'vue$'</span>:<span class=\"string\">'vue/dist/vue.esm.js'</span>,</span><br><span class=\"line\">        <span class=\"string\">'@'</span>: path.resolve(__dirname, <span class=\"string\">'../src'</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"7-配置webpack-dev-conf-js文件\"><a href=\"#7-配置webpack-dev-conf-js文件\" class=\"headerlink\" title=\"7.配置webpack.dev.conf.js文件\"></a>7.配置webpack.dev.conf.js文件</h3><p>下载 webpack-merge，用于合并配置<br><code>npm i webpack-merge -D</code><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> merge = <span class=\"built_in\">require</span>(<span class=\"string\">'webpack-merge'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> baseConfig = <span class=\"built_in\">require</span>(<span class=\"string\">'./webpack.base.conf'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> webpack = <span class=\"built_in\">require</span>(<span class=\"string\">'webpack'</span>);</span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = merge(baseConfig, &#123;</span><br><span class=\"line\">    devtool: <span class=\"string\">'inline-source-map'</span>, <span class=\"comment\">// 压缩方式</span></span><br><span class=\"line\">    mode: <span class=\"string\">'development'</span>,</span><br><span class=\"line\">    devServer: &#123;</span><br><span class=\"line\">        hot: <span class=\"literal\">true</span>, <span class=\"comment\">// 热更新</span></span><br><span class=\"line\">        open: <span class=\"literal\">true</span>, <span class=\"comment\">// 自动打开页面</span></span><br><span class=\"line\">        contentBase: path.resolve(__dirname, <span class=\"string\">'../src'</span>), <span class=\"comment\">// 告诉服务从哪提供内容</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    plugins: [</span><br><span class=\"line\">        <span class=\"keyword\">new</span> webpack.HotModuleReplacementPlugin(), <span class=\"comment\">//开启热更新</span></span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"8-配置webpack-prod-conf-js\"><a href=\"#8-配置webpack-prod-conf-js\" class=\"headerlink\" title=\"8.配置webpack.prod.conf.js\"></a>8.配置webpack.prod.conf.js</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> merge = <span class=\"built_in\">require</span>(<span class=\"string\">'webpack-merge'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> baseConfig = <span class=\"built_in\">require</span>(<span class=\"string\">'./webpack.base.conf'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> webpack = <span class=\"built_in\">require</span>(<span class=\"string\">'webpack'</span>);</span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = merge(baseConfig, &#123;</span><br><span class=\"line\">    devtool: <span class=\"string\">'source-map'</span>, <span class=\"comment\">// 压缩方式</span></span><br><span class=\"line\">    mode: <span class=\"string\">'production'</span>,</span><br><span class=\"line\">    plugins: [</span><br><span class=\"line\"></span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h3 id=\"9-配置vue-loader\"><a href=\"#9-配置vue-loader\" class=\"headerlink\" title=\"9.配置vue-loader\"></a>9.配置vue-loader</h3><p>首先要下载vue，以及vue相关的模块<br><code>npm i vue vue-loader vue-template-compiler -D</code><br>继续完善webpack.base.cond.js<br><figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var VueLoaderPlugin=require(<span class=\"string\">'vue-loader/lib/plugin'</span>);</span><br><span class=\"line\"><span class=\"comment\">//省略部分代码...</span></span><br><span class=\"line\"><span class=\"string\">rules:</span>[</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\"><span class=\"symbol\">        test:</span> <span class=\"regexp\">/\\.vue$/</span>,</span><br><span class=\"line\"><span class=\"symbol\">        use:</span> [<span class=\"string\">'vue-loader'</span>],</span><br><span class=\"line\"><span class=\"symbol\">        exclude:</span> <span class=\"regexp\">/node_modules/</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">]</span><br><span class=\"line\"><span class=\"comment\">//省略部分代码...</span></span><br><span class=\"line\"><span class=\"string\">plugins:</span>[</span><br><span class=\"line\">    <span class=\"keyword\">new</span> VueLoaderPlugin(), <span class=\"comment\">// 它的职责是将你定义过的其它规则复制并应用到 .vue 文件里相应语言的块</span></span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure></p>\n<p>在src目录新建app.vue文件和main.js文件<br><figure class=\"highlight django\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"xml\">//app.vue</span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><span class=\"template-variable\">&#123;&#123;str&#125;&#125;</span><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">  export default &#123;</span></span><br><span class=\"line\"><span class=\"xml\">    name: 'App',</span></span><br><span class=\"line\"><span class=\"xml\">    data () &#123;</span></span><br><span class=\"line\"><span class=\"xml\">      return &#123;</span></span><br><span class=\"line\"><span class=\"xml\">        str: '欢迎来到自定义webpack4+vue构建'</span></span><br><span class=\"line\"><span class=\"xml\">      &#125;</span></span><br><span class=\"line\"><span class=\"xml\">    &#125;</span></span><br><span class=\"line\"><span class=\"xml\">  &#125;</span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"scss\"</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">  div &#123;</span></span><br><span class=\"line\"><span class=\"xml\">    color: red;</span></span><br><span class=\"line\"><span class=\"xml\">  &#125;</span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight coffeescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//main.js</span><br><span class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> App <span class=\"keyword\">from</span> <span class=\"string\">'./App'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">    el: <span class=\"string\">\"#app\"</span>,</span><br><span class=\"line\">    render: <span class=\"function\"><span class=\"params\">(h)</span> =&gt;</span> h(App)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h3 id=\"10-配置命令\"><a href=\"#10-配置命令\" class=\"headerlink\" title=\"10.配置命令\"></a>10.配置命令</h3><p>打开package.json文件，并配置开发和打包命令<br><figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 省略代码。。。</span></span><br><span class=\"line\"><span class=\"string\">\"scripts\"</span>: &#123;</span><br><span class=\"line\">  <span class=\"string\">\"dev\"</span>: <span class=\"string\">\"webpack-dev-server  --progress --config build/webpack.dev.conf.js\"</span>,</span><br><span class=\"line\">   <span class=\"string\">\"build\"</span>: <span class=\"string\">\"webpack --config build/webpack.prod.conf.js\"</span></span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure></p>\n<p><code>npm run dev</code> 就可以启动项目了<br><img src=\"2.png\" alt></p>\n<h2 id=\"继续优化…\"><a href=\"#继续优化…\" class=\"headerlink\" title=\"继续优化…\"></a>继续优化…</h2><h3 id=\"11-区分环境引入不同地址\"><a href=\"#11-区分环境引入不同地址\" class=\"headerlink\" title=\"11. 区分环境引入不同地址\"></a>11. 区分环境引入不同地址</h3><p>新建config文件夹并新建dev.env.js和prod.env.js<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//dev.env.js 开发环境配置</span></span><br><span class=\"line\"><span class=\"meta\">'use strict'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">    NODE_ENV: <span class=\"string\">\"development\"</span>,</span><br><span class=\"line\">    BASE_API: <span class=\"string\">\"http://1456\"</span>,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//prod.env.js 生产环境配置</span></span><br><span class=\"line\"><span class=\"meta\">'use strict'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">    NODE_ENV: <span class=\"string\">\"production\"</span>,    <span class=\"attr\">BASE_API</span>: <span class=\"string\">\"http://123.com\"</span>,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"12-优化webpack配置\"><a href=\"#12-优化webpack配置\" class=\"headerlink\" title=\"12.优化webpack配置\"></a>12.优化webpack配置</h3><p>解决更改文件打包时dist文件没有清除，再次打包。<br>下载clean-webpack-plugin，并配置webpack.prod.conf.js文件<br><code>npm i clean-webpack-plugin -D</code></p>\n<figure class=\"highlight haxe\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//webpack.prod.conf.js</span></span><br><span class=\"line\"><span class=\"comment\">// 引入clean-webpack-plugin</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> CleanWebpackPlugin = require(<span class=\"string\">'clean-webpack-plugin'</span>);</span><br><span class=\"line\"><span class=\"comment\">// 省略代码。。。。</span></span><br><span class=\"line\">plugins: <span class=\"type\"></span>[</span><br><span class=\"line\">    <span class=\"keyword\">new</span> <span class=\"type\">CleanWebPackPlugin</span>();</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<p>根据不同环境提取css<br>下载mini-css-extract-plugin，并配置webpack.prod.conf.js文件<br><code>npm i mini-css-extract-plugin -D</code><br><figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//webpack.prod.conf.js</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> MiniCssExtractPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">'mini-css-extract-plugin'</span>);</span><br><span class=\"line\"><span class=\"keyword\">module</span>: &#123;</span><br><span class=\"line\">    rules: [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            test: <span class=\"regexp\">/\\.(c|sc|sa)ss$/</span>,</span><br><span class=\"line\">            use: [</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                loader: MiniCssExtractPlugin.loader,</span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">                <span class=\"string\">'css-loader'</span>,</span><br><span class=\"line\">                <span class=\"string\">'sass-loader'</span></span><br><span class=\"line\">            ]</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">        test: <span class=\"regexp\">/\\.less$/</span>,</span><br><span class=\"line\">        use: [</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">            loader: MiniCssExtractPlugin.loader,</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            <span class=\"string\">'css-loader'</span>,</span><br><span class=\"line\">            <span class=\"string\">'less-loader'</span></span><br><span class=\"line\">            ]</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">plugins: [</span><br><span class=\"line\">    <span class=\"keyword\">new</span> MiniCssExtractPlugin(&#123;</span><br><span class=\"line\">        filename: <span class=\"string\">'[name].[hash].css'</span></span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure></p>\n<font color=\"red\">webpack.base.conf.js中删除使用vue-style-loader的代码，并在webpack.dev.conf.js中定义</font>\n\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">module</span>: &#123;</span></span><br><span class=\"line\">    <span class=\"symbol\">rules:</span> [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"symbol\">test:</span> /\\.(c<span class=\"params\">|sc|</span>sa)ss$/,</span><br><span class=\"line\">        <span class=\"symbol\">use:</span> [</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            <span class=\"symbol\">loader:</span> <span class=\"string\">'vue-style-loader'</span>,</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          <span class=\"string\">'css-loader'</span>,</span><br><span class=\"line\">          <span class=\"string\">'sass-loader'</span></span><br><span class=\"line\">        ]</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"symbol\">test:</span> /\\.less$/,</span><br><span class=\"line\">        <span class=\"symbol\">use:</span> [</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            <span class=\"symbol\">loader:</span> <span class=\"string\">'vue-style-loader'</span>,</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          <span class=\"string\">'css-loader'</span>,</span><br><span class=\"line\">          <span class=\"string\">'less-loader'</span></span><br><span class=\"line\">         ]</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">/<span class=\"regexp\">/以上这段webpack.base.conf.js中的代码移到webpack.dev.conf.js中</span></span><br></pre></td></tr></table></figure>\n<p><a href=\"https://link.juejin.im?target=https%3A%2F%2Fvue-loader.vuejs.org%2Fzh%2Fguide%2Fextract-css.html%23webpack-4\" target=\"_blank\" rel=\"noopener\">这个配置vue-loader中有提到</a></p>\n<h4 id=\"第三方库单独打包\"><a href=\"#第三方库单独打包\" class=\"headerlink\" title=\"第三方库单独打包\"></a>第三方库单独打包</h4><p>把依赖的第三方库抽取出来单独打包，加快打包进度<br>下载autodll-webpack-plugin<br><code>npm i autodll-webpack-plugin -D</code></p>\n<p>在webpack.base.conf.js中配置<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//webpack.base.conf.js</span></span><br><span class=\"line\"><span class=\"comment\">//省略部分代码</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> AutodllWebpackpackPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">'autodll-webpack-plugin'</span>);</span><br><span class=\"line\">plugins: [</span><br><span class=\"line\">    <span class=\"keyword\">new</span> AutodllWebpackpackPlugin (&#123;</span><br><span class=\"line\">        inject: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"keyword\">debugger</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        filename: <span class=\"string\">'[name].js'</span>,</span><br><span class=\"line\">        path: <span class=\"string\">'./dll'</span>,</span><br><span class=\"line\">        entry: &#123;</span><br><span class=\"line\">            vendor: [<span class=\"string\">'vue'</span>]</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure></p>\n<p>tips: inject 为 true，插件会自动把打包出来的第三方库文件插入到 HTML。filename 是打包后文件的名称。path 是打包后的路径。entry 是入口，vendor 是你指定的名称，数组内容就是要打包的第三方库的名称，不要写全路径，Webpack 会自动去 node_modules 中找到的。</p>\n<h4 id=\"提取公共代码\"><a href=\"#提取公共代码\" class=\"headerlink\" title=\"提取公共代码\"></a>提取公共代码</h4><p>在 webpack.base.conf.js的 plugins 属性中添加如下插件对象<br><code>new webpack.optimize.SplitChunksPlugin()</code></p>\n<h4 id=\"打包时压缩js和css\"><a href=\"#打包时压缩js和css\" class=\"headerlink\" title=\"打包时压缩js和css\"></a>打包时压缩js和css</h4><p>下载optimize-css-assets-webpack-plugin和uglifyjs-webpack-plugin</p>\n<p><code>npm i uglifyjs-webpack-plugin uglifyjs-webpack-plugin optimize-css-assets-webpack-plugin -D</code></p>\n<p>在webpack.prod.conf.js中分别引入optimize-css-assets-webpack-plugin和uglifyjs-webpack-plugin并增加optimization<br><figure class=\"highlight lasso\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//webpack.prod.conf.js</span></span><br><span class=\"line\"><span class=\"built_in\">var</span> OptimizeCSSAssetsPlugin = <span class=\"keyword\">require</span>(<span class=\"string\">\"optimize-css-assets-webpack-plugin\"</span>);</span><br><span class=\"line\"><span class=\"built_in\">var</span> UglifyJsPlugin = <span class=\"keyword\">require</span>(<span class=\"string\">\"uglifyjs-webpack-plugin\"</span>);</span><br><span class=\"line\"><span class=\"comment\">// 省略部分代码</span></span><br><span class=\"line\">optimization: &#123;</span><br><span class=\"line\">        minimizer: <span class=\"meta\">[</span></span><br><span class=\"line\">        <span class=\"comment\">// 压缩JS</span></span><br><span class=\"line\">        <span class=\"literal\">new</span> UglifyJsPlugin(&#123;</span><br><span class=\"line\">        uglifyOptions: &#123;</span><br><span class=\"line\">            compress: &#123;</span><br><span class=\"line\">            warnings: <span class=\"literal\">false</span>, <span class=\"comment\">// 去除警告</span></span><br><span class=\"line\">            drop_debugger: <span class=\"literal\">true</span>, <span class=\"comment\">// 去除debugger</span></span><br><span class=\"line\">            drop_console: <span class=\"literal\">true</span> <span class=\"comment\">// 去除console.log</span></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"keyword\">cache</span>: <span class=\"literal\">true</span>, <span class=\"comment\">// 开启缓存</span></span><br><span class=\"line\">        parallel: <span class=\"literal\">true</span>, <span class=\"comment\">// 平行压缩</span></span><br><span class=\"line\">        sourceMap: <span class=\"literal\">false</span> <span class=\"comment\">// set to true if you want JS source maps</span></span><br><span class=\"line\">        &#125;),</span><br><span class=\"line\">        <span class=\"comment\">// 压缩css</span></span><br><span class=\"line\">        <span class=\"literal\">new</span> OptimizeCSSAssetsPlugin(&#123;&#125;)</span><br><span class=\"line\">    <span class=\"meta\">]</span></span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"css自动加前缀\"><a href=\"#css自动加前缀\" class=\"headerlink\" title=\"css自动加前缀\"></a>css自动加前缀</h4><p>下载postcss-loader 和autoprefixer<br><code>npm i postcss-loader autoprefixer -D</code><br>分别在webpack.dev.conf.js和webpack.prod.conf.js的use中添加postcss-loader<br>在module中的rules中的use中追加：<br><figure class=\"highlight actionscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">use</span>: [</span><br><span class=\"line\">    <span class=\"string\">'postcss-loader'</span></span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure></p>\n<p>在项目下增加postcss.config.js<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 配置cssz加前缀</span></span><br><span class=\"line\"><span class=\"keyword\">module</span>.<span class=\"keyword\">exports</span> = &#123;</span><br><span class=\"line\">  plugins: [</span><br><span class=\"line\">    require(<span class=\"string\">'autoprefixer'</span>)</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>差不多就这样了,对了，还有一点就是打包出来的html里面引用<code>/dll/vendor.js</code>需要手动改成<code>./dll/vendor.js</code>这个下次也要优化下，我记得vue-cli 2版本中有一个地方是可以配置的</p>\n"},{"title":"windows下使用nexus搭建私有仓库并使用vue-cli 3 搭建组件库","abbrlink":"73a5b140","date":"2019-08-13T02:21:42.000Z","_content":"\n主要分为两部分：第一部分是nexus私有仓库的搭建，第二部分是vue-cli 3的组件搭建并发布到nexus本地仓库。\n## nexus私有仓库的搭建\n\n### 环境搭建\n1. 首先需要在[<font style=\"color:red\">官网</font>](https://www.sonatype.com/oss-thank-you-win64.zip?submissionGuid=2c6a43fc-9aa5-4acc-b995-87cb63b04d66)下载nexus windows版本（注意：需要翻墙，自备梯子）。\n2. 以管理员身份运行cmd（注意：必须是管理员运行且必须是cmd，win10的powershell都会报错），然后切换到`C:\\node\\nexus\\nexus-3.18.0-01-win64\\nexus-3.18.0-01\\bin` 软件下载后的解压目录。\n<font style=\"color:red\">nexus启动前，最好修改下`C:\\node\\nexus\\nexus-3.18.0-01-win64\\nexus-3.18.0-01\\bin\\nexus.vmoptions`的配置</font>，防止出现内存不足的报错导致无法启动，我这里修改为\n```\n-Xms600m\n-Xmx600m\n-XX:MaxDirectMemorySize=1G\n```\n默认都是约2G\n\n```\nnexus.exe /install #执行安装命令， 成功后会提示Installed service 'nexus\nnexus.exe /run #运行服务，首次运行需要等待1~2分钟\n```\n3. 启动完毕后,进入 http://(本机IP):8081（最好是自定义电脑ip），点击右上角Sign In进行登录，默认账号 admin\n默认密码存放在`C:\\node\\nexus\\nexus-3.18.0-01-win64\\sonatype-work\\nexus3\\**.password` 打开文件后复制密码串进行登录，\n登录后会提示修改密码，修改完重新登录即可。然后`**.password`文件就会自动删除。\n\n### 添加npm仓库\n\n点击左侧菜单Repositories 查看仓库列表\n![](1.png)\n* 点击Create repository按钮创建仓库\n* group表示分组 hosted表示本机私有 proxy表示远程代理（中央仓库）\n* 若registry配置为group（包括hosted和proxy）,首次会从hosted拉取，若无则从proxy拉取并缓存，下次则直接从缓存取\n\n1. 添加npm(proxy)仓库：\n选择npm(proxy)\n输入`Name: npmjs.org`\n`Remote storage: https://registry.npmjs.org`\n如图：\n![](2.png)\n\n2. 添加npm(hosted)仓库：\n选择npm(hosted)\n输入`Name：npm-hosted`用于存放自己发布的私有包\n如图：\n![](3.png)\n3. 添加npm(group)仓库：\n选择npm(group)\n输入`Name: npm-group`，并在Member repositories里选择之前添加的两个移到右边\n如图：\n![](4.png)\n\n### 配置与验证npm仓库\n添加发布角色用户及权限\n1. 添加权限认证 将npm Beared Token Realm 添加至右边\n如图：\n![](5.png)\n2. 创建nx-deploy角色并赋予一个nx-repository-view---*的权限码\n![](6.png)\n3. 创建deployer用户 同时设定角色为nx-deploy\n![](7.png)\n\n### 变更依赖源\n安装nrm `npm i -g nrm`\n\n```\nnpm config set registry https://registry.npm.taobao.org #设置为探宝源\nnrm add private http://192.168.38.64:8081/repository/npm-all/ #本机ip\nnrm use private #使用私有源\n```\n### 发布流程\n每次发布前记得在package.json中检查version 有没有修改，要确认比上一个版本号高\n### 编译文件\n`yarn lib`或者使用npm\n### 登录npm\n`npm login -registry http://192.168.38.64:8081/repository/npm-hosted/`\n### 发布\n`npm publish -registry http://192.168.38.64:8081/repository/npm-hosted/`\n发布成功后在npm-hosted 能看到发布后的包\n![](8.png)\n### 使用方式\n\n```\n\"dependencies\": {\n\"组件库名称\": \"版本号\"\n}\n\nimport 组件库名称 from '组件库名称'\nVue.use(组件库名称)\n```\n### 项目启动\n`yarn serve`或者使用npm\n### 组件库文件目录结构\n\n```\n├── examples                      # 示例展示  \n│   ├── api                       # 接口类  \n│   ├── assets                    # 资源文件夹  \n│   ├── common                    # 工具类  \n│   ├── components                # 项目内部组件  \n│   ├── page                      # 页面  \n│   ├── router                    # 路由配置  \n│   ├── style                     # 页面样式问题，主题等  \n│   ├── App.vue                   # 入口页面  \n│   ├── main.js                   # 入口文件 加载组件 初始化等  \n├── lib                           # 编译后输出的组件目录  \n├── packages                      # 公共组件目录    \n│   ├── query-drop-box            # demo组件  \n│   ├── simple-input              # demo组件  \n│   ├── index.js                  # 组件入口文件  \n├── public                        # 静态资源  \n│   │── favicon.ico               # favicon图标  \n│   └── index.html                # html模板  \n├── .gitignore                    # git 配置  \n├── .npmignore                    # npm 配置  \n├── vue.config.js                 # vue-cli 配置  \n├── babel.config.js               # babel 配置  \n├── yarn.lock                     # yarn依赖 配置  \n└── package.json                  # package.json  \n```\n这里贴一下`vue.config.js`文件的配置：\n```\nconst path = require('path');\nfunction resolve(dir) {\n    return path.join(__dirname, dir)\n}\n\nmodule.exports = {\n    pages: {\n        index: {\n            entry: 'examples/main.js',\n            template: 'public/index.html',\n            filename: 'index.html'\n        }\n    },\n    productionSourceMap: false,\n    css: {\n        extract: false,\n        modules: false,\n        sourceMap: false,\n        loaderOptions: {}\n    },\n\n    // 扩展 webpack 配置，使 packages 加入编译\n    chainWebpack: config => {\n        config.module\n            .rule('js')\n            .include\n            .add('/packages/')\n            .end()\n            .use('babel')\n            .loader('babel-loader')\n            .tap(options => {\n                // 修改它的选项...\n                return options\n            })\n        config.resolve.alias\n            .set('@', resolve('examples'))\n            .set('src', resolve('examples'))\n            .set('components', resolve('examples/components'))\n            .set('examples', resolve('examples'))\n            .set('common', resolve('examples/common'))\n            .set('packages', resolve('packages'))\n            .set('api', resolve('examples/api'))\n            /* 添加分析工具*/\n        if (process.env.NODE_ENV === 'production') {\n            if (process.env.npm_config_report) {\n                config\n                    .plugin('webpack-bundle-analyzer')\n                    .use(require('webpack-bundle-analyzer').BundleAnalyzerPlugin)\n                    .end()\n                config.plugins.delete('prefetch')\n            }\n        }\n    }\n}\n```","source":"_posts/windows下使用nexus搭建私有仓库并使用vue-cli-3-搭建组件库.md","raw":"---\ntitle: windows下使用nexus搭建私有仓库并使用vue-cli 3 搭建组件库\nabbrlink: 73a5b140\ndate: 2019-08-13 10:21:42\ntags:\n  - nexus\n  - vue\ncategories: 前端\n---\n\n主要分为两部分：第一部分是nexus私有仓库的搭建，第二部分是vue-cli 3的组件搭建并发布到nexus本地仓库。\n## nexus私有仓库的搭建\n\n### 环境搭建\n1. 首先需要在[<font style=\"color:red\">官网</font>](https://www.sonatype.com/oss-thank-you-win64.zip?submissionGuid=2c6a43fc-9aa5-4acc-b995-87cb63b04d66)下载nexus windows版本（注意：需要翻墙，自备梯子）。\n2. 以管理员身份运行cmd（注意：必须是管理员运行且必须是cmd，win10的powershell都会报错），然后切换到`C:\\node\\nexus\\nexus-3.18.0-01-win64\\nexus-3.18.0-01\\bin` 软件下载后的解压目录。\n<font style=\"color:red\">nexus启动前，最好修改下`C:\\node\\nexus\\nexus-3.18.0-01-win64\\nexus-3.18.0-01\\bin\\nexus.vmoptions`的配置</font>，防止出现内存不足的报错导致无法启动，我这里修改为\n```\n-Xms600m\n-Xmx600m\n-XX:MaxDirectMemorySize=1G\n```\n默认都是约2G\n\n```\nnexus.exe /install #执行安装命令， 成功后会提示Installed service 'nexus\nnexus.exe /run #运行服务，首次运行需要等待1~2分钟\n```\n3. 启动完毕后,进入 http://(本机IP):8081（最好是自定义电脑ip），点击右上角Sign In进行登录，默认账号 admin\n默认密码存放在`C:\\node\\nexus\\nexus-3.18.0-01-win64\\sonatype-work\\nexus3\\**.password` 打开文件后复制密码串进行登录，\n登录后会提示修改密码，修改完重新登录即可。然后`**.password`文件就会自动删除。\n\n### 添加npm仓库\n\n点击左侧菜单Repositories 查看仓库列表\n![](1.png)\n* 点击Create repository按钮创建仓库\n* group表示分组 hosted表示本机私有 proxy表示远程代理（中央仓库）\n* 若registry配置为group（包括hosted和proxy）,首次会从hosted拉取，若无则从proxy拉取并缓存，下次则直接从缓存取\n\n1. 添加npm(proxy)仓库：\n选择npm(proxy)\n输入`Name: npmjs.org`\n`Remote storage: https://registry.npmjs.org`\n如图：\n![](2.png)\n\n2. 添加npm(hosted)仓库：\n选择npm(hosted)\n输入`Name：npm-hosted`用于存放自己发布的私有包\n如图：\n![](3.png)\n3. 添加npm(group)仓库：\n选择npm(group)\n输入`Name: npm-group`，并在Member repositories里选择之前添加的两个移到右边\n如图：\n![](4.png)\n\n### 配置与验证npm仓库\n添加发布角色用户及权限\n1. 添加权限认证 将npm Beared Token Realm 添加至右边\n如图：\n![](5.png)\n2. 创建nx-deploy角色并赋予一个nx-repository-view---*的权限码\n![](6.png)\n3. 创建deployer用户 同时设定角色为nx-deploy\n![](7.png)\n\n### 变更依赖源\n安装nrm `npm i -g nrm`\n\n```\nnpm config set registry https://registry.npm.taobao.org #设置为探宝源\nnrm add private http://192.168.38.64:8081/repository/npm-all/ #本机ip\nnrm use private #使用私有源\n```\n### 发布流程\n每次发布前记得在package.json中检查version 有没有修改，要确认比上一个版本号高\n### 编译文件\n`yarn lib`或者使用npm\n### 登录npm\n`npm login -registry http://192.168.38.64:8081/repository/npm-hosted/`\n### 发布\n`npm publish -registry http://192.168.38.64:8081/repository/npm-hosted/`\n发布成功后在npm-hosted 能看到发布后的包\n![](8.png)\n### 使用方式\n\n```\n\"dependencies\": {\n\"组件库名称\": \"版本号\"\n}\n\nimport 组件库名称 from '组件库名称'\nVue.use(组件库名称)\n```\n### 项目启动\n`yarn serve`或者使用npm\n### 组件库文件目录结构\n\n```\n├── examples                      # 示例展示  \n│   ├── api                       # 接口类  \n│   ├── assets                    # 资源文件夹  \n│   ├── common                    # 工具类  \n│   ├── components                # 项目内部组件  \n│   ├── page                      # 页面  \n│   ├── router                    # 路由配置  \n│   ├── style                     # 页面样式问题，主题等  \n│   ├── App.vue                   # 入口页面  \n│   ├── main.js                   # 入口文件 加载组件 初始化等  \n├── lib                           # 编译后输出的组件目录  \n├── packages                      # 公共组件目录    \n│   ├── query-drop-box            # demo组件  \n│   ├── simple-input              # demo组件  \n│   ├── index.js                  # 组件入口文件  \n├── public                        # 静态资源  \n│   │── favicon.ico               # favicon图标  \n│   └── index.html                # html模板  \n├── .gitignore                    # git 配置  \n├── .npmignore                    # npm 配置  \n├── vue.config.js                 # vue-cli 配置  \n├── babel.config.js               # babel 配置  \n├── yarn.lock                     # yarn依赖 配置  \n└── package.json                  # package.json  \n```\n这里贴一下`vue.config.js`文件的配置：\n```\nconst path = require('path');\nfunction resolve(dir) {\n    return path.join(__dirname, dir)\n}\n\nmodule.exports = {\n    pages: {\n        index: {\n            entry: 'examples/main.js',\n            template: 'public/index.html',\n            filename: 'index.html'\n        }\n    },\n    productionSourceMap: false,\n    css: {\n        extract: false,\n        modules: false,\n        sourceMap: false,\n        loaderOptions: {}\n    },\n\n    // 扩展 webpack 配置，使 packages 加入编译\n    chainWebpack: config => {\n        config.module\n            .rule('js')\n            .include\n            .add('/packages/')\n            .end()\n            .use('babel')\n            .loader('babel-loader')\n            .tap(options => {\n                // 修改它的选项...\n                return options\n            })\n        config.resolve.alias\n            .set('@', resolve('examples'))\n            .set('src', resolve('examples'))\n            .set('components', resolve('examples/components'))\n            .set('examples', resolve('examples'))\n            .set('common', resolve('examples/common'))\n            .set('packages', resolve('packages'))\n            .set('api', resolve('examples/api'))\n            /* 添加分析工具*/\n        if (process.env.NODE_ENV === 'production') {\n            if (process.env.npm_config_report) {\n                config\n                    .plugin('webpack-bundle-analyzer')\n                    .use(require('webpack-bundle-analyzer').BundleAnalyzerPlugin)\n                    .end()\n                config.plugins.delete('prefetch')\n            }\n        }\n    }\n}\n```","slug":"windows下使用nexus搭建私有仓库并使用vue-cli-3-搭建组件库","published":1,"updated":"2020-04-30T07:58:25.400Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0ocrv8000f40m0nflohc92","content":"<p>主要分为两部分：第一部分是nexus私有仓库的搭建，第二部分是vue-cli 3的组件搭建并发布到nexus本地仓库。</p>\n<h2 id=\"nexus私有仓库的搭建\"><a href=\"#nexus私有仓库的搭建\" class=\"headerlink\" title=\"nexus私有仓库的搭建\"></a>nexus私有仓库的搭建</h2><h3 id=\"环境搭建\"><a href=\"#环境搭建\" class=\"headerlink\" title=\"环境搭建\"></a>环境搭建</h3><ol>\n<li>首先需要在<a href=\"https://www.sonatype.com/oss-thank-you-win64.zip?submissionGuid=2c6a43fc-9aa5-4acc-b995-87cb63b04d66\" target=\"_blank\" rel=\"noopener\"><font style=\"color:red\">官网</font></a>下载nexus windows版本（注意：需要翻墙，自备梯子）。</li>\n<li>以管理员身份运行cmd（注意：必须是管理员运行且必须是cmd，win10的powershell都会报错），然后切换到<code>C:\\node\\nexus\\nexus-3.18.0-01-win64\\nexus-3.18.0-01\\bin</code> 软件下载后的解压目录。<br><font style=\"color:red\">nexus启动前，最好修改下<code>C:\\node\\nexus\\nexus-3.18.0-01-win64\\nexus-3.18.0-01\\bin\\nexus.vmoptions</code>的配置</font>，防止出现内存不足的报错导致无法启动，我这里修改为<figure class=\"highlight diff\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"deletion\">-Xms600m</span></span><br><span class=\"line\"><span class=\"deletion\">-Xmx600m</span></span><br><span class=\"line\"><span class=\"deletion\">-XX:MaxDirectMemorySize=1G</span></span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>默认都是约2G</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nexus.exe /install #执行安装命令， 成功后会提示Installed<span class=\"built_in\"> service </span><span class=\"string\">'nexus</span></span><br><span class=\"line\"><span class=\"string\">nexus.exe /run #运行服务，首次运行需要等待1~2分钟</span></span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>启动完毕后,进入 http://(本机IP):8081（最好是自定义电脑ip），点击右上角Sign In进行登录，默认账号 admin<br>默认密码存放在<code>C:\\node\\nexus\\nexus-3.18.0-01-win64\\sonatype-work\\nexus3\\**.password</code> 打开文件后复制密码串进行登录，<br>登录后会提示修改密码，修改完重新登录即可。然后<code>**.password</code>文件就会自动删除。</li>\n</ol>\n<h3 id=\"添加npm仓库\"><a href=\"#添加npm仓库\" class=\"headerlink\" title=\"添加npm仓库\"></a>添加npm仓库</h3><p>点击左侧菜单Repositories 查看仓库列表<br><img src=\"1.png\" alt></p>\n<ul>\n<li>点击Create repository按钮创建仓库</li>\n<li>group表示分组 hosted表示本机私有 proxy表示远程代理（中央仓库）</li>\n<li>若registry配置为group（包括hosted和proxy）,首次会从hosted拉取，若无则从proxy拉取并缓存，下次则直接从缓存取</li>\n</ul>\n<ol>\n<li><p>添加npm(proxy)仓库：<br>选择npm(proxy)<br>输入<code>Name: npmjs.org</code><br><code>Remote storage: https://registry.npmjs.org</code><br>如图：<br><img src=\"2.png\" alt></p>\n</li>\n<li><p>添加npm(hosted)仓库：<br>选择npm(hosted)<br>输入<code>Name：npm-hosted</code>用于存放自己发布的私有包<br>如图：<br><img src=\"3.png\" alt></p>\n</li>\n<li>添加npm(group)仓库：<br>选择npm(group)<br>输入<code>Name: npm-group</code>，并在Member repositories里选择之前添加的两个移到右边<br>如图：<br><img src=\"4.png\" alt></li>\n</ol>\n<h3 id=\"配置与验证npm仓库\"><a href=\"#配置与验证npm仓库\" class=\"headerlink\" title=\"配置与验证npm仓库\"></a>配置与验证npm仓库</h3><p>添加发布角色用户及权限</p>\n<ol>\n<li>添加权限认证 将npm Beared Token Realm 添加至右边<br>如图：<br><img src=\"5.png\" alt></li>\n<li>创建nx-deploy角色并赋予一个nx-repository-view—*的权限码<br><img src=\"6.png\" alt></li>\n<li>创建deployer用户 同时设定角色为nx-deploy<br><img src=\"7.png\" alt></li>\n</ol>\n<h3 id=\"变更依赖源\"><a href=\"#变更依赖源\" class=\"headerlink\" title=\"变更依赖源\"></a>变更依赖源</h3><p>安装nrm <code>npm i -g nrm</code></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm config <span class=\"keyword\">set</span> registry https://registry.npm.taobao.org <span class=\"comment\">#设置为探宝源</span></span><br><span class=\"line\">nrm <span class=\"keyword\">add</span> <span class=\"keyword\">private</span> <span class=\"keyword\">http</span>://<span class=\"number\">192.168</span><span class=\"number\">.38</span><span class=\"number\">.64</span>:<span class=\"number\">8081</span>/repository/npm-<span class=\"keyword\">all</span>/ <span class=\"comment\">#本机ip</span></span><br><span class=\"line\">nrm <span class=\"keyword\">use</span> <span class=\"keyword\">private</span> <span class=\"comment\">#使用私有源</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"发布流程\"><a href=\"#发布流程\" class=\"headerlink\" title=\"发布流程\"></a>发布流程</h3><p>每次发布前记得在package.json中检查version 有没有修改，要确认比上一个版本号高</p>\n<h3 id=\"编译文件\"><a href=\"#编译文件\" class=\"headerlink\" title=\"编译文件\"></a>编译文件</h3><p><code>yarn lib</code>或者使用npm</p>\n<h3 id=\"登录npm\"><a href=\"#登录npm\" class=\"headerlink\" title=\"登录npm\"></a>登录npm</h3><p><code>npm login -registry http://192.168.38.64:8081/repository/npm-hosted/</code></p>\n<h3 id=\"发布\"><a href=\"#发布\" class=\"headerlink\" title=\"发布\"></a>发布</h3><p><code>npm publish -registry http://192.168.38.64:8081/repository/npm-hosted/</code><br>发布成功后在npm-hosted 能看到发布后的包<br><img src=\"8.png\" alt></p>\n<h3 id=\"使用方式\"><a href=\"#使用方式\" class=\"headerlink\" title=\"使用方式\"></a>使用方式</h3><figure class=\"highlight clean\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">\"dependencies\"</span>: &#123;</span><br><span class=\"line\"><span class=\"string\">\"组件库名称\"</span>: <span class=\"string\">\"版本号\"</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> 组件库名称 <span class=\"keyword\">from</span> <span class=\"string\">'组件库名称'</span></span><br><span class=\"line\">Vue.use(组件库名称)</span><br></pre></td></tr></table></figure>\n<h3 id=\"项目启动\"><a href=\"#项目启动\" class=\"headerlink\" title=\"项目启动\"></a>项目启动</h3><p><code>yarn serve</code>或者使用npm</p>\n<h3 id=\"组件库文件目录结构\"><a href=\"#组件库文件目录结构\" class=\"headerlink\" title=\"组件库文件目录结构\"></a>组件库文件目录结构</h3><figure class=\"highlight crystal\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">├── examples                      <span class=\"comment\"># 示例展示  </span></span><br><span class=\"line\">│   ├── api                       <span class=\"comment\"># 接口类  </span></span><br><span class=\"line\">│   ├── assets                    <span class=\"comment\"># 资源文件夹  </span></span><br><span class=\"line\">│   ├── common                    <span class=\"comment\"># 工具类  </span></span><br><span class=\"line\">│   ├── components                <span class=\"comment\"># 项目内部组件  </span></span><br><span class=\"line\">│   ├── page                      <span class=\"comment\"># 页面  </span></span><br><span class=\"line\">│   ├── router                    <span class=\"comment\"># 路由配置  </span></span><br><span class=\"line\">│   ├── style                     <span class=\"comment\"># 页面样式问题，主题等  </span></span><br><span class=\"line\">│   ├── App.vue                   <span class=\"comment\"># 入口页面  </span></span><br><span class=\"line\">│   ├── main.js                   <span class=\"comment\"># 入口文件 加载组件 初始化等  </span></span><br><span class=\"line\">├── <span class=\"class\"><span class=\"keyword\">lib</span>                           <span class=\"comment\"># 编译后输出的组件目录  </span></span></span><br><span class=\"line\">├── packages                      <span class=\"comment\"># 公共组件目录    </span></span><br><span class=\"line\">│   ├── query-drop-box            <span class=\"comment\"># demo组件  </span></span><br><span class=\"line\">│   ├── simple-input              <span class=\"comment\"># demo组件  </span></span><br><span class=\"line\">│   ├── index.js                  <span class=\"comment\"># 组件入口文件  </span></span><br><span class=\"line\">├── public                        <span class=\"comment\"># 静态资源  </span></span><br><span class=\"line\">│   │── favicon.ico               <span class=\"comment\"># favicon图标  </span></span><br><span class=\"line\">│   └── index.html                <span class=\"comment\"># html模板  </span></span><br><span class=\"line\">├── .gitignore                    <span class=\"comment\"># git 配置  </span></span><br><span class=\"line\">├── .npmignore                    <span class=\"comment\"># npm 配置  </span></span><br><span class=\"line\">├── vue.config.js                 <span class=\"comment\"># vue-cli 配置  </span></span><br><span class=\"line\">├── babel.config.js               <span class=\"comment\"># babel 配置  </span></span><br><span class=\"line\">├── yarn.lock                     <span class=\"comment\"># yarn依赖 配置  </span></span><br><span class=\"line\">└── package.json                  <span class=\"comment\"># package.json</span></span><br></pre></td></tr></table></figure>\n<p>这里贴一下<code>vue.config.js</code>文件的配置：<br><figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> path = require(<span class=\"string\">'path'</span>);</span><br><span class=\"line\"><span class=\"function\">function <span class=\"title\">resolve</span>(<span class=\"params\">dir</span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> path.<span class=\"keyword\">join</span>(__dirname, dir)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">module.exports = &#123;</span><br><span class=\"line\">    pages: &#123;</span><br><span class=\"line\">        index: &#123;</span><br><span class=\"line\">            entry: <span class=\"string\">'examples/main.js'</span>,</span><br><span class=\"line\">            template: <span class=\"string\">'public/index.html'</span>,</span><br><span class=\"line\">            filename: <span class=\"string\">'index.html'</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    productionSourceMap: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    css: &#123;</span><br><span class=\"line\">        extract: <span class=\"literal\">false</span>,</span><br><span class=\"line\">        modules: <span class=\"literal\">false</span>,</span><br><span class=\"line\">        sourceMap: <span class=\"literal\">false</span>,</span><br><span class=\"line\">        loaderOptions: &#123;&#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 扩展 webpack 配置，使 packages 加入编译</span></span><br><span class=\"line\">    chainWebpack: config =&gt; &#123;</span><br><span class=\"line\">        config.module</span><br><span class=\"line\">            .rule(<span class=\"string\">'js'</span>)</span><br><span class=\"line\">            .include</span><br><span class=\"line\">            .<span class=\"keyword\">add</span>(<span class=\"string\">'/packages/'</span>)</span><br><span class=\"line\">            .end()</span><br><span class=\"line\">            .use(<span class=\"string\">'babel'</span>)</span><br><span class=\"line\">            .loader(<span class=\"string\">'babel-loader'</span>)</span><br><span class=\"line\">            .tap(options =&gt; &#123;</span><br><span class=\"line\">                <span class=\"comment\">// 修改它的选项...</span></span><br><span class=\"line\">                <span class=\"keyword\">return</span> options</span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">        config.resolve.<span class=\"keyword\">alias</span></span><br><span class=\"line\">            .<span class=\"keyword\">set</span>(<span class=\"string\">'@'</span>, resolve(<span class=\"string\">'examples'</span>))</span><br><span class=\"line\">            .<span class=\"keyword\">set</span>(<span class=\"string\">'src'</span>, resolve(<span class=\"string\">'examples'</span>))</span><br><span class=\"line\">            .<span class=\"keyword\">set</span>(<span class=\"string\">'components'</span>, resolve(<span class=\"string\">'examples/components'</span>))</span><br><span class=\"line\">            .<span class=\"keyword\">set</span>(<span class=\"string\">'examples'</span>, resolve(<span class=\"string\">'examples'</span>))</span><br><span class=\"line\">            .<span class=\"keyword\">set</span>(<span class=\"string\">'common'</span>, resolve(<span class=\"string\">'examples/common'</span>))</span><br><span class=\"line\">            .<span class=\"keyword\">set</span>(<span class=\"string\">'packages'</span>, resolve(<span class=\"string\">'packages'</span>))</span><br><span class=\"line\">            .<span class=\"keyword\">set</span>(<span class=\"string\">'api'</span>, resolve(<span class=\"string\">'examples/api'</span>))</span><br><span class=\"line\">            <span class=\"comment\">/* 添加分析工具*/</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (process.env.NODE_ENV === <span class=\"string\">'production'</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (process.env.npm_config_report) &#123;</span><br><span class=\"line\">                config</span><br><span class=\"line\">                    .plugin(<span class=\"string\">'webpack-bundle-analyzer'</span>)</span><br><span class=\"line\">                    .use(require(<span class=\"string\">'webpack-bundle-analyzer'</span>).BundleAnalyzerPlugin)</span><br><span class=\"line\">                    .end()</span><br><span class=\"line\">                config.plugins.delete(<span class=\"string\">'prefetch'</span>)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>主要分为两部分：第一部分是nexus私有仓库的搭建，第二部分是vue-cli 3的组件搭建并发布到nexus本地仓库。</p>\n<h2 id=\"nexus私有仓库的搭建\"><a href=\"#nexus私有仓库的搭建\" class=\"headerlink\" title=\"nexus私有仓库的搭建\"></a>nexus私有仓库的搭建</h2><h3 id=\"环境搭建\"><a href=\"#环境搭建\" class=\"headerlink\" title=\"环境搭建\"></a>环境搭建</h3><ol>\n<li>首先需要在<a href=\"https://www.sonatype.com/oss-thank-you-win64.zip?submissionGuid=2c6a43fc-9aa5-4acc-b995-87cb63b04d66\" target=\"_blank\" rel=\"noopener\"><font style=\"color:red\">官网</font></a>下载nexus windows版本（注意：需要翻墙，自备梯子）。</li>\n<li>以管理员身份运行cmd（注意：必须是管理员运行且必须是cmd，win10的powershell都会报错），然后切换到<code>C:\\node\\nexus\\nexus-3.18.0-01-win64\\nexus-3.18.0-01\\bin</code> 软件下载后的解压目录。<br><font style=\"color:red\">nexus启动前，最好修改下<code>C:\\node\\nexus\\nexus-3.18.0-01-win64\\nexus-3.18.0-01\\bin\\nexus.vmoptions</code>的配置</font>，防止出现内存不足的报错导致无法启动，我这里修改为<figure class=\"highlight diff\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"deletion\">-Xms600m</span></span><br><span class=\"line\"><span class=\"deletion\">-Xmx600m</span></span><br><span class=\"line\"><span class=\"deletion\">-XX:MaxDirectMemorySize=1G</span></span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>默认都是约2G</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nexus.exe /install #执行安装命令， 成功后会提示Installed<span class=\"built_in\"> service </span><span class=\"string\">'nexus</span></span><br><span class=\"line\"><span class=\"string\">nexus.exe /run #运行服务，首次运行需要等待1~2分钟</span></span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>启动完毕后,进入 http://(本机IP):8081（最好是自定义电脑ip），点击右上角Sign In进行登录，默认账号 admin<br>默认密码存放在<code>C:\\node\\nexus\\nexus-3.18.0-01-win64\\sonatype-work\\nexus3\\**.password</code> 打开文件后复制密码串进行登录，<br>登录后会提示修改密码，修改完重新登录即可。然后<code>**.password</code>文件就会自动删除。</li>\n</ol>\n<h3 id=\"添加npm仓库\"><a href=\"#添加npm仓库\" class=\"headerlink\" title=\"添加npm仓库\"></a>添加npm仓库</h3><p>点击左侧菜单Repositories 查看仓库列表<br><img src=\"1.png\" alt></p>\n<ul>\n<li>点击Create repository按钮创建仓库</li>\n<li>group表示分组 hosted表示本机私有 proxy表示远程代理（中央仓库）</li>\n<li>若registry配置为group（包括hosted和proxy）,首次会从hosted拉取，若无则从proxy拉取并缓存，下次则直接从缓存取</li>\n</ul>\n<ol>\n<li><p>添加npm(proxy)仓库：<br>选择npm(proxy)<br>输入<code>Name: npmjs.org</code><br><code>Remote storage: https://registry.npmjs.org</code><br>如图：<br><img src=\"2.png\" alt></p>\n</li>\n<li><p>添加npm(hosted)仓库：<br>选择npm(hosted)<br>输入<code>Name：npm-hosted</code>用于存放自己发布的私有包<br>如图：<br><img src=\"3.png\" alt></p>\n</li>\n<li>添加npm(group)仓库：<br>选择npm(group)<br>输入<code>Name: npm-group</code>，并在Member repositories里选择之前添加的两个移到右边<br>如图：<br><img src=\"4.png\" alt></li>\n</ol>\n<h3 id=\"配置与验证npm仓库\"><a href=\"#配置与验证npm仓库\" class=\"headerlink\" title=\"配置与验证npm仓库\"></a>配置与验证npm仓库</h3><p>添加发布角色用户及权限</p>\n<ol>\n<li>添加权限认证 将npm Beared Token Realm 添加至右边<br>如图：<br><img src=\"5.png\" alt></li>\n<li>创建nx-deploy角色并赋予一个nx-repository-view—*的权限码<br><img src=\"6.png\" alt></li>\n<li>创建deployer用户 同时设定角色为nx-deploy<br><img src=\"7.png\" alt></li>\n</ol>\n<h3 id=\"变更依赖源\"><a href=\"#变更依赖源\" class=\"headerlink\" title=\"变更依赖源\"></a>变更依赖源</h3><p>安装nrm <code>npm i -g nrm</code></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm config <span class=\"keyword\">set</span> registry https://registry.npm.taobao.org <span class=\"comment\">#设置为探宝源</span></span><br><span class=\"line\">nrm <span class=\"keyword\">add</span> <span class=\"keyword\">private</span> <span class=\"keyword\">http</span>://<span class=\"number\">192.168</span><span class=\"number\">.38</span><span class=\"number\">.64</span>:<span class=\"number\">8081</span>/repository/npm-<span class=\"keyword\">all</span>/ <span class=\"comment\">#本机ip</span></span><br><span class=\"line\">nrm <span class=\"keyword\">use</span> <span class=\"keyword\">private</span> <span class=\"comment\">#使用私有源</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"发布流程\"><a href=\"#发布流程\" class=\"headerlink\" title=\"发布流程\"></a>发布流程</h3><p>每次发布前记得在package.json中检查version 有没有修改，要确认比上一个版本号高</p>\n<h3 id=\"编译文件\"><a href=\"#编译文件\" class=\"headerlink\" title=\"编译文件\"></a>编译文件</h3><p><code>yarn lib</code>或者使用npm</p>\n<h3 id=\"登录npm\"><a href=\"#登录npm\" class=\"headerlink\" title=\"登录npm\"></a>登录npm</h3><p><code>npm login -registry http://192.168.38.64:8081/repository/npm-hosted/</code></p>\n<h3 id=\"发布\"><a href=\"#发布\" class=\"headerlink\" title=\"发布\"></a>发布</h3><p><code>npm publish -registry http://192.168.38.64:8081/repository/npm-hosted/</code><br>发布成功后在npm-hosted 能看到发布后的包<br><img src=\"8.png\" alt></p>\n<h3 id=\"使用方式\"><a href=\"#使用方式\" class=\"headerlink\" title=\"使用方式\"></a>使用方式</h3><figure class=\"highlight clean\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">\"dependencies\"</span>: &#123;</span><br><span class=\"line\"><span class=\"string\">\"组件库名称\"</span>: <span class=\"string\">\"版本号\"</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> 组件库名称 <span class=\"keyword\">from</span> <span class=\"string\">'组件库名称'</span></span><br><span class=\"line\">Vue.use(组件库名称)</span><br></pre></td></tr></table></figure>\n<h3 id=\"项目启动\"><a href=\"#项目启动\" class=\"headerlink\" title=\"项目启动\"></a>项目启动</h3><p><code>yarn serve</code>或者使用npm</p>\n<h3 id=\"组件库文件目录结构\"><a href=\"#组件库文件目录结构\" class=\"headerlink\" title=\"组件库文件目录结构\"></a>组件库文件目录结构</h3><figure class=\"highlight crystal\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">├── examples                      <span class=\"comment\"># 示例展示  </span></span><br><span class=\"line\">│   ├── api                       <span class=\"comment\"># 接口类  </span></span><br><span class=\"line\">│   ├── assets                    <span class=\"comment\"># 资源文件夹  </span></span><br><span class=\"line\">│   ├── common                    <span class=\"comment\"># 工具类  </span></span><br><span class=\"line\">│   ├── components                <span class=\"comment\"># 项目内部组件  </span></span><br><span class=\"line\">│   ├── page                      <span class=\"comment\"># 页面  </span></span><br><span class=\"line\">│   ├── router                    <span class=\"comment\"># 路由配置  </span></span><br><span class=\"line\">│   ├── style                     <span class=\"comment\"># 页面样式问题，主题等  </span></span><br><span class=\"line\">│   ├── App.vue                   <span class=\"comment\"># 入口页面  </span></span><br><span class=\"line\">│   ├── main.js                   <span class=\"comment\"># 入口文件 加载组件 初始化等  </span></span><br><span class=\"line\">├── <span class=\"class\"><span class=\"keyword\">lib</span>                           <span class=\"comment\"># 编译后输出的组件目录  </span></span></span><br><span class=\"line\">├── packages                      <span class=\"comment\"># 公共组件目录    </span></span><br><span class=\"line\">│   ├── query-drop-box            <span class=\"comment\"># demo组件  </span></span><br><span class=\"line\">│   ├── simple-input              <span class=\"comment\"># demo组件  </span></span><br><span class=\"line\">│   ├── index.js                  <span class=\"comment\"># 组件入口文件  </span></span><br><span class=\"line\">├── public                        <span class=\"comment\"># 静态资源  </span></span><br><span class=\"line\">│   │── favicon.ico               <span class=\"comment\"># favicon图标  </span></span><br><span class=\"line\">│   └── index.html                <span class=\"comment\"># html模板  </span></span><br><span class=\"line\">├── .gitignore                    <span class=\"comment\"># git 配置  </span></span><br><span class=\"line\">├── .npmignore                    <span class=\"comment\"># npm 配置  </span></span><br><span class=\"line\">├── vue.config.js                 <span class=\"comment\"># vue-cli 配置  </span></span><br><span class=\"line\">├── babel.config.js               <span class=\"comment\"># babel 配置  </span></span><br><span class=\"line\">├── yarn.lock                     <span class=\"comment\"># yarn依赖 配置  </span></span><br><span class=\"line\">└── package.json                  <span class=\"comment\"># package.json</span></span><br></pre></td></tr></table></figure>\n<p>这里贴一下<code>vue.config.js</code>文件的配置：<br><figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> path = require(<span class=\"string\">'path'</span>);</span><br><span class=\"line\"><span class=\"function\">function <span class=\"title\">resolve</span>(<span class=\"params\">dir</span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> path.<span class=\"keyword\">join</span>(__dirname, dir)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">module.exports = &#123;</span><br><span class=\"line\">    pages: &#123;</span><br><span class=\"line\">        index: &#123;</span><br><span class=\"line\">            entry: <span class=\"string\">'examples/main.js'</span>,</span><br><span class=\"line\">            template: <span class=\"string\">'public/index.html'</span>,</span><br><span class=\"line\">            filename: <span class=\"string\">'index.html'</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    productionSourceMap: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    css: &#123;</span><br><span class=\"line\">        extract: <span class=\"literal\">false</span>,</span><br><span class=\"line\">        modules: <span class=\"literal\">false</span>,</span><br><span class=\"line\">        sourceMap: <span class=\"literal\">false</span>,</span><br><span class=\"line\">        loaderOptions: &#123;&#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 扩展 webpack 配置，使 packages 加入编译</span></span><br><span class=\"line\">    chainWebpack: config =&gt; &#123;</span><br><span class=\"line\">        config.module</span><br><span class=\"line\">            .rule(<span class=\"string\">'js'</span>)</span><br><span class=\"line\">            .include</span><br><span class=\"line\">            .<span class=\"keyword\">add</span>(<span class=\"string\">'/packages/'</span>)</span><br><span class=\"line\">            .end()</span><br><span class=\"line\">            .use(<span class=\"string\">'babel'</span>)</span><br><span class=\"line\">            .loader(<span class=\"string\">'babel-loader'</span>)</span><br><span class=\"line\">            .tap(options =&gt; &#123;</span><br><span class=\"line\">                <span class=\"comment\">// 修改它的选项...</span></span><br><span class=\"line\">                <span class=\"keyword\">return</span> options</span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">        config.resolve.<span class=\"keyword\">alias</span></span><br><span class=\"line\">            .<span class=\"keyword\">set</span>(<span class=\"string\">'@'</span>, resolve(<span class=\"string\">'examples'</span>))</span><br><span class=\"line\">            .<span class=\"keyword\">set</span>(<span class=\"string\">'src'</span>, resolve(<span class=\"string\">'examples'</span>))</span><br><span class=\"line\">            .<span class=\"keyword\">set</span>(<span class=\"string\">'components'</span>, resolve(<span class=\"string\">'examples/components'</span>))</span><br><span class=\"line\">            .<span class=\"keyword\">set</span>(<span class=\"string\">'examples'</span>, resolve(<span class=\"string\">'examples'</span>))</span><br><span class=\"line\">            .<span class=\"keyword\">set</span>(<span class=\"string\">'common'</span>, resolve(<span class=\"string\">'examples/common'</span>))</span><br><span class=\"line\">            .<span class=\"keyword\">set</span>(<span class=\"string\">'packages'</span>, resolve(<span class=\"string\">'packages'</span>))</span><br><span class=\"line\">            .<span class=\"keyword\">set</span>(<span class=\"string\">'api'</span>, resolve(<span class=\"string\">'examples/api'</span>))</span><br><span class=\"line\">            <span class=\"comment\">/* 添加分析工具*/</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (process.env.NODE_ENV === <span class=\"string\">'production'</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (process.env.npm_config_report) &#123;</span><br><span class=\"line\">                config</span><br><span class=\"line\">                    .plugin(<span class=\"string\">'webpack-bundle-analyzer'</span>)</span><br><span class=\"line\">                    .use(require(<span class=\"string\">'webpack-bundle-analyzer'</span>).BundleAnalyzerPlugin)</span><br><span class=\"line\">                    .end()</span><br><span class=\"line\">                config.plugins.delete(<span class=\"string\">'prefetch'</span>)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n"},{"title":"在 create-react-app 中使用Ant Design中的坑","abbrlink":"204a2bf8","date":"2020-06-04T10:51:08.000Z","_content":"\n## Ant Design 中的文档有错误，参数变了\n\n这是原来的配置：\n\n```\n// craco.config.js\nconst CracoLessPlugin = require('craco-less');\n\nmodule.exports = {\n  plugins: [\n    {\n      plugin: CracoLessPlugin,\n      options: {\n        lessLoaderOptions: {\n          modifyVars: { '@primary-color': '#1DA57A' },\n          javascriptEnabled: true,\n        },\n      },\n    },\n  ],\n};\n```\n\n这是正确的配置：\n\n```\n// craco.config.js\nconst CracoLessPlugin = require('craco-less');\n\nmodule.exports = {\n  plugins: [\n    {\n      plugin: CracoLessPlugin,\n      options: {\n        lessLoaderOptions: {\n           lessOptions:{\n                modifyVars: { '@primary-color': '#1DA57A' },\n                javascriptEnabled: true,\n            }\n        },\n      },\n    },\n  ],\n};\n```\n","source":"_posts/在-create-react-app-中使用Ant-Design中的坑.md","raw":"---\ntitle: 在 create-react-app 中使用Ant Design中的坑\nabbrlink: 204a2bf8\ndate: 2020-06-04 18:51:08\ntags: react,\ncategories: 前端\n---\n\n## Ant Design 中的文档有错误，参数变了\n\n这是原来的配置：\n\n```\n// craco.config.js\nconst CracoLessPlugin = require('craco-less');\n\nmodule.exports = {\n  plugins: [\n    {\n      plugin: CracoLessPlugin,\n      options: {\n        lessLoaderOptions: {\n          modifyVars: { '@primary-color': '#1DA57A' },\n          javascriptEnabled: true,\n        },\n      },\n    },\n  ],\n};\n```\n\n这是正确的配置：\n\n```\n// craco.config.js\nconst CracoLessPlugin = require('craco-less');\n\nmodule.exports = {\n  plugins: [\n    {\n      plugin: CracoLessPlugin,\n      options: {\n        lessLoaderOptions: {\n           lessOptions:{\n                modifyVars: { '@primary-color': '#1DA57A' },\n                javascriptEnabled: true,\n            }\n        },\n      },\n    },\n  ],\n};\n```\n","slug":"在-create-react-app-中使用Ant-Design中的坑","published":1,"updated":"2020-06-04T10:58:37.122Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0ocrva000j40m0x7boigem","content":"<h2 id=\"Ant-Design-中的文档有错误，参数变了\"><a href=\"#Ant-Design-中的文档有错误，参数变了\" class=\"headerlink\" title=\"Ant Design 中的文档有错误，参数变了\"></a>Ant Design 中的文档有错误，参数变了</h2><p>这是原来的配置：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// craco.config.js</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> CracoLessPlugin = require(<span class=\"string\">'craco-less'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">module</span>.<span class=\"keyword\">exports</span> = &#123;</span><br><span class=\"line\">  plugins: [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      plugin: CracoLessPlugin,</span><br><span class=\"line\">      options: &#123;</span><br><span class=\"line\">        lessLoaderOptions: &#123;</span><br><span class=\"line\">          modifyVars: &#123; <span class=\"string\">'@primary-color'</span>: <span class=\"string\">'#1DA57A'</span> &#125;,</span><br><span class=\"line\">          javascriptEnabled: <span class=\"keyword\">true</span>,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  ],</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>这是正确的配置：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// craco.config.js</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> CracoLessPlugin = require(<span class=\"string\">'craco-less'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">module</span>.<span class=\"keyword\">exports</span> = &#123;</span><br><span class=\"line\">  plugins: [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      plugin: CracoLessPlugin,</span><br><span class=\"line\">      options: &#123;</span><br><span class=\"line\">        lessLoaderOptions: &#123;</span><br><span class=\"line\">           lessOptions:&#123;</span><br><span class=\"line\">                modifyVars: &#123; <span class=\"string\">'@primary-color'</span>: <span class=\"string\">'#1DA57A'</span> &#125;,</span><br><span class=\"line\">                javascriptEnabled: <span class=\"keyword\">true</span>,</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  ],</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Ant-Design-中的文档有错误，参数变了\"><a href=\"#Ant-Design-中的文档有错误，参数变了\" class=\"headerlink\" title=\"Ant Design 中的文档有错误，参数变了\"></a>Ant Design 中的文档有错误，参数变了</h2><p>这是原来的配置：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// craco.config.js</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> CracoLessPlugin = require(<span class=\"string\">'craco-less'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">module</span>.<span class=\"keyword\">exports</span> = &#123;</span><br><span class=\"line\">  plugins: [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      plugin: CracoLessPlugin,</span><br><span class=\"line\">      options: &#123;</span><br><span class=\"line\">        lessLoaderOptions: &#123;</span><br><span class=\"line\">          modifyVars: &#123; <span class=\"string\">'@primary-color'</span>: <span class=\"string\">'#1DA57A'</span> &#125;,</span><br><span class=\"line\">          javascriptEnabled: <span class=\"keyword\">true</span>,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  ],</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>这是正确的配置：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// craco.config.js</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> CracoLessPlugin = require(<span class=\"string\">'craco-less'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">module</span>.<span class=\"keyword\">exports</span> = &#123;</span><br><span class=\"line\">  plugins: [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      plugin: CracoLessPlugin,</span><br><span class=\"line\">      options: &#123;</span><br><span class=\"line\">        lessLoaderOptions: &#123;</span><br><span class=\"line\">           lessOptions:&#123;</span><br><span class=\"line\">                modifyVars: &#123; <span class=\"string\">'@primary-color'</span>: <span class=\"string\">'#1DA57A'</span> &#125;,</span><br><span class=\"line\">                javascriptEnabled: <span class=\"keyword\">true</span>,</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  ],</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n"},{"title":"一个奇葩的表格统计需求","abbrlink":"507fa396","date":"2019-06-17T07:41:51.000Z","_content":"\n有个报表统计的需求，先上需求图：\n![](1.jpg)\n咋一看，好像挺简单啊，不就是一个表格吗？\n这么想那就大错特错了。这个需求实际上只有三行，也就是说需要统计“数量”，“项目造价金额”，“项目合同金额”这三个字段在不同状态下的值，也就是各列的“已报备”，“已中标”.... 等等。我们知道如果要实现这一的需求，必须要把“数量”，“项目造价金额”，“项目合同金额”这三个字段在各列中当成一个字段来处理，这样才会显示三行。比如element-ui的table的简单例子：\n![](2.jpg)\n![](3.jpg)\n那后端就要返回这样的格式了\n![](4.jpg)\n<font color=red>坑就坑在我们这个后端返回的数据结构上，他说他只能按照状态查询结果返回给我！</font>\n### 来看看他返回的数据结构是什么：\n```\n{\n\t\"code\":\"200\",\n\t\"message\":\"成功\",\n\t\"responseBody\":{\n\t\t\"code\":\"1\",\n\t\t\"data\":[\n\t\t\t{\n\t\t\t\t\"averageContractAmount\":0,\n\t\t\t\t\"countBuliding\":0,\n\t\t\t\t\"countContract\":0,\n\t\t\t\t\"countProject\":2,\n\t\t\t\t\"dayTime\":null,\n\t\t\t\t\"projStatus\":0,\n\t\t\t\t\"projStatusName\":\"草稿\",\n\t\t\t\t\"totalContractAmount\":0.00,\n\t\t\t\t\"totalProjectAmount\":17.94,\n\t\t\t\t\"totalReturnAmount\":0.00\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"averageContractAmount\":0,\n\t\t\t\t\"countBuliding\":0,\n\t\t\t\t\"countContract\":0,\n\t\t\t\t\"countProject\":12,\n\t\t\t\t\"dayTime\":null,\n\t\t\t\t\"projStatus\":1,\n\t\t\t\t\"projStatusName\":\"报备中\",\n\t\t\t\t\"totalContractAmount\":0.00,\n\t\t\t\t\"totalProjectAmount\":103.65,\n\t\t\t\t\"totalReturnAmount\":0.00\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"averageContractAmount\":0,\n\t\t\t\t\"countBuliding\":0,\n\t\t\t\t\"countContract\":0,\n\t\t\t\t\"countProject\":17,\n\t\t\t\t\"dayTime\":null,\n\t\t\t\t\"projStatus\":2,\n\t\t\t\t\"projStatusName\":\"已报备\",\n\t\t\t\t\"totalContractAmount\":0.00,\n\t\t\t\t\"totalProjectAmount\":5732.99,\n\t\t\t\t\"totalReturnAmount\":0.00\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"averageContractAmount\":0,\n\t\t\t\t\"countBuliding\":0,\n\t\t\t\t\"countContract\":0,\n\t\t\t\t\"countProject\":5,\n\t\t\t\t\"dayTime\":null,\n\t\t\t\t\"projStatus\":4,\n\t\t\t\t\"projStatusName\":\"已中标\",\n\t\t\t\t\"totalContractAmount\":4478.88,\n\t\t\t\t\"totalProjectAmount\":18.11,\n\t\t\t\t\"totalReturnAmount\":0.00\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"averageContractAmount\":0,\n\t\t\t\t\"countBuliding\":0,\n\t\t\t\t\"countContract\":0,\n\t\t\t\t\"countProject\":6,\n\t\t\t\t\"dayTime\":null,\n\t\t\t\t\"projStatus\":6,\n\t\t\t\t\"projStatusName\":\"建设中\",\n\t\t\t\t\"totalContractAmount\":14.10,\n\t\t\t\t\"totalProjectAmount\":154.01,\n\t\t\t\t\"totalReturnAmount\":0.00\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"averageContractAmount\":0,\n\t\t\t\t\"countBuliding\":0,\n\t\t\t\t\"countContract\":0,\n\t\t\t\t\"countProject\":1,\n\t\t\t\t\"dayTime\":null,\n\t\t\t\t\"projStatus\":7,\n\t\t\t\t\"projStatusName\":\"已竣工\",\n\t\t\t\t\"totalContractAmount\":1.00,\n\t\t\t\t\"totalProjectAmount\":1.00,\n\t\t\t\t\"totalReturnAmount\":0.00\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"averageContractAmount\":0,\n\t\t\t\t\"countBuliding\":0,\n\t\t\t\t\"countContract\":0,\n\t\t\t\t\"countProject\":1,\n\t\t\t\t\"dayTime\":null,\n\t\t\t\t\"projStatus\":10,\n\t\t\t\t\"projStatusName\":\"已删除\",\n\t\t\t\t\"totalContractAmount\":0.00,\n\t\t\t\t\"totalProjectAmount\":0.12,\n\t\t\t\t\"totalReturnAmount\":0.00\n\t\t\t}\n\t\t],\n\t\t\"message\":\"操作成功\"\n\t}\n}\n```\n其中`projStatus`就是上面提到的“报备中”，“已中标”等等列的状态值了，但是这样渲染出来的表格是10行，因为他数组没有处理，直接有多少个状态有值就返回多少条记录。实际上我前端这边需要的字段是这样的 \n```\n[\n    { typeName: '数量', projStatus: 1, total_1: 2, total_2: 2, total_3: 2, total_4: 2, total_5: 2, total_6: 2, total_7: 2, total_8: 2, total_9: 2, total_10: 2 },\n    { typeName: '项目造价金额（万）', projStatus: 1, total_1: 2, total_2: 2, total_3: 2, total_4: 2, total_5: 2, total_6: 2, total_7: 2, total_8: 2, total_9: 2, total_10: 2 },\n\n    { typeName: '项目合同金额（万）', projStatus: 1, total_1: 2, total_2: 2, total_3: 2, total_4: 2, total_5: 2, total_6: 2, total_7: 2, total_8: 2, total_9: 2, total_10: 2 } \n]\n```\n\n这就需要自己进行艰苦的数据处理了。。。\n根据他字段返回的 `countProject //数量` `totalProjectAmount //项目造价` `totalContractAmount //项目合同`  这三个字段分类把数据重新组合成三个数组。\n```\ndeepDealArr(data, num) {\n    let countProject = [];\n    let totalProjectAmount = [];\n    let totalContractAmount = [];\n    if (num === 1) {\n        let _data = this.utils.copy(data);\n        for (let i = 0; i < _data.length; i++) {\n            let ind = _data[i].projStatus\n            const dataObj = {}\n            dataObj.projStatus = _data[i].projStatus\n            dataObj['total_' + ind] = _data[i].countProject\n            countProject.push(dataObj)\n        }\n        countProject.splice(0, 0, { typeName: '数量' })\n        return countProject;\n    } else if (num === 2) {\n        let _data = this.utils.copy(data);\n        for (let i = 0; i < _data.length; i++) {\n            let ind = _data[i].projStatus\n            const dataObj = {}\n            dataObj.projStatus = _data[i].projStatus\n            dataObj['total_' + ind] = _data[i].totalProjectAmount\n            totalProjectAmount.push(dataObj)\n        }\n        totalProjectAmount.splice(0, 0, { typeName: '项目造价金额（万）' })\n        return totalProjectAmount;\n    } else {\n        let _data = this.utils.copy(data);\n        for (let i = 0; i < _data.length; i++) {\n            let ind = _data[i].projStatus\n            const dataObj = {}\n            dataObj.projStatus = _data[i].projStatus\n            dataObj['total_' + ind] = _data[i].totalContractAmount\n            totalContractAmount.push(dataObj)\n        }\n        totalContractAmount.splice(0, 0, { typeName: '项目合同金额（万）' })\n        return totalContractAmount;\n    }\n\n}\n\n\n/**\n* 处理返回数组\n*/\ndealArry(data) {\n    let _data = this.utils.copy(data);//这个data 就是后端返回的初始结构的数据\n    let countProject = []; //数量\n    let totalProjectAmount = [];//项目造价\n    let totalContractAmount = []; //项目合同\n\n\n    //处理出来的结果是类似 [{ typeName: '数量', projStatus: 1, total_1: 2, total_2: 2, total_3: 2, total_4: 2, total_5: 2, total_6: 2, total_7: 2, total_8: 2, total_9: 2, total_10: 2 }]这种数组结构\n\n    for (let i = 0; i < _data.length; i++) {\n        if (_data[i].countProject || _data[i].countProject === 0) {\n            countProject.push({\n                projStatus: _data[i].projStatus,\n                countProject: _data[i].countProject\n            })\n        }\n        if (_data[i].totalProjectAmount || _data[i].totalProjectAmount === 0) {\n            totalProjectAmount.push({\n                projStatus: _data[i].projStatus,\n                totalProjectAmount:  _data[i].totalProjectAmount\n            })\n        }\n        if (_data[i].totalContractAmount || _data[i].totalContractAmount === 0) {\n            totalContractAmount.push({\n                projStatus: _data[i].projStatus,\n                totalContractAmount: _data[i].totalContractAmount\n            })\n        }\n    }\n\n    //因为有三行，所以需要调用deepDealArr这个函数三次 得到各自三个数组\n\n    let _countProject = this.deepDealArr(countProject, 1)\n    let _totalProjectAmount = this.deepDealArr(totalProjectAmount, 2)\n    let _totalContractAmount = this.deepDealArr(totalContractAmount, 3)\n    \n    //以下是为了把数组转成对象，然后把三行对象塞进数组中，这样表格就能出来了，\n    关键用到了Object.assign() 函数循环数组转成对象\n    let _count = {}\n    let _totalP = {}\n    let _totalC = {}\n    _countProject.map(function (e,item) {                        \n        Object.assign(_count, e);\n    });       \n    _totalProjectAmount.map(function (e,item) {                        \n        Object.assign(_totalP, e);\n    });        \n    _totalContractAmount.map(function (e,item) {                        \n        Object.assign(_totalC, e);\n    });      \n    let _newTable = [\n        _count,\n        _totalP,\n        _totalC\n    ]\n\n    this.table.data = _newTable\n\n}\n```\n这是模板文件：\n```\n<el-table :data=\"table.data\" style=\"width: 100%; margin-top: 20px;\" :loading=\"tableLoading\">\n    <el-table-column prop=\"typeName\" label=\"条目\"></el-table-column>\n    <el-table-column prop=\"total_1\" label=\"报备中\"></el-table-column>\n    <el-table-column prop=\"total_2\" label=\"已报备\"></el-table-column>\n    <el-table-column prop=\"total_3\" label=\"投标中\"></el-table-column> \n    <el-table-column prop=\"total_4\" label=\"已中标\"></el-table-column>\n    <el-table-column prop=\"total_6\" label=\"在建中\"></el-table-column>\n    <el-table-column prop=\"total_7\" label=\"已竣工\"></el-table-column>\n    <el-table-column prop=\"total_9\" label=\"已关闭\"></el-table-column>\n    <el-table-column prop=\"total_8\" label=\"已过期\"></el-table-column>\n    <el-table-column prop=\"total_10\" label=\"已删除\"></el-table-column>\n    <empty \n        v-if=\"table.data.length == 0\"\n        slot=\"empty\"\n        style=\"height: 500px\"\n        tips=\"抱歉！暂时没有数据\" \n        smallTips=\"暂时还没有相关的数据可以展示\"\n        >\n        <img src=\"~/assets/svg/table-empty.svg\" slot=\"img\"/>\n    </empty>\n</el-table>\n```\n用total_的后面的数字来对应列的状态值，这样就能一一对应上了，最后附上完成的效果图\n\n![](5.jpg)\n\n","source":"_posts/一个奇葩的表格统计需求.md","raw":"---\ntitle: 一个奇葩的表格统计需求\nabbrlink: 507fa396\ndate: 2019-06-17 15:41:51\ntags: \n    - vue \n    - js\ncategories: \n    - vue \n    - js\n---\n\n有个报表统计的需求，先上需求图：\n![](1.jpg)\n咋一看，好像挺简单啊，不就是一个表格吗？\n这么想那就大错特错了。这个需求实际上只有三行，也就是说需要统计“数量”，“项目造价金额”，“项目合同金额”这三个字段在不同状态下的值，也就是各列的“已报备”，“已中标”.... 等等。我们知道如果要实现这一的需求，必须要把“数量”，“项目造价金额”，“项目合同金额”这三个字段在各列中当成一个字段来处理，这样才会显示三行。比如element-ui的table的简单例子：\n![](2.jpg)\n![](3.jpg)\n那后端就要返回这样的格式了\n![](4.jpg)\n<font color=red>坑就坑在我们这个后端返回的数据结构上，他说他只能按照状态查询结果返回给我！</font>\n### 来看看他返回的数据结构是什么：\n```\n{\n\t\"code\":\"200\",\n\t\"message\":\"成功\",\n\t\"responseBody\":{\n\t\t\"code\":\"1\",\n\t\t\"data\":[\n\t\t\t{\n\t\t\t\t\"averageContractAmount\":0,\n\t\t\t\t\"countBuliding\":0,\n\t\t\t\t\"countContract\":0,\n\t\t\t\t\"countProject\":2,\n\t\t\t\t\"dayTime\":null,\n\t\t\t\t\"projStatus\":0,\n\t\t\t\t\"projStatusName\":\"草稿\",\n\t\t\t\t\"totalContractAmount\":0.00,\n\t\t\t\t\"totalProjectAmount\":17.94,\n\t\t\t\t\"totalReturnAmount\":0.00\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"averageContractAmount\":0,\n\t\t\t\t\"countBuliding\":0,\n\t\t\t\t\"countContract\":0,\n\t\t\t\t\"countProject\":12,\n\t\t\t\t\"dayTime\":null,\n\t\t\t\t\"projStatus\":1,\n\t\t\t\t\"projStatusName\":\"报备中\",\n\t\t\t\t\"totalContractAmount\":0.00,\n\t\t\t\t\"totalProjectAmount\":103.65,\n\t\t\t\t\"totalReturnAmount\":0.00\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"averageContractAmount\":0,\n\t\t\t\t\"countBuliding\":0,\n\t\t\t\t\"countContract\":0,\n\t\t\t\t\"countProject\":17,\n\t\t\t\t\"dayTime\":null,\n\t\t\t\t\"projStatus\":2,\n\t\t\t\t\"projStatusName\":\"已报备\",\n\t\t\t\t\"totalContractAmount\":0.00,\n\t\t\t\t\"totalProjectAmount\":5732.99,\n\t\t\t\t\"totalReturnAmount\":0.00\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"averageContractAmount\":0,\n\t\t\t\t\"countBuliding\":0,\n\t\t\t\t\"countContract\":0,\n\t\t\t\t\"countProject\":5,\n\t\t\t\t\"dayTime\":null,\n\t\t\t\t\"projStatus\":4,\n\t\t\t\t\"projStatusName\":\"已中标\",\n\t\t\t\t\"totalContractAmount\":4478.88,\n\t\t\t\t\"totalProjectAmount\":18.11,\n\t\t\t\t\"totalReturnAmount\":0.00\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"averageContractAmount\":0,\n\t\t\t\t\"countBuliding\":0,\n\t\t\t\t\"countContract\":0,\n\t\t\t\t\"countProject\":6,\n\t\t\t\t\"dayTime\":null,\n\t\t\t\t\"projStatus\":6,\n\t\t\t\t\"projStatusName\":\"建设中\",\n\t\t\t\t\"totalContractAmount\":14.10,\n\t\t\t\t\"totalProjectAmount\":154.01,\n\t\t\t\t\"totalReturnAmount\":0.00\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"averageContractAmount\":0,\n\t\t\t\t\"countBuliding\":0,\n\t\t\t\t\"countContract\":0,\n\t\t\t\t\"countProject\":1,\n\t\t\t\t\"dayTime\":null,\n\t\t\t\t\"projStatus\":7,\n\t\t\t\t\"projStatusName\":\"已竣工\",\n\t\t\t\t\"totalContractAmount\":1.00,\n\t\t\t\t\"totalProjectAmount\":1.00,\n\t\t\t\t\"totalReturnAmount\":0.00\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"averageContractAmount\":0,\n\t\t\t\t\"countBuliding\":0,\n\t\t\t\t\"countContract\":0,\n\t\t\t\t\"countProject\":1,\n\t\t\t\t\"dayTime\":null,\n\t\t\t\t\"projStatus\":10,\n\t\t\t\t\"projStatusName\":\"已删除\",\n\t\t\t\t\"totalContractAmount\":0.00,\n\t\t\t\t\"totalProjectAmount\":0.12,\n\t\t\t\t\"totalReturnAmount\":0.00\n\t\t\t}\n\t\t],\n\t\t\"message\":\"操作成功\"\n\t}\n}\n```\n其中`projStatus`就是上面提到的“报备中”，“已中标”等等列的状态值了，但是这样渲染出来的表格是10行，因为他数组没有处理，直接有多少个状态有值就返回多少条记录。实际上我前端这边需要的字段是这样的 \n```\n[\n    { typeName: '数量', projStatus: 1, total_1: 2, total_2: 2, total_3: 2, total_4: 2, total_5: 2, total_6: 2, total_7: 2, total_8: 2, total_9: 2, total_10: 2 },\n    { typeName: '项目造价金额（万）', projStatus: 1, total_1: 2, total_2: 2, total_3: 2, total_4: 2, total_5: 2, total_6: 2, total_7: 2, total_8: 2, total_9: 2, total_10: 2 },\n\n    { typeName: '项目合同金额（万）', projStatus: 1, total_1: 2, total_2: 2, total_3: 2, total_4: 2, total_5: 2, total_6: 2, total_7: 2, total_8: 2, total_9: 2, total_10: 2 } \n]\n```\n\n这就需要自己进行艰苦的数据处理了。。。\n根据他字段返回的 `countProject //数量` `totalProjectAmount //项目造价` `totalContractAmount //项目合同`  这三个字段分类把数据重新组合成三个数组。\n```\ndeepDealArr(data, num) {\n    let countProject = [];\n    let totalProjectAmount = [];\n    let totalContractAmount = [];\n    if (num === 1) {\n        let _data = this.utils.copy(data);\n        for (let i = 0; i < _data.length; i++) {\n            let ind = _data[i].projStatus\n            const dataObj = {}\n            dataObj.projStatus = _data[i].projStatus\n            dataObj['total_' + ind] = _data[i].countProject\n            countProject.push(dataObj)\n        }\n        countProject.splice(0, 0, { typeName: '数量' })\n        return countProject;\n    } else if (num === 2) {\n        let _data = this.utils.copy(data);\n        for (let i = 0; i < _data.length; i++) {\n            let ind = _data[i].projStatus\n            const dataObj = {}\n            dataObj.projStatus = _data[i].projStatus\n            dataObj['total_' + ind] = _data[i].totalProjectAmount\n            totalProjectAmount.push(dataObj)\n        }\n        totalProjectAmount.splice(0, 0, { typeName: '项目造价金额（万）' })\n        return totalProjectAmount;\n    } else {\n        let _data = this.utils.copy(data);\n        for (let i = 0; i < _data.length; i++) {\n            let ind = _data[i].projStatus\n            const dataObj = {}\n            dataObj.projStatus = _data[i].projStatus\n            dataObj['total_' + ind] = _data[i].totalContractAmount\n            totalContractAmount.push(dataObj)\n        }\n        totalContractAmount.splice(0, 0, { typeName: '项目合同金额（万）' })\n        return totalContractAmount;\n    }\n\n}\n\n\n/**\n* 处理返回数组\n*/\ndealArry(data) {\n    let _data = this.utils.copy(data);//这个data 就是后端返回的初始结构的数据\n    let countProject = []; //数量\n    let totalProjectAmount = [];//项目造价\n    let totalContractAmount = []; //项目合同\n\n\n    //处理出来的结果是类似 [{ typeName: '数量', projStatus: 1, total_1: 2, total_2: 2, total_3: 2, total_4: 2, total_5: 2, total_6: 2, total_7: 2, total_8: 2, total_9: 2, total_10: 2 }]这种数组结构\n\n    for (let i = 0; i < _data.length; i++) {\n        if (_data[i].countProject || _data[i].countProject === 0) {\n            countProject.push({\n                projStatus: _data[i].projStatus,\n                countProject: _data[i].countProject\n            })\n        }\n        if (_data[i].totalProjectAmount || _data[i].totalProjectAmount === 0) {\n            totalProjectAmount.push({\n                projStatus: _data[i].projStatus,\n                totalProjectAmount:  _data[i].totalProjectAmount\n            })\n        }\n        if (_data[i].totalContractAmount || _data[i].totalContractAmount === 0) {\n            totalContractAmount.push({\n                projStatus: _data[i].projStatus,\n                totalContractAmount: _data[i].totalContractAmount\n            })\n        }\n    }\n\n    //因为有三行，所以需要调用deepDealArr这个函数三次 得到各自三个数组\n\n    let _countProject = this.deepDealArr(countProject, 1)\n    let _totalProjectAmount = this.deepDealArr(totalProjectAmount, 2)\n    let _totalContractAmount = this.deepDealArr(totalContractAmount, 3)\n    \n    //以下是为了把数组转成对象，然后把三行对象塞进数组中，这样表格就能出来了，\n    关键用到了Object.assign() 函数循环数组转成对象\n    let _count = {}\n    let _totalP = {}\n    let _totalC = {}\n    _countProject.map(function (e,item) {                        \n        Object.assign(_count, e);\n    });       \n    _totalProjectAmount.map(function (e,item) {                        \n        Object.assign(_totalP, e);\n    });        \n    _totalContractAmount.map(function (e,item) {                        \n        Object.assign(_totalC, e);\n    });      \n    let _newTable = [\n        _count,\n        _totalP,\n        _totalC\n    ]\n\n    this.table.data = _newTable\n\n}\n```\n这是模板文件：\n```\n<el-table :data=\"table.data\" style=\"width: 100%; margin-top: 20px;\" :loading=\"tableLoading\">\n    <el-table-column prop=\"typeName\" label=\"条目\"></el-table-column>\n    <el-table-column prop=\"total_1\" label=\"报备中\"></el-table-column>\n    <el-table-column prop=\"total_2\" label=\"已报备\"></el-table-column>\n    <el-table-column prop=\"total_3\" label=\"投标中\"></el-table-column> \n    <el-table-column prop=\"total_4\" label=\"已中标\"></el-table-column>\n    <el-table-column prop=\"total_6\" label=\"在建中\"></el-table-column>\n    <el-table-column prop=\"total_7\" label=\"已竣工\"></el-table-column>\n    <el-table-column prop=\"total_9\" label=\"已关闭\"></el-table-column>\n    <el-table-column prop=\"total_8\" label=\"已过期\"></el-table-column>\n    <el-table-column prop=\"total_10\" label=\"已删除\"></el-table-column>\n    <empty \n        v-if=\"table.data.length == 0\"\n        slot=\"empty\"\n        style=\"height: 500px\"\n        tips=\"抱歉！暂时没有数据\" \n        smallTips=\"暂时还没有相关的数据可以展示\"\n        >\n        <img src=\"~/assets/svg/table-empty.svg\" slot=\"img\"/>\n    </empty>\n</el-table>\n```\n用total_的后面的数字来对应列的状态值，这样就能一一对应上了，最后附上完成的效果图\n\n![](5.jpg)\n\n","slug":"一个奇葩的表格统计需求","published":1,"updated":"2020-04-30T07:58:25.400Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0ocrvb000m40m06k9suzu9","content":"<p>有个报表统计的需求，先上需求图：<br><img src=\"1.jpg\" alt><br>咋一看，好像挺简单啊，不就是一个表格吗？<br>这么想那就大错特错了。这个需求实际上只有三行，也就是说需要统计“数量”，“项目造价金额”，“项目合同金额”这三个字段在不同状态下的值，也就是各列的“已报备”，“已中标”…. 等等。我们知道如果要实现这一的需求，必须要把“数量”，“项目造价金额”，“项目合同金额”这三个字段在各列中当成一个字段来处理，这样才会显示三行。比如element-ui的table的简单例子：<br><img src=\"2.jpg\" alt><br><img src=\"3.jpg\" alt><br>那后端就要返回这样的格式了<br><img src=\"4.jpg\" alt></p>\n<p><font color=\"red\">坑就坑在我们这个后端返回的数据结构上，他说他只能按照状态查询结果返回给我！</font></p>\n<h3 id=\"来看看他返回的数据结构是什么：\"><a href=\"#来看看他返回的数据结构是什么：\" class=\"headerlink\" title=\"来看看他返回的数据结构是什么：\"></a>来看看他返回的数据结构是什么：</h3><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"attr\">\"code\"</span>:<span class=\"string\">\"200\"</span>,</span><br><span class=\"line\">\t<span class=\"attr\">\"message\"</span>:<span class=\"string\">\"成功\"</span>,</span><br><span class=\"line\">\t<span class=\"attr\">\"responseBody\"</span>:&#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">\"code\"</span>:<span class=\"string\">\"1\"</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">\"data\"</span>:[</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"averageContractAmount\"</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"countBuliding\"</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"countContract\"</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"countProject\"</span>:<span class=\"number\">2</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"dayTime\"</span>:<span class=\"literal\">null</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"projStatus\"</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"projStatusName\"</span>:<span class=\"string\">\"草稿\"</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"totalContractAmount\"</span>:<span class=\"number\">0.00</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"totalProjectAmount\"</span>:<span class=\"number\">17.94</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"totalReturnAmount\"</span>:<span class=\"number\">0.00</span></span><br><span class=\"line\">\t\t\t&#125;,</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"averageContractAmount\"</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"countBuliding\"</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"countContract\"</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"countProject\"</span>:<span class=\"number\">12</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"dayTime\"</span>:<span class=\"literal\">null</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"projStatus\"</span>:<span class=\"number\">1</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"projStatusName\"</span>:<span class=\"string\">\"报备中\"</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"totalContractAmount\"</span>:<span class=\"number\">0.00</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"totalProjectAmount\"</span>:<span class=\"number\">103.65</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"totalReturnAmount\"</span>:<span class=\"number\">0.00</span></span><br><span class=\"line\">\t\t\t&#125;,</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"averageContractAmount\"</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"countBuliding\"</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"countContract\"</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"countProject\"</span>:<span class=\"number\">17</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"dayTime\"</span>:<span class=\"literal\">null</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"projStatus\"</span>:<span class=\"number\">2</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"projStatusName\"</span>:<span class=\"string\">\"已报备\"</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"totalContractAmount\"</span>:<span class=\"number\">0.00</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"totalProjectAmount\"</span>:<span class=\"number\">5732.99</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"totalReturnAmount\"</span>:<span class=\"number\">0.00</span></span><br><span class=\"line\">\t\t\t&#125;,</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"averageContractAmount\"</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"countBuliding\"</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"countContract\"</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"countProject\"</span>:<span class=\"number\">5</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"dayTime\"</span>:<span class=\"literal\">null</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"projStatus\"</span>:<span class=\"number\">4</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"projStatusName\"</span>:<span class=\"string\">\"已中标\"</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"totalContractAmount\"</span>:<span class=\"number\">4478.88</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"totalProjectAmount\"</span>:<span class=\"number\">18.11</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"totalReturnAmount\"</span>:<span class=\"number\">0.00</span></span><br><span class=\"line\">\t\t\t&#125;,</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"averageContractAmount\"</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"countBuliding\"</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"countContract\"</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"countProject\"</span>:<span class=\"number\">6</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"dayTime\"</span>:<span class=\"literal\">null</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"projStatus\"</span>:<span class=\"number\">6</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"projStatusName\"</span>:<span class=\"string\">\"建设中\"</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"totalContractAmount\"</span>:<span class=\"number\">14.10</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"totalProjectAmount\"</span>:<span class=\"number\">154.01</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"totalReturnAmount\"</span>:<span class=\"number\">0.00</span></span><br><span class=\"line\">\t\t\t&#125;,</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"averageContractAmount\"</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"countBuliding\"</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"countContract\"</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"countProject\"</span>:<span class=\"number\">1</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"dayTime\"</span>:<span class=\"literal\">null</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"projStatus\"</span>:<span class=\"number\">7</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"projStatusName\"</span>:<span class=\"string\">\"已竣工\"</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"totalContractAmount\"</span>:<span class=\"number\">1.00</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"totalProjectAmount\"</span>:<span class=\"number\">1.00</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"totalReturnAmount\"</span>:<span class=\"number\">0.00</span></span><br><span class=\"line\">\t\t\t&#125;,</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"averageContractAmount\"</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"countBuliding\"</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"countContract\"</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"countProject\"</span>:<span class=\"number\">1</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"dayTime\"</span>:<span class=\"literal\">null</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"projStatus\"</span>:<span class=\"number\">10</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"projStatusName\"</span>:<span class=\"string\">\"已删除\"</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"totalContractAmount\"</span>:<span class=\"number\">0.00</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"totalProjectAmount\"</span>:<span class=\"number\">0.12</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"totalReturnAmount\"</span>:<span class=\"number\">0.00</span></span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t],</span><br><span class=\"line\">\t\t<span class=\"attr\">\"message\"</span>:<span class=\"string\">\"操作成功\"</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>其中<code>projStatus</code>就是上面提到的“报备中”，“已中标”等等列的状态值了，但是这样渲染出来的表格是10行，因为他数组没有处理，直接有多少个状态有值就返回多少条记录。实际上我前端这边需要的字段是这样的<br><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">[</span></span><br><span class=\"line\">    <span class=\"string\">&#123;</span> <span class=\"attr\">typeName:</span> <span class=\"string\">'数量'</span><span class=\"string\">,</span> <span class=\"attr\">projStatus:</span> <span class=\"number\">1</span><span class=\"string\">,</span> <span class=\"attr\">total_1:</span> <span class=\"number\">2</span><span class=\"string\">,</span> <span class=\"attr\">total_2:</span> <span class=\"number\">2</span><span class=\"string\">,</span> <span class=\"attr\">total_3:</span> <span class=\"number\">2</span><span class=\"string\">,</span> <span class=\"attr\">total_4:</span> <span class=\"number\">2</span><span class=\"string\">,</span> <span class=\"attr\">total_5:</span> <span class=\"number\">2</span><span class=\"string\">,</span> <span class=\"attr\">total_6:</span> <span class=\"number\">2</span><span class=\"string\">,</span> <span class=\"attr\">total_7:</span> <span class=\"number\">2</span><span class=\"string\">,</span> <span class=\"attr\">total_8:</span> <span class=\"number\">2</span><span class=\"string\">,</span> <span class=\"attr\">total_9:</span> <span class=\"number\">2</span><span class=\"string\">,</span> <span class=\"attr\">total_10:</span> <span class=\"number\">2</span> <span class=\"string\">&#125;,</span></span><br><span class=\"line\">    <span class=\"string\">&#123;</span> <span class=\"attr\">typeName:</span> <span class=\"string\">'项目造价金额（万）'</span><span class=\"string\">,</span> <span class=\"attr\">projStatus:</span> <span class=\"number\">1</span><span class=\"string\">,</span> <span class=\"attr\">total_1:</span> <span class=\"number\">2</span><span class=\"string\">,</span> <span class=\"attr\">total_2:</span> <span class=\"number\">2</span><span class=\"string\">,</span> <span class=\"attr\">total_3:</span> <span class=\"number\">2</span><span class=\"string\">,</span> <span class=\"attr\">total_4:</span> <span class=\"number\">2</span><span class=\"string\">,</span> <span class=\"attr\">total_5:</span> <span class=\"number\">2</span><span class=\"string\">,</span> <span class=\"attr\">total_6:</span> <span class=\"number\">2</span><span class=\"string\">,</span> <span class=\"attr\">total_7:</span> <span class=\"number\">2</span><span class=\"string\">,</span> <span class=\"attr\">total_8:</span> <span class=\"number\">2</span><span class=\"string\">,</span> <span class=\"attr\">total_9:</span> <span class=\"number\">2</span><span class=\"string\">,</span> <span class=\"attr\">total_10:</span> <span class=\"number\">2</span> <span class=\"string\">&#125;,</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">&#123;</span> <span class=\"attr\">typeName:</span> <span class=\"string\">'项目合同金额（万）'</span><span class=\"string\">,</span> <span class=\"attr\">projStatus:</span> <span class=\"number\">1</span><span class=\"string\">,</span> <span class=\"attr\">total_1:</span> <span class=\"number\">2</span><span class=\"string\">,</span> <span class=\"attr\">total_2:</span> <span class=\"number\">2</span><span class=\"string\">,</span> <span class=\"attr\">total_3:</span> <span class=\"number\">2</span><span class=\"string\">,</span> <span class=\"attr\">total_4:</span> <span class=\"number\">2</span><span class=\"string\">,</span> <span class=\"attr\">total_5:</span> <span class=\"number\">2</span><span class=\"string\">,</span> <span class=\"attr\">total_6:</span> <span class=\"number\">2</span><span class=\"string\">,</span> <span class=\"attr\">total_7:</span> <span class=\"number\">2</span><span class=\"string\">,</span> <span class=\"attr\">total_8:</span> <span class=\"number\">2</span><span class=\"string\">,</span> <span class=\"attr\">total_9:</span> <span class=\"number\">2</span><span class=\"string\">,</span> <span class=\"attr\">total_10:</span> <span class=\"number\">2</span> <span class=\"string\">&#125;</span> </span><br><span class=\"line\"><span class=\"string\">]</span></span><br></pre></td></tr></table></figure></p>\n<p>这就需要自己进行艰苦的数据处理了。。。<br>根据他字段返回的 <code>countProject //数量</code> <code>totalProjectAmount //项目造价</code> <code>totalContractAmount //项目合同</code>  这三个字段分类把数据重新组合成三个数组。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deepDealArr(data, num) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> countProject = [];</span><br><span class=\"line\">    <span class=\"keyword\">let</span> totalProjectAmount = [];</span><br><span class=\"line\">    <span class=\"keyword\">let</span> totalContractAmount = [];</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (num === <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> _data = <span class=\"keyword\">this</span>.utils.copy(data);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; _data.length; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> ind = _data[i].projStatus</span><br><span class=\"line\">            <span class=\"keyword\">const</span> dataObj = &#123;&#125;</span><br><span class=\"line\">            dataObj.projStatus = _data[i].projStatus</span><br><span class=\"line\">            dataObj[<span class=\"string\">'total_'</span> + ind] = _data[i].countProject</span><br><span class=\"line\">            countProject.push(dataObj)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        countProject.splice(<span class=\"number\">0</span>, <span class=\"number\">0</span>, &#123; <span class=\"attr\">typeName</span>: <span class=\"string\">'数量'</span> &#125;)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> countProject;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (num === <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> _data = <span class=\"keyword\">this</span>.utils.copy(data);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; _data.length; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> ind = _data[i].projStatus</span><br><span class=\"line\">            <span class=\"keyword\">const</span> dataObj = &#123;&#125;</span><br><span class=\"line\">            dataObj.projStatus = _data[i].projStatus</span><br><span class=\"line\">            dataObj[<span class=\"string\">'total_'</span> + ind] = _data[i].totalProjectAmount</span><br><span class=\"line\">            totalProjectAmount.push(dataObj)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        totalProjectAmount.splice(<span class=\"number\">0</span>, <span class=\"number\">0</span>, &#123; <span class=\"attr\">typeName</span>: <span class=\"string\">'项目造价金额（万）'</span> &#125;)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> totalProjectAmount;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> _data = <span class=\"keyword\">this</span>.utils.copy(data);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; _data.length; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> ind = _data[i].projStatus</span><br><span class=\"line\">            <span class=\"keyword\">const</span> dataObj = &#123;&#125;</span><br><span class=\"line\">            dataObj.projStatus = _data[i].projStatus</span><br><span class=\"line\">            dataObj[<span class=\"string\">'total_'</span> + ind] = _data[i].totalContractAmount</span><br><span class=\"line\">            totalContractAmount.push(dataObj)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        totalContractAmount.splice(<span class=\"number\">0</span>, <span class=\"number\">0</span>, &#123; <span class=\"attr\">typeName</span>: <span class=\"string\">'项目合同金额（万）'</span> &#125;)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> totalContractAmount;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">* 处理返回数组</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\">dealArry(data) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> _data = <span class=\"keyword\">this</span>.utils.copy(data);<span class=\"comment\">//这个data 就是后端返回的初始结构的数据</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> countProject = []; <span class=\"comment\">//数量</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> totalProjectAmount = [];<span class=\"comment\">//项目造价</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> totalContractAmount = []; <span class=\"comment\">//项目合同</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//处理出来的结果是类似 [&#123; typeName: '数量', projStatus: 1, total_1: 2, total_2: 2, total_3: 2, total_4: 2, total_5: 2, total_6: 2, total_7: 2, total_8: 2, total_9: 2, total_10: 2 &#125;]这种数组结构</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; _data.length; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (_data[i].countProject || _data[i].countProject === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            countProject.push(&#123;</span><br><span class=\"line\">                projStatus: _data[i].projStatus,</span><br><span class=\"line\">                countProject: _data[i].countProject</span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (_data[i].totalProjectAmount || _data[i].totalProjectAmount === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            totalProjectAmount.push(&#123;</span><br><span class=\"line\">                projStatus: _data[i].projStatus,</span><br><span class=\"line\">                totalProjectAmount:  _data[i].totalProjectAmount</span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (_data[i].totalContractAmount || _data[i].totalContractAmount === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            totalContractAmount.push(&#123;</span><br><span class=\"line\">                projStatus: _data[i].projStatus,</span><br><span class=\"line\">                totalContractAmount: _data[i].totalContractAmount</span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//因为有三行，所以需要调用deepDealArr这个函数三次 得到各自三个数组</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">let</span> _countProject = <span class=\"keyword\">this</span>.deepDealArr(countProject, <span class=\"number\">1</span>)</span><br><span class=\"line\">    <span class=\"keyword\">let</span> _totalProjectAmount = <span class=\"keyword\">this</span>.deepDealArr(totalProjectAmount, <span class=\"number\">2</span>)</span><br><span class=\"line\">    <span class=\"keyword\">let</span> _totalContractAmount = <span class=\"keyword\">this</span>.deepDealArr(totalContractAmount, <span class=\"number\">3</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//以下是为了把数组转成对象，然后把三行对象塞进数组中，这样表格就能出来了，</span></span><br><span class=\"line\">    关键用到了<span class=\"built_in\">Object</span>.assign() 函数循环数组转成对象</span><br><span class=\"line\">    <span class=\"keyword\">let</span> _count = &#123;&#125;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> _totalP = &#123;&#125;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> _totalC = &#123;&#125;</span><br><span class=\"line\">    _countProject.map(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e,item</span>) </span>&#123;                        </span><br><span class=\"line\">        <span class=\"built_in\">Object</span>.assign(_count, e);</span><br><span class=\"line\">    &#125;);       </span><br><span class=\"line\">    _totalProjectAmount.map(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e,item</span>) </span>&#123;                        </span><br><span class=\"line\">        <span class=\"built_in\">Object</span>.assign(_totalP, e);</span><br><span class=\"line\">    &#125;);        </span><br><span class=\"line\">    _totalContractAmount.map(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e,item</span>) </span>&#123;                        </span><br><span class=\"line\">        <span class=\"built_in\">Object</span>.assign(_totalC, e);</span><br><span class=\"line\">    &#125;);      </span><br><span class=\"line\">    <span class=\"keyword\">let</span> _newTable = [</span><br><span class=\"line\">        _count,</span><br><span class=\"line\">        _totalP,</span><br><span class=\"line\">        _totalC</span><br><span class=\"line\">    ]</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.table.data = _newTable</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>这是模板文件：<br><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;el-<span class=\"keyword\">table</span> :data=<span class=\"string\">\"table.data\"</span> style=<span class=\"string\">\"width: 100%; margin-top: 20px;\"</span> :loading=<span class=\"string\">\"tableLoading\"</span>&gt;</span><br><span class=\"line\">    &lt;el-<span class=\"keyword\">table</span>-column <span class=\"keyword\">prop</span>=<span class=\"string\">\"typeName\"</span> <span class=\"keyword\">label</span>=<span class=\"string\">\"条目\"</span>&gt;&lt;/el-<span class=\"keyword\">table</span>-column&gt;</span><br><span class=\"line\">    &lt;el-<span class=\"keyword\">table</span>-column <span class=\"keyword\">prop</span>=<span class=\"string\">\"total_1\"</span> <span class=\"keyword\">label</span>=<span class=\"string\">\"报备中\"</span>&gt;&lt;/el-<span class=\"keyword\">table</span>-column&gt;</span><br><span class=\"line\">    &lt;el-<span class=\"keyword\">table</span>-column <span class=\"keyword\">prop</span>=<span class=\"string\">\"total_2\"</span> <span class=\"keyword\">label</span>=<span class=\"string\">\"已报备\"</span>&gt;&lt;/el-<span class=\"keyword\">table</span>-column&gt;</span><br><span class=\"line\">    &lt;el-<span class=\"keyword\">table</span>-column <span class=\"keyword\">prop</span>=<span class=\"string\">\"total_3\"</span> <span class=\"keyword\">label</span>=<span class=\"string\">\"投标中\"</span>&gt;&lt;/el-<span class=\"keyword\">table</span>-column&gt; </span><br><span class=\"line\">    &lt;el-<span class=\"keyword\">table</span>-column <span class=\"keyword\">prop</span>=<span class=\"string\">\"total_4\"</span> <span class=\"keyword\">label</span>=<span class=\"string\">\"已中标\"</span>&gt;&lt;/el-<span class=\"keyword\">table</span>-column&gt;</span><br><span class=\"line\">    &lt;el-<span class=\"keyword\">table</span>-column <span class=\"keyword\">prop</span>=<span class=\"string\">\"total_6\"</span> <span class=\"keyword\">label</span>=<span class=\"string\">\"在建中\"</span>&gt;&lt;/el-<span class=\"keyword\">table</span>-column&gt;</span><br><span class=\"line\">    &lt;el-<span class=\"keyword\">table</span>-column <span class=\"keyword\">prop</span>=<span class=\"string\">\"total_7\"</span> <span class=\"keyword\">label</span>=<span class=\"string\">\"已竣工\"</span>&gt;&lt;/el-<span class=\"keyword\">table</span>-column&gt;</span><br><span class=\"line\">    &lt;el-<span class=\"keyword\">table</span>-column <span class=\"keyword\">prop</span>=<span class=\"string\">\"total_9\"</span> <span class=\"keyword\">label</span>=<span class=\"string\">\"已关闭\"</span>&gt;&lt;/el-<span class=\"keyword\">table</span>-column&gt;</span><br><span class=\"line\">    &lt;el-<span class=\"keyword\">table</span>-column <span class=\"keyword\">prop</span>=<span class=\"string\">\"total_8\"</span> <span class=\"keyword\">label</span>=<span class=\"string\">\"已过期\"</span>&gt;&lt;/el-<span class=\"keyword\">table</span>-column&gt;</span><br><span class=\"line\">    &lt;el-<span class=\"keyword\">table</span>-column <span class=\"keyword\">prop</span>=<span class=\"string\">\"total_10\"</span> <span class=\"keyword\">label</span>=<span class=\"string\">\"已删除\"</span>&gt;&lt;/el-<span class=\"keyword\">table</span>-column&gt;</span><br><span class=\"line\">    &lt;empty </span><br><span class=\"line\">        v-<span class=\"keyword\">if</span>=<span class=\"string\">\"table.data.length == 0\"</span></span><br><span class=\"line\">        slot=<span class=\"string\">\"empty\"</span></span><br><span class=\"line\">        style=<span class=\"string\">\"height: 500px\"</span></span><br><span class=\"line\">        tips=<span class=\"string\">\"抱歉！暂时没有数据\"</span> </span><br><span class=\"line\">        smallTips=<span class=\"string\">\"暂时还没有相关的数据可以展示\"</span></span><br><span class=\"line\">        &gt;</span><br><span class=\"line\">        &lt;img src=<span class=\"string\">\"~/assets/svg/table-empty.svg\"</span> slot=<span class=\"string\">\"img\"</span>/&gt;</span><br><span class=\"line\">    &lt;/empty&gt;</span><br><span class=\"line\">&lt;/el-<span class=\"keyword\">table</span>&gt;</span><br></pre></td></tr></table></figure></p>\n<p>用total_的后面的数字来对应列的状态值，这样就能一一对应上了，最后附上完成的效果图</p>\n<p><img src=\"5.jpg\" alt></p>\n","site":{"data":{}},"excerpt":"","more":"<p>有个报表统计的需求，先上需求图：<br><img src=\"1.jpg\" alt><br>咋一看，好像挺简单啊，不就是一个表格吗？<br>这么想那就大错特错了。这个需求实际上只有三行，也就是说需要统计“数量”，“项目造价金额”，“项目合同金额”这三个字段在不同状态下的值，也就是各列的“已报备”，“已中标”…. 等等。我们知道如果要实现这一的需求，必须要把“数量”，“项目造价金额”，“项目合同金额”这三个字段在各列中当成一个字段来处理，这样才会显示三行。比如element-ui的table的简单例子：<br><img src=\"2.jpg\" alt><br><img src=\"3.jpg\" alt><br>那后端就要返回这样的格式了<br><img src=\"4.jpg\" alt></p>\n<p><font color=\"red\">坑就坑在我们这个后端返回的数据结构上，他说他只能按照状态查询结果返回给我！</font></p>\n<h3 id=\"来看看他返回的数据结构是什么：\"><a href=\"#来看看他返回的数据结构是什么：\" class=\"headerlink\" title=\"来看看他返回的数据结构是什么：\"></a>来看看他返回的数据结构是什么：</h3><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"attr\">\"code\"</span>:<span class=\"string\">\"200\"</span>,</span><br><span class=\"line\">\t<span class=\"attr\">\"message\"</span>:<span class=\"string\">\"成功\"</span>,</span><br><span class=\"line\">\t<span class=\"attr\">\"responseBody\"</span>:&#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">\"code\"</span>:<span class=\"string\">\"1\"</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">\"data\"</span>:[</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"averageContractAmount\"</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"countBuliding\"</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"countContract\"</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"countProject\"</span>:<span class=\"number\">2</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"dayTime\"</span>:<span class=\"literal\">null</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"projStatus\"</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"projStatusName\"</span>:<span class=\"string\">\"草稿\"</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"totalContractAmount\"</span>:<span class=\"number\">0.00</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"totalProjectAmount\"</span>:<span class=\"number\">17.94</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"totalReturnAmount\"</span>:<span class=\"number\">0.00</span></span><br><span class=\"line\">\t\t\t&#125;,</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"averageContractAmount\"</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"countBuliding\"</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"countContract\"</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"countProject\"</span>:<span class=\"number\">12</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"dayTime\"</span>:<span class=\"literal\">null</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"projStatus\"</span>:<span class=\"number\">1</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"projStatusName\"</span>:<span class=\"string\">\"报备中\"</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"totalContractAmount\"</span>:<span class=\"number\">0.00</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"totalProjectAmount\"</span>:<span class=\"number\">103.65</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"totalReturnAmount\"</span>:<span class=\"number\">0.00</span></span><br><span class=\"line\">\t\t\t&#125;,</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"averageContractAmount\"</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"countBuliding\"</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"countContract\"</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"countProject\"</span>:<span class=\"number\">17</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"dayTime\"</span>:<span class=\"literal\">null</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"projStatus\"</span>:<span class=\"number\">2</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"projStatusName\"</span>:<span class=\"string\">\"已报备\"</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"totalContractAmount\"</span>:<span class=\"number\">0.00</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"totalProjectAmount\"</span>:<span class=\"number\">5732.99</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"totalReturnAmount\"</span>:<span class=\"number\">0.00</span></span><br><span class=\"line\">\t\t\t&#125;,</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"averageContractAmount\"</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"countBuliding\"</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"countContract\"</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"countProject\"</span>:<span class=\"number\">5</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"dayTime\"</span>:<span class=\"literal\">null</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"projStatus\"</span>:<span class=\"number\">4</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"projStatusName\"</span>:<span class=\"string\">\"已中标\"</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"totalContractAmount\"</span>:<span class=\"number\">4478.88</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"totalProjectAmount\"</span>:<span class=\"number\">18.11</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"totalReturnAmount\"</span>:<span class=\"number\">0.00</span></span><br><span class=\"line\">\t\t\t&#125;,</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"averageContractAmount\"</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"countBuliding\"</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"countContract\"</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"countProject\"</span>:<span class=\"number\">6</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"dayTime\"</span>:<span class=\"literal\">null</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"projStatus\"</span>:<span class=\"number\">6</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"projStatusName\"</span>:<span class=\"string\">\"建设中\"</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"totalContractAmount\"</span>:<span class=\"number\">14.10</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"totalProjectAmount\"</span>:<span class=\"number\">154.01</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"totalReturnAmount\"</span>:<span class=\"number\">0.00</span></span><br><span class=\"line\">\t\t\t&#125;,</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"averageContractAmount\"</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"countBuliding\"</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"countContract\"</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"countProject\"</span>:<span class=\"number\">1</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"dayTime\"</span>:<span class=\"literal\">null</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"projStatus\"</span>:<span class=\"number\">7</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"projStatusName\"</span>:<span class=\"string\">\"已竣工\"</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"totalContractAmount\"</span>:<span class=\"number\">1.00</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"totalProjectAmount\"</span>:<span class=\"number\">1.00</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"totalReturnAmount\"</span>:<span class=\"number\">0.00</span></span><br><span class=\"line\">\t\t\t&#125;,</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"averageContractAmount\"</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"countBuliding\"</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"countContract\"</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"countProject\"</span>:<span class=\"number\">1</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"dayTime\"</span>:<span class=\"literal\">null</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"projStatus\"</span>:<span class=\"number\">10</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"projStatusName\"</span>:<span class=\"string\">\"已删除\"</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"totalContractAmount\"</span>:<span class=\"number\">0.00</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"totalProjectAmount\"</span>:<span class=\"number\">0.12</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">\"totalReturnAmount\"</span>:<span class=\"number\">0.00</span></span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t],</span><br><span class=\"line\">\t\t<span class=\"attr\">\"message\"</span>:<span class=\"string\">\"操作成功\"</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>其中<code>projStatus</code>就是上面提到的“报备中”，“已中标”等等列的状态值了，但是这样渲染出来的表格是10行，因为他数组没有处理，直接有多少个状态有值就返回多少条记录。实际上我前端这边需要的字段是这样的<br><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">[</span></span><br><span class=\"line\">    <span class=\"string\">&#123;</span> <span class=\"attr\">typeName:</span> <span class=\"string\">'数量'</span><span class=\"string\">,</span> <span class=\"attr\">projStatus:</span> <span class=\"number\">1</span><span class=\"string\">,</span> <span class=\"attr\">total_1:</span> <span class=\"number\">2</span><span class=\"string\">,</span> <span class=\"attr\">total_2:</span> <span class=\"number\">2</span><span class=\"string\">,</span> <span class=\"attr\">total_3:</span> <span class=\"number\">2</span><span class=\"string\">,</span> <span class=\"attr\">total_4:</span> <span class=\"number\">2</span><span class=\"string\">,</span> <span class=\"attr\">total_5:</span> <span class=\"number\">2</span><span class=\"string\">,</span> <span class=\"attr\">total_6:</span> <span class=\"number\">2</span><span class=\"string\">,</span> <span class=\"attr\">total_7:</span> <span class=\"number\">2</span><span class=\"string\">,</span> <span class=\"attr\">total_8:</span> <span class=\"number\">2</span><span class=\"string\">,</span> <span class=\"attr\">total_9:</span> <span class=\"number\">2</span><span class=\"string\">,</span> <span class=\"attr\">total_10:</span> <span class=\"number\">2</span> <span class=\"string\">&#125;,</span></span><br><span class=\"line\">    <span class=\"string\">&#123;</span> <span class=\"attr\">typeName:</span> <span class=\"string\">'项目造价金额（万）'</span><span class=\"string\">,</span> <span class=\"attr\">projStatus:</span> <span class=\"number\">1</span><span class=\"string\">,</span> <span class=\"attr\">total_1:</span> <span class=\"number\">2</span><span class=\"string\">,</span> <span class=\"attr\">total_2:</span> <span class=\"number\">2</span><span class=\"string\">,</span> <span class=\"attr\">total_3:</span> <span class=\"number\">2</span><span class=\"string\">,</span> <span class=\"attr\">total_4:</span> <span class=\"number\">2</span><span class=\"string\">,</span> <span class=\"attr\">total_5:</span> <span class=\"number\">2</span><span class=\"string\">,</span> <span class=\"attr\">total_6:</span> <span class=\"number\">2</span><span class=\"string\">,</span> <span class=\"attr\">total_7:</span> <span class=\"number\">2</span><span class=\"string\">,</span> <span class=\"attr\">total_8:</span> <span class=\"number\">2</span><span class=\"string\">,</span> <span class=\"attr\">total_9:</span> <span class=\"number\">2</span><span class=\"string\">,</span> <span class=\"attr\">total_10:</span> <span class=\"number\">2</span> <span class=\"string\">&#125;,</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">&#123;</span> <span class=\"attr\">typeName:</span> <span class=\"string\">'项目合同金额（万）'</span><span class=\"string\">,</span> <span class=\"attr\">projStatus:</span> <span class=\"number\">1</span><span class=\"string\">,</span> <span class=\"attr\">total_1:</span> <span class=\"number\">2</span><span class=\"string\">,</span> <span class=\"attr\">total_2:</span> <span class=\"number\">2</span><span class=\"string\">,</span> <span class=\"attr\">total_3:</span> <span class=\"number\">2</span><span class=\"string\">,</span> <span class=\"attr\">total_4:</span> <span class=\"number\">2</span><span class=\"string\">,</span> <span class=\"attr\">total_5:</span> <span class=\"number\">2</span><span class=\"string\">,</span> <span class=\"attr\">total_6:</span> <span class=\"number\">2</span><span class=\"string\">,</span> <span class=\"attr\">total_7:</span> <span class=\"number\">2</span><span class=\"string\">,</span> <span class=\"attr\">total_8:</span> <span class=\"number\">2</span><span class=\"string\">,</span> <span class=\"attr\">total_9:</span> <span class=\"number\">2</span><span class=\"string\">,</span> <span class=\"attr\">total_10:</span> <span class=\"number\">2</span> <span class=\"string\">&#125;</span> </span><br><span class=\"line\"><span class=\"string\">]</span></span><br></pre></td></tr></table></figure></p>\n<p>这就需要自己进行艰苦的数据处理了。。。<br>根据他字段返回的 <code>countProject //数量</code> <code>totalProjectAmount //项目造价</code> <code>totalContractAmount //项目合同</code>  这三个字段分类把数据重新组合成三个数组。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deepDealArr(data, num) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> countProject = [];</span><br><span class=\"line\">    <span class=\"keyword\">let</span> totalProjectAmount = [];</span><br><span class=\"line\">    <span class=\"keyword\">let</span> totalContractAmount = [];</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (num === <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> _data = <span class=\"keyword\">this</span>.utils.copy(data);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; _data.length; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> ind = _data[i].projStatus</span><br><span class=\"line\">            <span class=\"keyword\">const</span> dataObj = &#123;&#125;</span><br><span class=\"line\">            dataObj.projStatus = _data[i].projStatus</span><br><span class=\"line\">            dataObj[<span class=\"string\">'total_'</span> + ind] = _data[i].countProject</span><br><span class=\"line\">            countProject.push(dataObj)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        countProject.splice(<span class=\"number\">0</span>, <span class=\"number\">0</span>, &#123; <span class=\"attr\">typeName</span>: <span class=\"string\">'数量'</span> &#125;)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> countProject;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (num === <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> _data = <span class=\"keyword\">this</span>.utils.copy(data);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; _data.length; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> ind = _data[i].projStatus</span><br><span class=\"line\">            <span class=\"keyword\">const</span> dataObj = &#123;&#125;</span><br><span class=\"line\">            dataObj.projStatus = _data[i].projStatus</span><br><span class=\"line\">            dataObj[<span class=\"string\">'total_'</span> + ind] = _data[i].totalProjectAmount</span><br><span class=\"line\">            totalProjectAmount.push(dataObj)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        totalProjectAmount.splice(<span class=\"number\">0</span>, <span class=\"number\">0</span>, &#123; <span class=\"attr\">typeName</span>: <span class=\"string\">'项目造价金额（万）'</span> &#125;)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> totalProjectAmount;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> _data = <span class=\"keyword\">this</span>.utils.copy(data);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; _data.length; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> ind = _data[i].projStatus</span><br><span class=\"line\">            <span class=\"keyword\">const</span> dataObj = &#123;&#125;</span><br><span class=\"line\">            dataObj.projStatus = _data[i].projStatus</span><br><span class=\"line\">            dataObj[<span class=\"string\">'total_'</span> + ind] = _data[i].totalContractAmount</span><br><span class=\"line\">            totalContractAmount.push(dataObj)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        totalContractAmount.splice(<span class=\"number\">0</span>, <span class=\"number\">0</span>, &#123; <span class=\"attr\">typeName</span>: <span class=\"string\">'项目合同金额（万）'</span> &#125;)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> totalContractAmount;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">* 处理返回数组</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\">dealArry(data) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> _data = <span class=\"keyword\">this</span>.utils.copy(data);<span class=\"comment\">//这个data 就是后端返回的初始结构的数据</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> countProject = []; <span class=\"comment\">//数量</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> totalProjectAmount = [];<span class=\"comment\">//项目造价</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> totalContractAmount = []; <span class=\"comment\">//项目合同</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//处理出来的结果是类似 [&#123; typeName: '数量', projStatus: 1, total_1: 2, total_2: 2, total_3: 2, total_4: 2, total_5: 2, total_6: 2, total_7: 2, total_8: 2, total_9: 2, total_10: 2 &#125;]这种数组结构</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; _data.length; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (_data[i].countProject || _data[i].countProject === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            countProject.push(&#123;</span><br><span class=\"line\">                projStatus: _data[i].projStatus,</span><br><span class=\"line\">                countProject: _data[i].countProject</span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (_data[i].totalProjectAmount || _data[i].totalProjectAmount === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            totalProjectAmount.push(&#123;</span><br><span class=\"line\">                projStatus: _data[i].projStatus,</span><br><span class=\"line\">                totalProjectAmount:  _data[i].totalProjectAmount</span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (_data[i].totalContractAmount || _data[i].totalContractAmount === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            totalContractAmount.push(&#123;</span><br><span class=\"line\">                projStatus: _data[i].projStatus,</span><br><span class=\"line\">                totalContractAmount: _data[i].totalContractAmount</span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//因为有三行，所以需要调用deepDealArr这个函数三次 得到各自三个数组</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">let</span> _countProject = <span class=\"keyword\">this</span>.deepDealArr(countProject, <span class=\"number\">1</span>)</span><br><span class=\"line\">    <span class=\"keyword\">let</span> _totalProjectAmount = <span class=\"keyword\">this</span>.deepDealArr(totalProjectAmount, <span class=\"number\">2</span>)</span><br><span class=\"line\">    <span class=\"keyword\">let</span> _totalContractAmount = <span class=\"keyword\">this</span>.deepDealArr(totalContractAmount, <span class=\"number\">3</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//以下是为了把数组转成对象，然后把三行对象塞进数组中，这样表格就能出来了，</span></span><br><span class=\"line\">    关键用到了<span class=\"built_in\">Object</span>.assign() 函数循环数组转成对象</span><br><span class=\"line\">    <span class=\"keyword\">let</span> _count = &#123;&#125;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> _totalP = &#123;&#125;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> _totalC = &#123;&#125;</span><br><span class=\"line\">    _countProject.map(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e,item</span>) </span>&#123;                        </span><br><span class=\"line\">        <span class=\"built_in\">Object</span>.assign(_count, e);</span><br><span class=\"line\">    &#125;);       </span><br><span class=\"line\">    _totalProjectAmount.map(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e,item</span>) </span>&#123;                        </span><br><span class=\"line\">        <span class=\"built_in\">Object</span>.assign(_totalP, e);</span><br><span class=\"line\">    &#125;);        </span><br><span class=\"line\">    _totalContractAmount.map(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e,item</span>) </span>&#123;                        </span><br><span class=\"line\">        <span class=\"built_in\">Object</span>.assign(_totalC, e);</span><br><span class=\"line\">    &#125;);      </span><br><span class=\"line\">    <span class=\"keyword\">let</span> _newTable = [</span><br><span class=\"line\">        _count,</span><br><span class=\"line\">        _totalP,</span><br><span class=\"line\">        _totalC</span><br><span class=\"line\">    ]</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.table.data = _newTable</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>这是模板文件：<br><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;el-<span class=\"keyword\">table</span> :data=<span class=\"string\">\"table.data\"</span> style=<span class=\"string\">\"width: 100%; margin-top: 20px;\"</span> :loading=<span class=\"string\">\"tableLoading\"</span>&gt;</span><br><span class=\"line\">    &lt;el-<span class=\"keyword\">table</span>-column <span class=\"keyword\">prop</span>=<span class=\"string\">\"typeName\"</span> <span class=\"keyword\">label</span>=<span class=\"string\">\"条目\"</span>&gt;&lt;/el-<span class=\"keyword\">table</span>-column&gt;</span><br><span class=\"line\">    &lt;el-<span class=\"keyword\">table</span>-column <span class=\"keyword\">prop</span>=<span class=\"string\">\"total_1\"</span> <span class=\"keyword\">label</span>=<span class=\"string\">\"报备中\"</span>&gt;&lt;/el-<span class=\"keyword\">table</span>-column&gt;</span><br><span class=\"line\">    &lt;el-<span class=\"keyword\">table</span>-column <span class=\"keyword\">prop</span>=<span class=\"string\">\"total_2\"</span> <span class=\"keyword\">label</span>=<span class=\"string\">\"已报备\"</span>&gt;&lt;/el-<span class=\"keyword\">table</span>-column&gt;</span><br><span class=\"line\">    &lt;el-<span class=\"keyword\">table</span>-column <span class=\"keyword\">prop</span>=<span class=\"string\">\"total_3\"</span> <span class=\"keyword\">label</span>=<span class=\"string\">\"投标中\"</span>&gt;&lt;/el-<span class=\"keyword\">table</span>-column&gt; </span><br><span class=\"line\">    &lt;el-<span class=\"keyword\">table</span>-column <span class=\"keyword\">prop</span>=<span class=\"string\">\"total_4\"</span> <span class=\"keyword\">label</span>=<span class=\"string\">\"已中标\"</span>&gt;&lt;/el-<span class=\"keyword\">table</span>-column&gt;</span><br><span class=\"line\">    &lt;el-<span class=\"keyword\">table</span>-column <span class=\"keyword\">prop</span>=<span class=\"string\">\"total_6\"</span> <span class=\"keyword\">label</span>=<span class=\"string\">\"在建中\"</span>&gt;&lt;/el-<span class=\"keyword\">table</span>-column&gt;</span><br><span class=\"line\">    &lt;el-<span class=\"keyword\">table</span>-column <span class=\"keyword\">prop</span>=<span class=\"string\">\"total_7\"</span> <span class=\"keyword\">label</span>=<span class=\"string\">\"已竣工\"</span>&gt;&lt;/el-<span class=\"keyword\">table</span>-column&gt;</span><br><span class=\"line\">    &lt;el-<span class=\"keyword\">table</span>-column <span class=\"keyword\">prop</span>=<span class=\"string\">\"total_9\"</span> <span class=\"keyword\">label</span>=<span class=\"string\">\"已关闭\"</span>&gt;&lt;/el-<span class=\"keyword\">table</span>-column&gt;</span><br><span class=\"line\">    &lt;el-<span class=\"keyword\">table</span>-column <span class=\"keyword\">prop</span>=<span class=\"string\">\"total_8\"</span> <span class=\"keyword\">label</span>=<span class=\"string\">\"已过期\"</span>&gt;&lt;/el-<span class=\"keyword\">table</span>-column&gt;</span><br><span class=\"line\">    &lt;el-<span class=\"keyword\">table</span>-column <span class=\"keyword\">prop</span>=<span class=\"string\">\"total_10\"</span> <span class=\"keyword\">label</span>=<span class=\"string\">\"已删除\"</span>&gt;&lt;/el-<span class=\"keyword\">table</span>-column&gt;</span><br><span class=\"line\">    &lt;empty </span><br><span class=\"line\">        v-<span class=\"keyword\">if</span>=<span class=\"string\">\"table.data.length == 0\"</span></span><br><span class=\"line\">        slot=<span class=\"string\">\"empty\"</span></span><br><span class=\"line\">        style=<span class=\"string\">\"height: 500px\"</span></span><br><span class=\"line\">        tips=<span class=\"string\">\"抱歉！暂时没有数据\"</span> </span><br><span class=\"line\">        smallTips=<span class=\"string\">\"暂时还没有相关的数据可以展示\"</span></span><br><span class=\"line\">        &gt;</span><br><span class=\"line\">        &lt;img src=<span class=\"string\">\"~/assets/svg/table-empty.svg\"</span> slot=<span class=\"string\">\"img\"</span>/&gt;</span><br><span class=\"line\">    &lt;/empty&gt;</span><br><span class=\"line\">&lt;/el-<span class=\"keyword\">table</span>&gt;</span><br></pre></td></tr></table></figure></p>\n<p>用total_的后面的数字来对应列的状态值，这样就能一一对应上了，最后附上完成的效果图</p>\n<p><img src=\"5.jpg\" alt></p>\n"},{"title":"在重启阿里云ubantu后nginx、mysql、pm2等的重启","abbrlink":"c20fd3fa","date":"2019-07-05T01:25:24.000Z","_content":"由于对linux的不熟，很多命令都记不住，2018年也是花了几天时间才把服务器环境搭起来，部署了nodejs的水研村官网前后端、部署了“账目随身记”小程序后端，并且利用nginx做了小程序需要的ssl证书转发https，现在已经忘了具体的操作了，免费ssl证书准备过期了，准备又得重新折腾了，下次一定得记录下来。\n好了，在重启服务器之前得做点准备工作，得先找出nginx安装得目录，mysql安装得目录，到时候可以直接去到目录下直接执行例如./nginx这样来启动。我以为大多数linux安装目录都差不多，于是直接网上搜别人得，结果结果不是我想要的，后来我问了位前同事，用whereis nginx 来查找nginx的位置，然后出现了以下目录：\n![](2.png)\n红色圈起来的才是我的nginx的安装目录，nginx就是可执行文件，另外，经过多次摸索和回忆，配置文件在蓝色圈起来的地方，\n具体的位置是：\n![](1.png)\n`nginx -t`为查找nginx配置文件所在的目录。\n然后默认的default配置文件我没用，我自己写了个small.conf配置文件，里面配置了syc.iyuge.cn 水研村官网前台的转发地址，以及小程序需要的account后端的https的ssl配置\n具体代码如下：\n```\n\nserver {\n    listen 443;\n    server_name small.iyuge.cn;\n    access_log /var/www/log/small-access.log;\n    error_log  /var/www/log/small-error.log;\n    ssl on;\n    ssl_certificate   /etc/nginx/cert/214999081890300.pem; #指定服务器证书路径 \n    ssl_certificate_key /etc/nginx/cert/214999081890300.key; #指定私钥证书路径\n    ssl_session_timeout 5m;\n    #ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;\n    ssl_ciphers  ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP; #指定加密算法 \n    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;#指定SSL服务器端支持的协议版本 \n    ssl_prefer_server_ciphers on;\n\n    location / {\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header Host $http_host;\n        proxy_set_header X-NginX-Proxy true;\n        proxy_pass http://127.0.0.1:3000/;\n        proxy_redirect off;\n    }\n}\n\nserver {\n    listen 80;\n    server_name syc.iyuge.cn; #这是水研村前台官网的映射\n    \n    location / {\n       \n\troot /root/code/shuiyancun_vue;\n\tindex  index.html index.htm;\n    }\n}\n\n```\n至于这个证书是怎么跟我的account关联起来的，这个我还真的忘了，我没记错的话，account和shuiyancun_back都有个nginx.conf文件,去看了下，account居然没有？只有shuiyancun_back才有。\n想起来了，原来是需要在阿里云官网开放相应的端口后，外网才能访问的，而我是用pm2来启动项目的，也会有端口号，如图：\n![](3.png)\n<font color=#ff6a00>至于怎么制作ssl证书，等我两个月后证书过期了，再摸索一次记录下来吧</font>\n重启mginx的方法可以去到`/usr/sbin/nginx`目录，执行./nginx 启动。启动mysql的方式可以有两种：1.和nginx一样，但是要加用户名和密码，`./mysql  -u root -p` 然后输入密码就打开数据库了；2.直接 `mysql -u root -p` 输入密码。\n\n另外如果发现停止了PM2中某个项目的时候，还能运行，则说明这个程序已经以另外一种方式在运行了，我们需要查找正在运行的nodejs进程:`ps aux | grep node`\n发现有进程后，直接`kill 具体pid `就可以了\n\n最后就是项目的启动了，进到项目目录执行 `pm2 restart（或者start） pm2.json\n（因为有配置文件了）` 就可以启动项目了\n注意：<font color=#ff6a00>不知道为什么pm2只能监控watch一个项目，如果是两个都watch，另一个项目无法跑起来，所以我的水研村后台就不watch了</font>","source":"_posts/在重启阿里云ubantu后nginx、mysql、pm2等的重启.md","raw":"---\ntitle: 在重启阿里云ubantu后nginx、mysql、pm2等的重启\nabbrlink: c20fd3fa\ndate: 2019-07-05 09:25:24\ntags: linux\ncategories: linux\n---\n由于对linux的不熟，很多命令都记不住，2018年也是花了几天时间才把服务器环境搭起来，部署了nodejs的水研村官网前后端、部署了“账目随身记”小程序后端，并且利用nginx做了小程序需要的ssl证书转发https，现在已经忘了具体的操作了，免费ssl证书准备过期了，准备又得重新折腾了，下次一定得记录下来。\n好了，在重启服务器之前得做点准备工作，得先找出nginx安装得目录，mysql安装得目录，到时候可以直接去到目录下直接执行例如./nginx这样来启动。我以为大多数linux安装目录都差不多，于是直接网上搜别人得，结果结果不是我想要的，后来我问了位前同事，用whereis nginx 来查找nginx的位置，然后出现了以下目录：\n![](2.png)\n红色圈起来的才是我的nginx的安装目录，nginx就是可执行文件，另外，经过多次摸索和回忆，配置文件在蓝色圈起来的地方，\n具体的位置是：\n![](1.png)\n`nginx -t`为查找nginx配置文件所在的目录。\n然后默认的default配置文件我没用，我自己写了个small.conf配置文件，里面配置了syc.iyuge.cn 水研村官网前台的转发地址，以及小程序需要的account后端的https的ssl配置\n具体代码如下：\n```\n\nserver {\n    listen 443;\n    server_name small.iyuge.cn;\n    access_log /var/www/log/small-access.log;\n    error_log  /var/www/log/small-error.log;\n    ssl on;\n    ssl_certificate   /etc/nginx/cert/214999081890300.pem; #指定服务器证书路径 \n    ssl_certificate_key /etc/nginx/cert/214999081890300.key; #指定私钥证书路径\n    ssl_session_timeout 5m;\n    #ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;\n    ssl_ciphers  ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP; #指定加密算法 \n    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;#指定SSL服务器端支持的协议版本 \n    ssl_prefer_server_ciphers on;\n\n    location / {\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header Host $http_host;\n        proxy_set_header X-NginX-Proxy true;\n        proxy_pass http://127.0.0.1:3000/;\n        proxy_redirect off;\n    }\n}\n\nserver {\n    listen 80;\n    server_name syc.iyuge.cn; #这是水研村前台官网的映射\n    \n    location / {\n       \n\troot /root/code/shuiyancun_vue;\n\tindex  index.html index.htm;\n    }\n}\n\n```\n至于这个证书是怎么跟我的account关联起来的，这个我还真的忘了，我没记错的话，account和shuiyancun_back都有个nginx.conf文件,去看了下，account居然没有？只有shuiyancun_back才有。\n想起来了，原来是需要在阿里云官网开放相应的端口后，外网才能访问的，而我是用pm2来启动项目的，也会有端口号，如图：\n![](3.png)\n<font color=#ff6a00>至于怎么制作ssl证书，等我两个月后证书过期了，再摸索一次记录下来吧</font>\n重启mginx的方法可以去到`/usr/sbin/nginx`目录，执行./nginx 启动。启动mysql的方式可以有两种：1.和nginx一样，但是要加用户名和密码，`./mysql  -u root -p` 然后输入密码就打开数据库了；2.直接 `mysql -u root -p` 输入密码。\n\n另外如果发现停止了PM2中某个项目的时候，还能运行，则说明这个程序已经以另外一种方式在运行了，我们需要查找正在运行的nodejs进程:`ps aux | grep node`\n发现有进程后，直接`kill 具体pid `就可以了\n\n最后就是项目的启动了，进到项目目录执行 `pm2 restart（或者start） pm2.json\n（因为有配置文件了）` 就可以启动项目了\n注意：<font color=#ff6a00>不知道为什么pm2只能监控watch一个项目，如果是两个都watch，另一个项目无法跑起来，所以我的水研村后台就不watch了</font>","slug":"在重启阿里云ubantu后nginx、mysql、pm2等的重启","published":1,"updated":"2020-04-30T07:58:25.404Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0ocrve000r40m03erzdjj7","content":"<p>由于对linux的不熟，很多命令都记不住，2018年也是花了几天时间才把服务器环境搭起来，部署了nodejs的水研村官网前后端、部署了“账目随身记”小程序后端，并且利用nginx做了小程序需要的ssl证书转发https，现在已经忘了具体的操作了，免费ssl证书准备过期了，准备又得重新折腾了，下次一定得记录下来。<br>好了，在重启服务器之前得做点准备工作，得先找出nginx安装得目录，mysql安装得目录，到时候可以直接去到目录下直接执行例如./nginx这样来启动。我以为大多数linux安装目录都差不多，于是直接网上搜别人得，结果结果不是我想要的，后来我问了位前同事，用whereis nginx 来查找nginx的位置，然后出现了以下目录：<br><img src=\"2.png\" alt><br>红色圈起来的才是我的nginx的安装目录，nginx就是可执行文件，另外，经过多次摸索和回忆，配置文件在蓝色圈起来的地方，<br>具体的位置是：<br><img src=\"1.png\" alt><br><code>nginx -t</code>为查找nginx配置文件所在的目录。<br>然后默认的default配置文件我没用，我自己写了个small.conf配置文件，里面配置了syc.iyuge.cn 水研村官网前台的转发地址，以及小程序需要的account后端的https的ssl配置<br>具体代码如下：<br><figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">server</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">listen</span> <span class=\"number\">443</span>;</span><br><span class=\"line\">    <span class=\"attribute\">server_name</span> small.iyuge.cn;</span><br><span class=\"line\">    <span class=\"attribute\">access_log</span> /var/www/log/small-access.log;</span><br><span class=\"line\">    <span class=\"attribute\">error_log</span>  /var/www/log/small-<span class=\"literal\">error</span>.log;</span><br><span class=\"line\">    <span class=\"attribute\">ssl</span> <span class=\"literal\">on</span>;</span><br><span class=\"line\">    <span class=\"attribute\">ssl_certificate</span>   /etc/nginx/cert/<span class=\"number\">214999081890300</span>.pem; <span class=\"comment\">#指定服务器证书路径 </span></span><br><span class=\"line\">    <span class=\"attribute\">ssl_certificate_key</span> /etc/nginx/cert/<span class=\"number\">214999081890300</span>.key; <span class=\"comment\">#指定私钥证书路径</span></span><br><span class=\"line\">    <span class=\"attribute\">ssl_session_timeout</span> <span class=\"number\">5m</span>;</span><br><span class=\"line\">    <span class=\"comment\">#ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;</span></span><br><span class=\"line\">    <span class=\"attribute\">ssl_ciphers</span>  ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP; <span class=\"comment\">#指定加密算法 </span></span><br><span class=\"line\">    <span class=\"attribute\">ssl_protocols</span> TLSv1 TLSv1.<span class=\"number\">1</span> TLSv1.<span class=\"number\">2</span>;<span class=\"comment\">#指定SSL服务器端支持的协议版本 </span></span><br><span class=\"line\">    <span class=\"attribute\">ssl_prefer_server_ciphers</span> <span class=\"literal\">on</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"attribute\">location</span> / &#123;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_set_header</span> X-Real-IP <span class=\"variable\">$remote_addr</span>;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_set_header</span> X-Forwarded-For <span class=\"variable\">$proxy_add_x_forwarded_for</span>;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_set_header</span> Host <span class=\"variable\">$http_host</span>;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_set_header</span> X-NginX-Proxy <span class=\"literal\">true</span>;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_pass</span> http://127.0.0.1:3000/;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_redirect</span> <span class=\"literal\">off</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">server</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">listen</span> <span class=\"number\">80</span>;</span><br><span class=\"line\">    <span class=\"attribute\">server_name</span> syc.iyuge.cn; <span class=\"comment\">#这是水研村前台官网的映射</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"attribute\">location</span> / &#123;</span><br><span class=\"line\">       </span><br><span class=\"line\">\t<span class=\"attribute\">root</span> /root/code/shuiyancun_vue;</span><br><span class=\"line\">\t<span class=\"attribute\">index</span>  index.html index.htm;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>至于这个证书是怎么跟我的account关联起来的，这个我还真的忘了，我没记错的话，account和shuiyancun_back都有个nginx.conf文件,去看了下，account居然没有？只有shuiyancun_back才有。<br>想起来了，原来是需要在阿里云官网开放相应的端口后，外网才能访问的，而我是用pm2来启动项目的，也会有端口号，如图：<br><img src=\"3.png\" alt></p>\n<font color=\"#ff6a00\">至于怎么制作ssl证书，等我两个月后证书过期了，再摸索一次记录下来吧</font><br>重启mginx的方法可以去到<code>/usr/sbin/nginx</code>目录，执行./nginx 启动。启动mysql的方式可以有两种：1.和nginx一样，但是要加用户名和密码，<code>./mysql  -u root -p</code> 然后输入密码就打开数据库了；2.直接 <code>mysql -u root -p</code> 输入密码。<br><br>另外如果发现停止了PM2中某个项目的时候，还能运行，则说明这个程序已经以另外一种方式在运行了，我们需要查找正在运行的nodejs进程:<code>ps aux | grep node</code><br>发现有进程后，直接<code>kill 具体pid</code>就可以了<br><br>最后就是项目的启动了，进到项目目录执行 <code>pm2 restart（或者start） pm2.json\n（因为有配置文件了）</code> 就可以启动项目了<br>注意：<font color=\"#ff6a00\">不知道为什么pm2只能监控watch一个项目，如果是两个都watch，另一个项目无法跑起来，所以我的水研村后台就不watch了</font>","site":{"data":{}},"excerpt":"","more":"<p>由于对linux的不熟，很多命令都记不住，2018年也是花了几天时间才把服务器环境搭起来，部署了nodejs的水研村官网前后端、部署了“账目随身记”小程序后端，并且利用nginx做了小程序需要的ssl证书转发https，现在已经忘了具体的操作了，免费ssl证书准备过期了，准备又得重新折腾了，下次一定得记录下来。<br>好了，在重启服务器之前得做点准备工作，得先找出nginx安装得目录，mysql安装得目录，到时候可以直接去到目录下直接执行例如./nginx这样来启动。我以为大多数linux安装目录都差不多，于是直接网上搜别人得，结果结果不是我想要的，后来我问了位前同事，用whereis nginx 来查找nginx的位置，然后出现了以下目录：<br><img src=\"2.png\" alt><br>红色圈起来的才是我的nginx的安装目录，nginx就是可执行文件，另外，经过多次摸索和回忆，配置文件在蓝色圈起来的地方，<br>具体的位置是：<br><img src=\"1.png\" alt><br><code>nginx -t</code>为查找nginx配置文件所在的目录。<br>然后默认的default配置文件我没用，我自己写了个small.conf配置文件，里面配置了syc.iyuge.cn 水研村官网前台的转发地址，以及小程序需要的account后端的https的ssl配置<br>具体代码如下：<br><figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">server</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">listen</span> <span class=\"number\">443</span>;</span><br><span class=\"line\">    <span class=\"attribute\">server_name</span> small.iyuge.cn;</span><br><span class=\"line\">    <span class=\"attribute\">access_log</span> /var/www/log/small-access.log;</span><br><span class=\"line\">    <span class=\"attribute\">error_log</span>  /var/www/log/small-<span class=\"literal\">error</span>.log;</span><br><span class=\"line\">    <span class=\"attribute\">ssl</span> <span class=\"literal\">on</span>;</span><br><span class=\"line\">    <span class=\"attribute\">ssl_certificate</span>   /etc/nginx/cert/<span class=\"number\">214999081890300</span>.pem; <span class=\"comment\">#指定服务器证书路径 </span></span><br><span class=\"line\">    <span class=\"attribute\">ssl_certificate_key</span> /etc/nginx/cert/<span class=\"number\">214999081890300</span>.key; <span class=\"comment\">#指定私钥证书路径</span></span><br><span class=\"line\">    <span class=\"attribute\">ssl_session_timeout</span> <span class=\"number\">5m</span>;</span><br><span class=\"line\">    <span class=\"comment\">#ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;</span></span><br><span class=\"line\">    <span class=\"attribute\">ssl_ciphers</span>  ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP; <span class=\"comment\">#指定加密算法 </span></span><br><span class=\"line\">    <span class=\"attribute\">ssl_protocols</span> TLSv1 TLSv1.<span class=\"number\">1</span> TLSv1.<span class=\"number\">2</span>;<span class=\"comment\">#指定SSL服务器端支持的协议版本 </span></span><br><span class=\"line\">    <span class=\"attribute\">ssl_prefer_server_ciphers</span> <span class=\"literal\">on</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"attribute\">location</span> / &#123;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_set_header</span> X-Real-IP <span class=\"variable\">$remote_addr</span>;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_set_header</span> X-Forwarded-For <span class=\"variable\">$proxy_add_x_forwarded_for</span>;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_set_header</span> Host <span class=\"variable\">$http_host</span>;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_set_header</span> X-NginX-Proxy <span class=\"literal\">true</span>;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_pass</span> http://127.0.0.1:3000/;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_redirect</span> <span class=\"literal\">off</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">server</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">listen</span> <span class=\"number\">80</span>;</span><br><span class=\"line\">    <span class=\"attribute\">server_name</span> syc.iyuge.cn; <span class=\"comment\">#这是水研村前台官网的映射</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"attribute\">location</span> / &#123;</span><br><span class=\"line\">       </span><br><span class=\"line\">\t<span class=\"attribute\">root</span> /root/code/shuiyancun_vue;</span><br><span class=\"line\">\t<span class=\"attribute\">index</span>  index.html index.htm;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>至于这个证书是怎么跟我的account关联起来的，这个我还真的忘了，我没记错的话，account和shuiyancun_back都有个nginx.conf文件,去看了下，account居然没有？只有shuiyancun_back才有。<br>想起来了，原来是需要在阿里云官网开放相应的端口后，外网才能访问的，而我是用pm2来启动项目的，也会有端口号，如图：<br><img src=\"3.png\" alt></p>\n<font color=\"#ff6a00\">至于怎么制作ssl证书，等我两个月后证书过期了，再摸索一次记录下来吧</font><br>重启mginx的方法可以去到<code>/usr/sbin/nginx</code>目录，执行./nginx 启动。启动mysql的方式可以有两种：1.和nginx一样，但是要加用户名和密码，<code>./mysql  -u root -p</code> 然后输入密码就打开数据库了；2.直接 <code>mysql -u root -p</code> 输入密码。<br><br>另外如果发现停止了PM2中某个项目的时候，还能运行，则说明这个程序已经以另外一种方式在运行了，我们需要查找正在运行的nodejs进程:<code>ps aux | grep node</code><br>发现有进程后，直接<code>kill 具体pid</code>就可以了<br><br>最后就是项目的启动了，进到项目目录执行 <code>pm2 restart（或者start） pm2.json\n（因为有配置文件了）</code> 就可以启动项目了<br>注意：<font color=\"#ff6a00\">不知道为什么pm2只能监控watch一个项目，如果是两个都watch，另一个项目无法跑起来，所以我的水研村后台就不watch了</font>"},{"title":"实现一个简单的深拷贝","abbrlink":"25ca6631","date":"2019-03-30T11:42:44.000Z","_content":"\n在js中经常需要用到变量的拷贝，比如`var a=1;var b=a;` 这个时候修改b的值，a不会改变`b=2;console.log(a); //1`,但是需要注意，这种方式拷贝属于浅拷贝，只局限在简单类型的拷贝：string、number、boolean、null、undefiend。如果你用这种方式拷贝一个数组或者对象，那么就得注意了，\n```\nvar a=[1,2,3]; \nvar b=a;\nb[0]=66;\nconsole.log(a); //[66,2,3];\n```\n可以看到，b的值变了，a也变了，所以对于数组和对象不能用这种浅拷贝，因为拷贝的只是引用地址，实际上还是同一个，不过在有一种情况下，修改复制后的变量，被复制的变量不会跟着改变，那就是复制后，给复制变量重新定义值得时候，原来的变量不会受影响，因为此时已经给复制后的变量重新分配指针了，如下面所示：\n```\nvar arr = [1,2,3,4];\nvar arr_copy = arr ;\narr_copy = [1,2,3,4,5];\n\nconsole.log(arr); //[1,2,3,4]\nconsole.log(arr_copy);//[1,2,3,4,5]\n\nvar obj = {\n    name:'张三',\n    age:20\n};\nvar obj_copy = obj ;\nobj_copy = {\n    name:'李四',\n    age:20\n};\nconsole.log(obj.name);//张三\nconsole.log(obj_copy.name);//李四\n\n```\n\n### 使用递归进行深拷贝。\n```\nvar car = {\n    name : '宝马',\n    color:'红色',\n}\n//判断是数组还是对象\nfunction getType(obj){\n    if(Object.prototype.toString.call(obj)=='[object Object]'){\n        return 'Object';\n    }else if(Object.prototype.toString.call(obj)=='[object Array]'){\n        return 'Array';\n    }else{\n        return 'nomal';\n    }\n}\n\nfunction deepCopy(obj) {\n    if (getType(obj)=='nomal') {\n        return obj ;  //如果是基本类型则直接返回\n    }else{\n        var newObj = getType(obj)=='Object'?{}:[];\n        for(var key in obj){\n            if(obj.hasOwnProperty(key)){\n                newObj[key] = deepCopy(obj[key]); //递归\n            }\n        }\n    }\n    return newObj;\n}\nvar newCar = deepCopy(car) ;\nnewInfo.name = '奔驰';\nconsole.log(newCar); //{name:'奔驰',color:'红色'}\nconsole.log(car);//{name:'宝马',color:'红色'}\n```\n这里用到.hasOwnProperty是为了避免在有继承时拷贝到继承自对象中的值（也就是a继承b时,使用.hasOwnProperty就是为了只拷贝a中的变量，过滤继承自b中的变量）","source":"_posts/实现一个简单的深拷贝.md","raw":"---\ntitle: 实现一个简单的深拷贝\ntags: js\ncategories: 前端\nabbrlink: 25ca6631\ndate: 2019-03-30 19:42:44\n---\n\n在js中经常需要用到变量的拷贝，比如`var a=1;var b=a;` 这个时候修改b的值，a不会改变`b=2;console.log(a); //1`,但是需要注意，这种方式拷贝属于浅拷贝，只局限在简单类型的拷贝：string、number、boolean、null、undefiend。如果你用这种方式拷贝一个数组或者对象，那么就得注意了，\n```\nvar a=[1,2,3]; \nvar b=a;\nb[0]=66;\nconsole.log(a); //[66,2,3];\n```\n可以看到，b的值变了，a也变了，所以对于数组和对象不能用这种浅拷贝，因为拷贝的只是引用地址，实际上还是同一个，不过在有一种情况下，修改复制后的变量，被复制的变量不会跟着改变，那就是复制后，给复制变量重新定义值得时候，原来的变量不会受影响，因为此时已经给复制后的变量重新分配指针了，如下面所示：\n```\nvar arr = [1,2,3,4];\nvar arr_copy = arr ;\narr_copy = [1,2,3,4,5];\n\nconsole.log(arr); //[1,2,3,4]\nconsole.log(arr_copy);//[1,2,3,4,5]\n\nvar obj = {\n    name:'张三',\n    age:20\n};\nvar obj_copy = obj ;\nobj_copy = {\n    name:'李四',\n    age:20\n};\nconsole.log(obj.name);//张三\nconsole.log(obj_copy.name);//李四\n\n```\n\n### 使用递归进行深拷贝。\n```\nvar car = {\n    name : '宝马',\n    color:'红色',\n}\n//判断是数组还是对象\nfunction getType(obj){\n    if(Object.prototype.toString.call(obj)=='[object Object]'){\n        return 'Object';\n    }else if(Object.prototype.toString.call(obj)=='[object Array]'){\n        return 'Array';\n    }else{\n        return 'nomal';\n    }\n}\n\nfunction deepCopy(obj) {\n    if (getType(obj)=='nomal') {\n        return obj ;  //如果是基本类型则直接返回\n    }else{\n        var newObj = getType(obj)=='Object'?{}:[];\n        for(var key in obj){\n            if(obj.hasOwnProperty(key)){\n                newObj[key] = deepCopy(obj[key]); //递归\n            }\n        }\n    }\n    return newObj;\n}\nvar newCar = deepCopy(car) ;\nnewInfo.name = '奔驰';\nconsole.log(newCar); //{name:'奔驰',color:'红色'}\nconsole.log(car);//{name:'宝马',color:'红色'}\n```\n这里用到.hasOwnProperty是为了避免在有继承时拷贝到继承自对象中的值（也就是a继承b时,使用.hasOwnProperty就是为了只拷贝a中的变量，过滤继承自b中的变量）","slug":"实现一个简单的深拷贝","published":1,"updated":"2020-04-30T07:58:25.404Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0ocrvf000u40m0veryjx4w","content":"<p>在js中经常需要用到变量的拷贝，比如<code>var a=1;var b=a;</code> 这个时候修改b的值，a不会改变<code>b=2;console.log(a); //1</code>,但是需要注意，这种方式拷贝属于浅拷贝，只局限在简单类型的拷贝：string、number、boolean、null、undefiend。如果你用这种方式拷贝一个数组或者对象，那么就得注意了，<br><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var a=[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>]; </span><br><span class=\"line\">var b=a;</span><br><span class=\"line\">b[<span class=\"number\">0</span>]=<span class=\"number\">66</span>;</span><br><span class=\"line\">console.log(a); <span class=\"comment\">//[66,2,3];</span></span><br></pre></td></tr></table></figure></p>\n<p>可以看到，b的值变了，a也变了，所以对于数组和对象不能用这种浅拷贝，因为拷贝的只是引用地址，实际上还是同一个，不过在有一种情况下，修改复制后的变量，被复制的变量不会跟着改变，那就是复制后，给复制变量重新定义值得时候，原来的变量不会受影响，因为此时已经给复制后的变量重新分配指针了，如下面所示：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr_copy = arr ;</span><br><span class=\"line\">arr_copy = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr); <span class=\"comment\">//[1,2,3,4]</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr_copy);<span class=\"comment\">//[1,2,3,4,5]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">    name:<span class=\"string\">'张三'</span>,</span><br><span class=\"line\">    age:<span class=\"number\">20</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj_copy = obj ;</span><br><span class=\"line\">obj_copy = &#123;</span><br><span class=\"line\">    name:<span class=\"string\">'李四'</span>,</span><br><span class=\"line\">    age:<span class=\"number\">20</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(obj.name);<span class=\"comment\">//张三</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(obj_copy.name);<span class=\"comment\">//李四</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"使用递归进行深拷贝。\"><a href=\"#使用递归进行深拷贝。\" class=\"headerlink\" title=\"使用递归进行深拷贝。\"></a>使用递归进行深拷贝。</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> car = &#123;</span><br><span class=\"line\">    name : <span class=\"string\">'宝马'</span>,</span><br><span class=\"line\">    color:<span class=\"string\">'红色'</span>,</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//判断是数组还是对象</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getType</span>(<span class=\"params\">obj</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"built_in\">Object</span>.prototype.toString.call(obj)==<span class=\"string\">'[object Object]'</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">'Object'</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(<span class=\"built_in\">Object</span>.prototype.toString.call(obj)==<span class=\"string\">'[object Array]'</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">'Array'</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">'nomal'</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">deepCopy</span>(<span class=\"params\">obj</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (getType(obj)==<span class=\"string\">'nomal'</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> obj ;  <span class=\"comment\">//如果是基本类型则直接返回</span></span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> newObj = getType(obj)==<span class=\"string\">'Object'</span>?&#123;&#125;:[];</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> key <span class=\"keyword\">in</span> obj)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(obj.hasOwnProperty(key))&#123;</span><br><span class=\"line\">                newObj[key] = deepCopy(obj[key]); <span class=\"comment\">//递归</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> newObj;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> newCar = deepCopy(car) ;</span><br><span class=\"line\">newInfo.name = <span class=\"string\">'奔驰'</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(newCar); <span class=\"comment\">//&#123;name:'奔驰',color:'红色'&#125;</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(car);<span class=\"comment\">//&#123;name:'宝马',color:'红色'&#125;</span></span><br></pre></td></tr></table></figure>\n<p>这里用到.hasOwnProperty是为了避免在有继承时拷贝到继承自对象中的值（也就是a继承b时,使用.hasOwnProperty就是为了只拷贝a中的变量，过滤继承自b中的变量）</p>\n","site":{"data":{}},"excerpt":"","more":"<p>在js中经常需要用到变量的拷贝，比如<code>var a=1;var b=a;</code> 这个时候修改b的值，a不会改变<code>b=2;console.log(a); //1</code>,但是需要注意，这种方式拷贝属于浅拷贝，只局限在简单类型的拷贝：string、number、boolean、null、undefiend。如果你用这种方式拷贝一个数组或者对象，那么就得注意了，<br><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var a=[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>]; </span><br><span class=\"line\">var b=a;</span><br><span class=\"line\">b[<span class=\"number\">0</span>]=<span class=\"number\">66</span>;</span><br><span class=\"line\">console.log(a); <span class=\"comment\">//[66,2,3];</span></span><br></pre></td></tr></table></figure></p>\n<p>可以看到，b的值变了，a也变了，所以对于数组和对象不能用这种浅拷贝，因为拷贝的只是引用地址，实际上还是同一个，不过在有一种情况下，修改复制后的变量，被复制的变量不会跟着改变，那就是复制后，给复制变量重新定义值得时候，原来的变量不会受影响，因为此时已经给复制后的变量重新分配指针了，如下面所示：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr_copy = arr ;</span><br><span class=\"line\">arr_copy = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr); <span class=\"comment\">//[1,2,3,4]</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr_copy);<span class=\"comment\">//[1,2,3,4,5]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">    name:<span class=\"string\">'张三'</span>,</span><br><span class=\"line\">    age:<span class=\"number\">20</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj_copy = obj ;</span><br><span class=\"line\">obj_copy = &#123;</span><br><span class=\"line\">    name:<span class=\"string\">'李四'</span>,</span><br><span class=\"line\">    age:<span class=\"number\">20</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(obj.name);<span class=\"comment\">//张三</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(obj_copy.name);<span class=\"comment\">//李四</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"使用递归进行深拷贝。\"><a href=\"#使用递归进行深拷贝。\" class=\"headerlink\" title=\"使用递归进行深拷贝。\"></a>使用递归进行深拷贝。</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> car = &#123;</span><br><span class=\"line\">    name : <span class=\"string\">'宝马'</span>,</span><br><span class=\"line\">    color:<span class=\"string\">'红色'</span>,</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//判断是数组还是对象</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getType</span>(<span class=\"params\">obj</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"built_in\">Object</span>.prototype.toString.call(obj)==<span class=\"string\">'[object Object]'</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">'Object'</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(<span class=\"built_in\">Object</span>.prototype.toString.call(obj)==<span class=\"string\">'[object Array]'</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">'Array'</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">'nomal'</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">deepCopy</span>(<span class=\"params\">obj</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (getType(obj)==<span class=\"string\">'nomal'</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> obj ;  <span class=\"comment\">//如果是基本类型则直接返回</span></span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> newObj = getType(obj)==<span class=\"string\">'Object'</span>?&#123;&#125;:[];</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> key <span class=\"keyword\">in</span> obj)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(obj.hasOwnProperty(key))&#123;</span><br><span class=\"line\">                newObj[key] = deepCopy(obj[key]); <span class=\"comment\">//递归</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> newObj;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> newCar = deepCopy(car) ;</span><br><span class=\"line\">newInfo.name = <span class=\"string\">'奔驰'</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(newCar); <span class=\"comment\">//&#123;name:'奔驰',color:'红色'&#125;</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(car);<span class=\"comment\">//&#123;name:'宝马',color:'红色'&#125;</span></span><br></pre></td></tr></table></figure>\n<p>这里用到.hasOwnProperty是为了避免在有继承时拷贝到继承自对象中的值（也就是a继承b时,使用.hasOwnProperty就是为了只拷贝a中的变量，过滤继承自b中的变量）</p>\n"},{"title":"怎么样在别的电脑同步更新发表hexo博客？","abbrlink":"301aa86","date":"2019-04-24T14:12:23.000Z","_content":"在git上放两个分支，一个master分支，用来存放hexo 生成public代码的（发布），另一个分支随便取名字吧比如hexo，就是放整个hexo源码的，到时候在别的电脑直接克隆hexo代码，然后写文章，发布，然后同步hexo分支代码。就可以了，很简单。\n<font color=\"red\">注意：如果主题文件是从git克隆下来的，比如next主题，再提交之前先把next下的.git和.github文件夹删掉。如果之前没有删掉，发现next无法提交到github。此时要删掉你博客目录下的.git目录价下的index.lock文件</font>\n然后：\n```\n git rm --cached themes/next/\n git add themes/next/\n ```\n 如果一次不行，尝试多几次。\n 这个时候就可以提交到github了","source":"_posts/怎么样在别的电脑同步更新发表hexo博客？.md","raw":"---\ntitle: 怎么样在别的电脑同步更新发表hexo博客？\ntags: 技术\ncategories: 技术\nabbrlink: 301aa86\ndate: 2019-04-24 22:12:23\n---\n在git上放两个分支，一个master分支，用来存放hexo 生成public代码的（发布），另一个分支随便取名字吧比如hexo，就是放整个hexo源码的，到时候在别的电脑直接克隆hexo代码，然后写文章，发布，然后同步hexo分支代码。就可以了，很简单。\n<font color=\"red\">注意：如果主题文件是从git克隆下来的，比如next主题，再提交之前先把next下的.git和.github文件夹删掉。如果之前没有删掉，发现next无法提交到github。此时要删掉你博客目录下的.git目录价下的index.lock文件</font>\n然后：\n```\n git rm --cached themes/next/\n git add themes/next/\n ```\n 如果一次不行，尝试多几次。\n 这个时候就可以提交到github了","slug":"怎么样在别的电脑同步更新发表hexo博客？","published":1,"updated":"2020-04-30T07:58:25.404Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0ocrvg000z40m0hemrwd5s","content":"<p>在git上放两个分支，一个master分支，用来存放hexo 生成public代码的（发布），另一个分支随便取名字吧比如hexo，就是放整个hexo源码的，到时候在别的电脑直接克隆hexo代码，然后写文章，发布，然后同步hexo分支代码。就可以了，很简单。</p>\n<p><font color=\"red\">注意：如果主题文件是从git克隆下来的，比如next主题，再提交之前先把next下的.git和.github文件夹删掉。如果之前没有删掉，发现next无法提交到github。此时要删掉你博客目录下的.git目录价下的index.lock文件</font><br>然后：<br><figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git rm --cached themes/<span class=\"keyword\">next</span>/</span><br><span class=\"line\">git <span class=\"built_in\">add</span> themes/<span class=\"keyword\">next</span>/</span><br></pre></td></tr></table></figure></p>\n<p> 如果一次不行，尝试多几次。<br> 这个时候就可以提交到github了</p>\n","site":{"data":{}},"excerpt":"","more":"<p>在git上放两个分支，一个master分支，用来存放hexo 生成public代码的（发布），另一个分支随便取名字吧比如hexo，就是放整个hexo源码的，到时候在别的电脑直接克隆hexo代码，然后写文章，发布，然后同步hexo分支代码。就可以了，很简单。</p>\n<p><font color=\"red\">注意：如果主题文件是从git克隆下来的，比如next主题，再提交之前先把next下的.git和.github文件夹删掉。如果之前没有删掉，发现next无法提交到github。此时要删掉你博客目录下的.git目录价下的index.lock文件</font><br>然后：<br><figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git rm --cached themes/<span class=\"keyword\">next</span>/</span><br><span class=\"line\">git <span class=\"built_in\">add</span> themes/<span class=\"keyword\">next</span>/</span><br></pre></td></tr></table></figure></p>\n<p> 如果一次不行，尝试多几次。<br> 这个时候就可以提交到github了</p>\n"},{"title":"用Xshell登录阿里云服务器","abbrlink":"d86f9c95","date":"2019-06-12T03:42:29.000Z","_content":"使用Xshell登录阿里云最需要注意的一个地方就是要使用阿里云服务器的公共ip，阿里云一个有两个ip，一个是公共的，一个是私有的，这个登录管理后台查看实例就可以看得到\n![](1.jpg)\n![](2.jpg)\n最后会弹出是否接受密钥什么的，点确定就好，或者是弹出密码不对的，也重新输入密码即可。","source":"_posts/用Xshell登录阿里云服务器.md","raw":"---\ntitle: 用Xshell登录阿里云服务器\nabbrlink: d86f9c95\ndate: 2019-06-12 11:42:29\ntags: linux\ncategories: linux\n---\n使用Xshell登录阿里云最需要注意的一个地方就是要使用阿里云服务器的公共ip，阿里云一个有两个ip，一个是公共的，一个是私有的，这个登录管理后台查看实例就可以看得到\n![](1.jpg)\n![](2.jpg)\n最后会弹出是否接受密钥什么的，点确定就好，或者是弹出密码不对的，也重新输入密码即可。","slug":"用Xshell登录阿里云服务器","published":1,"updated":"2020-04-30T07:58:25.404Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0ocrvh001240m0g3my9lqo","content":"<p>使用Xshell登录阿里云最需要注意的一个地方就是要使用阿里云服务器的公共ip，阿里云一个有两个ip，一个是公共的，一个是私有的，这个登录管理后台查看实例就可以看得到<br><img src=\"1.jpg\" alt><br><img src=\"2.jpg\" alt><br>最后会弹出是否接受密钥什么的，点确定就好，或者是弹出密码不对的，也重新输入密码即可。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>使用Xshell登录阿里云最需要注意的一个地方就是要使用阿里云服务器的公共ip，阿里云一个有两个ip，一个是公共的，一个是私有的，这个登录管理后台查看实例就可以看得到<br><img src=\"1.jpg\" alt><br><img src=\"2.jpg\" alt><br>最后会弹出是否接受密钥什么的，点确定就好，或者是弹出密码不对的，也重新输入密码即可。</p>\n"},{"title":"用hexo+github搭建个人博客","abbrlink":"4443dac6","date":"2019-02-27T07:33:57.000Z","_content":"## 用hexo+github page快速搭建个人静态博客\n\n### 1.hexo环境搭建\n\n首先需要电脑安装好了nodejs（具体安装步骤略过），还需要有github账号。打开cmd命令行，全局安装hexo ``npm install -g hexo-cli`` 可以使用 ``hexo v`` 来检查是否安装成功。\n接下来使用hexo cli来创建项目：使用``hexo init`` 就会在当前文件夹下创建了项目，当然也可以使用``hexo init 文件夹名称`` 来创建文件夹的同时创建项目。接着运行 ``npm install``安装依赖，注意，安装hexo的文件夹需要是空文件夹。\n\n### 2.hexo的基本使用及常见的命令\n\n``hexo s`` 使用这个命令可以在本地跑起来，可以看到cmd窗口提示项目运行在 ``http://localhost:4000``，打开浏览器输入提示的地址即可访问了，不过可以看到，默认的主题有点丑，我们可以换一个，在这里我们换next这个简洁的主题。我们可以直接百度搜索hexo next主题官网或者去hexo官网找next主题都可以，我们找到next的github，克隆下来，放到博客项目的themes目录下，接下来打开根目录的配置文件_config.yml文件找到 theme，把默认的该为next，然后命令行``hexo clean && hexo s``刷新页面即可成功替换主题了。\n快速创建文章命令为 ``hexo new \"文章名字\"``  执行完这个命令后就会在sources下的_posts目录下创建名称为 刚刚创建的同名md文件，可以用编辑器直接打开编辑了。\n#### 这里需要注意：在next主题的配置文件下添加了菜单后，点击了提示找不到页面，不要慌，是因为默认只生产home和Archive页面，需要自己创建相应的页面，比如about页面 ``hexo new page \"about\"`` 这时 source里面多了个目录about，里面有个index.md，就可以正常访问了，内容就在那个index.md里添加\n\n### 与github对接\n\n在github上新建一个名为xxx.github.io 的仓库，然后在hexo的_config.yml中的\n\n``` \ndeploy: \n  type: git \n  repository: git@github.com:hongyu2016/hongyu2016.github.io.git \n  branch: master\n```\n填写相应的git地址，然后需要把本地项目与git仓库相关联起来，需要使用ssh来连接，git ssh连接请参考 [配置git ssh](https://www.cnblogs.com/superGG1990/p/6844952.html) 。在本地仓库与远程仓库连接的过程中可能会出现分支不匹配等错误，需要具体问题然后再进行针对性解决。本地仓库与远程仓库关联上后就可以在本地进行发布了，``hexo d``为发布命令，会将项目发布到github page，发布成功后，会在本地生成的静态文件推送到到github，其他文件是不会推送的，这个时候会把原本在github上的readme文件删除，不要慌，在resoures下新建readme文件再次发布就好了，注意：千万不要使用github的git push发布，这样发布是没有效果的，github会在每次push时发编译失败的邮件给你，因为github page只支持静态文件，所以只能使用``hexo d``命令，另外在发布前最好先``hexo clean && hexo g``先清除和重新生成静态文件发发布。发布成功后，输入xxx.github.io就可以正常访问博客了。\n\n## 结语：搭建hexo博客还是比较简单的，个人觉得在推送到github的过程中比较麻烦，容易出各种问题，这个地方需要注意。","source":"_posts/用hexo-github搭建个人博客.md","raw":"---\ntitle: 用hexo+github搭建个人博客\ntags: 技术\ncategories: 技术\nabbrlink: 4443dac6\ndate: 2019-02-27 15:33:57\n---\n## 用hexo+github page快速搭建个人静态博客\n\n### 1.hexo环境搭建\n\n首先需要电脑安装好了nodejs（具体安装步骤略过），还需要有github账号。打开cmd命令行，全局安装hexo ``npm install -g hexo-cli`` 可以使用 ``hexo v`` 来检查是否安装成功。\n接下来使用hexo cli来创建项目：使用``hexo init`` 就会在当前文件夹下创建了项目，当然也可以使用``hexo init 文件夹名称`` 来创建文件夹的同时创建项目。接着运行 ``npm install``安装依赖，注意，安装hexo的文件夹需要是空文件夹。\n\n### 2.hexo的基本使用及常见的命令\n\n``hexo s`` 使用这个命令可以在本地跑起来，可以看到cmd窗口提示项目运行在 ``http://localhost:4000``，打开浏览器输入提示的地址即可访问了，不过可以看到，默认的主题有点丑，我们可以换一个，在这里我们换next这个简洁的主题。我们可以直接百度搜索hexo next主题官网或者去hexo官网找next主题都可以，我们找到next的github，克隆下来，放到博客项目的themes目录下，接下来打开根目录的配置文件_config.yml文件找到 theme，把默认的该为next，然后命令行``hexo clean && hexo s``刷新页面即可成功替换主题了。\n快速创建文章命令为 ``hexo new \"文章名字\"``  执行完这个命令后就会在sources下的_posts目录下创建名称为 刚刚创建的同名md文件，可以用编辑器直接打开编辑了。\n#### 这里需要注意：在next主题的配置文件下添加了菜单后，点击了提示找不到页面，不要慌，是因为默认只生产home和Archive页面，需要自己创建相应的页面，比如about页面 ``hexo new page \"about\"`` 这时 source里面多了个目录about，里面有个index.md，就可以正常访问了，内容就在那个index.md里添加\n\n### 与github对接\n\n在github上新建一个名为xxx.github.io 的仓库，然后在hexo的_config.yml中的\n\n``` \ndeploy: \n  type: git \n  repository: git@github.com:hongyu2016/hongyu2016.github.io.git \n  branch: master\n```\n填写相应的git地址，然后需要把本地项目与git仓库相关联起来，需要使用ssh来连接，git ssh连接请参考 [配置git ssh](https://www.cnblogs.com/superGG1990/p/6844952.html) 。在本地仓库与远程仓库连接的过程中可能会出现分支不匹配等错误，需要具体问题然后再进行针对性解决。本地仓库与远程仓库关联上后就可以在本地进行发布了，``hexo d``为发布命令，会将项目发布到github page，发布成功后，会在本地生成的静态文件推送到到github，其他文件是不会推送的，这个时候会把原本在github上的readme文件删除，不要慌，在resoures下新建readme文件再次发布就好了，注意：千万不要使用github的git push发布，这样发布是没有效果的，github会在每次push时发编译失败的邮件给你，因为github page只支持静态文件，所以只能使用``hexo d``命令，另外在发布前最好先``hexo clean && hexo g``先清除和重新生成静态文件发发布。发布成功后，输入xxx.github.io就可以正常访问博客了。\n\n## 结语：搭建hexo博客还是比较简单的，个人觉得在推送到github的过程中比较麻烦，容易出各种问题，这个地方需要注意。","slug":"用hexo-github搭建个人博客","published":1,"updated":"2020-04-30T07:58:25.404Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0ocrvj001740m0oaacbex8","content":"<h2 id=\"用hexo-github-page快速搭建个人静态博客\"><a href=\"#用hexo-github-page快速搭建个人静态博客\" class=\"headerlink\" title=\"用hexo+github page快速搭建个人静态博客\"></a>用hexo+github page快速搭建个人静态博客</h2><h3 id=\"1-hexo环境搭建\"><a href=\"#1-hexo环境搭建\" class=\"headerlink\" title=\"1.hexo环境搭建\"></a>1.hexo环境搭建</h3><p>首先需要电脑安装好了nodejs（具体安装步骤略过），还需要有github账号。打开cmd命令行，全局安装hexo <code>npm install -g hexo-cli</code> 可以使用 <code>hexo v</code> 来检查是否安装成功。<br>接下来使用hexo cli来创建项目：使用<code>hexo init</code> 就会在当前文件夹下创建了项目，当然也可以使用<code>hexo init 文件夹名称</code> 来创建文件夹的同时创建项目。接着运行 <code>npm install</code>安装依赖，注意，安装hexo的文件夹需要是空文件夹。</p>\n<h3 id=\"2-hexo的基本使用及常见的命令\"><a href=\"#2-hexo的基本使用及常见的命令\" class=\"headerlink\" title=\"2.hexo的基本使用及常见的命令\"></a>2.hexo的基本使用及常见的命令</h3><p><code>hexo s</code> 使用这个命令可以在本地跑起来，可以看到cmd窗口提示项目运行在 <code>http://localhost:4000</code>，打开浏览器输入提示的地址即可访问了，不过可以看到，默认的主题有点丑，我们可以换一个，在这里我们换next这个简洁的主题。我们可以直接百度搜索hexo next主题官网或者去hexo官网找next主题都可以，我们找到next的github，克隆下来，放到博客项目的themes目录下，接下来打开根目录的配置文件_config.yml文件找到 theme，把默认的该为next，然后命令行<code>hexo clean &amp;&amp; hexo s</code>刷新页面即可成功替换主题了。<br>快速创建文章命令为 <code>hexo new &quot;文章名字&quot;</code>  执行完这个命令后就会在sources下的_posts目录下创建名称为 刚刚创建的同名md文件，可以用编辑器直接打开编辑了。</p>\n<h4 id=\"这里需要注意：在next主题的配置文件下添加了菜单后，点击了提示找不到页面，不要慌，是因为默认只生产home和Archive页面，需要自己创建相应的页面，比如about页面-hexo-new-page-quot-about-quot-这时-source里面多了个目录about，里面有个index-md，就可以正常访问了，内容就在那个index-md里添加\"><a href=\"#这里需要注意：在next主题的配置文件下添加了菜单后，点击了提示找不到页面，不要慌，是因为默认只生产home和Archive页面，需要自己创建相应的页面，比如about页面-hexo-new-page-quot-about-quot-这时-source里面多了个目录about，里面有个index-md，就可以正常访问了，内容就在那个index-md里添加\" class=\"headerlink\" title=\"这里需要注意：在next主题的配置文件下添加了菜单后，点击了提示找不到页面，不要慌，是因为默认只生产home和Archive页面，需要自己创建相应的页面，比如about页面 hexo new page &quot;about&quot; 这时 source里面多了个目录about，里面有个index.md，就可以正常访问了，内容就在那个index.md里添加\"></a>这里需要注意：在next主题的配置文件下添加了菜单后，点击了提示找不到页面，不要慌，是因为默认只生产home和Archive页面，需要自己创建相应的页面，比如about页面 <code>hexo new page &quot;about&quot;</code> 这时 source里面多了个目录about，里面有个index.md，就可以正常访问了，内容就在那个index.md里添加</h4><h3 id=\"与github对接\"><a href=\"#与github对接\" class=\"headerlink\" title=\"与github对接\"></a>与github对接</h3><p>在github上新建一个名为xxx.github.io 的仓库，然后在hexo的_config.yml中的</p>\n<figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">deploy</span>: </span><br><span class=\"line\">  <span class=\"attribute\">type</span>: git </span><br><span class=\"line\">  <span class=\"attribute\">repository</span>: git<span class=\"variable\">@github</span>.<span class=\"attribute\">com</span>:hongyu2016/hongyu2016.github.io.git </span><br><span class=\"line\">  <span class=\"attribute\">branch</span>: master</span><br></pre></td></tr></table></figure>\n<p>填写相应的git地址，然后需要把本地项目与git仓库相关联起来，需要使用ssh来连接，git ssh连接请参考 <a href=\"https://www.cnblogs.com/superGG1990/p/6844952.html\" target=\"_blank\" rel=\"noopener\">配置git ssh</a> 。在本地仓库与远程仓库连接的过程中可能会出现分支不匹配等错误，需要具体问题然后再进行针对性解决。本地仓库与远程仓库关联上后就可以在本地进行发布了，<code>hexo d</code>为发布命令，会将项目发布到github page，发布成功后，会在本地生成的静态文件推送到到github，其他文件是不会推送的，这个时候会把原本在github上的readme文件删除，不要慌，在resoures下新建readme文件再次发布就好了，注意：千万不要使用github的git push发布，这样发布是没有效果的，github会在每次push时发编译失败的邮件给你，因为github page只支持静态文件，所以只能使用<code>hexo d</code>命令，另外在发布前最好先<code>hexo clean &amp;&amp; hexo g</code>先清除和重新生成静态文件发发布。发布成功后，输入xxx.github.io就可以正常访问博客了。</p>\n<h2 id=\"结语：搭建hexo博客还是比较简单的，个人觉得在推送到github的过程中比较麻烦，容易出各种问题，这个地方需要注意。\"><a href=\"#结语：搭建hexo博客还是比较简单的，个人觉得在推送到github的过程中比较麻烦，容易出各种问题，这个地方需要注意。\" class=\"headerlink\" title=\"结语：搭建hexo博客还是比较简单的，个人觉得在推送到github的过程中比较麻烦，容易出各种问题，这个地方需要注意。\"></a>结语：搭建hexo博客还是比较简单的，个人觉得在推送到github的过程中比较麻烦，容易出各种问题，这个地方需要注意。</h2>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"用hexo-github-page快速搭建个人静态博客\"><a href=\"#用hexo-github-page快速搭建个人静态博客\" class=\"headerlink\" title=\"用hexo+github page快速搭建个人静态博客\"></a>用hexo+github page快速搭建个人静态博客</h2><h3 id=\"1-hexo环境搭建\"><a href=\"#1-hexo环境搭建\" class=\"headerlink\" title=\"1.hexo环境搭建\"></a>1.hexo环境搭建</h3><p>首先需要电脑安装好了nodejs（具体安装步骤略过），还需要有github账号。打开cmd命令行，全局安装hexo <code>npm install -g hexo-cli</code> 可以使用 <code>hexo v</code> 来检查是否安装成功。<br>接下来使用hexo cli来创建项目：使用<code>hexo init</code> 就会在当前文件夹下创建了项目，当然也可以使用<code>hexo init 文件夹名称</code> 来创建文件夹的同时创建项目。接着运行 <code>npm install</code>安装依赖，注意，安装hexo的文件夹需要是空文件夹。</p>\n<h3 id=\"2-hexo的基本使用及常见的命令\"><a href=\"#2-hexo的基本使用及常见的命令\" class=\"headerlink\" title=\"2.hexo的基本使用及常见的命令\"></a>2.hexo的基本使用及常见的命令</h3><p><code>hexo s</code> 使用这个命令可以在本地跑起来，可以看到cmd窗口提示项目运行在 <code>http://localhost:4000</code>，打开浏览器输入提示的地址即可访问了，不过可以看到，默认的主题有点丑，我们可以换一个，在这里我们换next这个简洁的主题。我们可以直接百度搜索hexo next主题官网或者去hexo官网找next主题都可以，我们找到next的github，克隆下来，放到博客项目的themes目录下，接下来打开根目录的配置文件_config.yml文件找到 theme，把默认的该为next，然后命令行<code>hexo clean &amp;&amp; hexo s</code>刷新页面即可成功替换主题了。<br>快速创建文章命令为 <code>hexo new &quot;文章名字&quot;</code>  执行完这个命令后就会在sources下的_posts目录下创建名称为 刚刚创建的同名md文件，可以用编辑器直接打开编辑了。</p>\n<h4 id=\"这里需要注意：在next主题的配置文件下添加了菜单后，点击了提示找不到页面，不要慌，是因为默认只生产home和Archive页面，需要自己创建相应的页面，比如about页面-hexo-new-page-quot-about-quot-这时-source里面多了个目录about，里面有个index-md，就可以正常访问了，内容就在那个index-md里添加\"><a href=\"#这里需要注意：在next主题的配置文件下添加了菜单后，点击了提示找不到页面，不要慌，是因为默认只生产home和Archive页面，需要自己创建相应的页面，比如about页面-hexo-new-page-quot-about-quot-这时-source里面多了个目录about，里面有个index-md，就可以正常访问了，内容就在那个index-md里添加\" class=\"headerlink\" title=\"这里需要注意：在next主题的配置文件下添加了菜单后，点击了提示找不到页面，不要慌，是因为默认只生产home和Archive页面，需要自己创建相应的页面，比如about页面 hexo new page &quot;about&quot; 这时 source里面多了个目录about，里面有个index.md，就可以正常访问了，内容就在那个index.md里添加\"></a>这里需要注意：在next主题的配置文件下添加了菜单后，点击了提示找不到页面，不要慌，是因为默认只生产home和Archive页面，需要自己创建相应的页面，比如about页面 <code>hexo new page &quot;about&quot;</code> 这时 source里面多了个目录about，里面有个index.md，就可以正常访问了，内容就在那个index.md里添加</h4><h3 id=\"与github对接\"><a href=\"#与github对接\" class=\"headerlink\" title=\"与github对接\"></a>与github对接</h3><p>在github上新建一个名为xxx.github.io 的仓库，然后在hexo的_config.yml中的</p>\n<figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">deploy</span>: </span><br><span class=\"line\">  <span class=\"attribute\">type</span>: git </span><br><span class=\"line\">  <span class=\"attribute\">repository</span>: git<span class=\"variable\">@github</span>.<span class=\"attribute\">com</span>:hongyu2016/hongyu2016.github.io.git </span><br><span class=\"line\">  <span class=\"attribute\">branch</span>: master</span><br></pre></td></tr></table></figure>\n<p>填写相应的git地址，然后需要把本地项目与git仓库相关联起来，需要使用ssh来连接，git ssh连接请参考 <a href=\"https://www.cnblogs.com/superGG1990/p/6844952.html\" target=\"_blank\" rel=\"noopener\">配置git ssh</a> 。在本地仓库与远程仓库连接的过程中可能会出现分支不匹配等错误，需要具体问题然后再进行针对性解决。本地仓库与远程仓库关联上后就可以在本地进行发布了，<code>hexo d</code>为发布命令，会将项目发布到github page，发布成功后，会在本地生成的静态文件推送到到github，其他文件是不会推送的，这个时候会把原本在github上的readme文件删除，不要慌，在resoures下新建readme文件再次发布就好了，注意：千万不要使用github的git push发布，这样发布是没有效果的，github会在每次push时发编译失败的邮件给你，因为github page只支持静态文件，所以只能使用<code>hexo d</code>命令，另外在发布前最好先<code>hexo clean &amp;&amp; hexo g</code>先清除和重新生成静态文件发发布。发布成功后，输入xxx.github.io就可以正常访问博客了。</p>\n<h2 id=\"结语：搭建hexo博客还是比较简单的，个人觉得在推送到github的过程中比较麻烦，容易出各种问题，这个地方需要注意。\"><a href=\"#结语：搭建hexo博客还是比较简单的，个人觉得在推送到github的过程中比较麻烦，容易出各种问题，这个地方需要注意。\" class=\"headerlink\" title=\"结语：搭建hexo博客还是比较简单的，个人觉得在推送到github的过程中比较麻烦，容易出各种问题，这个地方需要注意。\"></a>结语：搭建hexo博客还是比较简单的，个人觉得在推送到github的过程中比较麻烦，容易出各种问题，这个地方需要注意。</h2>"},{"title":"解决npm install安装任何包都报错的问题","abbrlink":60785,"date":"2019-05-13T10:21:10.000Z","_content":"在ubantu18系统上，之前不知道哪里设置错了，结果用nodejs的npm install任何一个包都报错，报错信息如下：\n```\nnpm ERR! code ENOTFOUND\nnpm ERR! errno ENOTFOUND\nnpm ERR! network request to http://registry.cnpmjs.org/cnpm failed, reason: getaddrinfo ENOTFOUND registry.cnpmjs.org registry.cnpmjs.org:80\nnpm ERR! network This is a problem related to network connectivity.\nnpm ERR! network In most cases you are behind a proxy or have bad network settings.\nnpm ERR! network \nnpm ERR! network If you are behind a proxy, please make sure that the\nnpm ERR! network 'proxy' config is set properly.  See: 'npm help config'\n\nnpm ERR! A complete log of this run can be found in:\nnpm ERR!     /home/liu/.npm/_logs/2019-05-13T12_45_42_040Z-debug.log\n\n```\n按照字面意思，应该是代理出了点问题，由于对npm的设置不是很了解，没办法，百度查查别人的解决办法吧。然后就真查到了，\n```\nnpm config set registry http://registry.cnpmjs.org\n```\n如果提示要sudo那就加上sudo就行了。\n验证一下 ： npm info underscore 如果有返回underscore的相应信息就表示成功了。\n以上内容参考网址：[http://www.cnblogs.com/nurdun/p/6824480.html](http://www.cnblogs.com/nurdun/p/6824480.html) \n","source":"_posts/解决npm-install安装任何包都报错的问题.md","raw":"---\ntitle: 解决npm install安装任何包都报错的问题\ntags: nodejs\ncategories: 前端\nabbrlink: 60785\ndate: 2019-05-13 18:21:10\n---\n在ubantu18系统上，之前不知道哪里设置错了，结果用nodejs的npm install任何一个包都报错，报错信息如下：\n```\nnpm ERR! code ENOTFOUND\nnpm ERR! errno ENOTFOUND\nnpm ERR! network request to http://registry.cnpmjs.org/cnpm failed, reason: getaddrinfo ENOTFOUND registry.cnpmjs.org registry.cnpmjs.org:80\nnpm ERR! network This is a problem related to network connectivity.\nnpm ERR! network In most cases you are behind a proxy or have bad network settings.\nnpm ERR! network \nnpm ERR! network If you are behind a proxy, please make sure that the\nnpm ERR! network 'proxy' config is set properly.  See: 'npm help config'\n\nnpm ERR! A complete log of this run can be found in:\nnpm ERR!     /home/liu/.npm/_logs/2019-05-13T12_45_42_040Z-debug.log\n\n```\n按照字面意思，应该是代理出了点问题，由于对npm的设置不是很了解，没办法，百度查查别人的解决办法吧。然后就真查到了，\n```\nnpm config set registry http://registry.cnpmjs.org\n```\n如果提示要sudo那就加上sudo就行了。\n验证一下 ： npm info underscore 如果有返回underscore的相应信息就表示成功了。\n以上内容参考网址：[http://www.cnblogs.com/nurdun/p/6824480.html](http://www.cnblogs.com/nurdun/p/6824480.html) \n","slug":"解决npm-install安装任何包都报错的问题","published":1,"updated":"2020-04-30T07:58:25.404Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0ocrvk001a40m07alclof7","content":"<p>在ubantu18系统上，之前不知道哪里设置错了，结果用nodejs的npm install任何一个包都报错，报错信息如下：<br><figure class=\"highlight coffeescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">npm</span> ERR! code ENOTFOUND</span><br><span class=\"line\"><span class=\"built_in\">npm</span> ERR! errno ENOTFOUND</span><br><span class=\"line\"><span class=\"built_in\">npm</span> ERR! network request to http://registry.cnpmjs.org/cnpm failed, reason: getaddrinfo ENOTFOUND registry.cnpmjs.org registry.cnpmjs.org:<span class=\"number\">80</span></span><br><span class=\"line\"><span class=\"built_in\">npm</span> ERR! network This <span class=\"keyword\">is</span> a problem related to network connectivity.</span><br><span class=\"line\"><span class=\"built_in\">npm</span> ERR! network In most cases you are behind a proxy <span class=\"keyword\">or</span> have bad network settings.</span><br><span class=\"line\"><span class=\"built_in\">npm</span> ERR! network </span><br><span class=\"line\"><span class=\"built_in\">npm</span> ERR! network If you are behind a proxy, please make sure that the</span><br><span class=\"line\"><span class=\"built_in\">npm</span> ERR! network <span class=\"string\">'proxy'</span> config <span class=\"keyword\">is</span> set properly.  See: <span class=\"string\">'npm help config'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">npm</span> ERR! A complete log <span class=\"keyword\">of</span> <span class=\"keyword\">this</span> run can be found in:</span><br><span class=\"line\"><span class=\"built_in\">npm</span> ERR!     <span class=\"regexp\">/home/liu/</span>.<span class=\"built_in\">npm</span>/_logs/<span class=\"number\">2019</span><span class=\"number\">-05</span><span class=\"number\">-13</span>T12_45_42_040Z-debug.log</span><br></pre></td></tr></table></figure></p>\n<p>按照字面意思，应该是代理出了点问题，由于对npm的设置不是很了解，没办法，百度查查别人的解决办法吧。然后就真查到了，<br><figure class=\"highlight tcl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm config <span class=\"keyword\">set</span> <span class=\"keyword\">registry</span> <span class=\"keyword\">http</span>://<span class=\"keyword\">registry</span>.cnpmjs.org</span><br></pre></td></tr></table></figure></p>\n<p>如果提示要sudo那就加上sudo就行了。<br>验证一下 ： npm info underscore 如果有返回underscore的相应信息就表示成功了。<br>以上内容参考网址：<a href=\"http://www.cnblogs.com/nurdun/p/6824480.html\" target=\"_blank\" rel=\"noopener\">http://www.cnblogs.com/nurdun/p/6824480.html</a> </p>\n","site":{"data":{}},"excerpt":"","more":"<p>在ubantu18系统上，之前不知道哪里设置错了，结果用nodejs的npm install任何一个包都报错，报错信息如下：<br><figure class=\"highlight coffeescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">npm</span> ERR! code ENOTFOUND</span><br><span class=\"line\"><span class=\"built_in\">npm</span> ERR! errno ENOTFOUND</span><br><span class=\"line\"><span class=\"built_in\">npm</span> ERR! network request to http://registry.cnpmjs.org/cnpm failed, reason: getaddrinfo ENOTFOUND registry.cnpmjs.org registry.cnpmjs.org:<span class=\"number\">80</span></span><br><span class=\"line\"><span class=\"built_in\">npm</span> ERR! network This <span class=\"keyword\">is</span> a problem related to network connectivity.</span><br><span class=\"line\"><span class=\"built_in\">npm</span> ERR! network In most cases you are behind a proxy <span class=\"keyword\">or</span> have bad network settings.</span><br><span class=\"line\"><span class=\"built_in\">npm</span> ERR! network </span><br><span class=\"line\"><span class=\"built_in\">npm</span> ERR! network If you are behind a proxy, please make sure that the</span><br><span class=\"line\"><span class=\"built_in\">npm</span> ERR! network <span class=\"string\">'proxy'</span> config <span class=\"keyword\">is</span> set properly.  See: <span class=\"string\">'npm help config'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">npm</span> ERR! A complete log <span class=\"keyword\">of</span> <span class=\"keyword\">this</span> run can be found in:</span><br><span class=\"line\"><span class=\"built_in\">npm</span> ERR!     <span class=\"regexp\">/home/liu/</span>.<span class=\"built_in\">npm</span>/_logs/<span class=\"number\">2019</span><span class=\"number\">-05</span><span class=\"number\">-13</span>T12_45_42_040Z-debug.log</span><br></pre></td></tr></table></figure></p>\n<p>按照字面意思，应该是代理出了点问题，由于对npm的设置不是很了解，没办法，百度查查别人的解决办法吧。然后就真查到了，<br><figure class=\"highlight tcl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm config <span class=\"keyword\">set</span> <span class=\"keyword\">registry</span> <span class=\"keyword\">http</span>://<span class=\"keyword\">registry</span>.cnpmjs.org</span><br></pre></td></tr></table></figure></p>\n<p>如果提示要sudo那就加上sudo就行了。<br>验证一下 ： npm info underscore 如果有返回underscore的相应信息就表示成功了。<br>以上内容参考网址：<a href=\"http://www.cnblogs.com/nurdun/p/6824480.html\" target=\"_blank\" rel=\"noopener\">http://www.cnblogs.com/nurdun/p/6824480.html</a> </p>\n"},{"title":"记录element-ui 二次封装table时formatter的使用问题","abbrlink":"7f247ba3","date":"2019-04-24T14:11:01.000Z","_content":"\n### 二次封装element table表格中遇到的问题记录\n我们都知道element-ui 的table 中表格行的通过prop指定显示数据源中的字段，我们在进行二次封装时，如果数据都是很简单的字符串或者数字之类的，那就可以直接使用prop就行了，不需要做特殊的操作，但是如果是数组，那就得进行特殊的处理了。\n我们知道element 对于表格行还提供了一个格式化的函数：formatter，常规的用法没有什么好说的了，格式化显示货币，时间等，这里要说的是当字段是数组的时候，而且要在当前列显示html元素的时候就有点蛋疼了，如果是不需要html元素，直接循环数组就行。\n下面是element table的formatter的常规用法（来自element官网）：\n```\n<template>\n  <el-table\n    :data=\"tableData\"\n    style=\"width: 100%\"\n    :default-sort = \"{prop: 'date', order: 'descending'}\"\n    >\n    <el-table-column\n      prop=\"date\"\n      label=\"日期\"\n      sortable\n      width=\"180\">\n    </el-table-column>\n    <el-table-column\n      prop=\"name\"\n      label=\"姓名\"\n      sortable\n      width=\"180\">\n    </el-table-column>\n    <el-table-column\n      prop=\"address\"\n      label=\"地址\"\n      :formatter=\"formatter\">\n    </el-table-column>\n  </el-table>\n</template>\n\n<script>\n  export default {\n    data() {\n      return {\n        tableData: [{\n          date: '2016-05-02',\n          name: '王小虎',\n          address: '上海市普陀区金沙江路 1518 弄'\n        }, {\n          date: '2016-05-04',\n          name: '王小虎',\n          address: '上海市普陀区金沙江路 1517 弄'\n        }, {\n          date: '2016-05-01',\n          name: '王小虎',\n          address: '上海市普陀区金沙江路 1519 弄'\n        }, {\n          date: '2016-05-03',\n          name: '王小虎',\n          address: '上海市普陀区金沙江路 1516 弄'\n        }]\n      }\n    },\n    methods: {\n      formatter(row, column) {\n        return row.address;\n      }\n    }\n  }\n</script>\n\n```\n下面来说下我们项目的需求\n![](1.png)\n如果不是二次封装也很容易解决，可以用template，但是我们这里说的是二次封装，这里只能用formatter函数了，父组件在调用时需要提供类似这样的数据：\n```\ntablelable:[\n    {lable:'表格行1',prop:'prop_1'},\n    {lable:'时间',prop:'time'},\n    {lable:'附件',prop:'files',\n    formatter:(row,column,cellvalue,index)={\n            //在这里进行格式化输出\n        }\n    },\n]\n// 这里提供的数据源\ntableData:[\n    {prop_1:'***',time:'2015-20-2',files:[name:'12.jpg',url:'']},\n    {prop_1:'***',time:'2015-20-2',files:[name:'12.jpg',url:'']}\n]\n```\n下面贴出图片吧\n![](2.png)\n![](3.png)\n这里的formatter必须要返回一个对象才能渲染出html，如果是返回一个字符串是没有用的，会原样输出字符串，比如'<a heref=\"\">12.jpg</a>' 他不会渲染出可点击的a  而是把一整个当成字符串输出，没有渲染。<font color=\"red\">还有一个需要注意的地方就是在这里返回的对象中的元素的属性要采用原生的写法，比如class要写成className，还有变量等也需要注意写法</font>。好了，记录下，以后再遇到就懂得处理了。\n","source":"_posts/记录element-ui-二次封装table时formatter的使用问题.md","raw":"---\ntitle: 记录element-ui 二次封装table时formatter的使用问题\ntags:\n  - element-ui\n  - vue\ncategories: 前端\nabbrlink: 7f247ba3\ndate: 2019-04-24 22:11:01\n---\n\n### 二次封装element table表格中遇到的问题记录\n我们都知道element-ui 的table 中表格行的通过prop指定显示数据源中的字段，我们在进行二次封装时，如果数据都是很简单的字符串或者数字之类的，那就可以直接使用prop就行了，不需要做特殊的操作，但是如果是数组，那就得进行特殊的处理了。\n我们知道element 对于表格行还提供了一个格式化的函数：formatter，常规的用法没有什么好说的了，格式化显示货币，时间等，这里要说的是当字段是数组的时候，而且要在当前列显示html元素的时候就有点蛋疼了，如果是不需要html元素，直接循环数组就行。\n下面是element table的formatter的常规用法（来自element官网）：\n```\n<template>\n  <el-table\n    :data=\"tableData\"\n    style=\"width: 100%\"\n    :default-sort = \"{prop: 'date', order: 'descending'}\"\n    >\n    <el-table-column\n      prop=\"date\"\n      label=\"日期\"\n      sortable\n      width=\"180\">\n    </el-table-column>\n    <el-table-column\n      prop=\"name\"\n      label=\"姓名\"\n      sortable\n      width=\"180\">\n    </el-table-column>\n    <el-table-column\n      prop=\"address\"\n      label=\"地址\"\n      :formatter=\"formatter\">\n    </el-table-column>\n  </el-table>\n</template>\n\n<script>\n  export default {\n    data() {\n      return {\n        tableData: [{\n          date: '2016-05-02',\n          name: '王小虎',\n          address: '上海市普陀区金沙江路 1518 弄'\n        }, {\n          date: '2016-05-04',\n          name: '王小虎',\n          address: '上海市普陀区金沙江路 1517 弄'\n        }, {\n          date: '2016-05-01',\n          name: '王小虎',\n          address: '上海市普陀区金沙江路 1519 弄'\n        }, {\n          date: '2016-05-03',\n          name: '王小虎',\n          address: '上海市普陀区金沙江路 1516 弄'\n        }]\n      }\n    },\n    methods: {\n      formatter(row, column) {\n        return row.address;\n      }\n    }\n  }\n</script>\n\n```\n下面来说下我们项目的需求\n![](1.png)\n如果不是二次封装也很容易解决，可以用template，但是我们这里说的是二次封装，这里只能用formatter函数了，父组件在调用时需要提供类似这样的数据：\n```\ntablelable:[\n    {lable:'表格行1',prop:'prop_1'},\n    {lable:'时间',prop:'time'},\n    {lable:'附件',prop:'files',\n    formatter:(row,column,cellvalue,index)={\n            //在这里进行格式化输出\n        }\n    },\n]\n// 这里提供的数据源\ntableData:[\n    {prop_1:'***',time:'2015-20-2',files:[name:'12.jpg',url:'']},\n    {prop_1:'***',time:'2015-20-2',files:[name:'12.jpg',url:'']}\n]\n```\n下面贴出图片吧\n![](2.png)\n![](3.png)\n这里的formatter必须要返回一个对象才能渲染出html，如果是返回一个字符串是没有用的，会原样输出字符串，比如'<a heref=\"\">12.jpg</a>' 他不会渲染出可点击的a  而是把一整个当成字符串输出，没有渲染。<font color=\"red\">还有一个需要注意的地方就是在这里返回的对象中的元素的属性要采用原生的写法，比如class要写成className，还有变量等也需要注意写法</font>。好了，记录下，以后再遇到就懂得处理了。\n","slug":"记录element-ui-二次封装table时formatter的使用问题","published":1,"updated":"2020-04-30T07:58:25.404Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0ocrvl001e40m0j31int8m","content":"<h3 id=\"二次封装element-table表格中遇到的问题记录\"><a href=\"#二次封装element-table表格中遇到的问题记录\" class=\"headerlink\" title=\"二次封装element table表格中遇到的问题记录\"></a>二次封装element table表格中遇到的问题记录</h3><p>我们都知道element-ui 的table 中表格行的通过prop指定显示数据源中的字段，我们在进行二次封装时，如果数据都是很简单的字符串或者数字之类的，那就可以直接使用prop就行了，不需要做特殊的操作，但是如果是数组，那就得进行特殊的处理了。<br>我们知道element 对于表格行还提供了一个格式化的函数：formatter，常规的用法没有什么好说的了，格式化显示货币，时间等，这里要说的是当字段是数组的时候，而且要在当前列显示html元素的时候就有点蛋疼了，如果是不需要html元素，直接循环数组就行。<br>下面是element table的formatter的常规用法（来自element官网）：<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">el-table</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">:data</span>=<span class=\"string\">\"tableData\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">style</span>=<span class=\"string\">\"width: 100%\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">:default-sort</span> = <span class=\"string\">\"&#123;prop: 'date', order: 'descending'&#125;\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    &gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-table-column</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">prop</span>=<span class=\"string\">\"date\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">label</span>=<span class=\"string\">\"日期\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">sortable</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">width</span>=<span class=\"string\">\"180\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">el-table-column</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-table-column</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">prop</span>=<span class=\"string\">\"name\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">label</span>=<span class=\"string\">\"姓名\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">sortable</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">width</span>=<span class=\"string\">\"180\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">el-table-column</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-table-column</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">prop</span>=<span class=\"string\">\"address\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">label</span>=<span class=\"string\">\"地址\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">:formatter</span>=<span class=\"string\">\"formatter\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">el-table-column</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">el-table</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"javascript\">  <span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span><br><span class=\"line\">    data() &#123;</span><br><span class=\"line\"><span class=\"actionscript\">      <span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\">        tableData: [&#123;</span><br><span class=\"line\"><span class=\"actionscript\">          date: <span class=\"string\">'2016-05-02'</span>,</span></span><br><span class=\"line\"><span class=\"actionscript\">          name: <span class=\"string\">'王小虎'</span>,</span></span><br><span class=\"line\"><span class=\"actionscript\">          address: <span class=\"string\">'上海市普陀区金沙江路 1518 弄'</span></span></span><br><span class=\"line\">        &#125;, &#123;</span><br><span class=\"line\"><span class=\"actionscript\">          date: <span class=\"string\">'2016-05-04'</span>,</span></span><br><span class=\"line\"><span class=\"actionscript\">          name: <span class=\"string\">'王小虎'</span>,</span></span><br><span class=\"line\"><span class=\"actionscript\">          address: <span class=\"string\">'上海市普陀区金沙江路 1517 弄'</span></span></span><br><span class=\"line\">        &#125;, &#123;</span><br><span class=\"line\"><span class=\"actionscript\">          date: <span class=\"string\">'2016-05-01'</span>,</span></span><br><span class=\"line\"><span class=\"actionscript\">          name: <span class=\"string\">'王小虎'</span>,</span></span><br><span class=\"line\"><span class=\"actionscript\">          address: <span class=\"string\">'上海市普陀区金沙江路 1519 弄'</span></span></span><br><span class=\"line\">        &#125;, &#123;</span><br><span class=\"line\"><span class=\"actionscript\">          date: <span class=\"string\">'2016-05-03'</span>,</span></span><br><span class=\"line\"><span class=\"actionscript\">          name: <span class=\"string\">'王小虎'</span>,</span></span><br><span class=\"line\"><span class=\"actionscript\">          address: <span class=\"string\">'上海市普陀区金沙江路 1516 弄'</span></span></span><br><span class=\"line\">        &#125;]</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    methods: &#123;</span><br><span class=\"line\">      formatter(row, column) &#123;</span><br><span class=\"line\"><span class=\"actionscript\">        <span class=\"keyword\">return</span> row.address;</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>下面来说下我们项目的需求<br><img src=\"1.png\" alt><br>如果不是二次封装也很容易解决，可以用template，但是我们这里说的是二次封装，这里只能用formatter函数了，父组件在调用时需要提供类似这样的数据：<br><figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">tablelable:</span>[</span><br><span class=\"line\">    &#123;<span class=\"string\">lable:</span><span class=\"string\">'表格行1'</span>,<span class=\"string\">prop:</span><span class=\"string\">'prop_1'</span>&#125;,</span><br><span class=\"line\">    &#123;<span class=\"string\">lable:</span><span class=\"string\">'时间'</span>,<span class=\"string\">prop:</span><span class=\"string\">'time'</span>&#125;,</span><br><span class=\"line\">    &#123;<span class=\"string\">lable:</span><span class=\"string\">'附件'</span>,<span class=\"string\">prop:</span><span class=\"string\">'files'</span>,</span><br><span class=\"line\"><span class=\"symbol\">    formatter:</span>(row,column,cellvalue,index)=&#123;</span><br><span class=\"line\">            <span class=\"comment\">//在这里进行格式化输出</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">]</span><br><span class=\"line\"><span class=\"comment\">// 这里提供的数据源</span></span><br><span class=\"line\"><span class=\"string\">tableData:</span>[</span><br><span class=\"line\">    &#123;<span class=\"string\">prop_1:</span><span class=\"string\">'***'</span>,<span class=\"string\">time:</span><span class=\"string\">'2015-20-2'</span>,<span class=\"string\">files:</span>[<span class=\"string\">name:</span><span class=\"string\">'12.jpg'</span>,<span class=\"string\">url:</span><span class=\"string\">''</span>]&#125;,</span><br><span class=\"line\">    &#123;<span class=\"string\">prop_1:</span><span class=\"string\">'***'</span>,<span class=\"string\">time:</span><span class=\"string\">'2015-20-2'</span>,<span class=\"string\">files:</span>[<span class=\"string\">name:</span><span class=\"string\">'12.jpg'</span>,<span class=\"string\">url:</span><span class=\"string\">''</span>]&#125;</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure></p>\n<p>下面贴出图片吧<br><img src=\"2.png\" alt><br><img src=\"3.png\" alt><br>这里的formatter必须要返回一个对象才能渲染出html，如果是返回一个字符串是没有用的，会原样输出字符串，比如’<a heref>12.jpg</a>‘ 他不会渲染出可点击的a  而是把一整个当成字符串输出，没有渲染。<font color=\"red\">还有一个需要注意的地方就是在这里返回的对象中的元素的属性要采用原生的写法，比如class要写成className，还有变量等也需要注意写法</font>。好了，记录下，以后再遇到就懂得处理了。</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"二次封装element-table表格中遇到的问题记录\"><a href=\"#二次封装element-table表格中遇到的问题记录\" class=\"headerlink\" title=\"二次封装element table表格中遇到的问题记录\"></a>二次封装element table表格中遇到的问题记录</h3><p>我们都知道element-ui 的table 中表格行的通过prop指定显示数据源中的字段，我们在进行二次封装时，如果数据都是很简单的字符串或者数字之类的，那就可以直接使用prop就行了，不需要做特殊的操作，但是如果是数组，那就得进行特殊的处理了。<br>我们知道element 对于表格行还提供了一个格式化的函数：formatter，常规的用法没有什么好说的了，格式化显示货币，时间等，这里要说的是当字段是数组的时候，而且要在当前列显示html元素的时候就有点蛋疼了，如果是不需要html元素，直接循环数组就行。<br>下面是element table的formatter的常规用法（来自element官网）：<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">el-table</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">:data</span>=<span class=\"string\">\"tableData\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">style</span>=<span class=\"string\">\"width: 100%\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">:default-sort</span> = <span class=\"string\">\"&#123;prop: 'date', order: 'descending'&#125;\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    &gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-table-column</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">prop</span>=<span class=\"string\">\"date\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">label</span>=<span class=\"string\">\"日期\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">sortable</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">width</span>=<span class=\"string\">\"180\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">el-table-column</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-table-column</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">prop</span>=<span class=\"string\">\"name\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">label</span>=<span class=\"string\">\"姓名\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">sortable</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">width</span>=<span class=\"string\">\"180\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">el-table-column</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-table-column</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">prop</span>=<span class=\"string\">\"address\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">label</span>=<span class=\"string\">\"地址\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">:formatter</span>=<span class=\"string\">\"formatter\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">el-table-column</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">el-table</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"javascript\">  <span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span><br><span class=\"line\">    data() &#123;</span><br><span class=\"line\"><span class=\"actionscript\">      <span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\">        tableData: [&#123;</span><br><span class=\"line\"><span class=\"actionscript\">          date: <span class=\"string\">'2016-05-02'</span>,</span></span><br><span class=\"line\"><span class=\"actionscript\">          name: <span class=\"string\">'王小虎'</span>,</span></span><br><span class=\"line\"><span class=\"actionscript\">          address: <span class=\"string\">'上海市普陀区金沙江路 1518 弄'</span></span></span><br><span class=\"line\">        &#125;, &#123;</span><br><span class=\"line\"><span class=\"actionscript\">          date: <span class=\"string\">'2016-05-04'</span>,</span></span><br><span class=\"line\"><span class=\"actionscript\">          name: <span class=\"string\">'王小虎'</span>,</span></span><br><span class=\"line\"><span class=\"actionscript\">          address: <span class=\"string\">'上海市普陀区金沙江路 1517 弄'</span></span></span><br><span class=\"line\">        &#125;, &#123;</span><br><span class=\"line\"><span class=\"actionscript\">          date: <span class=\"string\">'2016-05-01'</span>,</span></span><br><span class=\"line\"><span class=\"actionscript\">          name: <span class=\"string\">'王小虎'</span>,</span></span><br><span class=\"line\"><span class=\"actionscript\">          address: <span class=\"string\">'上海市普陀区金沙江路 1519 弄'</span></span></span><br><span class=\"line\">        &#125;, &#123;</span><br><span class=\"line\"><span class=\"actionscript\">          date: <span class=\"string\">'2016-05-03'</span>,</span></span><br><span class=\"line\"><span class=\"actionscript\">          name: <span class=\"string\">'王小虎'</span>,</span></span><br><span class=\"line\"><span class=\"actionscript\">          address: <span class=\"string\">'上海市普陀区金沙江路 1516 弄'</span></span></span><br><span class=\"line\">        &#125;]</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    methods: &#123;</span><br><span class=\"line\">      formatter(row, column) &#123;</span><br><span class=\"line\"><span class=\"actionscript\">        <span class=\"keyword\">return</span> row.address;</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>下面来说下我们项目的需求<br><img src=\"1.png\" alt><br>如果不是二次封装也很容易解决，可以用template，但是我们这里说的是二次封装，这里只能用formatter函数了，父组件在调用时需要提供类似这样的数据：<br><figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">tablelable:</span>[</span><br><span class=\"line\">    &#123;<span class=\"string\">lable:</span><span class=\"string\">'表格行1'</span>,<span class=\"string\">prop:</span><span class=\"string\">'prop_1'</span>&#125;,</span><br><span class=\"line\">    &#123;<span class=\"string\">lable:</span><span class=\"string\">'时间'</span>,<span class=\"string\">prop:</span><span class=\"string\">'time'</span>&#125;,</span><br><span class=\"line\">    &#123;<span class=\"string\">lable:</span><span class=\"string\">'附件'</span>,<span class=\"string\">prop:</span><span class=\"string\">'files'</span>,</span><br><span class=\"line\"><span class=\"symbol\">    formatter:</span>(row,column,cellvalue,index)=&#123;</span><br><span class=\"line\">            <span class=\"comment\">//在这里进行格式化输出</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">]</span><br><span class=\"line\"><span class=\"comment\">// 这里提供的数据源</span></span><br><span class=\"line\"><span class=\"string\">tableData:</span>[</span><br><span class=\"line\">    &#123;<span class=\"string\">prop_1:</span><span class=\"string\">'***'</span>,<span class=\"string\">time:</span><span class=\"string\">'2015-20-2'</span>,<span class=\"string\">files:</span>[<span class=\"string\">name:</span><span class=\"string\">'12.jpg'</span>,<span class=\"string\">url:</span><span class=\"string\">''</span>]&#125;,</span><br><span class=\"line\">    &#123;<span class=\"string\">prop_1:</span><span class=\"string\">'***'</span>,<span class=\"string\">time:</span><span class=\"string\">'2015-20-2'</span>,<span class=\"string\">files:</span>[<span class=\"string\">name:</span><span class=\"string\">'12.jpg'</span>,<span class=\"string\">url:</span><span class=\"string\">''</span>]&#125;</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure></p>\n<p>下面贴出图片吧<br><img src=\"2.png\" alt><br><img src=\"3.png\" alt><br>这里的formatter必须要返回一个对象才能渲染出html，如果是返回一个字符串是没有用的，会原样输出字符串，比如’<a heref>12.jpg</a>‘ 他不会渲染出可点击的a  而是把一整个当成字符串输出，没有渲染。<font color=\"red\">还有一个需要注意的地方就是在这里返回的对象中的元素的属性要采用原生的写法，比如class要写成className，还有变量等也需要注意写法</font>。好了，记录下，以后再遇到就懂得处理了。</p>\n"},{"title":"运行yarn eject 后 yarn start 报错","abbrlink":"e1691e31","date":"2020-06-04T11:00:34.000Z","_content":"运行 yarn eject 把webpack配置暴露出来后，运行yarn start后报错，\n报错的内容大致是 找不到 react-scripts下的config/env.js文件，然后查了下，发现node_module下 react-scripts被清空了，package.json文件\n下也没有这个记录了，找了很多资料都没有结果，然后索性就按照这个包，按照好后就报各种插件版本低，比如webpack，babel等，然后全部升级后，启动就没有报错了。","source":"_posts/运行yarn-eject-后-yarn-start-报错.md","raw":"---\ntitle: 运行yarn eject 后 yarn start 报错\ntags: 'react,'\ncategories: 前端\nabbrlink: e1691e31\ndate: 2020-06-04 19:00:34\n---\n运行 yarn eject 把webpack配置暴露出来后，运行yarn start后报错，\n报错的内容大致是 找不到 react-scripts下的config/env.js文件，然后查了下，发现node_module下 react-scripts被清空了，package.json文件\n下也没有这个记录了，找了很多资料都没有结果，然后索性就按照这个包，按照好后就报各种插件版本低，比如webpack，babel等，然后全部升级后，启动就没有报错了。","slug":"运行yarn-eject-后-yarn-start-报错","published":1,"updated":"2020-06-04T11:05:49.409Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0ocrvn001i40m0hcquj8q6","content":"<p>运行 yarn eject 把webpack配置暴露出来后，运行yarn start后报错，<br>报错的内容大致是 找不到 react-scripts下的config/env.js文件，然后查了下，发现node_module下 react-scripts被清空了，package.json文件<br>下也没有这个记录了，找了很多资料都没有结果，然后索性就按照这个包，按照好后就报各种插件版本低，比如webpack，babel等，然后全部升级后，启动就没有报错了。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>运行 yarn eject 把webpack配置暴露出来后，运行yarn start后报错，<br>报错的内容大致是 找不到 react-scripts下的config/env.js文件，然后查了下，发现node_module下 react-scripts被清空了，package.json文件<br>下也没有这个记录了，找了很多资料都没有结果，然后索性就按照这个包，按照好后就报各种插件版本低，比如webpack，babel等，然后全部升级后，启动就没有报错了。</p>\n"},{"title":"部署在github page的hexo博客绑定二级域名","abbrlink":"a7642960","date":"2019-02-26T11:45:45.000Z","_content":"## 前提：已经有了域名（这里以阿里云为例）以及能成功访问的github page（这里以hexo部署的博客为例）。\n### 1.增加域名解析：\n\n![](/images/2019-2-26.png)\n这里需要注意，记录类型需要选择CNAME，主机记录为除www和@外的字符，因为我要用blog作为二级域名，所以写blog。解析线路选默认就好了，一开始我选境外，结果不行。记录值为``` ***.github.io ```(即你的github page地址)。到这里解析设置完成了。\n\n### 2.增加域名解析：\n\n在GitHub博客仓库的根目录中新建文件CNAME （没有后缀），里面填写 ``` blog.iyuge.cn ``` 注意，因为hexo在部署至github时会重新删除github的文件，所以我们必须在本地的source目录下新建CNAME文件，然后``` hexo clean && hexo g && hexo d github ```上就有CNAME文件了\n\n### 结语：至此，给github page绑定二级域名就完成了，很简单，但是需要注意的是第一次有可能不成功需要重试几次，每次可能需要等一段时间才会生效！","source":"_posts/部署在github-page的hexo博客绑定二级域名.md","raw":"---\ntitle: 部署在github page的hexo博客绑定二级域名\ntags: 技术\ncategories: 技术\nabbrlink: a7642960\ndate: 2019-02-26 19:45:45\n---\n## 前提：已经有了域名（这里以阿里云为例）以及能成功访问的github page（这里以hexo部署的博客为例）。\n### 1.增加域名解析：\n\n![](/images/2019-2-26.png)\n这里需要注意，记录类型需要选择CNAME，主机记录为除www和@外的字符，因为我要用blog作为二级域名，所以写blog。解析线路选默认就好了，一开始我选境外，结果不行。记录值为``` ***.github.io ```(即你的github page地址)。到这里解析设置完成了。\n\n### 2.增加域名解析：\n\n在GitHub博客仓库的根目录中新建文件CNAME （没有后缀），里面填写 ``` blog.iyuge.cn ``` 注意，因为hexo在部署至github时会重新删除github的文件，所以我们必须在本地的source目录下新建CNAME文件，然后``` hexo clean && hexo g && hexo d github ```上就有CNAME文件了\n\n### 结语：至此，给github page绑定二级域名就完成了，很简单，但是需要注意的是第一次有可能不成功需要重试几次，每次可能需要等一段时间才会生效！","slug":"部署在github-page的hexo博客绑定二级域名","published":1,"updated":"2020-04-30T07:58:25.404Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0ocrvo001m40m0hg1o3a74","content":"<h2 id=\"前提：已经有了域名（这里以阿里云为例）以及能成功访问的github-page（这里以hexo部署的博客为例）。\"><a href=\"#前提：已经有了域名（这里以阿里云为例）以及能成功访问的github-page（这里以hexo部署的博客为例）。\" class=\"headerlink\" title=\"前提：已经有了域名（这里以阿里云为例）以及能成功访问的github page（这里以hexo部署的博客为例）。\"></a>前提：已经有了域名（这里以阿里云为例）以及能成功访问的github page（这里以hexo部署的博客为例）。</h2><h3 id=\"1-增加域名解析：\"><a href=\"#1-增加域名解析：\" class=\"headerlink\" title=\"1.增加域名解析：\"></a>1.增加域名解析：</h3><p><img src=\"/images/2019-2-26.png\" alt><br>这里需要注意，记录类型需要选择CNAME，主机记录为除www和@外的字符，因为我要用blog作为二级域名，所以写blog。解析线路选默认就好了，一开始我选境外，结果不行。记录值为<code>***.github.io</code>(即你的github page地址)。到这里解析设置完成了。</p>\n<h3 id=\"2-增加域名解析：\"><a href=\"#2-增加域名解析：\" class=\"headerlink\" title=\"2.增加域名解析：\"></a>2.增加域名解析：</h3><p>在GitHub博客仓库的根目录中新建文件CNAME （没有后缀），里面填写 <code>blog.iyuge.cn</code> 注意，因为hexo在部署至github时会重新删除github的文件，所以我们必须在本地的source目录下新建CNAME文件，然后<code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo d github</code>上就有CNAME文件了</p>\n<h3 id=\"结语：至此，给github-page绑定二级域名就完成了，很简单，但是需要注意的是第一次有可能不成功需要重试几次，每次可能需要等一段时间才会生效！\"><a href=\"#结语：至此，给github-page绑定二级域名就完成了，很简单，但是需要注意的是第一次有可能不成功需要重试几次，每次可能需要等一段时间才会生效！\" class=\"headerlink\" title=\"结语：至此，给github page绑定二级域名就完成了，很简单，但是需要注意的是第一次有可能不成功需要重试几次，每次可能需要等一段时间才会生效！\"></a>结语：至此，给github page绑定二级域名就完成了，很简单，但是需要注意的是第一次有可能不成功需要重试几次，每次可能需要等一段时间才会生效！</h3>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"前提：已经有了域名（这里以阿里云为例）以及能成功访问的github-page（这里以hexo部署的博客为例）。\"><a href=\"#前提：已经有了域名（这里以阿里云为例）以及能成功访问的github-page（这里以hexo部署的博客为例）。\" class=\"headerlink\" title=\"前提：已经有了域名（这里以阿里云为例）以及能成功访问的github page（这里以hexo部署的博客为例）。\"></a>前提：已经有了域名（这里以阿里云为例）以及能成功访问的github page（这里以hexo部署的博客为例）。</h2><h3 id=\"1-增加域名解析：\"><a href=\"#1-增加域名解析：\" class=\"headerlink\" title=\"1.增加域名解析：\"></a>1.增加域名解析：</h3><p><img src=\"/images/2019-2-26.png\" alt><br>这里需要注意，记录类型需要选择CNAME，主机记录为除www和@外的字符，因为我要用blog作为二级域名，所以写blog。解析线路选默认就好了，一开始我选境外，结果不行。记录值为<code>***.github.io</code>(即你的github page地址)。到这里解析设置完成了。</p>\n<h3 id=\"2-增加域名解析：\"><a href=\"#2-增加域名解析：\" class=\"headerlink\" title=\"2.增加域名解析：\"></a>2.增加域名解析：</h3><p>在GitHub博客仓库的根目录中新建文件CNAME （没有后缀），里面填写 <code>blog.iyuge.cn</code> 注意，因为hexo在部署至github时会重新删除github的文件，所以我们必须在本地的source目录下新建CNAME文件，然后<code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo d github</code>上就有CNAME文件了</p>\n<h3 id=\"结语：至此，给github-page绑定二级域名就完成了，很简单，但是需要注意的是第一次有可能不成功需要重试几次，每次可能需要等一段时间才会生效！\"><a href=\"#结语：至此，给github-page绑定二级域名就完成了，很简单，但是需要注意的是第一次有可能不成功需要重试几次，每次可能需要等一段时间才会生效！\" class=\"headerlink\" title=\"结语：至此，给github page绑定二级域名就完成了，很简单，但是需要注意的是第一次有可能不成功需要重试几次，每次可能需要等一段时间才会生效！\"></a>结语：至此，给github page绑定二级域名就完成了，很简单，但是需要注意的是第一次有可能不成功需要重试几次，每次可能需要等一段时间才会生效！</h3>"}],"PostAsset":[{"_id":"source/_posts/js判断一个变量是对象还是数组的实用方法记录/1.jpg","post":"ckb0ocrv0000940m0l8kux3fn","slug":"1.jpg","modified":1,"renderable":1},{"_id":"source/_posts/js判断一个变量是对象还是数组的实用方法记录/2.jpg","post":"ckb0ocrv0000940m0l8kux3fn","slug":"2.jpg","modified":1,"renderable":1},{"_id":"source/_posts/webpack4从头构建一个简单的vue2项目/1.png","post":"ckb0ocrv7000e40m0wc9bjmw5","slug":"1.png","modified":1,"renderable":1},{"_id":"source/_posts/webpack4从头构建一个简单的vue2项目/2.png","post":"ckb0ocrv7000e40m0wc9bjmw5","slug":"2.png","modified":1,"renderable":1},{"_id":"source/_posts/用Xshell登录阿里云服务器/1.jpg","post":"ckb0ocrvh001240m0g3my9lqo","slug":"1.jpg","modified":1,"renderable":1},{"_id":"source/_posts/用Xshell登录阿里云服务器/2.jpg","post":"ckb0ocrvh001240m0g3my9lqo","slug":"2.jpg","modified":1,"renderable":1},{"_id":"source/_posts/element-ui-上传组件函数自定义参数传递/1.png","post":"ckb0ocruh000140m0232f9ul2","slug":"1.png","modified":1,"renderable":1},{"_id":"source/_posts/element-ui-上传组件函数自定义参数传递/2.png","post":"ckb0ocruh000140m0232f9ul2","slug":"2.png","modified":1,"renderable":1},{"_id":"source/_posts/element-ui-上传组件函数自定义参数传递/3.png","post":"ckb0ocruh000140m0232f9ul2","slug":"3.png","modified":1,"renderable":1},{"_id":"source/_posts/在重启阿里云ubantu后nginx、mysql、pm2等的重启/1.png","post":"ckb0ocrve000r40m03erzdjj7","slug":"1.png","modified":1,"renderable":1},{"_id":"source/_posts/在重启阿里云ubantu后nginx、mysql、pm2等的重启/2.png","post":"ckb0ocrve000r40m03erzdjj7","slug":"2.png","modified":1,"renderable":1},{"_id":"source/_posts/在重启阿里云ubantu后nginx、mysql、pm2等的重启/3.png","post":"ckb0ocrve000r40m03erzdjj7","slug":"3.png","modified":1,"renderable":1},{"_id":"source/_posts/记录element-ui-二次封装table时formatter的使用问题/1.png","post":"ckb0ocrvl001e40m0j31int8m","slug":"1.png","modified":1,"renderable":1},{"_id":"source/_posts/记录element-ui-二次封装table时formatter的使用问题/2.png","post":"ckb0ocrvl001e40m0j31int8m","slug":"2.png","modified":1,"renderable":1},{"_id":"source/_posts/记录element-ui-二次封装table时formatter的使用问题/3.png","post":"ckb0ocrvl001e40m0j31int8m","slug":"3.png","modified":1,"renderable":1},{"_id":"source/_posts/element-ui-表格中的form的input动态验证规则/1.png","post":"ckb0ocruu000740m08b182q93","slug":"1.png","modified":1,"renderable":1},{"_id":"source/_posts/element-ui-表格中的form的input动态验证规则/2.png","post":"ckb0ocruu000740m08b182q93","slug":"2.png","modified":1,"renderable":1},{"_id":"source/_posts/element-ui-表格中的form的input动态验证规则/3.png","post":"ckb0ocruu000740m08b182q93","slug":"3.png","modified":1,"renderable":1},{"_id":"source/_posts/element-ui-表格中的form的input动态验证规则/4.png","post":"ckb0ocruu000740m08b182q93","slug":"4.png","modified":1,"renderable":1},{"_id":"source/_posts/element-ui-表格中的form的input动态验证规则/5.png","post":"ckb0ocruu000740m08b182q93","slug":"5.png","modified":1,"renderable":1},{"_id":"source/_posts/一个奇葩的表格统计需求/1.jpg","post":"ckb0ocrvb000m40m06k9suzu9","slug":"1.jpg","modified":1,"renderable":1},{"_id":"source/_posts/一个奇葩的表格统计需求/2.jpg","post":"ckb0ocrvb000m40m06k9suzu9","slug":"2.jpg","modified":1,"renderable":1},{"_id":"source/_posts/一个奇葩的表格统计需求/3.jpg","post":"ckb0ocrvb000m40m06k9suzu9","slug":"3.jpg","modified":1,"renderable":1},{"_id":"source/_posts/一个奇葩的表格统计需求/4.jpg","post":"ckb0ocrvb000m40m06k9suzu9","slug":"4.jpg","modified":1,"renderable":1},{"_id":"source/_posts/一个奇葩的表格统计需求/5.jpg","post":"ckb0ocrvb000m40m06k9suzu9","slug":"5.jpg","modified":1,"renderable":1},{"_id":"source/_posts/windows下使用nexus搭建私有仓库并使用vue-cli-3-搭建组件库/1.png","post":"ckb0ocrv8000f40m0nflohc92","slug":"1.png","modified":1,"renderable":1},{"_id":"source/_posts/windows下使用nexus搭建私有仓库并使用vue-cli-3-搭建组件库/2.png","post":"ckb0ocrv8000f40m0nflohc92","slug":"2.png","modified":1,"renderable":1},{"_id":"source/_posts/windows下使用nexus搭建私有仓库并使用vue-cli-3-搭建组件库/3.png","post":"ckb0ocrv8000f40m0nflohc92","slug":"3.png","modified":1,"renderable":1},{"_id":"source/_posts/windows下使用nexus搭建私有仓库并使用vue-cli-3-搭建组件库/4.png","post":"ckb0ocrv8000f40m0nflohc92","slug":"4.png","modified":1,"renderable":1},{"_id":"source/_posts/windows下使用nexus搭建私有仓库并使用vue-cli-3-搭建组件库/5.png","post":"ckb0ocrv8000f40m0nflohc92","slug":"5.png","modified":1,"renderable":1},{"_id":"source/_posts/windows下使用nexus搭建私有仓库并使用vue-cli-3-搭建组件库/6.png","post":"ckb0ocrv8000f40m0nflohc92","slug":"6.png","modified":1,"renderable":1},{"_id":"source/_posts/windows下使用nexus搭建私有仓库并使用vue-cli-3-搭建组件库/7.png","post":"ckb0ocrv8000f40m0nflohc92","slug":"7.png","modified":1,"renderable":1},{"_id":"source/_posts/windows下使用nexus搭建私有仓库并使用vue-cli-3-搭建组件库/8.png","post":"ckb0ocrv8000f40m0nflohc92","slug":"8.png","modified":1,"renderable":1}],"PostCategory":[{"post_id":"ckb0ocrv0000940m0l8kux3fn","category_id":"ckb0ocrus000440m0mh4ojhjv","_id":"ckb0ocrv9000g40m0vll3zzit"},{"post_id":"ckb0ocruh000140m0232f9ul2","category_id":"ckb0ocrus000440m0mh4ojhjv","_id":"ckb0ocrvb000k40m0h6ap47dm"},{"post_id":"ckb0ocrv7000e40m0wc9bjmw5","category_id":"ckb0ocrus000440m0mh4ojhjv","_id":"ckb0ocrvc000n40m09xeme8a8"},{"post_id":"ckb0ocrul000340m0aria481d","category_id":"ckb0ocrus000440m0mh4ojhjv","_id":"ckb0ocrve000s40m0dxzpw9e2"},{"post_id":"ckb0ocrv8000f40m0nflohc92","category_id":"ckb0ocrus000440m0mh4ojhjv","_id":"ckb0ocrvf000v40m03hwfp6oz"},{"post_id":"ckb0ocrva000j40m0x7boigem","category_id":"ckb0ocrus000440m0mh4ojhjv","_id":"ckb0ocrvh001040m0gqo9uva6"},{"post_id":"ckb0ocruu000740m08b182q93","category_id":"ckb0ocrus000440m0mh4ojhjv","_id":"ckb0ocrvi001340m0aq6qve4e"},{"post_id":"ckb0ocrve000r40m03erzdjj7","category_id":"ckb0ocrvc000o40m0ryr3rm1g","_id":"ckb0ocrvk001840m0m2x21ku7"},{"post_id":"ckb0ocrv3000b40m08zeus4f1","category_id":"ckb0ocrvc000o40m0ryr3rm1g","_id":"ckb0ocrvl001b40m07mt4md9g"},{"post_id":"ckb0ocrvf000u40m0veryjx4w","category_id":"ckb0ocrus000440m0mh4ojhjv","_id":"ckb0ocrvn001g40m0dsiz89cc"},{"post_id":"ckb0ocrvh001240m0g3my9lqo","category_id":"ckb0ocrvc000o40m0ryr3rm1g","_id":"ckb0ocrvo001j40m0bo61q0es"},{"post_id":"ckb0ocrvk001a40m07alclof7","category_id":"ckb0ocrus000440m0mh4ojhjv","_id":"ckb0ocrvp001n40m0pviipdgl"},{"post_id":"ckb0ocrvg000z40m0hemrwd5s","category_id":"ckb0ocrvi001640m08narj1xo","_id":"ckb0ocrvp001q40m0t3buewqu"},{"post_id":"ckb0ocrvl001e40m0j31int8m","category_id":"ckb0ocrus000440m0mh4ojhjv","_id":"ckb0ocrvq001s40m04vf7tude"},{"post_id":"ckb0ocrvn001i40m0hcquj8q6","category_id":"ckb0ocrus000440m0mh4ojhjv","_id":"ckb0ocrvq001u40m0zap71p62"},{"post_id":"ckb0ocrvb000m40m06k9suzu9","category_id":"ckb0ocrvg000w40m0iw2rn2bv","_id":"ckb0ocrvq001v40m0wxaxkr4y"},{"post_id":"ckb0ocrvb000m40m06k9suzu9","category_id":"ckb0ocrvm001f40m0jaqukbri","_id":"ckb0ocrvq001x40m076hamlkd"},{"post_id":"ckb0ocrvo001m40m0hg1o3a74","category_id":"ckb0ocrvi001640m08narj1xo","_id":"ckb0ocrvq001z40m07t1iqnxb"},{"post_id":"ckb0ocrvj001740m0oaacbex8","category_id":"ckb0ocrvi001640m08narj1xo","_id":"ckb0ocrvr002240m0te2r5fvf"}],"PostTag":[{"post_id":"ckb0ocruh000140m0232f9ul2","tag_id":"ckb0ocrut000540m0jd3tofye","_id":"ckb0ocrvb000l40m0xneddcpu"},{"post_id":"ckb0ocruh000140m0232f9ul2","tag_id":"ckb0ocrv5000d40m0gm42q51v","_id":"ckb0ocrvd000p40m0o7a4c7la"},{"post_id":"ckb0ocrul000340m0aria481d","tag_id":"ckb0ocrv9000i40m0q1ur5zbe","_id":"ckb0ocrvf000t40m0qf4tx710"},{"post_id":"ckb0ocrvb000m40m06k9suzu9","tag_id":"ckb0ocrv5000d40m0gm42q51v","_id":"ckb0ocrvg000x40m0io9p0lc7"},{"post_id":"ckb0ocrvb000m40m06k9suzu9","tag_id":"ckb0ocrv9000i40m0q1ur5zbe","_id":"ckb0ocrvh001140m0iowo96x7"},{"post_id":"ckb0ocrvf000u40m0veryjx4w","tag_id":"ckb0ocrv9000i40m0q1ur5zbe","_id":"ckb0ocrvi001440m07uccpzoc"},{"post_id":"ckb0ocruu000740m08b182q93","tag_id":"ckb0ocrut000540m0jd3tofye","_id":"ckb0ocrvk001940m066itwigi"},{"post_id":"ckb0ocruu000740m08b182q93","tag_id":"ckb0ocrv5000d40m0gm42q51v","_id":"ckb0ocrvl001c40m0cru3r4xv"},{"post_id":"ckb0ocrv0000940m0l8kux3fn","tag_id":"ckb0ocrv9000i40m0q1ur5zbe","_id":"ckb0ocrvn001h40m0l7fu8tc2"},{"post_id":"ckb0ocrvl001e40m0j31int8m","tag_id":"ckb0ocrut000540m0jd3tofye","_id":"ckb0ocrvo001k40m0odmfssdc"},{"post_id":"ckb0ocrvl001e40m0j31int8m","tag_id":"ckb0ocrv5000d40m0gm42q51v","_id":"ckb0ocrvp001p40m0b2prjyp9"},{"post_id":"ckb0ocrv3000b40m08zeus4f1","tag_id":"ckb0ocrvl001d40m0nek2uhpx","_id":"ckb0ocrvp001r40m0m5wl5lc1"},{"post_id":"ckb0ocrv7000e40m0wc9bjmw5","tag_id":"ckb0ocrvo001l40m0aa2elx8j","_id":"ckb0ocrvq001y40m0mrkgq027"},{"post_id":"ckb0ocrv7000e40m0wc9bjmw5","tag_id":"ckb0ocrvq001t40m0ppsck6t8","_id":"ckb0ocrvq002040m02rkcejuh"},{"post_id":"ckb0ocrv7000e40m0wc9bjmw5","tag_id":"ckb0ocrv5000d40m0gm42q51v","_id":"ckb0ocrvr002340m07ax9efwe"},{"post_id":"ckb0ocrv8000f40m0nflohc92","tag_id":"ckb0ocrvq001w40m0ficiozoa","_id":"ckb0ocrvr002440m0fw0pm4g2"},{"post_id":"ckb0ocrv8000f40m0nflohc92","tag_id":"ckb0ocrv5000d40m0gm42q51v","_id":"ckb0ocrvr002640m0g6051zqj"},{"post_id":"ckb0ocrva000j40m0x7boigem","tag_id":"ckb0ocrvq002140m0sfi9u5ot","_id":"ckb0ocrvr002740m05bs91dbp"},{"post_id":"ckb0ocrve000r40m03erzdjj7","tag_id":"ckb0ocrvl001d40m0nek2uhpx","_id":"ckb0ocrvr002940m090pk5ivi"},{"post_id":"ckb0ocrvg000z40m0hemrwd5s","tag_id":"ckb0ocrvr002840m0476uyay4","_id":"ckb0ocrvs002b40m0jsbvmumr"},{"post_id":"ckb0ocrvh001240m0g3my9lqo","tag_id":"ckb0ocrvl001d40m0nek2uhpx","_id":"ckb0ocrvs002d40m04xsg3n4d"},{"post_id":"ckb0ocrvj001740m0oaacbex8","tag_id":"ckb0ocrvr002840m0476uyay4","_id":"ckb0ocrvt002f40m0frmnmazm"},{"post_id":"ckb0ocrvk001a40m07alclof7","tag_id":"ckb0ocrvo001l40m0aa2elx8j","_id":"ckb0ocrvt002h40m0st272nxk"},{"post_id":"ckb0ocrvn001i40m0hcquj8q6","tag_id":"ckb0ocrvq002140m0sfi9u5ot","_id":"ckb0ocrvu002j40m0ruu8vmb1"},{"post_id":"ckb0ocrvo001m40m0hg1o3a74","tag_id":"ckb0ocrvr002840m0476uyay4","_id":"ckb0ocrvv002k40m0s97eiu57"}],"Tag":[{"name":"element-ui","_id":"ckb0ocrut000540m0jd3tofye"},{"name":"vue","_id":"ckb0ocrv5000d40m0gm42q51v"},{"name":"js","_id":"ckb0ocrv9000i40m0q1ur5zbe"},{"name":"linux","_id":"ckb0ocrvl001d40m0nek2uhpx"},{"name":"nodejs","_id":"ckb0ocrvo001l40m0aa2elx8j"},{"name":"webpack","_id":"ckb0ocrvq001t40m0ppsck6t8"},{"name":"nexus","_id":"ckb0ocrvq001w40m0ficiozoa"},{"name":"react,","_id":"ckb0ocrvq002140m0sfi9u5ot"},{"name":"技术","_id":"ckb0ocrvr002840m0476uyay4"}]}}