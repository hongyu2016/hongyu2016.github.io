{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"source/README.md","path":"README.md","modified":0,"renderable":0},{"_id":"source/robots.txt","path":"robots.txt","modified":0,"renderable":0},{"_id":"source/images/2019-2-26.png","path":"images/2019-2-26.png","modified":0,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.png","path":"images/avatar.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/js/algolia-search.js","path":"js/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/bookmark.js","path":"js/bookmark.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/local-search.js","path":"js/local-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/motion.js","path":"js/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/next-boot.js","path":"js/next-boot.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/anime.min.js","path":"lib/anime.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/uploads/avatar.png","path":"uploads/avatar.png","modified":0,"renderable":1},{"_id":"themes/next/source/uploads/notfound.gif","path":"uploads/notfound.gif","modified":0,"renderable":1},{"_id":"themes/next/source/js/schemes/muse.js","path":"js/schemes/muse.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/schemes/pisces.js","path":"js/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/all.min.css","path":"lib/font-awesome/css/all.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-brands-400.woff2","path":"lib/font-awesome/webfonts/fa-brands-400.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-regular-400.woff2","path":"lib/font-awesome/webfonts/fa-regular-400.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-solid-900.woff2","path":"lib/font-awesome/webfonts/fa-solid-900.woff2","modified":0,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"109833a1caf13cc5305f1c288b98e4f77c19df4a","modified":1619056568202},{"_id":"source/README.md","hash":"4ff258e53cdb3d0765f6a93250e4c7cfb2814154","modified":1619056568202},{"_id":"source/robots.txt","hash":"038d29f3d9796d903ded6a515b236ad287d27248","modified":1619056568262},{"_id":"source/_posts/Verdaccio-搭建私有npm仓库.md","hash":"f1b56fe565699f586ae19d80cdd1a3d14d08877c","modified":1619056568202},{"_id":"source/_posts/element-ui-表格中的form的input动态验证规则.md","hash":"ce53efb0dc4f98943fa9950b4fd07579eded55ee","modified":1619056568202},{"_id":"source/_posts/js判断一个变量是对象还是数组的实用方法记录.md","hash":"0d9b4d4936d89d59fa9a5f6581fcb12a1f830c09","modified":1619056568212},{"_id":"source/_posts/koa2-中上传文件.md","hash":"efb5bf422b8cf92073592b6b6868955bf33e1dc8","modified":1619056568212},{"_id":"source/_posts/react-常用组件.md","hash":"0874d88a91574d8ca595d5052908844904432646","modified":1621309254666},{"_id":"source/_posts/element-ui-上传组件函数自定义参数传递.md","hash":"c0fb71a83993f7ed82934072ce5c6dd95a27cf52","modified":1619056568202},{"_id":"source/_posts/1-2-3-map-parseInt-报错问解决办法.md","hash":"4358fdce25dc67b14d524191785e856fbe860e3c","modified":1619056568202},{"_id":"source/_posts/css3实现左右滚动跑马灯公告.md","hash":"00057af2d7b0ca82af68265aa1dca89222b688b5","modified":1619056568202},{"_id":"source/_posts/ubantu-apt-get-install方式安装mysql.md","hash":"df75abb12d87b7419fc2ce2173fbc71f6761b650","modified":1619056568212},{"_id":"source/_posts/修改npm和yarn的全局安装包位置和缓存位置.md","hash":"340c7c78a4fa191110175eac49f2dc73d94558a3","modified":1639709008257},{"_id":"source/_posts/webpack4从头构建一个简单的vue2项目.md","hash":"8df9237c26c60038d2f6a291e84a2b21d2319049","modified":1619056568212},{"_id":"source/_posts/一个奇葩的表格统计需求.md","hash":"f4a5e3e009c16f7e9209e0838e33b1777623d1ae","modified":1619056568232},{"_id":"source/_posts/windows下使用nexus搭建私有仓库并使用vue-cli-3-搭建组件库.md","hash":"8f04ee8676a3e7f4f3dcb5319f8a7d0cd3e89d35","modified":1619056568212},{"_id":"source/_posts/小程序中使用css变量.md","hash":"5f2e2ef4792825caf84716b237a0d78f66daff82","modified":1619056568242},{"_id":"source/_posts/在重启阿里云ubantu后nginx、mysql、pm2等的重启.md","hash":"237a0ca2a1cbe0e053d92974179c3e364fef8423","modified":1619056568232},{"_id":"source/_posts/用Xshell登录阿里云服务器.md","hash":"196f06784acc58c279af55ab026cc5c772cce716","modified":1619056568242},{"_id":"source/_posts/实现一个简单的深拷贝.md","hash":"eb3435749b5b8ef51c0e4bca4e9afaa78a247fee","modified":1619056568242},{"_id":"source/_posts/在-create-react-app-中使用Ant-Design中的坑.md","hash":"ecec9d8e4d66d2fdf1565c734b7f020a71cde47f","modified":1619056568232},{"_id":"source/_posts/让支付宝-微信小程序-支持scss.md","hash":"35b341505779a65f16dd282d3075602b84ffa2f4","modified":1619056568242},{"_id":"source/_posts/怎么样在别的电脑同步更新发表hexo博客？.md","hash":"95334639dadff7db4d38366de032eb7cc87fcbfb","modified":1619056568242},{"_id":"source/_posts/用hexo-github搭建个人博客.md","hash":"5fa5c9b3bedad009175107117f8a10049bcbf596","modified":1619056568242},{"_id":"source/_posts/运行yarn-eject-后-yarn-start-报错.md","hash":"495465eefb8e7dcb1c2ededf8dbd8843766fc275","modified":1619056568252},{"_id":"source/_posts/解决npm-install安装任何包都报错的问题.md","hash":"82bcc516c1daf8fc79dc367d11b5e578be86d29a","modified":1619056568242},{"_id":"source/archives/index.md","hash":"b02cea5333defc92b34c970791689f27751517e6","modified":1619056568262},{"_id":"source/categories/index.md","hash":"8350000a8da51808f19b910ca79221838c2ebb50","modified":1619056568262},{"_id":"source/_posts/记录element-ui-二次封装table时formatter的使用问题.md","hash":"91d15539c6a5e66105878ece77a02960e66dcbda","modified":1619056568252},{"_id":"source/_posts/部署在github-page的hexo博客绑定二级域名.md","hash":"7702461a9f0e2c6a802e452ad8b5a8eee6deb84b","modified":1619056568252},{"_id":"source/images/2019-2-26.png","hash":"8f24528dfcc0382abcd8fe829c34ad7501827c46","modified":1619056568262},{"_id":"source/_posts/钉钉工作台自定义组件设计规范及注意事项.md","hash":"ac8f7662db36d10b44739f78c563a9a46efdd6a9","modified":1619056568252},{"_id":"source/404/404.html","hash":"eb76b65dc7e5a53b60e61bb0b4a25addf0d40403","modified":1619056568192},{"_id":"source/_posts/css3实现左右滚动跑马灯公告/1.png","hash":"cba685b5f4acb33bf03ec2ac214b2e0b90108fbf","modified":1619056568202},{"_id":"source/about/index.md","hash":"f52fafb82766fee9c8e4b9941a95f70d7b1a4800","modified":1619056568262},{"_id":"source/_posts/element-ui-上传组件函数自定义参数传递/2.png","hash":"e796281bac9aadf1cf2d35abed8bb11b194883fe","modified":1619056568202},{"_id":"source/_posts/element-ui-上传组件函数自定义参数传递/1.png","hash":"ead49f0f3a675a1a0df47a2d8bf6ffaa2ad41550","modified":1619056568202},{"_id":"source/_posts/element-ui-上传组件函数自定义参数传递/3.png","hash":"b75fe1970b5278c5f1d4f5001bb55e9c053fff52","modified":1619056568202},{"_id":"source/_posts/element-ui-表格中的form的input动态验证规则/3.png","hash":"86ec7353f6c193a4ac6eb7d770656cf24dbb8524","modified":1619056568212},{"_id":"source/_posts/element-ui-表格中的form的input动态验证规则/1.png","hash":"10264588102714359a980206c040c9ddb7cea605","modified":1619056568202},{"_id":"source/_posts/element-ui-表格中的form的input动态验证规则/2.png","hash":"191416348a4434089560929f5e2b547f2af24ac6","modified":1619056568202},{"_id":"source/_posts/element-ui-表格中的form的input动态验证规则/4.png","hash":"94d20fcae17886203ecc58e493d72f22dd181656","modified":1619056568212},{"_id":"source/_posts/js判断一个变量是对象还是数组的实用方法记录/1.jpg","hash":"fbee0ee26b8db424d8925521f8b055ddef18d6fd","modified":1619056568212},{"_id":"source/_posts/element-ui-表格中的form的input动态验证规则/5.png","hash":"6408623a332923fdd073c3a3d01d4b51801a5f28","modified":1619056568212},{"_id":"source/_posts/js判断一个变量是对象还是数组的实用方法记录/2.jpg","hash":"6398dc248ae2a9353582e519c092755498c00e06","modified":1619056568212},{"_id":"source/_posts/webpack4从头构建一个简单的vue2项目/1.png","hash":"28803ad48576d6031fc620df00df92edd8a5c734","modified":1619056568212},{"_id":"source/_posts/webpack4从头构建一个简单的vue2项目/2.png","hash":"de756293494f1fa6b4ae40745a94b8ad6283626c","modified":1619056568212},{"_id":"source/_posts/windows下使用nexus搭建私有仓库并使用vue-cli-3-搭建组件库/5.png","hash":"3bc26eb6ffe01b4e0dcc1f49010fabd7e4926b0f","modified":1619056568222},{"_id":"source/_posts/一个奇葩的表格统计需求/2.jpg","hash":"ce92e8d091db7c19c8dab1d66729fb3c4da46acc","modified":1619056568232},{"_id":"source/_posts/一个奇葩的表格统计需求/1.jpg","hash":"fc04a6cc872c75700ecd6309e9e53d1554fe2144","modified":1619056568232},{"_id":"source/_posts/windows下使用nexus搭建私有仓库并使用vue-cli-3-搭建组件库/8.png","hash":"01fb060c882bf14fe637dcf42ca3d8f6679bb714","modified":1619056568222},{"_id":"source/_posts/一个奇葩的表格统计需求/4.jpg","hash":"ed6a9f4361a1b8ebc3241b58a854b776a464f023","modified":1619056568232},{"_id":"source/_posts/一个奇葩的表格统计需求/5.jpg","hash":"865b0520708a7083a5fdfa9361ee9618980d1046","modified":1619056568232},{"_id":"source/_posts/在重启阿里云ubantu后nginx、mysql、pm2等的重启/2.png","hash":"66c168b48969d70bcecbad6c19912c469d9e0371","modified":1619056568232},{"_id":"source/_posts/一个奇葩的表格统计需求/3.jpg","hash":"6400106d296b6b7b8f23ea43eb577a67f67285f6","modified":1619056568232},{"_id":"source/_posts/在重启阿里云ubantu后nginx、mysql、pm2等的重启/1.png","hash":"c4d1d5125b4342b9f8d4e53bbdc6566503b7720a","modified":1619056568232},{"_id":"source/_posts/用Xshell登录阿里云服务器/1.jpg","hash":"254327df897d4e2794f3e6a43e9a7a7723878e8e","modified":1619056568242},{"_id":"source/_posts/记录element-ui-二次封装table时formatter的使用问题/1.png","hash":"ea2de96dfa875f22ae64a5aed7c64d02eed58889","modified":1619056568252},{"_id":"source/_posts/让支付宝-微信小程序-支持scss/1.png","hash":"3e466dd752948ccc19d2561553023dc8121ea263","modified":1619056568252},{"_id":"source/_posts/用Xshell登录阿里云服务器/2.jpg","hash":"4c38193b9449eae96842fade756be47374426fb9","modified":1619056568242},{"_id":"source/_posts/记录element-ui-二次封装table时formatter的使用问题/2.png","hash":"dcac407692b787cbf57033c800fbea954e716ea0","modified":1619056568252},{"_id":"source/_posts/在重启阿里云ubantu后nginx、mysql、pm2等的重启/3.png","hash":"48e6e7149dbb223027a3bfcb2154398fb5e43b3d","modified":1619056568242},{"_id":"source/_posts/记录element-ui-二次封装table时formatter的使用问题/3.png","hash":"e3cda13ef4ae41ef6d02c790714f190f7f53eeb4","modified":1619056568252},{"_id":"source/_posts/钉钉工作台自定义组件设计规范及注意事项/1.png","hash":"50f9950bbed9964f275c9007ec0a2b8bf80a6684","modified":1619056568252},{"_id":"source/_posts/钉钉工作台自定义组件设计规范及注意事项/2.png","hash":"be335f59a071d095450ec74f56a744d179c49a3c","modified":1619056568252},{"_id":"source/_posts/钉钉工作台自定义组件设计规范及注意事项/3.png","hash":"aa23169814b8c3942f4c94db06868fcb4205f350","modified":1619056568252},{"_id":"source/_posts/钉钉工作台自定义组件设计规范及注意事项/5.png","hash":"262d87f20186fbd6c7f98f7b3fe1b72271d2b3b5","modified":1619056568252},{"_id":"source/_posts/windows下使用nexus搭建私有仓库并使用vue-cli-3-搭建组件库/1.png","hash":"a2fcee8cbf0721c4570f35de3d1d1f80d917f518","modified":1619056568212},{"_id":"source/_posts/钉钉工作台自定义组件设计规范及注意事项/6.png","hash":"be5d6019bcf5950b2b821b53b0073bb6ca2c9273","modified":1619056568262},{"_id":"source/_posts/windows下使用nexus搭建私有仓库并使用vue-cli-3-搭建组件库/2.png","hash":"a480d8818d822a6c51dde17499df0a6c64cfe047","modified":1619056568222},{"_id":"source/_posts/windows下使用nexus搭建私有仓库并使用vue-cli-3-搭建组件库/4.png","hash":"639b4a65f4fb9149c89c5e989613c99d9af9a8a2","modified":1619056568222},{"_id":"source/_posts/windows下使用nexus搭建私有仓库并使用vue-cli-3-搭建组件库/3.png","hash":"3a7461c78e868e285c9fd4d8a7119f25cc822cfe","modified":1619056568222},{"_id":"source/_posts/windows下使用nexus搭建私有仓库并使用vue-cli-3-搭建组件库/6.png","hash":"8919bf9a4cf99efcfbd6768f2fefb5c43ba58083","modified":1619056568222},{"_id":"source/_posts/windows下使用nexus搭建私有仓库并使用vue-cli-3-搭建组件库/7.png","hash":"db86d672a7e1476aaa7f9fe033287f97114fc7f5","modified":1619056568222},{"_id":"source/_posts/小程序中使用css变量/1.png","hash":"e4b951beee3f75e5b01a45e32b9e40960d4e44b2","modified":1619056568242},{"_id":"source/_posts/钉钉工作台自定义组件设计规范及注意事项/4.png","hash":"4d7f5ec64a19440b586d610d70f0d90bde9d56a7","modified":1619056568252},{"_id":"source/tags/index.md","hash":"9ba323852e85c03c99b96b7c9dbcc3e4daabae32","modified":1619056568262},{"_id":"source/_posts/阿里云服务器配置简要步骤.md","hash":"0f4809d45e174311049f235949fb6a96c8afeb57","modified":1626257638706},{"_id":"themes/next/.editorconfig","hash":"731c650ddad6eb0fc7c3d4a91cad1698fe7ad311","modified":1619056568342},{"_id":"themes/next/.eslintrc.json","hash":"d3c11de434171d55d70daadd3914bc33544b74b8","modified":1619056568342},{"_id":"themes/next/.gitattributes","hash":"3e00e1fb043438cd820d94ee3dc9ffb6718996f3","modified":1619056568342},{"_id":"themes/next/.gitignore","hash":"83418530da80e6a78501e1d62a89c3bf5cbaec3d","modified":1619056568352},{"_id":"themes/next/.travis.yml","hash":"379f31a140ce41e441442add6f673bf397d863ea","modified":1619056568352},{"_id":"themes/next/LICENSE.md","hash":"0a9c7399f102b4eb0a6950dd31264be421557c7d","modified":1619056568352},{"_id":"themes/next/crowdin.yml","hash":"4a53f5985e545c635cb56b2a57ed290cb8cf8942","modified":1619056568352},{"_id":"themes/next/.stylintrc","hash":"6259e2a0b65d46865ab89564b88fc67638668295","modified":1619056568352},{"_id":"themes/next/package.json","hash":"b099e7cea4406e209130410d13de87988ba37b2a","modified":1619056568432},{"_id":"themes/next/README.md","hash":"7d56751b580d042559b2acf904fca4b42bcb30a7","modified":1619056568352},{"_id":"themes/next/gulpfile.js","hash":"0c76a1ac610ee8cbe8e2cc9cca1c925ffd0edf98","modified":1619056568372},{"_id":"themes/next/.github/CODE_OF_CONDUCT.md","hash":"778b7e052993ed59f21ed266ba7119ee2e5253fb","modified":1619056568342},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"5ddde54fb50d11dc08cec899a3588addb56aa386","modified":1619056568342},{"_id":"themes/next/.github/issue_label_bot.yaml","hash":"533fbe6b2f87d7e7ec6949063bb7ea7eb4fbe52d","modified":1619056568352},{"_id":"themes/next/.github/config.yml","hash":"df3d970700e6b409edc3d23be8d553db78d5ba3f","modified":1619056568352},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"d2f8e6b65783e31787feb05d2ccea86151f53f35","modified":1619056568352},{"_id":"themes/next/.github/lock.yml","hash":"3ce3d0a26030a1cd52b273cc6a6d444d7c8d85c2","modified":1619056568352},{"_id":"themes/next/.github/mergeable.yml","hash":"1c1cb77a62df1e3654b151c2da34b4a10d351170","modified":1619056568352},{"_id":"themes/next/.github/issue-close-app.yml","hash":"b14756e65546eb9ecc9d4393f0c9a84a3dac1824","modified":1619056568352},{"_id":"themes/next/.github/release-drafter.yml","hash":"09c3352b2d643acdc6839601ceb38abc38ab97c5","modified":1619056568352},{"_id":"themes/next/.github/stale.yml","hash":"590b65aca710e0fba75d3cf5361a64d13b6b0f63","modified":1619056568352},{"_id":"themes/next/docs/AGPL3.md","hash":"f463f95b169d64983f59fa6f3e4b6760290a0e6b","modified":1619056568352},{"_id":"themes/next/.github/support.yml","hash":"7ce2722d6904c31a086444c422dc49b6aa310651","modified":1619056568352},{"_id":"themes/next/docs/DATA-FILES.md","hash":"980fb8d37701f7fd96b30bb911519de3bbb473d1","modified":1619056568362},{"_id":"themes/next/docs/INSTALLATION.md","hash":"07ea00bee149a1bdc9073e903ee6b411e9f2f818","modified":1619056568362},{"_id":"themes/next/docs/ALGOLIA-SEARCH.md","hash":"60c7e9ef0c578deebad43e9395c958fa61096baf","modified":1619056568362},{"_id":"themes/next/docs/AUTHORS.md","hash":"cde7cc095ac31b421a573042cf61060f90d9ad0d","modified":1619056568362},{"_id":"themes/next/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"6cc663db5e99fd86bb993c10d446ad26ada88e58","modified":1619056568362},{"_id":"themes/next/languages/ar.yml","hash":"abcf220bd615cec0dd50e4d98da56580169d77e1","modified":1619056568372},{"_id":"themes/next/languages/de.yml","hash":"15078b7ede1b084e8a6a15d271f0db9c325bd698","modified":1619056568372},{"_id":"themes/next/docs/UPDATE-FROM-5.1.X.md","hash":"1e86d32063b490d204baa9d45d8d3cb22c24a37d","modified":1619056568362},{"_id":"themes/next/docs/LICENSE.txt","hash":"ae5ad07e4f4106bad55535dba042221539e6c7f9","modified":1619056568362},{"_id":"themes/next/languages/fa.yml","hash":"6c0a7d5bcc26eb45a9f3e02f13117c668e77fffd","modified":1619056568382},{"_id":"themes/next/languages/default.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1619056568372},{"_id":"themes/next/languages/es.yml","hash":"f064c793d56a5e0f20cda93b6f0e355044efc7d8","modified":1619056568372},{"_id":"themes/next/languages/en.yml","hash":"dbb64776f9c001c54d0058256c415a9a0724ed5d","modified":1619056568372},{"_id":"themes/next/languages/id.yml","hash":"7599bb0ecf278beb8fde3d17bfc148a3241aef82","modified":1619056568382},{"_id":"themes/next/languages/it.yml","hash":"46222f468e66789e9ba13095809eb5e5b63edf30","modified":1619056568382},{"_id":"themes/next/languages/hu.yml","hash":"0ea89ffaefd02a10494995f05a2a59d5e5679a28","modified":1619056568382},{"_id":"themes/next/languages/fr.yml","hash":"3e2f89d4bb4441d33ecc7b5a4ee114f627603391","modified":1619056568382},{"_id":"themes/next/languages/pt-BR.yml","hash":"69aa3bef5710b61dc9a0f3b3a8f52f88c4d08c00","modified":1619056568382},{"_id":"themes/next/languages/ko.yml","hash":"af4be6cb394abd4e2e9a728418897d2ed4cc5315","modified":1619056568382},{"_id":"themes/next/languages/nl.yml","hash":"9749cf90b250e631dd550a4f32ada3bb20f66dd0","modified":1619056568382},{"_id":"themes/next/languages/ja.yml","hash":"bf279d0eb1911806d01a12f27261fbc76a3bb3f9","modified":1619056568382},{"_id":"themes/next/languages/uk.yml","hash":"69ef00b1b8225920fcefff6a6b6f2f3aad00b4ce","modified":1619056568382},{"_id":"themes/next/languages/tr.yml","hash":"46e09f2119cbfbcf93fb8dbd267dccabeb8b0cda","modified":1619056568382},{"_id":"themes/next/languages/ru.yml","hash":"012abc694cf9de281a0610f95f79c594f0a16562","modified":1619056568382},{"_id":"themes/next/languages/pt.yml","hash":"f6606dd0b916a465c233f24bd9a70adce34dc8d6","modified":1619056568382},{"_id":"themes/next/languages/zh-CN.yml","hash":"81d73e21402dad729053a3041390435f43136a68","modified":1619056568382},{"_id":"themes/next/layout/_layout.swig","hash":"9554bd0f5c5a0438aa7b64065be5561c374d260e","modified":1619056568392},{"_id":"themes/next/languages/zh-TW.yml","hash":"cf0740648725983fb88409d6501876f8b79db41d","modified":1619056568382},{"_id":"themes/next/languages/zh-HK.yml","hash":"92ccee40c234626bf0142152949811ebe39fcef2","modified":1619056568382},{"_id":"themes/next/languages/vi.yml","hash":"6a578cc28773bd764f4418110500478f185d6efa","modified":1619056568382},{"_id":"themes/next/layout/index.swig","hash":"8dfd96fb6f833dd5d037de800813105654e8e8e6","modified":1619056568432},{"_id":"themes/next/layout/page.swig","hash":"357d916694d4c9a0fd1140fa56d3d17e067d8b52","modified":1619056568432},{"_id":"themes/next/layout/post.swig","hash":"5f0b5ba2e0a5b763be5e7e96611865e33bba24d7","modified":1619056568432},{"_id":"themes/next/scripts/renderer.js","hash":"e3658eea97b1183ee2e9f676231e53f7994741f6","modified":1619056568452},{"_id":"themes/next/layout/category.swig","hash":"c546b017a956faaa5f5643c7c8a363af7ac9d6b9","modified":1619056568432},{"_id":"themes/next/layout/archive.swig","hash":"d9bca77f6dcfef71e300a294f731bead11ce199f","modified":1619056568432},{"_id":"themes/next/layout/tag.swig","hash":"d44ff8755727f6532e86fc9fc8dc631200ffe161","modified":1619056568432},{"_id":"themes/next/.github/ISSUE_TEMPLATE/other.md","hash":"d5aa1a3323639a36bcd9a401484b67537043cd3c","modified":1619056568342},{"_id":"themes/next/.github/ISSUE_TEMPLATE/bug-report.md","hash":"e67146befddec3a0dc47dc80d1109070c71d5d04","modified":1619056568342},{"_id":"themes/next/.github/ISSUE_TEMPLATE/feature-request.md","hash":"6beeca0f45a429cd932b6e648617f548ff64c27c","modified":1619056568342},{"_id":"themes/next/.github/ISSUE_TEMPLATE/question.md","hash":"59275aa0582f793fee7be67904dcf52ad33a7181","modified":1619056568342},{"_id":"themes/next/docs/ru/DATA-FILES.md","hash":"54e6a067ed95268eab6be2ba040a7e9b1907928e","modified":1619056568362},{"_id":"themes/next/docs/ru/INSTALLATION.md","hash":"a9cfe5ac9ef727a8650b2b6584482751a26b1460","modified":1619056568362},{"_id":"themes/next/docs/ru/README.md","hash":"1e5ddb26ad6f931f8c06ce2120f257ff38b74fdf","modified":1619056568362},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"7e6f227f2aaf30f400d4c065650a4e3d0d61b9e1","modified":1619056568372},{"_id":"themes/next/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"3202be9a8d31986caac640e7a4c7ce22e99917eb","modified":1619056568372},{"_id":"themes/next/docs/ru/UPDATE-FROM-5.1.X.md","hash":"cb8e39c377fc4a14aaf133b4d1338a48560e9e65","modified":1619056568362},{"_id":"themes/next/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"50ab381c27611d5bf97bb3907b5ca9998f28187d","modified":1619056568372},{"_id":"themes/next/docs/zh-CN/DATA-FILES.md","hash":"2d868cd271d78b08775e28c5b976de8836da4455","modified":1619056568372},{"_id":"themes/next/docs/zh-CN/INSTALLATION.md","hash":"716111dd36d276f463c707dfcc9937fea2a1cf7a","modified":1619056568372},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"611f2930c2b281b80543531b1bf33d082531456a","modified":1619056568372},{"_id":"themes/next/docs/zh-CN/README.md","hash":"8f7c0d0b766024152591d4ccfac715c8e18b37f3","modified":1619056568372},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"30ade8c806d7826cc50a4a3e46a9e6213fddf333","modified":1619056568392},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"5bffdb1448caca7db7b1f84e1693e6657a106d50","modified":1619056568392},{"_id":"themes/next/layout/_partials/comments.swig","hash":"142efb4c6b73d8f736f6784804b40d5871333172","modified":1619056568392},{"_id":"themes/next/docs/zh-CN/MATH.md","hash":"0d46f9f50cf2e4183970adce705d1041155b0d37","modified":1619056568372},{"_id":"themes/next/layout/_partials/languages.swig","hash":"c3ea82604a5853fb44c5f4e4663cbe912aa5dcf8","modified":1619056568402},{"_id":"themes/next/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"b3201934b966bc731eaf8a4dad4ba4bdcd300c10","modified":1619056568372},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"2de77d533c91532a8a4052000244d0c1693370df","modified":1619056568402},{"_id":"themes/next/layout/_scripts/index.swig","hash":"1822eaf55bbb4bec88871c324fc18ad95580ccb4","modified":1619056568402},{"_id":"themes/next/layout/_partials/footer.swig","hash":"4a4c71d6501f3fae38b25f312c6fa4c2eccde7b4","modified":1619056568392},{"_id":"themes/next/layout/_scripts/noscript.swig","hash":"7b9e0f776a5be6c3f95bc7f394e1424ba02ba93b","modified":1619056568412},{"_id":"themes/next/layout/_macro/post.swig","hash":"c3fd56bac90ce45a0c79ddfe68beb223ad0d72b4","modified":1619056568392},{"_id":"themes/next/layout/_partials/widgets.swig","hash":"5392dcbb504266f0f61d5b8219914068ef9cdc25","modified":1619056568402},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"244ca2d74ee0d497c87572c6a26b43c62a952673","modified":1619056568412},{"_id":"themes/next/layout/_third-party/baidu-push.swig","hash":"28b0a7e843ec4365db1963646659a153753cd746","modified":1619056568412},{"_id":"themes/next/layout/_third-party/quicklink.swig","hash":"5ae5adcd6f63ed98b2071e4f7e5e38c4d7d24e1b","modified":1619056568422},{"_id":"themes/next/layout/_third-party/index.swig","hash":"c6b63cbc80938e6e09578b8c67e01adf13a9e3bd","modified":1619056568422},{"_id":"themes/next/scripts/events/index.js","hash":"5c355f10fe8c948a7f7cd28bd8120adb7595ebde","modified":1619056568442},{"_id":"themes/next/scripts/filters/default-injects.js","hash":"ad321db012cea520066deb0639335e9bc0dcc343","modified":1619056568442},{"_id":"themes/next/scripts/filters/front-matter.js","hash":"305d03c1e45782988809298c3e3b3c5d5ee438aa","modified":1619056568442},{"_id":"themes/next/layout/_scripts/three.swig","hash":"6b092c6d882b2dfa5273e1b3f60b244cb7c29fcd","modified":1619056568412},{"_id":"themes/next/scripts/filters/locals.js","hash":"a5e7d05d3bd2ae6dcffad5a8ea0f72c6e55dbd02","modified":1619056568442},{"_id":"themes/next/scripts/filters/minify.js","hash":"21196a48cb127bf476ce598f25f24e8a53ef50c2","modified":1619056568452},{"_id":"themes/next/scripts/filters/post.js","hash":"57f2d817578dd97e206942604365e936a49854de","modified":1619056568452},{"_id":"themes/next/scripts/helpers/engine.js","hash":"eb6b8bbc1dce4846cd5e0fac0452dbff56d07b5d","modified":1619056568452},{"_id":"themes/next/scripts/helpers/font.js","hash":"8fb1c0fc745df28e20b96222974402aab6d13a79","modified":1619056568452},{"_id":"themes/next/scripts/helpers/next-config.js","hash":"b8d7ddfa4baa9b8d6b9066a634aa81c6243beec9","modified":1619056568452},{"_id":"themes/next/scripts/helpers/next-url.js","hash":"4044129368d0e2811859a9661cad8ab47118bc32","modified":1619056568452},{"_id":"themes/next/scripts/tags/button.js","hash":"bb0e8abbc0a6d5b3a1a75a23976f2ac3075aab31","modified":1619056568452},{"_id":"themes/next/scripts/tags/caniuse.js","hash":"840536754121e0da5968f5ad235f29200fc5d769","modified":1619056568452},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"e2d0184bc4a557e1017395b80ff46880078d8537","modified":1619056568452},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"93ccd3f99d3cb42674f29183c756df63acb5d7f8","modified":1619056568452},{"_id":"themes/next/scripts/tags/label.js","hash":"fc83f4e1be2c34e81cb79938f4f99973eba1ea60","modified":1619056568452},{"_id":"themes/next/scripts/tags/mermaid.js","hash":"81134494ff0134c0dae1b3815caf6606fccd4e46","modified":1619056568452},{"_id":"themes/next/scripts/tags/note.js","hash":"1fdf4f95810fdb983bfd5ad4c4f13fedd4ea2f8d","modified":1619056568452},{"_id":"themes/next/scripts/tags/pdf.js","hash":"37b53661ad00a01a2ca7d2e4a5ad3a926073f8e2","modified":1619056568462},{"_id":"themes/next/scripts/tags/tabs.js","hash":"c70a4a66fd0c28c98ccb6c5d5f398972e5574d28","modified":1619056568462},{"_id":"themes/next/scripts/tags/video.js","hash":"944293fec96e568d9b09bc1280d5dbc9ee1bbd17","modified":1619056568462},{"_id":"themes/next/source/css/_colors.styl","hash":"11aef31a8e76f0f332a274a8bfd4537b73d4f88f","modified":1619056568462},{"_id":"themes/next/source/css/_mixins.styl","hash":"072a3fa473c19b20ccd7536a656cda044dbdae0a","modified":1619056568502},{"_id":"themes/next/source/css/main.styl","hash":"815ef30987d02f3d76dbe4b5ee3a72135a152678","modified":1619056568522},{"_id":"themes/next/layout/_scripts/pjax.swig","hash":"ccff5a773644d33ff22f6b45b6734f52b048f22b","modified":1619056568412},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"269102fc5e46bd1ce75abdcce161f0570ae70e2f","modified":1619056568422},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1619056568522},{"_id":"themes/next/source/images/avatar.png","hash":"b7cbde16b4bdd0328a6dbf0631148bbfbb58468b","modified":1619056568522},{"_id":"themes/next/source/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1619056568522},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1619056568522},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1619056568532},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1619056568532},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1619056568532},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1619056568532},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1619056568532},{"_id":"themes/next/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1619056568532},{"_id":"themes/next/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1619056568532},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1619056568532},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1619056568532},{"_id":"themes/next/source/js/algolia-search.js","hash":"6a813410e33824d7acc65a369a2983912bb3420c","modified":1619056568532},{"_id":"themes/next/source/js/motion.js","hash":"d5aa1a08cdf3c8d1d8d550fb1801274cc41e5874","modified":1619056568532},{"_id":"themes/next/source/js/next-boot.js","hash":"250d8dcd6322e69e3fbadd0f3e37081c97b47c52","modified":1619056568532},{"_id":"themes/next/source/js/utils.js","hash":"26a82e46fdcadc7c3c2c56a7267284b61a26f7f3","modified":1619056568542},{"_id":"themes/next/source/lib/anime.min.js","hash":"960be51132134acd65c2017cc8a5d69cb419a0cd","modified":1619056568542},{"_id":"themes/next/source/uploads/avatar.png","hash":"b7cbde16b4bdd0328a6dbf0631148bbfbb58468b","modified":1619056568552},{"_id":"themes/next/source/js/bookmark.js","hash":"9f05fd3672789311dc0cf5b37e40dc654cb04a2a","modified":1619056568532},{"_id":"themes/next/layout/_partials/head/head-unique.swig","hash":"7d638e413f2548fc990c4a467dd03de6c81fc960","modified":1619056568392},{"_id":"themes/next/source/images/logo.svg","hash":"169f56fd82941591dad3abd734a50ec7259be950","modified":1619056568532},{"_id":"themes/next/source/js/local-search.js","hash":"cfa6a0f3f9c2bc759ee507668a21f4e8f250f42a","modified":1619056568532},{"_id":"themes/next/layout/_partials/header/index.swig","hash":"0dd316f153c492c0a03bd0273d50fa322bc81f11","modified":1619056568392},{"_id":"themes/next/layout/_partials/header/menu-item.swig","hash":"4baa86ca631168fc6388d27f4b1b501b40c877a8","modified":1619056568392},{"_id":"themes/next/source/uploads/notfound.gif","hash":"e81b9256b56fb39d2f56024f866b03b7917525a8","modified":1619056568552},{"_id":"themes/next/layout/_partials/header/sub-menu.swig","hash":"bed6cc2b48cf2655036ba39c9bae73a295228a4d","modified":1619056568402},{"_id":"themes/next/layout/_partials/page/breadcrumb.swig","hash":"91c0addb33006619faa4c32e5d66874e25f1e9b3","modified":1619056568402},{"_id":"themes/next/layout/_partials/page/page-header.swig","hash":"8d4e3dd0d3631ce0b21bc15c259f6ac886de631d","modified":1619056568402},{"_id":"themes/next/layout/_partials/post/post-copyright.swig","hash":"f2eb455c8bf13533427254f0c9b4b17b2498168b","modified":1619056568402},{"_id":"themes/next/layout/_partials/head/head.swig","hash":"90cce9f407e9490756ba99580e3eb09f55b05eaa","modified":1619056568392},{"_id":"themes/next/layout/_partials/header/brand.swig","hash":"91056a6c98cca63ff8cc6956e531ee3faf4b8ad9","modified":1619056568392},{"_id":"themes/next/layout/_partials/header/menu.swig","hash":"90d3eaba6fbe69bee465ddd67c467fd2c0239dc4","modified":1619056568392},{"_id":"themes/next/layout/_partials/post/post-followme.swig","hash":"d8f785c062c6b0763a778bd4a252e6f5fee0e432","modified":1619056568402},{"_id":"themes/next/layout/_partials/search/algolia-search.swig","hash":"98fd1f5df044f4534e1d4ca9ab092ba5761739a9","modified":1619056568402},{"_id":"themes/next/layout/_partials/search/index.swig","hash":"a6c761d5193cb6f22e9422dbbcf209e05471b0ed","modified":1619056568402},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"128f7d679bb4d53b29203d598d217f029a66dee7","modified":1619056568402},{"_id":"themes/next/layout/_partials/post/post-footer.swig","hash":"ce712c110b5ce8aacba7a86b0558ff89700675c9","modified":1619056568402},{"_id":"themes/next/layout/_partials/post/post-related.swig","hash":"bc7b047a6246df07767373644b1637d91c3a88b1","modified":1619056568402},{"_id":"themes/next/layout/_partials/post/post-reward.swig","hash":"f349a226e5370075bb6924e60da8b0170c7cfcc1","modified":1619056568402},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"34495d408e8467555afee489500b8aad98c52079","modified":1619056568412},{"_id":"themes/next/layout/_partials/sidebar/site-overview.swig","hash":"7b2ef5db9615267a24b884388925de1e9b447c1f","modified":1619056568402},{"_id":"themes/next/layout/_scripts/pages/schedule.swig","hash":"34c05e9d73b0f081db70990c296b6d6a0f8ea2ca","modified":1619056568412},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"84adaadd83ce447fa9da2cff19006334c9fcbff9","modified":1619056568412},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"0b44f400ec00d2b5add5ee96c11d22465c432376","modified":1619056568412},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"0b44f400ec00d2b5add5ee96c11d22465c432376","modified":1619056568412},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"b8819bd056f8a580c5556d4415836a906ed5d7a4","modified":1619056568412},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"34495d408e8467555afee489500b8aad98c52079","modified":1619056568412},{"_id":"themes/next/layout/_third-party/chat/tidio.swig","hash":"fb94ee487d75e484e59b7fba96e989f699ff8a83","modified":1619056568422},{"_id":"themes/next/layout/_third-party/analytics/growingio.swig","hash":"91c2cb900c76224c5814eeb842d1d5f517f9bf05","modified":1619056568412},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"85b60e222712ca3b2c4dc2039de2dc36b8d82940","modified":1619056568412},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"1b29b99fa921f12c25d3dc95facdf84ef7bb1b5c","modified":1619056568422},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"9298e6d6c4a62a0862fc0f4060ed99779d7b68cb","modified":1619056568422},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"3d91899ca079e84d95087b882526d291e6f53918","modified":1619056568422},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"ae2707d6e47582bb470c075649ec7bad86a6d5a9","modified":1619056568422},{"_id":"themes/next/layout/_third-party/chat/chatra.swig","hash":"2642e8aef5afbe23a2a76efdc955dab2ee04ed48","modified":1619056568412},{"_id":"themes/next/layout/_third-party/math/index.swig","hash":"59df21fcfe9d0ada8cee3188cb1075529c1c3eb8","modified":1619056568422},{"_id":"themes/next/layout/_third-party/comments/gitalk.swig","hash":"606ad14a29320157df9b8f33738282c51bb393d9","modified":1619056568422},{"_id":"themes/next/layout/_third-party/comments/disqusjs.swig","hash":"a42f97eda3748583bac2253c47fe5dfa54f07b8f","modified":1619056568422},{"_id":"themes/next/layout/_third-party/search/algolia-search.swig","hash":"fd726aad77a57b288f07d6998ec29291c67c7cbb","modified":1619056568422},{"_id":"themes/next/layout/_third-party/search/swiftype.swig","hash":"aa6ab95b8b76611694613defb4bf25003d1b927f","modified":1619056568432},{"_id":"themes/next/layout/_third-party/math/mathjax.swig","hash":"1f34b2d3c753a3589ab6c462880bd4eb7df09914","modified":1619056568422},{"_id":"themes/next/layout/_third-party/statistics/cnzz-analytics.swig","hash":"770d53d1222f2a58424d1d0684e2d84fdd53613d","modified":1619056568432},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"58296a5c1883f26464c2a5ccf734c19f5fbf395a","modified":1619056568422},{"_id":"themes/next/layout/_third-party/math/katex.swig","hash":"276f523e414d4aa7f350a8f2fd3df8a3d8ea9656","modified":1619056568422},{"_id":"themes/next/layout/_third-party/statistics/index.swig","hash":"964cd6bac668cf6d211a2624fbef3948cfdece55","modified":1619056568432},{"_id":"themes/next/layout/_third-party/statistics/busuanzi-counter.swig","hash":"d2f0e4c598410ec33785abe302c7ea7492bb791a","modified":1619056568432},{"_id":"themes/next/layout/_third-party/tags/mermaid.swig","hash":"619338ddacf01e3df812e66a997e778f672f4726","modified":1619056568432},{"_id":"themes/next/scripts/events/lib/config.js","hash":"aefe3b38a22bc155d485e39187f23e4f2ee5680a","modified":1619056568442},{"_id":"themes/next/layout/_third-party/tags/pdf.swig","hash":"5a223b60406cee7438cfe3a5e41d1284425aa7a5","modified":1619056568432},{"_id":"themes/next/scripts/events/lib/injects.js","hash":"e73f697bb160b223fdde783237148be5f41c1d78","modified":1619056568442},{"_id":"themes/next/scripts/filters/comment/changyan.js","hash":"2f22f48f7370470cef78561a47c2a47c78035385","modified":1619056568442},{"_id":"themes/next/scripts/filters/comment/common.js","hash":"713056d33dbcd8e9748205c5680b456c21174f4e","modified":1619056568442},{"_id":"themes/next/scripts/events/lib/injects-point.js","hash":"08496b71c9939718e7955704d219e44d7109247b","modified":1619056568442},{"_id":"themes/next/scripts/filters/comment/default-config.js","hash":"0c3bea89d64bc12c1bbe6f208a83773c6fb5375a","modified":1619056568442},{"_id":"themes/next/scripts/filters/comment/disqus.js","hash":"3a80559df0b670ccb065ea9d3bb587d0b61be3a4","modified":1619056568442},{"_id":"themes/next/scripts/filters/comment/gitalk.js","hash":"323a47df6ded894944a2647db44556d6163e67c4","modified":1619056568442},{"_id":"themes/next/scripts/filters/comment/livere.js","hash":"a4f3153ac76a7ffdf6cc70f52f1b2cc218ed393e","modified":1619056568442},{"_id":"themes/next/scripts/filters/comment/disqusjs.js","hash":"67cf90d9a2428c14eb113a64bdd213c22a019aef","modified":1619056568442},{"_id":"themes/next/layout/_third-party/statistics/firestore.swig","hash":"01d94354d07e72cad47100482068b6be69fcc033","modified":1619056568432},{"_id":"themes/next/scripts/filters/comment/valine.js","hash":"851359f5ff90f733a9bd7fe677edbee8b8ac714c","modified":1619056568442},{"_id":"themes/next/layout/_third-party/statistics/lean-analytics.swig","hash":"c171ea94e9afbba97f06856904264da331559463","modified":1619056568432},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"c22b58af3327236ec54d5706501aa5a20e15012e","modified":1619056568522},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"5980abbbbeacd8541121f436fa414d24ad5e97c2","modified":1619056568522},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"4e33774b1fe6d0a51f3a428c54c5e600e83bf154","modified":1619056568522},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"583ff1e7a2ca889f1f54eb0ca793894466823c7c","modified":1619056568522},{"_id":"themes/next/source/css/_variables/base.styl","hash":"ad680efdfb2f86546182bf3f59886efbcf3c1b2d","modified":1619056568522},{"_id":"themes/next/source/js/schemes/pisces.js","hash":"b85a6e2af1387fe64b51e7cd3e2da8616e6f5a3f","modified":1619056568542},{"_id":"themes/next/source/js/schemes/muse.js","hash":"a18559a9c332199efad0100cf84bb0c23fc0f17a","modified":1619056568542},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1619056568542},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1619056568542},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"510a6f0ba7485dd54ce347cca890ab52c4957081","modified":1619056568462},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"0534b329d279a6f255112b3305ff92c810f31724","modified":1619056568462},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"d17236df3b4d6def1e4e81133ef4729c390de3ac","modified":1619056568462},{"_id":"themes/next/source/css/_common/components/reading-progress.styl","hash":"c52648a7b09f9fe37858f5694fcc1ffc709ad147","modified":1619056568472},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"7a95c27762e1303bf06ee808c63f616cb192fcaf","modified":1619056568482},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"5540c9259cb7895a5f10a289c7937e5470a7c134","modified":1619056568492},{"_id":"themes/next/source/css/_common/scaffolding/buttons.styl","hash":"45f4badac6ec45cf24355f6157aece1d4d3f1134","modified":1619056568492},{"_id":"themes/next/source/css/_common/outline/mobile.styl","hash":"a2ee16cac29a82cfce26804c160286fcbee94161","modified":1619056568482},{"_id":"themes/next/source/css/_common/scaffolding/comments.styl","hash":"4b068d0d898f4e624937503f0e1428993050bd65","modified":1619056568492},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"6d740699fb6a7640647a8fd77c4ea4992d8d6437","modified":1619056568502},{"_id":"themes/next/source/css/_common/scaffolding/pagination.styl","hash":"b619f39e18398422e0ac4999d8f042a5eaebe9cd","modified":1619056568502},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"43045d115f8fe95732c446aa45bf1c97609ff2a5","modified":1619056568502},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"f317d2e3886e94f5fbb8781c2e68edd19669ff58","modified":1619056568502},{"_id":"themes/next/source/css/_common/scaffolding/toggles.styl","hash":"20e0e3e3eba384930c022e21511214d244b4c9e7","modified":1619056568502},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"e342b8f8e11a3a6aa5a029912c9778c25bf5d135","modified":1619056568502},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"b9e87d32da24264bda247c1526afe140c858b0ef","modified":1619056568502},{"_id":"themes/next/source/css/_schemes/Mist/_layout.styl","hash":"12b265f82840f27112ca2b1be497677f20f87545","modified":1619056568512},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"716e8b0f056bf6393e6bc6969ac84598ab8e7a6f","modified":1619056568512},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expand.styl","hash":"e1c29b81a32273a0dedd926cda199a71aea72624","modified":1619056568512},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"c5142739e01e9f25c8b32b2209af85c787bb2b42","modified":1619056568512},{"_id":"themes/next/source/css/_schemes/Muse/_header.styl","hash":"8674bd88df076a1dfe4023ed6750ded1f5b00223","modified":1619056568512},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"49c76bc723d3952abb613d9d68398ed7305da999","modified":1619056568512},{"_id":"themes/next/source/css/_schemes/Muse/_sub-menu.styl","hash":"2d3e05015796a790abd9d68957a5c698c0c9f9b6","modified":1619056568512},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"25c2a7930da14f023329df20f38df2728057fb4d","modified":1619056568512},{"_id":"themes/next/source/css/_schemes/Muse/_sidebar.styl","hash":"9898323ee5a7ac2a5d4f633c653112280beb2643","modified":1619056568512},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"4b7f057dbb53efd7cbe7eac7835a793ab3cbb135","modified":1619056568512},{"_id":"themes/next/source/css/_schemes/Pisces/_header.styl","hash":"558794fced306339b98dc2b0ee7f0576802f1355","modified":1619056568512},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"5de34e1d8a290751641ae456c942410852d5e809","modified":1619056568512},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"0a9f0d9eb042595502d200fb8c65efb0e6c89aa9","modified":1619056568512},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"dc9318992ce2eb086ebaa2fe56b325e56d24098b","modified":1619056568522},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"b69ac38b9da8c9c1b7de696fdeea7f9d7705213a","modified":1619056568522},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"25c2a7930da14f023329df20f38df2728057fb4d","modified":1619056568522},{"_id":"themes/next/source/lib/font-awesome/css/all.min.css","hash":"82e34d28f8a1169b20b60101d5bb0446deba3514","modified":1619056568542},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-regular-400.woff2","hash":"260bb01acd44d88dcb7f501a238ab968f86bef9e","modified":1619056568542},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"236a039b0900f4267de566b46f62314ad967d30f","modified":1619056568462},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"18edddb2ffb3f85a68e4367f81e06c461e07bc25","modified":1619056568462},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"6cf78a379bb656cc0abb4ab80fcae60152ce41ad","modified":1619056568462},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"f6f05f02d50f742c84ee5122016c0563a8bb2cf9","modified":1619056568462},{"_id":"themes/next/source/css/_common/components/pages/tag-cloud.styl","hash":"97974c231b4659b8aa5e9321c4d54db5c816d0db","modified":1619056568472},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"a52f8cae599099231866298ed831fdf76c9b6717","modified":1619056568472},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"9af620eba5ccceea21a0e3bc69f6f1fa7637c2f3","modified":1619056568472},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"70b3eb9d36543ab92796ac163544e9cf51b7c1e6","modified":1619056568472},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"97dec98d0403097d66822f1c90b50b2890c84698","modified":1619056568472},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"0dfb97703a519d9438f64f9e41ab1dd37381f733","modified":1619056568472},{"_id":"themes/next/source/css/_common/components/post/post-header.styl","hash":"93ba8172c0d2c37d738e6dbd44fcd5a2e23b92f3","modified":1619056568472},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"2c24829d95c742eb9e8316ebf2fbe9f2c168b59a","modified":1619056568472},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"66fc406796b6efe6cea76550573b7a632112406a","modified":1619056568472},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"09dda2667628d1f91b2e37d8fc6df1413f961b64","modified":1619056568472},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"5cc9e7394c927065c688cba5edd6e0a27587f1d8","modified":1619056568472},{"_id":"themes/next/source/css/_common/components/post/post-followme.styl","hash":"57b9a179675f1536e017cba457b6ac575e397c4f","modified":1619056568472},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"b266d2ce5e2b117be01537889e839a69004dc0bb","modified":1619056568472},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"fcd64c23d17775b3635325f6758b648d932e79b5","modified":1619056568472},{"_id":"themes/next/source/css/_common/components/third-party/gitalk.styl","hash":"b87f4a06c0db893df4f756f24be182e1a4751f24","modified":1619056568472},{"_id":"themes/next/source/css/_common/components/third-party/math.styl","hash":"d83102771df652769e51ddfd041cf5f4ca1a041d","modified":1619056568472},{"_id":"themes/next/source/css/_common/components/third-party/related-posts.styl","hash":"8ed7a9d5dfac592de703421b543978095129aa5b","modified":1619056568482},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"1f6b0d3ab227697ca115e57fd61122ea7950e19d","modified":1619056568482},{"_id":"themes/next/source/css/_common/outline/footer/footer.styl","hash":"7eeb22c5696f8e0c95161dc57703973cf81c8c12","modified":1619056568482},{"_id":"themes/next/source/css/_common/outline/header/bookmark.styl","hash":"b4f4bae437d4f994af93cf142494ffcd86bae46b","modified":1619056568482},{"_id":"themes/next/source/css/_common/components/third-party/search.styl","hash":"bad99f4cccb93b3cefe990a2c85124e60698d32e","modified":1619056568482},{"_id":"themes/next/source/css/_common/outline/header/header.styl","hash":"300058ca12e81013e77ba01fe66ac210525768b6","modified":1619056568482},{"_id":"themes/next/source/css/_common/outline/header/github-banner.styl","hash":"b31c86d1a4f89837f9187bed646bda96b2cd286c","modified":1619056568482},{"_id":"themes/next/source/css/_common/outline/header/headerband.styl","hash":"6d5f26646e2914474f295de8bf6dc327d4acd529","modified":1619056568482},{"_id":"themes/next/source/css/_common/outline/header/menu.styl","hash":"7a3a56b10ab714c0e2ed240d0939deeecdcad167","modified":1619056568482},{"_id":"themes/next/source/css/_common/outline/header/site-meta.styl","hash":"3d16ac0f4ccaeed868c246d4d49bde543d1f62cb","modified":1619056568482},{"_id":"themes/next/source/css/_common/outline/header/site-nav.styl","hash":"b8c816fba0a9b4a35fbae03ba5b1b2da96ba2687","modified":1619056568482},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author-links.styl","hash":"49722d555a2edb18094bb2cb3d7336dd72051b93","modified":1619056568482},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author.styl","hash":"357f825f0a649b2e28cba1481d4c9a0cb402e43a","modified":1619056568482},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-blogroll.styl","hash":"096f908c08ce553e482aadfd3e767a0145191093","modified":1619056568492},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-button.styl","hash":"525242ce9e912c4adfe5134347c67dbdb9e98e3d","modified":1619056568492},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-dimmer.styl","hash":"12f7eaf6b56624cbc411528562d6bb848ff97039","modified":1619056568492},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-nav.styl","hash":"b11b04737a1a0fea3bd9f0081d96ee6c015358d4","modified":1619056568492},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toc.styl","hash":"fa0a2ea57b7b4ce75b5d18c264af2d92ea3192f9","modified":1619056568492},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toggle.styl","hash":"098b4bdf49c7300490f959386d5d1185a32543f6","modified":1619056568492},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar.styl","hash":"5d540f683018745a5ed1d6f635df28ea610c1244","modified":1619056568492},{"_id":"themes/next/source/css/_common/outline/sidebar/site-state.styl","hash":"67a1fcb33535122d41acd24f1f49cf02c89b88fa","modified":1619056568492},{"_id":"themes/next/source/css/_common/scaffolding/highlight/diff.styl","hash":"83bd737f663a8461e66985af8ddbfc0a731fc939","modified":1619056568492},{"_id":"themes/next/source/css/_common/scaffolding/highlight/highlight.styl","hash":"80488259271bcfe38031f4c2e902463daba9336b","modified":1619056568502},{"_id":"themes/next/source/css/_common/scaffolding/highlight/theme.styl","hash":"c911045b2ce9a66e38d9dd30c7ed078abbc10cbf","modified":1619056568502},{"_id":"themes/next/source/css/_common/scaffolding/tags/blockquote-center.styl","hash":"ceacfa6218f6084c71a230b086e5d2708d29927e","modified":1619056568502},{"_id":"themes/next/source/css/_common/scaffolding/tags/group-pictures.styl","hash":"aca7bb220fc14ef2a8f96282d2a95a96a9238d46","modified":1619056568502},{"_id":"themes/next/source/css/_common/scaffolding/highlight/copy-code.styl","hash":"4079e616fbf36112dec0674c1e0713d1d9769068","modified":1619056568492},{"_id":"themes/next/source/css/_common/scaffolding/tags/label.styl","hash":"8b7aafb911850c73074cdb6cc87abe4ac8c12e99","modified":1619056568502},{"_id":"themes/next/source/css/_common/scaffolding/tags/note.styl","hash":"adaf0f580fccf4158169eeaf534a18005b39a760","modified":1619056568502},{"_id":"themes/next/source/css/_common/scaffolding/tags/pdf.styl","hash":"03a5bcecc0b12231462ef6ffe432fa77ee71beff","modified":1619056568502},{"_id":"themes/next/source/css/_common/scaffolding/tags/tabs.styl","hash":"3256e39f281f06751a1c0145d9806a0e56d68170","modified":1619056568502},{"_id":"themes/next/source/css/_common/scaffolding/tags/tags.styl","hash":"51d46fa3c7c6b691c61a2c2b0ac005c97cfbf72b","modified":1619056568502},{"_id":"themes/next/_config.yml","hash":"dc2d0ffd196f75ff36c998c921352ac18226edd0","modified":1619056568352},{"_id":"themes/next/docs/MATH.md","hash":"f56946053ade0915ff7efa74d43c38b8dd9e63bb","modified":1619056568362},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-solid-900.woff2","hash":"75a88815c47a249eadb5f0edc1675957f860cca7","modified":1619056568542},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-brands-400.woff2","hash":"509988477da79c146cb93fb728405f18e923c2de","modified":1619056568542},{"_id":"public/baidusitemap.xml","hash":"2104540524ce1aed141ac7290705611059915077","modified":1644895656205},{"_id":"public/sitemap.xml","hash":"70c38ea199ccd1fc00b94db7191f5bda64cd27ed","modified":1644895656205},{"_id":"public/search.xml","hash":"083a12451890cd1442e4d3f7965eaab7679ecef8","modified":1644895656205},{"_id":"public/archives/index.html","hash":"4d86146eab16433b6e886f9b09b9699dfb39ec75","modified":1644895656205},{"_id":"public/about/index.html","hash":"301eaa6f01d34e09517ee17659b233af2097ae80","modified":1644895656205},{"_id":"public/tags/index.html","hash":"62ee4da5d09a5ee0a5d6c6f3722df836982f28ba","modified":1644895656205},{"_id":"public/categories/index.html","hash":"b1a3dd7a3f2a2a86b54c7bb4b07a103cc70f91da","modified":1644895656205},{"_id":"public/posts/4080e15/index.html","hash":"906867e0806a27c74ade7cf86413de408528e4b7","modified":1644895656205},{"_id":"public/404.html","hash":"dfb140e11f4406aa02ba0d2da599f309b288459e","modified":1644895656205},{"_id":"public/posts/d86f9c95/index.html","hash":"a93daed03486b78ce25f638b75793e616d068d41","modified":1644895656205},{"_id":"public/posts/845b95cc/index.html","hash":"ac9a9a1bb0b9189eeda3060647aef2b2513c6646","modified":1644895656205},{"_id":"public/posts/e1691e31/index.html","hash":"4905db62d7927586f67c8b19e46ae1cfb023f40e","modified":1644895656205},{"_id":"public/posts/301aa86/index.html","hash":"3b4596a79556b9668c974907ffc2fe926bc5b84f","modified":1644895656205},{"_id":"public/posts/1428c068/index.html","hash":"26c89c48f26ea52d0776bd167178b101aca22e1d","modified":1644895656205},{"_id":"public/archives/2019/index.html","hash":"87ad5f44198cf4e63896360f57c288d2531dde45","modified":1644895656205},{"_id":"public/archives/2019/page/2/index.html","hash":"1fe36ad9273ee0fa43aa43b7c13ab6344c4ddc76","modified":1644895656205},{"_id":"public/archives/page/3/index.html","hash":"964f136da9edb2cf4264e0d952169973ae0f14c3","modified":1644895656205},{"_id":"public/archives/2019/03/index.html","hash":"84606c7e6802c7f928f7d53a2f2e6e2edfb3bea7","modified":1644895656205},{"_id":"public/archives/2019/02/index.html","hash":"96a0c4f35ced19dab706b5ae012d256e13d6fc99","modified":1644895656205},{"_id":"public/archives/2019/04/index.html","hash":"6dcce0678dc6bf236a3dc0374966883354d019c8","modified":1644895656205},{"_id":"public/archives/2019/06/index.html","hash":"0951f3e6f92c331d7203008ec3e58bf3f0210982","modified":1644895656205},{"_id":"public/archives/2019/05/index.html","hash":"b02bf3109c2889afa335c3e6a765bd769e986d41","modified":1644895656205},{"_id":"public/archives/2020/index.html","hash":"4784667f5a4e9f3dc8953f8f17ba0cf9abb51531","modified":1644895656205},{"_id":"public/archives/2019/07/index.html","hash":"a8b9d0f2e639e5fd7a82ba5d7804a414bf32ec41","modified":1644895656205},{"_id":"public/archives/2019/08/index.html","hash":"3af6fd0fec67d50b71b583d5f7f43cd19607093d","modified":1644895656205},{"_id":"public/archives/2021/index.html","hash":"50cbe21396fe6fce6ae62e33cc9b18fd105e22bd","modified":1644895656205},{"_id":"public/archives/2020/11/index.html","hash":"043b018ff22d2c9a51d84120176d34fa4094b269","modified":1644895656205},{"_id":"public/archives/2020/08/index.html","hash":"ffca004bcd66d42d7442f45343b20604768838ed","modified":1644895656205},{"_id":"public/archives/2020/06/index.html","hash":"9b44f202ae03d74cd40449ccfa112dc1a55921f5","modified":1644895656205},{"_id":"public/archives/2021/01/index.html","hash":"b150dac96eeabe205c233142f5952e1767ad6424","modified":1644895656205},{"_id":"public/archives/2021/07/index.html","hash":"5a79632dddaae28fc2765489397c4faf02d9a8c1","modified":1644895656205},{"_id":"public/archives/2021/05/index.html","hash":"82b11aba958b150772546c99038a452721d97ca2","modified":1644895656205},{"_id":"public/archives/2021/12/index.html","hash":"58dc47854575382a911e0bc860c24a2ab24d63c5","modified":1644895656205},{"_id":"public/archives/2021/03/index.html","hash":"b230399790c4445d3bcd1caecd7ed80543317500","modified":1644895656205},{"_id":"public/archives/2021/04/index.html","hash":"e071c4d7f7789963d00d278946f9b4bd0c13008d","modified":1644895656205},{"_id":"public/categories/后端/index.html","hash":"2508d73db75d8dffa808bc1ea1081d3bce92ae1f","modified":1644895656205},{"_id":"public/categories/linux/index.html","hash":"4706fe70b4bd3292ce3d2e9da50d56c5336b3ef6","modified":1644895656205},{"_id":"public/categories/vue/index.html","hash":"5bfe4bf5616606b49bb3828ffee6d5dc5c76f775","modified":1644895656205},{"_id":"public/categories/前端/page/2/index.html","hash":"d7a9061c59d30d9522ea92151e10964a9e8e86f7","modified":1644895656205},{"_id":"public/categories/vue/js/index.html","hash":"ce11721d64eab108befae9dcae995e2115ea4e82","modified":1644895656205},{"_id":"public/categories/技术/index.html","hash":"c924095c5677de5a03d82afa282dd779954b3899","modified":1644895656205},{"_id":"public/tags/js/index.html","hash":"33e869907fdfa23833c0dedecc79933f9ceca080","modified":1644895656205},{"_id":"public/tags/Verdaccio/index.html","hash":"f546a94ef6e1a58b28bdd4f9be52d41f32398b33","modified":1644895656205},{"_id":"public/tags/私有npm仓库/index.html","hash":"8e7a7f731667ad250d8aa8afefb2afe0ed750a6f","modified":1644895656205},{"_id":"public/tags/小程序/index.html","hash":"183f39b8e8ef86ef07f6bfa996b667ea3c7cd63e","modified":1644895656205},{"_id":"public/tags/element-ui/index.html","hash":"3c797d62ba7a39692b46ef713d13c9b9a450a540","modified":1644895656205},{"_id":"public/tags/nodejs/index.html","hash":"be11e322f87e255aa4415f569fa6af661363a7c1","modified":1644895656205},{"_id":"public/tags/钉钉小程序/index.html","hash":"054e1329d5094bcad65f8c312faa9d4aaf56862c","modified":1644895656205},{"_id":"public/tags/vue/index.html","hash":"f74bdab6887d7ad3cf54ebc28a45447065976dde","modified":1644895656205},{"_id":"public/tags/linux/index.html","hash":"79e64d932134ed74fffa4f9215ae206a51815f56","modified":1644895656205},{"_id":"public/tags/webpack/index.html","hash":"43e3913912ad8474b054b99e5ad6e8b65f2dbdc7","modified":1644895656205},{"_id":"public/tags/技术/index.html","hash":"96a74b5fbed24d97309bd6d9ac63a62edcad68f3","modified":1644895656205},{"_id":"public/tags/react/index.html","hash":"5386f8cc38c2b9de22d8ad6509d8227aaf1a10f5","modified":1644895656205},{"_id":"public/tags/koa2/index.html","hash":"79e854dcbabd09229afd0298ea3814e81fb4ccc6","modified":1644895656205},{"_id":"public/tags/nexus/index.html","hash":"49bf9d6df90117545227e3a11e936ebf14bd56bc","modified":1644895656205},{"_id":"public/posts/239611e0/index.html","hash":"42425b92106e822e09fca3dc044ee9f74a829798","modified":1644895656205},{"_id":"public/posts/4794f0e0/index.html","hash":"f97b0c39404104e8be398a193ffdd6c05152a910","modified":1644895656205},{"_id":"public/posts/afa0b0b8/index.html","hash":"9b2f9a21b821b2b5080e3a9da031831d59043ccc","modified":1644895656205},{"_id":"public/posts/90c577a3/index.html","hash":"6b6163b8dceda8b44842f8d0b165d2ded06da449","modified":1644895656205},{"_id":"public/posts/27736c59/index.html","hash":"eba03b05748ca8d1fa513a78d4c9f07215bac673","modified":1644895656205},{"_id":"public/posts/fbf9056/index.html","hash":"33df1143509538e3e7896c8d6c886df7885a001f","modified":1644895656205},{"_id":"public/posts/27f9f710/index.html","hash":"2dfbe351a3d8abcbe3e0a38c7c309455520debb4","modified":1644895656205},{"_id":"public/posts/9a00eab2/index.html","hash":"f0eddd6abffc59466b437191a14479faa83a7a59","modified":1644895656205},{"_id":"public/posts/204a2bf8/index.html","hash":"4fe74d17ce635985cc5f63f7e4d7be30da639dbc","modified":1644895656205},{"_id":"public/posts/c20fd3fa/index.html","hash":"30ce205334a69aeed6ce23e5828071afaa6380f7","modified":1644895656205},{"_id":"public/posts/507fa396/index.html","hash":"0eb5e2da38cdd4b7563e12b3bad9f2ea8ca649c3","modified":1644895656205},{"_id":"public/posts/73a5b140/index.html","hash":"4cd76d0a9ade285bcfdc06dd89cd3911b175156c","modified":1644895656205},{"_id":"public/posts/60785/index.html","hash":"c64a5a23125c54ddc21d6e0b25304e1128cebc9f","modified":1644895656205},{"_id":"public/posts/13666/index.html","hash":"ea7954d1d7362a1b19e7ec79475295d4a981ba8e","modified":1644895656205},{"_id":"public/posts/7f247ba3/index.html","hash":"47b0d120e2daf1f0b83b8f0daa0ac7d15e8ec78e","modified":1644895656205},{"_id":"public/posts/b38ec8f3/index.html","hash":"64b9b2c19f6752ed931ec5fb9827eb5c154b21f1","modified":1644895656205},{"_id":"public/posts/3156ccd5/index.html","hash":"1d9d03b8c49343ca17751ba00cb7c02e4c07eb1f","modified":1644895656205},{"_id":"public/posts/367b716d/index.html","hash":"8b32f9ca14f6cddeb27eab7715be29923da80717","modified":1644895656205},{"_id":"public/posts/25ca6631/index.html","hash":"e9e55b73bbf1b25b765c1f6a3c5d06d26d307797","modified":1644895656205},{"_id":"public/posts/4443dac6/index.html","hash":"692f4fc0a5fe4954545749e81fe23fe366aad79e","modified":1644895656205},{"_id":"public/posts/a7642960/index.html","hash":"73acb7d03cbba463d4a1fa5df6ae72321b053c96","modified":1644895656205},{"_id":"public/archives/page/2/index.html","hash":"9b20d3c6ea55d44819d6e07cf7d1c783a5ba90c6","modified":1644895656205},{"_id":"public/index.html","hash":"343a4e4037627340327400c737554aa24e55b133","modified":1644895656205},{"_id":"public/page/3/index.html","hash":"23c5c1d7cf645c94e5a8412c36fc1de24ffc9b38","modified":1644895656205},{"_id":"public/page/2/index.html","hash":"11bdfa8f48af2be7f72cbec566c00e25e5298e52","modified":1644895656205},{"_id":"public/categories/前端/index.html","hash":"b3e0eb2309d4504260ed55c5b252b1316e4dccc8","modified":1644895656205},{"_id":"public/CNAME","hash":"109833a1caf13cc5305f1c288b98e4f77c19df4a","modified":1639709029975},{"_id":"public/README.md","hash":"4ff258e53cdb3d0765f6a93250e4c7cfb2814154","modified":1639709029975},{"_id":"public/robots.txt","hash":"038d29f3d9796d903ded6a515b236ad287d27248","modified":1639709029975},{"_id":"public/images/2019-2-26.png","hash":"8f24528dfcc0382abcd8fe829c34ad7501827c46","modified":1639709029975},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1639709029975},{"_id":"public/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1639709029975},{"_id":"public/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1639709029975},{"_id":"public/images/avatar.png","hash":"b7cbde16b4bdd0328a6dbf0631148bbfbb58468b","modified":1639709029975},{"_id":"public/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1639709029975},{"_id":"public/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1639709029975},{"_id":"public/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1639709029975},{"_id":"public/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1639709029975},{"_id":"public/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1639709029975},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1639709029975},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1639709029975},{"_id":"public/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1639709029975},{"_id":"public/images/logo.svg","hash":"169f56fd82941591dad3abd734a50ec7259be950","modified":1639709029975},{"_id":"public/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1639709029975},{"_id":"public/uploads/avatar.png","hash":"b7cbde16b4bdd0328a6dbf0631148bbfbb58468b","modified":1639709029975},{"_id":"public/uploads/notfound.gif","hash":"e81b9256b56fb39d2f56024f866b03b7917525a8","modified":1639709029975},{"_id":"public/lib/font-awesome/webfonts/fa-regular-400.woff2","hash":"260bb01acd44d88dcb7f501a238ab968f86bef9e","modified":1639709029975},{"_id":"public/posts/845b95cc/3.png","hash":"b75fe1970b5278c5f1d4f5001bb55e9c053fff52","modified":1639709029975},{"_id":"public/posts/845b95cc/1.png","hash":"ead49f0f3a675a1a0df47a2d8bf6ffaa2ad41550","modified":1639709029975},{"_id":"public/posts/90c577a3/1.png","hash":"cba685b5f4acb33bf03ec2ac214b2e0b90108fbf","modified":1639709029975},{"_id":"public/posts/845b95cc/2.png","hash":"e796281bac9aadf1cf2d35abed8bb11b194883fe","modified":1639709029975},{"_id":"public/posts/3156ccd5/4.png","hash":"94d20fcae17886203ecc58e493d72f22dd181656","modified":1639709029975},{"_id":"public/posts/3156ccd5/3.png","hash":"86ec7353f6c193a4ac6eb7d770656cf24dbb8524","modified":1639709029975},{"_id":"public/posts/3156ccd5/5.png","hash":"6408623a332923fdd073c3a3d01d4b51801a5f28","modified":1639709029975},{"_id":"public/posts/367b716d/2.jpg","hash":"6398dc248ae2a9353582e519c092755498c00e06","modified":1639709029975},{"_id":"public/posts/367b716d/1.jpg","hash":"fbee0ee26b8db424d8925521f8b055ddef18d6fd","modified":1639709029975},{"_id":"public/posts/b38ec8f3/2.png","hash":"de756293494f1fa6b4ae40745a94b8ad6283626c","modified":1639709029975},{"_id":"public/posts/b38ec8f3/1.png","hash":"28803ad48576d6031fc620df00df92edd8a5c734","modified":1639709029975},{"_id":"public/posts/3156ccd5/1.png","hash":"10264588102714359a980206c040c9ddb7cea605","modified":1639709029975},{"_id":"public/posts/3156ccd5/2.png","hash":"191416348a4434089560929f5e2b547f2af24ac6","modified":1639709029975},{"_id":"public/posts/73a5b140/5.png","hash":"3bc26eb6ffe01b4e0dcc1f49010fabd7e4926b0f","modified":1639709029975},{"_id":"public/posts/73a5b140/8.png","hash":"01fb060c882bf14fe637dcf42ca3d8f6679bb714","modified":1639709029975},{"_id":"public/posts/507fa396/1.jpg","hash":"fc04a6cc872c75700ecd6309e9e53d1554fe2144","modified":1639709029975},{"_id":"public/posts/507fa396/2.jpg","hash":"ce92e8d091db7c19c8dab1d66729fb3c4da46acc","modified":1639709029975},{"_id":"public/posts/507fa396/3.jpg","hash":"6400106d296b6b7b8f23ea43eb577a67f67285f6","modified":1639709029975},{"_id":"public/posts/507fa396/4.jpg","hash":"ed6a9f4361a1b8ebc3241b58a854b776a464f023","modified":1639709029975},{"_id":"public/posts/507fa396/5.jpg","hash":"865b0520708a7083a5fdfa9361ee9618980d1046","modified":1639709029975},{"_id":"public/posts/c20fd3fa/2.png","hash":"66c168b48969d70bcecbad6c19912c469d9e0371","modified":1639709029975},{"_id":"public/posts/c20fd3fa/3.png","hash":"48e6e7149dbb223027a3bfcb2154398fb5e43b3d","modified":1639709029975},{"_id":"public/posts/c20fd3fa/1.png","hash":"c4d1d5125b4342b9f8d4e53bbdc6566503b7720a","modified":1639709029975},{"_id":"public/posts/d86f9c95/1.jpg","hash":"254327df897d4e2794f3e6a43e9a7a7723878e8e","modified":1639709029975},{"_id":"public/posts/d86f9c95/2.jpg","hash":"4c38193b9449eae96842fade756be47374426fb9","modified":1639709029975},{"_id":"public/lib/font-awesome/webfonts/fa-brands-400.woff2","hash":"509988477da79c146cb93fb728405f18e923c2de","modified":1639709029975},{"_id":"public/lib/font-awesome/webfonts/fa-solid-900.woff2","hash":"75a88815c47a249eadb5f0edc1675957f860cca7","modified":1639709029975},{"_id":"public/posts/73a5b140/2.png","hash":"a480d8818d822a6c51dde17499df0a6c64cfe047","modified":1639709029975},{"_id":"public/posts/73a5b140/6.png","hash":"8919bf9a4cf99efcfbd6768f2fefb5c43ba58083","modified":1639709029975},{"_id":"public/posts/73a5b140/7.png","hash":"db86d672a7e1476aaa7f9fe033287f97114fc7f5","modified":1639709029975},{"_id":"public/posts/fbf9056/1.png","hash":"3e466dd752948ccc19d2561553023dc8121ea263","modified":1639709029975},{"_id":"public/posts/7f247ba3/2.png","hash":"dcac407692b787cbf57033c800fbea954e716ea0","modified":1639709029975},{"_id":"public/posts/4794f0e0/1.png","hash":"50f9950bbed9964f275c9007ec0a2b8bf80a6684","modified":1639709029975},{"_id":"public/posts/4794f0e0/2.png","hash":"be335f59a071d095450ec74f56a744d179c49a3c","modified":1639709029975},{"_id":"public/posts/4794f0e0/3.png","hash":"aa23169814b8c3942f4c94db06868fcb4205f350","modified":1639709029975},{"_id":"public/posts/7f247ba3/1.png","hash":"ea2de96dfa875f22ae64a5aed7c64d02eed58889","modified":1639709029975},{"_id":"public/posts/4794f0e0/5.png","hash":"262d87f20186fbd6c7f98f7b3fe1b72271d2b3b5","modified":1639709029975},{"_id":"public/posts/4794f0e0/6.png","hash":"be5d6019bcf5950b2b821b53b0073bb6ca2c9273","modified":1639709029975},{"_id":"public/posts/7f247ba3/3.png","hash":"e3cda13ef4ae41ef6d02c790714f190f7f53eeb4","modified":1639709029975},{"_id":"public/posts/73a5b140/3.png","hash":"3a7461c78e868e285c9fd4d8a7119f25cc822cfe","modified":1639709029975},{"_id":"public/posts/27736c59/1.png","hash":"e4b951beee3f75e5b01a45e32b9e40960d4e44b2","modified":1639709029975},{"_id":"public/posts/73a5b140/1.png","hash":"a2fcee8cbf0721c4570f35de3d1d1f80d917f518","modified":1639709029975},{"_id":"public/posts/73a5b140/4.png","hash":"639b4a65f4fb9149c89c5e989613c99d9af9a8a2","modified":1639709029975},{"_id":"public/js/algolia-search.js","hash":"498d233eb5c7af6940baf94c1a1c36fdf1dd2636","modified":1639709029975},{"_id":"public/js/bookmark.js","hash":"9734ebcb9b83489686f5c2da67dc9e6157e988ad","modified":1639709029975},{"_id":"public/js/local-search.js","hash":"35ccf100d8f9c0fd6bfbb7fa88c2a76c42a69110","modified":1639709029975},{"_id":"public/js/motion.js","hash":"72df86f6dfa29cce22abeff9d814c9dddfcf13a9","modified":1639709029975},{"_id":"public/js/schemes/muse.js","hash":"1eb9b88103ddcf8827b1a7cbc56471a9c5592d53","modified":1639709029975},{"_id":"public/js/schemes/pisces.js","hash":"0ac5ce155bc58c972fe21c4c447f85e6f8755c62","modified":1639709029975},{"_id":"public/js/next-boot.js","hash":"a1b0636423009d4a4e4cea97bcbf1842bfab582c","modified":1639709029975},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1639709029975},{"_id":"public/css/main.css","hash":"0d1f2d33ed5a70e736f786da61b753011ba2caa5","modified":1639709029975},{"_id":"public/js/utils.js","hash":"730cca7f164eaf258661a61ff3f769851ff1e5da","modified":1639709029975},{"_id":"public/lib/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1639709029975},{"_id":"public/posts/4794f0e0/4.png","hash":"4d7f5ec64a19440b586d610d70f0d90bde9d56a7","modified":1639709029975},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1639709029975},{"_id":"public/lib/font-awesome/css/all.min.css","hash":"0038dc97c79451578b7bd48af60ba62282b4082b","modified":1639709029975},{"_id":"source/_posts/发布多包组件到npm.md","hash":"e40bce20712662006c01bad5fde4bebf35a6854f","modified":1644893328624},{"_id":"source/_posts/vue-cli4-lerna发布多组件到npm.md","hash":"251660a3ab785ab3d94e7a52251ad42f143e275d","modified":1644895547746},{"_id":"source/_posts/vue-cli4-lerna发布多组件到npm/4.png","hash":"8d358c001c1409780d4d9b46adc6d32a0c78e7bc","modified":1645410009444},{"_id":"source/_posts/vue-cli4-lerna发布多组件到npm/1.png","hash":"7d6081a9f693b5a8636ee8efef9b4b2d1ccb350a","modified":1645409417941},{"_id":"source/_posts/vue-cli4-lerna发布多组件到npm/2.png","hash":"85f3eb14c9d0902495cf1db1f087a0fd27b9fb90","modified":1645409766172},{"_id":"source/_posts/vue-cli4-lerna发布多组件到npm/3.png","hash":"71c83edf4d4b5985b32d563cfada786f88ffa802","modified":1645409972280},{"_id":"public/posts/3b9b1ab3/index.html","hash":"9e708fe8a8d88363203aaeb73b09aa5843a252f0","modified":1644895656205},{"_id":"public/archives/2022/index.html","hash":"890189c0354f10102a29d4e2d829a5c68dbb8775","modified":1644895656205},{"_id":"public/archives/2022/02/index.html","hash":"6a1541d20823aacd4a8b523e8a962c7e8ce504d0","modified":1644895656205},{"_id":"public/posts/3b9b1ab3/1.png","hash":"7d6081a9f693b5a8636ee8efef9b4b2d1ccb350a","modified":1644895656205},{"_id":"public/posts/3b9b1ab3/4.png","hash":"8d358c001c1409780d4d9b46adc6d32a0c78e7bc","modified":1644895656205},{"_id":"public/posts/3b9b1ab3/3.png","hash":"71c83edf4d4b5985b32d563cfada786f88ffa802","modified":1644895656205},{"_id":"public/posts/3b9b1ab3/2.png","hash":"85f3eb14c9d0902495cf1db1f087a0fd27b9fb90","modified":1644895656205}],"Category":[{"name":"前端","_id":"ckx9sf6030004z8nkephr6834"},{"name":"后端","_id":"ckx9sf60p000pz8nk0saocozy"},{"name":"linux","_id":"ckx9sf60s000wz8nk4zci0rns"},{"name":"vue","_id":"ckx9sf60v0013z8nk4mph26td"},{"name":"js","parent":"ckx9sf60v0013z8nk4mph26td","_id":"ckx9sf60z001fz8nkbmh3cdi4"},{"name":"技术","_id":"ckx9sf615001oz8nk97v5577b"}],"Data":[],"Page":[{"title":"archives","date":"2019-02-18T14:04:42.000Z","toc":false,"comments":0,"_content":"","source":"archives/index.md","raw":"---\ntitle: archives\ndate: 2019-02-18 22:04:42\ntoc: false\ncomments: false\n---\n","updated":"2021-04-22T01:56:08.262Z","path":"archives/index.html","layout":"page","_id":"ckx9sf5zt0000z8nk247dbhu5","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"分类","date":"2019-02-18T14:04:24.000Z","type":"categories","toc":false,"comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2019-02-18 22:04:24\ntype: \"categories\"\ntoc: false\ncomments: false\n---\n","updated":"2021-04-22T01:56:08.262Z","path":"categories/index.html","layout":"page","_id":"ckx9sf6000002z8nk9b2p3tuj","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"标签","date":"2019-02-18T14:03:13.000Z","type":"tags","toc":false,"comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2019-02-18 22:03:13\ntype: \"tags\"\ntoc: false\ncomments: false\n---\n","updated":"2021-04-22T01:56:08.262Z","path":"tags/index.html","layout":"page","_id":"ckx9sf6050006z8nk0qibezsc","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"关于","date":"2019-02-18T14:03:57.000Z","toc":false,"comments":0,"_content":"## 建立此博客的初衷\n\n自己在工作以及学习过程中难免会遇到一些困难，或者会发现一些对于工作、对于自己技术有帮助的技术点，希望能够把解决困难的方法，遇到好的技术形成一篇篇博客，需要的时候能够打开来看看，希望对自己的技术成长有帮助，也希望能够帮助他人。\n\n## 关于作者\n\n本人自2015年就开始从事web前端开发工作了，虽然没有能在腾讯、阿里、百度等等大厂工作过，但是自己的技术成长也挺快，熟练使用vue，jquery，bootstrap，element-ui等框架，自己参与过商城网站的前端开发、各种类型的后台管理系统前端的开发以及移动端的web（包括app内的h5），微信h5以及小程序前端。对于后端不敢说精通，但是使用过nodejs搭建过一款记账小程序(“账目随身记”)的后台以及使用nodejs搭建过公司官网的后台。学习后端并不是想往后端方向发展，而是更好地与后端工程师进行合作，更好地把前端工作做好。\n","source":"about/index.md","raw":"---\ntitle: 关于\ndate: 2019-02-18 22:03:57\ntoc: false\ncomments: false\n---\n## 建立此博客的初衷\n\n自己在工作以及学习过程中难免会遇到一些困难，或者会发现一些对于工作、对于自己技术有帮助的技术点，希望能够把解决困难的方法，遇到好的技术形成一篇篇博客，需要的时候能够打开来看看，希望对自己的技术成长有帮助，也希望能够帮助他人。\n\n## 关于作者\n\n本人自2015年就开始从事web前端开发工作了，虽然没有能在腾讯、阿里、百度等等大厂工作过，但是自己的技术成长也挺快，熟练使用vue，jquery，bootstrap，element-ui等框架，自己参与过商城网站的前端开发、各种类型的后台管理系统前端的开发以及移动端的web（包括app内的h5），微信h5以及小程序前端。对于后端不敢说精通，但是使用过nodejs搭建过一款记账小程序(“账目随身记”)的后台以及使用nodejs搭建过公司官网的后台。学习后端并不是想往后端方向发展，而是更好地与后端工程师进行合作，更好地把前端工作做好。\n","updated":"2021-04-22T01:56:08.262Z","path":"about/index.html","layout":"page","_id":"ckx9sf6070008z8nk31ohht7g","content":"<h2 id=\"建立此博客的初衷\"><a href=\"#建立此博客的初衷\" class=\"headerlink\" title=\"建立此博客的初衷\"></a>建立此博客的初衷</h2><p>自己在工作以及学习过程中难免会遇到一些困难，或者会发现一些对于工作、对于自己技术有帮助的技术点，希望能够把解决困难的方法，遇到好的技术形成一篇篇博客，需要的时候能够打开来看看，希望对自己的技术成长有帮助，也希望能够帮助他人。</p>\n<h2 id=\"关于作者\"><a href=\"#关于作者\" class=\"headerlink\" title=\"关于作者\"></a>关于作者</h2><p>本人自2015年就开始从事web前端开发工作了，虽然没有能在腾讯、阿里、百度等等大厂工作过，但是自己的技术成长也挺快，熟练使用vue，jquery，bootstrap，element-ui等框架，自己参与过商城网站的前端开发、各种类型的后台管理系统前端的开发以及移动端的web（包括app内的h5），微信h5以及小程序前端。对于后端不敢说精通，但是使用过nodejs搭建过一款记账小程序(“账目随身记”)的后台以及使用nodejs搭建过公司官网的后台。学习后端并不是想往后端方向发展，而是更好地与后端工程师进行合作，更好地把前端工作做好。</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"建立此博客的初衷\"><a href=\"#建立此博客的初衷\" class=\"headerlink\" title=\"建立此博客的初衷\"></a>建立此博客的初衷</h2><p>自己在工作以及学习过程中难免会遇到一些困难，或者会发现一些对于工作、对于自己技术有帮助的技术点，希望能够把解决困难的方法，遇到好的技术形成一篇篇博客，需要的时候能够打开来看看，希望对自己的技术成长有帮助，也希望能够帮助他人。</p>\n<h2 id=\"关于作者\"><a href=\"#关于作者\" class=\"headerlink\" title=\"关于作者\"></a>关于作者</h2><p>本人自2015年就开始从事web前端开发工作了，虽然没有能在腾讯、阿里、百度等等大厂工作过，但是自己的技术成长也挺快，熟练使用vue，jquery，bootstrap，element-ui等框架，自己参与过商城网站的前端开发、各种类型的后台管理系统前端的开发以及移动端的web（包括app内的h5），微信h5以及小程序前端。对于后端不敢说精通，但是使用过nodejs搭建过一款记账小程序(“账目随身记”)的后台以及使用nodejs搭建过公司官网的后台。学习后端并不是想往后端方向发展，而是更好地与后端工程师进行合作，更好地把前端工作做好。</p>\n"},{"title":"404-对不起！您访问的页面不存在","toc":false,"comments":0,"_content":"<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"UTF-8\" http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no\">\n<title>404-对不起！您访问的页面不存在</title>\n<style type=\"text/css\">\n    *{\n        margin: 0;\n        padding: 0;\n    }\n    .container{\n        margin: 0 auto;    \n    \ttext-align: center; \n    }\n    .img-notfound{\n        width: 400px\n    }\n    @media screen and (max-width: 600px) {\n        .container{\n            margin: 0 auto;\n            width: 100%;\n        }\n    }\n</style>\n</head>\n \n<body> \n    <div class=\"container\">\n        <div class=\"mod-notfound\">\n            <img class=\"img-notfound\" src=\"/uploads/notfound.gif\">\n            <h3 style=\"line-height: 70px\">啊~哦~ 您要查看的页面不存在！</h3>\n            <p style=\"margin-bottom: 30px\">请检查您输入的网址是否正确</p>\n            <p style=\"font-size: 14px; line-height: 20px\">您可以回到 \n                <a href=\"/\">网站首页</a> 或<a href=\"javascript:;\" target=\"_blank\" onclick=\"window.history.go(-1)\">返回上一页</a> \n            </p>\n        </div>\n    </div>\n</body> \n</html>\n</html>\n","source":"404/404.html","raw":"---\ntitle: 404-对不起！您访问的页面不存在\ntoc: false\ncomments: false\npermalink: /404\n---\n<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"UTF-8\" http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no\">\n<title>404-对不起！您访问的页面不存在</title>\n<style type=\"text/css\">\n    *{\n        margin: 0;\n        padding: 0;\n    }\n    .container{\n        margin: 0 auto;    \n    \ttext-align: center; \n    }\n    .img-notfound{\n        width: 400px\n    }\n    @media screen and (max-width: 600px) {\n        .container{\n            margin: 0 auto;\n            width: 100%;\n        }\n    }\n</style>\n</head>\n \n<body> \n    <div class=\"container\">\n        <div class=\"mod-notfound\">\n            <img class=\"img-notfound\" src=\"/uploads/notfound.gif\">\n            <h3 style=\"line-height: 70px\">啊~哦~ 您要查看的页面不存在！</h3>\n            <p style=\"margin-bottom: 30px\">请检查您输入的网址是否正确</p>\n            <p style=\"font-size: 14px; line-height: 20px\">您可以回到 \n                <a href=\"/\">网站首页</a> 或<a href=\"javascript:;\" target=\"_blank\" onclick=\"window.history.go(-1)\">返回上一页</a> \n            </p>\n        </div>\n    </div>\n</body> \n</html>\n</html>\n","date":"2021-04-22T01:56:08.192Z","updated":"2021-04-22T01:56:08.192Z","path":"/404.html","layout":"page","_id":"ckx9sf609000az8nk4sal72hg","content":"<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"UTF-8\" http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no\">\n<title>404-对不起！您访问的页面不存在</title>\n<style type=\"text/css\">\n    *{\n        margin: 0;\n        padding: 0;\n    }\n    .container{\n        margin: 0 auto;    \n    \ttext-align: center; \n    }\n    .img-notfound{\n        width: 400px\n    }\n    @media screen and (max-width: 600px) {\n        .container{\n            margin: 0 auto;\n            width: 100%;\n        }\n    }\n</style>\n</head>\n \n<body> \n    <div class=\"container\">\n        <div class=\"mod-notfound\">\n            <img class=\"img-notfound\" src=\"/uploads/notfound.gif\">\n            <h3 style=\"line-height: 70px\">啊~哦~ 您要查看的页面不存在！</h3>\n            <p style=\"margin-bottom: 30px\">请检查您输入的网址是否正确</p>\n            <p style=\"font-size: 14px; line-height: 20px\">您可以回到 \n                <a href=\"/\">网站首页</a> 或<a href=\"javascript:;\" target=\"_blank\" onclick=\"window.history.go(-1)\">返回上一页</a> \n            </p>\n        </div>\n    </div>\n</body> \n</html>\n</html>\n","site":{"data":{}},"excerpt":"","more":"<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"UTF-8\" http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no\">\n<title>404-对不起！您访问的页面不存在</title>\n<style type=\"text/css\">\n    *{\n        margin: 0;\n        padding: 0;\n    }\n    .container{\n        margin: 0 auto;    \n    \ttext-align: center; \n    }\n    .img-notfound{\n        width: 400px\n    }\n    @media screen and (max-width: 600px) {\n        .container{\n            margin: 0 auto;\n            width: 100%;\n        }\n    }\n</style>\n</head>\n \n<body> \n    <div class=\"container\">\n        <div class=\"mod-notfound\">\n            <img class=\"img-notfound\" src=\"/uploads/notfound.gif\">\n            <h3 style=\"line-height: 70px\">啊~哦~ 您要查看的页面不存在！</h3>\n            <p style=\"margin-bottom: 30px\">请检查您输入的网址是否正确</p>\n            <p style=\"font-size: 14px; line-height: 20px\">您可以回到 \n                <a href=\"/\">网站首页</a> 或<a href=\"javascript:;\" target=\"_blank\" onclick=\"window.history.go(-1)\">返回上一页</a> \n            </p>\n        </div>\n    </div>\n</body> \n</html>\n</html>\n"}],"Post":[{"title":"[\"1\", \"2\", \"3\"].map(parseInt)报错问题解决办法","abbrlink":"1428c068","date":"2019-03-30T03:41:08.000Z","_content":"\n第一次使用 `[\"1\", \"2\", \"3\"].map(parseInt)`时，以为会得到[1,2,3]这个结果，结果很不幸得到的是[1,NaN,NaN]，为什么会这样呢，其实是因为map函数传递的是三个参数`value,index,arry`,而parseInt函数传递的是`value,radix`，`radix`不传时默认使用10，表示十进制，但是如果radix在2-36之外会返回NaN。\n好了，既然已经知道了原因，那么应该怎么修改，才能得到正确的结果呢，\n<!-- more -->\n很简单，把map和parseIntDe完整参数写出来就可以了`[\"1\", \"2\", \"3\"].map((value,index,array)=>parseInt(value,10));` 给parseInt指定10进制，用es5的写法则是\n```\n[\"1\", \"2\", \"3\"].map(function(value,index,array){\n\treturn parseInt(value,10)\n});  //返回 [1,2,3]\n```","source":"_posts/1-2-3-map-parseInt-报错问解决办法.md","raw":"---\ntitle: '[\"1\", \"2\", \"3\"].map(parseInt)报错问题解决办法'\ntags: js\ncategories: 前端\nabbrlink: 1428c068\ndate: 2019-03-30 11:41:08\n---\n\n第一次使用 `[\"1\", \"2\", \"3\"].map(parseInt)`时，以为会得到[1,2,3]这个结果，结果很不幸得到的是[1,NaN,NaN]，为什么会这样呢，其实是因为map函数传递的是三个参数`value,index,arry`,而parseInt函数传递的是`value,radix`，`radix`不传时默认使用10，表示十进制，但是如果radix在2-36之外会返回NaN。\n好了，既然已经知道了原因，那么应该怎么修改，才能得到正确的结果呢，\n<!-- more -->\n很简单，把map和parseIntDe完整参数写出来就可以了`[\"1\", \"2\", \"3\"].map((value,index,array)=>parseInt(value,10));` 给parseInt指定10进制，用es5的写法则是\n```\n[\"1\", \"2\", \"3\"].map(function(value,index,array){\n\treturn parseInt(value,10)\n});  //返回 [1,2,3]\n```","slug":"1-2-3-map-parseInt-报错问解决办法","published":1,"updated":"2021-04-22T01:56:08.202Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckx9sf5zx0001z8nkg83nf6tm","content":"<p>第一次使用 <code>[&quot;1&quot;, &quot;2&quot;, &quot;3&quot;].map(parseInt)</code>时，以为会得到[1,2,3]这个结果，结果很不幸得到的是[1,NaN,NaN]，为什么会这样呢，其实是因为map函数传递的是三个参数<code>value,index,arry</code>,而parseInt函数传递的是<code>value,radix</code>，<code>radix</code>不传时默认使用10，表示十进制，但是如果radix在2-36之外会返回NaN。<br>好了，既然已经知道了原因，那么应该怎么修改，才能得到正确的结果呢，</p>\n<a id=\"more\"></a>\n<p>很简单，把map和parseIntDe完整参数写出来就可以了<code>[&quot;1&quot;, &quot;2&quot;, &quot;3&quot;].map((value,index,array)=&gt;parseInt(value,10));</code> 给parseInt指定10进制，用es5的写法则是</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"string\">&quot;1&quot;</span>, <span class=\"string\">&quot;2&quot;</span>, <span class=\"string\">&quot;3&quot;</span>].map(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">value,index,array</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">parseInt</span>(value,<span class=\"number\">10</span>)</span><br><span class=\"line\">&#125;);  <span class=\"comment\">//返回 [1,2,3]</span></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<p>第一次使用 <code>[&quot;1&quot;, &quot;2&quot;, &quot;3&quot;].map(parseInt)</code>时，以为会得到[1,2,3]这个结果，结果很不幸得到的是[1,NaN,NaN]，为什么会这样呢，其实是因为map函数传递的是三个参数<code>value,index,arry</code>,而parseInt函数传递的是<code>value,radix</code>，<code>radix</code>不传时默认使用10，表示十进制，但是如果radix在2-36之外会返回NaN。<br>好了，既然已经知道了原因，那么应该怎么修改，才能得到正确的结果呢，</p>","more":"<p>很简单，把map和parseIntDe完整参数写出来就可以了<code>[&quot;1&quot;, &quot;2&quot;, &quot;3&quot;].map((value,index,array)=&gt;parseInt(value,10));</code> 给parseInt指定10进制，用es5的写法则是</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"string\">&quot;1&quot;</span>, <span class=\"string\">&quot;2&quot;</span>, <span class=\"string\">&quot;3&quot;</span>].map(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">value,index,array</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">parseInt</span>(value,<span class=\"number\">10</span>)</span><br><span class=\"line\">&#125;);  <span class=\"comment\">//返回 [1,2,3]</span></span><br></pre></td></tr></table></figure>"},{"title":"Verdaccio 搭建私有npm仓库","abbrlink":"27f9f710","date":"2021-03-30T06:29:27.000Z","_content":"\n## Verdaccio 是一个跨平台的 Web 应用程序，轻量级的\n[Verdaccio官网地址：](https://verdaccio.org/docs/zh-CN/installation) https://verdaccio.org/docs/zh-CN/installation\n\n### 安装步骤\n\n使用 npm\n\n`npm install -g verdaccio`\n\n或使用 yarn\n\n`yarn global add verdaccio`\n\n输入`verdaccio`运行 \n\n```\n    $> verdaccio\n    warn --- config file  - /home/.config/verdaccio/config.yaml\n    warn --- http address - http://localhost:4873/ - verdaccio/4.8.1\n```\nyaml 是配置文件，\n<!-- more -->\n\n```\n#\n# This is the default config file. It allows all users to do anything,\n# so don't use it on production systems.\n#\n# Look here for more config file examples:\n# https://github.com/verdaccio/verdaccio/tree/master/conf\n#\n\n# path to a directory with all packages\nstorage: ./storage\n# path to a directory with plugins to include\nplugins: ./plugins\n\nweb:\n  title: npm 私有仓库\n  # comment out to disable gravatar support\n  # gravatar: false\n  # by default packages are ordercer ascendant (asc|desc)\n  # sort_packages: asc\n  # convert your UI to the dark side\n  # darkMode: true\n\n# translate your registry, api i18n not available yet\n# i18n:\n# list of the available translations https://github.com/verdaccio/ui/tree/master/i18n/translations\n#   web: en-US\n\nauth:\n  htpasswd:\n    file: ./htpasswd\n    # Maximum amount of users allowed to register, defaults to \"+inf\".\n    # You can set this to -1 to disable registration.\n    # max_users: 1000\n\n# a list of other known repositories we can talk to\nuplinks:\n  npmjs:\n    url: https://registry.npm.taobao.org/\n\npackages:\n  '@*/*':\n    # scoped packages\n    access: $all\n    publish: $authenticated\n    unpublish: $authenticated\n    proxy: npmjs\n\n  '**':\n    # allow all users (including non-authenticated users) to read and\n    # publish all packages\n    #\n    # you can specify usernames/groupnames (depending on your auth plugin)\n    # and three keywords: \"$all\", \"$anonymous\", \"$authenticated\"\n    access: $all\n\n    # allow all known users to publish/publish packages\n    # (anyone can register by default, remember?)\n    publish: $authenticated\n    unpublish: $authenticated\n\n    # if package is not available locally, proxy requests to 'npmjs' registry\n    proxy: npmjs\n\n# You can specify HTTP/1.1 server keep alive timeout in seconds for incoming connections.\n# A value of 0 makes the http server behave similarly to Node.js versions prior to 8.0.0, which did not have a keep-alive timeout.\n# WORKAROUND: Through given configuration you can workaround following issue https://github.com/verdaccio/verdaccio/issues/301. Set to 0 in case 60 is not enough.\nserver:\n  keepAliveTimeout: 60\n\nmiddlewares:\n  audit:\n    enabled: true\n   \n# 监听的端口，IP,重点,不配置这个,只能本机能访问\nlisten: 0.0.0.0:4873\n# log settings\nlogs:\n  - { type: stdout, format: pretty, level: http }\n  #- {type: file, path: verdaccio.log, level: info}\n#experiments:\n#  # support for npm token command\n#  token: false\n#  # support for the new v1 search endpoint, functional by incomplete read more on ticket 1732\n#  search: false\n#  # disable writing body size to logs, read more on ticket 1912\n#  bytesin_off: false\n\n# This affect the web and api (not developed yet)\n#i18n:\n#web: en-US\n\n```\n\n### 使用 nrm 设置 Verdaccio 的源 \n\n`nrm add verdaccio http://localhost:4873/`\n\n### 注册用户 \n\n`npm adduser --registry http://localhost:4873`\n\n### 登陆私有npm ，输入注册的用户名，密码，邮箱\n\n`npm login–-registry http://localhost:4873`\n\n### 发布包：需要去掉 package 里的私有字段\n\n`npm publish --registry http://localhost:4873`","source":"_posts/Verdaccio-搭建私有npm仓库.md","raw":"---\ntitle: Verdaccio 搭建私有npm仓库\ntags:\n  - 私有npm仓库\n  - Verdaccio\ncategories: 前端\nabbrlink: 27f9f710\ndate: 2021-03-30 14:29:27\n---\n\n## Verdaccio 是一个跨平台的 Web 应用程序，轻量级的\n[Verdaccio官网地址：](https://verdaccio.org/docs/zh-CN/installation) https://verdaccio.org/docs/zh-CN/installation\n\n### 安装步骤\n\n使用 npm\n\n`npm install -g verdaccio`\n\n或使用 yarn\n\n`yarn global add verdaccio`\n\n输入`verdaccio`运行 \n\n```\n    $> verdaccio\n    warn --- config file  - /home/.config/verdaccio/config.yaml\n    warn --- http address - http://localhost:4873/ - verdaccio/4.8.1\n```\nyaml 是配置文件，\n<!-- more -->\n\n```\n#\n# This is the default config file. It allows all users to do anything,\n# so don't use it on production systems.\n#\n# Look here for more config file examples:\n# https://github.com/verdaccio/verdaccio/tree/master/conf\n#\n\n# path to a directory with all packages\nstorage: ./storage\n# path to a directory with plugins to include\nplugins: ./plugins\n\nweb:\n  title: npm 私有仓库\n  # comment out to disable gravatar support\n  # gravatar: false\n  # by default packages are ordercer ascendant (asc|desc)\n  # sort_packages: asc\n  # convert your UI to the dark side\n  # darkMode: true\n\n# translate your registry, api i18n not available yet\n# i18n:\n# list of the available translations https://github.com/verdaccio/ui/tree/master/i18n/translations\n#   web: en-US\n\nauth:\n  htpasswd:\n    file: ./htpasswd\n    # Maximum amount of users allowed to register, defaults to \"+inf\".\n    # You can set this to -1 to disable registration.\n    # max_users: 1000\n\n# a list of other known repositories we can talk to\nuplinks:\n  npmjs:\n    url: https://registry.npm.taobao.org/\n\npackages:\n  '@*/*':\n    # scoped packages\n    access: $all\n    publish: $authenticated\n    unpublish: $authenticated\n    proxy: npmjs\n\n  '**':\n    # allow all users (including non-authenticated users) to read and\n    # publish all packages\n    #\n    # you can specify usernames/groupnames (depending on your auth plugin)\n    # and three keywords: \"$all\", \"$anonymous\", \"$authenticated\"\n    access: $all\n\n    # allow all known users to publish/publish packages\n    # (anyone can register by default, remember?)\n    publish: $authenticated\n    unpublish: $authenticated\n\n    # if package is not available locally, proxy requests to 'npmjs' registry\n    proxy: npmjs\n\n# You can specify HTTP/1.1 server keep alive timeout in seconds for incoming connections.\n# A value of 0 makes the http server behave similarly to Node.js versions prior to 8.0.0, which did not have a keep-alive timeout.\n# WORKAROUND: Through given configuration you can workaround following issue https://github.com/verdaccio/verdaccio/issues/301. Set to 0 in case 60 is not enough.\nserver:\n  keepAliveTimeout: 60\n\nmiddlewares:\n  audit:\n    enabled: true\n   \n# 监听的端口，IP,重点,不配置这个,只能本机能访问\nlisten: 0.0.0.0:4873\n# log settings\nlogs:\n  - { type: stdout, format: pretty, level: http }\n  #- {type: file, path: verdaccio.log, level: info}\n#experiments:\n#  # support for npm token command\n#  token: false\n#  # support for the new v1 search endpoint, functional by incomplete read more on ticket 1732\n#  search: false\n#  # disable writing body size to logs, read more on ticket 1912\n#  bytesin_off: false\n\n# This affect the web and api (not developed yet)\n#i18n:\n#web: en-US\n\n```\n\n### 使用 nrm 设置 Verdaccio 的源 \n\n`nrm add verdaccio http://localhost:4873/`\n\n### 注册用户 \n\n`npm adduser --registry http://localhost:4873`\n\n### 登陆私有npm ，输入注册的用户名，密码，邮箱\n\n`npm login–-registry http://localhost:4873`\n\n### 发布包：需要去掉 package 里的私有字段\n\n`npm publish --registry http://localhost:4873`","slug":"Verdaccio-搭建私有npm仓库","published":1,"updated":"2021-04-22T01:56:08.202Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckx9sf6010003z8nkh9apa8hl","content":"<h2 id=\"Verdaccio-是一个跨平台的-Web-应用程序，轻量级的\"><a href=\"#Verdaccio-是一个跨平台的-Web-应用程序，轻量级的\" class=\"headerlink\" title=\"Verdaccio 是一个跨平台的 Web 应用程序，轻量级的\"></a>Verdaccio 是一个跨平台的 Web 应用程序，轻量级的</h2><p><a href=\"https://verdaccio.org/docs/zh-CN/installation\">Verdaccio官网地址：</a> <a href=\"https://verdaccio.org/docs/zh-CN/installation\">https://verdaccio.org/docs/zh-CN/installation</a></p>\n<h3 id=\"安装步骤\"><a href=\"#安装步骤\" class=\"headerlink\" title=\"安装步骤\"></a>安装步骤</h3><p>使用 npm</p>\n<p><code>npm install -g verdaccio</code></p>\n<p>或使用 yarn</p>\n<p><code>yarn global add verdaccio</code></p>\n<p>输入<code>verdaccio</code>运行 </p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$&gt; verdaccio</span><br><span class=\"line\">warn --- config file  - <span class=\"regexp\">/home/</span>.config<span class=\"regexp\">/verdaccio/</span>config.yaml</span><br><span class=\"line\">warn --- http address - http:<span class=\"regexp\">//</span>localhost:<span class=\"number\">4873</span><span class=\"regexp\">/ - verdaccio/</span><span class=\"number\">4.8</span>.<span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n<p>yaml 是配置文件，</p>\n<a id=\"more\"></a>\n\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># This is the default config file. It allows all users to do anything,</span></span><br><span class=\"line\"><span class=\"comment\"># so don&#x27;t use it on production systems.</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># Look here for more config file examples:</span></span><br><span class=\"line\"><span class=\"comment\"># https://github.com/verdaccio/verdaccio/tree/master/conf</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># path to a directory with all packages</span></span><br><span class=\"line\"><span class=\"attr\">storage:</span> <span class=\"string\">./storage</span></span><br><span class=\"line\"><span class=\"comment\"># path to a directory with plugins to include</span></span><br><span class=\"line\"><span class=\"attr\">plugins:</span> <span class=\"string\">./plugins</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">web:</span></span><br><span class=\"line\">  <span class=\"attr\">title:</span> <span class=\"string\">npm</span> <span class=\"string\">私有仓库</span></span><br><span class=\"line\">  <span class=\"comment\"># comment out to disable gravatar support</span></span><br><span class=\"line\">  <span class=\"comment\"># gravatar: false</span></span><br><span class=\"line\">  <span class=\"comment\"># by default packages are ordercer ascendant (asc|desc)</span></span><br><span class=\"line\">  <span class=\"comment\"># sort_packages: asc</span></span><br><span class=\"line\">  <span class=\"comment\"># convert your UI to the dark side</span></span><br><span class=\"line\">  <span class=\"comment\"># darkMode: true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># translate your registry, api i18n not available yet</span></span><br><span class=\"line\"><span class=\"comment\"># i18n:</span></span><br><span class=\"line\"><span class=\"comment\"># list of the available translations https://github.com/verdaccio/ui/tree/master/i18n/translations</span></span><br><span class=\"line\"><span class=\"comment\">#   web: en-US</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">auth:</span></span><br><span class=\"line\">  <span class=\"attr\">htpasswd:</span></span><br><span class=\"line\">    <span class=\"attr\">file:</span> <span class=\"string\">./htpasswd</span></span><br><span class=\"line\">    <span class=\"comment\"># Maximum amount of users allowed to register, defaults to &quot;+inf&quot;.</span></span><br><span class=\"line\">    <span class=\"comment\"># You can set this to -1 to disable registration.</span></span><br><span class=\"line\">    <span class=\"comment\"># max_users: 1000</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># a list of other known repositories we can talk to</span></span><br><span class=\"line\"><span class=\"attr\">uplinks:</span></span><br><span class=\"line\">  <span class=\"attr\">npmjs:</span></span><br><span class=\"line\">    <span class=\"attr\">url:</span> <span class=\"string\">https://registry.npm.taobao.org/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">packages:</span></span><br><span class=\"line\">  <span class=\"string\">&#x27;@*/*&#x27;</span><span class=\"string\">:</span></span><br><span class=\"line\">    <span class=\"comment\"># scoped packages</span></span><br><span class=\"line\">    <span class=\"attr\">access:</span> <span class=\"string\">$all</span></span><br><span class=\"line\">    <span class=\"attr\">publish:</span> <span class=\"string\">$authenticated</span></span><br><span class=\"line\">    <span class=\"attr\">unpublish:</span> <span class=\"string\">$authenticated</span></span><br><span class=\"line\">    <span class=\"attr\">proxy:</span> <span class=\"string\">npmjs</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"string\">&#x27;**&#x27;</span><span class=\"string\">:</span></span><br><span class=\"line\">    <span class=\"comment\"># allow all users (including non-authenticated users) to read and</span></span><br><span class=\"line\">    <span class=\"comment\"># publish all packages</span></span><br><span class=\"line\">    <span class=\"comment\">#</span></span><br><span class=\"line\">    <span class=\"comment\"># you can specify usernames/groupnames (depending on your auth plugin)</span></span><br><span class=\"line\">    <span class=\"comment\"># and three keywords: &quot;$all&quot;, &quot;$anonymous&quot;, &quot;$authenticated&quot;</span></span><br><span class=\"line\">    <span class=\"attr\">access:</span> <span class=\"string\">$all</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># allow all known users to publish/publish packages</span></span><br><span class=\"line\">    <span class=\"comment\"># (anyone can register by default, remember?)</span></span><br><span class=\"line\">    <span class=\"attr\">publish:</span> <span class=\"string\">$authenticated</span></span><br><span class=\"line\">    <span class=\"attr\">unpublish:</span> <span class=\"string\">$authenticated</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># if package is not available locally, proxy requests to &#x27;npmjs&#x27; registry</span></span><br><span class=\"line\">    <span class=\"attr\">proxy:</span> <span class=\"string\">npmjs</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># You can specify HTTP/1.1 server keep alive timeout in seconds for incoming connections.</span></span><br><span class=\"line\"><span class=\"comment\"># A value of 0 makes the http server behave similarly to Node.js versions prior to 8.0.0, which did not have a keep-alive timeout.</span></span><br><span class=\"line\"><span class=\"comment\"># WORKAROUND: Through given configuration you can workaround following issue https://github.com/verdaccio/verdaccio/issues/301. Set to 0 in case 60 is not enough.</span></span><br><span class=\"line\"><span class=\"attr\">server:</span></span><br><span class=\"line\">  <span class=\"attr\">keepAliveTimeout:</span> <span class=\"number\">60</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">middlewares:</span></span><br><span class=\"line\">  <span class=\"attr\">audit:</span></span><br><span class=\"line\">    <span class=\"attr\">enabled:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">   </span><br><span class=\"line\"><span class=\"comment\"># 监听的端口，IP,重点,不配置这个,只能本机能访问</span></span><br><span class=\"line\"><span class=\"attr\">listen:</span> <span class=\"number\">0.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span><span class=\"string\">:4873</span></span><br><span class=\"line\"><span class=\"comment\"># log settings</span></span><br><span class=\"line\"><span class=\"attr\">logs:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> &#123; <span class=\"attr\">type:</span> <span class=\"string\">stdout</span>, <span class=\"attr\">format:</span> <span class=\"string\">pretty</span>, <span class=\"attr\">level:</span> <span class=\"string\">http</span> &#125;</span><br><span class=\"line\">  <span class=\"comment\">#- &#123;type: file, path: verdaccio.log, level: info&#125;</span></span><br><span class=\"line\"><span class=\"comment\">#experiments:</span></span><br><span class=\"line\"><span class=\"comment\">#  # support for npm token command</span></span><br><span class=\"line\"><span class=\"comment\">#  token: false</span></span><br><span class=\"line\"><span class=\"comment\">#  # support for the new v1 search endpoint, functional by incomplete read more on ticket 1732</span></span><br><span class=\"line\"><span class=\"comment\">#  search: false</span></span><br><span class=\"line\"><span class=\"comment\">#  # disable writing body size to logs, read more on ticket 1912</span></span><br><span class=\"line\"><span class=\"comment\">#  bytesin_off: false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># This affect the web and api (not developed yet)</span></span><br><span class=\"line\"><span class=\"comment\">#i18n:</span></span><br><span class=\"line\"><span class=\"comment\">#web: en-US</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"使用-nrm-设置-Verdaccio-的源\"><a href=\"#使用-nrm-设置-Verdaccio-的源\" class=\"headerlink\" title=\"使用 nrm 设置 Verdaccio 的源\"></a>使用 nrm 设置 Verdaccio 的源</h3><p><code>nrm add verdaccio http://localhost:4873/</code></p>\n<h3 id=\"注册用户\"><a href=\"#注册用户\" class=\"headerlink\" title=\"注册用户\"></a>注册用户</h3><p><code>npm adduser --registry http://localhost:4873</code></p>\n<h3 id=\"登陆私有npm-，输入注册的用户名，密码，邮箱\"><a href=\"#登陆私有npm-，输入注册的用户名，密码，邮箱\" class=\"headerlink\" title=\"登陆私有npm ，输入注册的用户名，密码，邮箱\"></a>登陆私有npm ，输入注册的用户名，密码，邮箱</h3><p><code>npm login–-registry http://localhost:4873</code></p>\n<h3 id=\"发布包：需要去掉-package-里的私有字段\"><a href=\"#发布包：需要去掉-package-里的私有字段\" class=\"headerlink\" title=\"发布包：需要去掉 package 里的私有字段\"></a>发布包：需要去掉 package 里的私有字段</h3><p><code>npm publish --registry http://localhost:4873</code></p>\n","site":{"data":{}},"excerpt":"<h2 id=\"Verdaccio-是一个跨平台的-Web-应用程序，轻量级的\"><a href=\"#Verdaccio-是一个跨平台的-Web-应用程序，轻量级的\" class=\"headerlink\" title=\"Verdaccio 是一个跨平台的 Web 应用程序，轻量级的\"></a>Verdaccio 是一个跨平台的 Web 应用程序，轻量级的</h2><p><a href=\"https://verdaccio.org/docs/zh-CN/installation\">Verdaccio官网地址：</a> <a href=\"https://verdaccio.org/docs/zh-CN/installation\">https://verdaccio.org/docs/zh-CN/installation</a></p>\n<h3 id=\"安装步骤\"><a href=\"#安装步骤\" class=\"headerlink\" title=\"安装步骤\"></a>安装步骤</h3><p>使用 npm</p>\n<p><code>npm install -g verdaccio</code></p>\n<p>或使用 yarn</p>\n<p><code>yarn global add verdaccio</code></p>\n<p>输入<code>verdaccio</code>运行 </p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$&gt; verdaccio</span><br><span class=\"line\">warn --- config file  - <span class=\"regexp\">/home/</span>.config<span class=\"regexp\">/verdaccio/</span>config.yaml</span><br><span class=\"line\">warn --- http address - http:<span class=\"regexp\">//</span>localhost:<span class=\"number\">4873</span><span class=\"regexp\">/ - verdaccio/</span><span class=\"number\">4.8</span>.<span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n<p>yaml 是配置文件，</p>","more":"<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># This is the default config file. It allows all users to do anything,</span></span><br><span class=\"line\"><span class=\"comment\"># so don&#x27;t use it on production systems.</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># Look here for more config file examples:</span></span><br><span class=\"line\"><span class=\"comment\"># https://github.com/verdaccio/verdaccio/tree/master/conf</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># path to a directory with all packages</span></span><br><span class=\"line\"><span class=\"attr\">storage:</span> <span class=\"string\">./storage</span></span><br><span class=\"line\"><span class=\"comment\"># path to a directory with plugins to include</span></span><br><span class=\"line\"><span class=\"attr\">plugins:</span> <span class=\"string\">./plugins</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">web:</span></span><br><span class=\"line\">  <span class=\"attr\">title:</span> <span class=\"string\">npm</span> <span class=\"string\">私有仓库</span></span><br><span class=\"line\">  <span class=\"comment\"># comment out to disable gravatar support</span></span><br><span class=\"line\">  <span class=\"comment\"># gravatar: false</span></span><br><span class=\"line\">  <span class=\"comment\"># by default packages are ordercer ascendant (asc|desc)</span></span><br><span class=\"line\">  <span class=\"comment\"># sort_packages: asc</span></span><br><span class=\"line\">  <span class=\"comment\"># convert your UI to the dark side</span></span><br><span class=\"line\">  <span class=\"comment\"># darkMode: true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># translate your registry, api i18n not available yet</span></span><br><span class=\"line\"><span class=\"comment\"># i18n:</span></span><br><span class=\"line\"><span class=\"comment\"># list of the available translations https://github.com/verdaccio/ui/tree/master/i18n/translations</span></span><br><span class=\"line\"><span class=\"comment\">#   web: en-US</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">auth:</span></span><br><span class=\"line\">  <span class=\"attr\">htpasswd:</span></span><br><span class=\"line\">    <span class=\"attr\">file:</span> <span class=\"string\">./htpasswd</span></span><br><span class=\"line\">    <span class=\"comment\"># Maximum amount of users allowed to register, defaults to &quot;+inf&quot;.</span></span><br><span class=\"line\">    <span class=\"comment\"># You can set this to -1 to disable registration.</span></span><br><span class=\"line\">    <span class=\"comment\"># max_users: 1000</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># a list of other known repositories we can talk to</span></span><br><span class=\"line\"><span class=\"attr\">uplinks:</span></span><br><span class=\"line\">  <span class=\"attr\">npmjs:</span></span><br><span class=\"line\">    <span class=\"attr\">url:</span> <span class=\"string\">https://registry.npm.taobao.org/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">packages:</span></span><br><span class=\"line\">  <span class=\"string\">&#x27;@*/*&#x27;</span><span class=\"string\">:</span></span><br><span class=\"line\">    <span class=\"comment\"># scoped packages</span></span><br><span class=\"line\">    <span class=\"attr\">access:</span> <span class=\"string\">$all</span></span><br><span class=\"line\">    <span class=\"attr\">publish:</span> <span class=\"string\">$authenticated</span></span><br><span class=\"line\">    <span class=\"attr\">unpublish:</span> <span class=\"string\">$authenticated</span></span><br><span class=\"line\">    <span class=\"attr\">proxy:</span> <span class=\"string\">npmjs</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"string\">&#x27;**&#x27;</span><span class=\"string\">:</span></span><br><span class=\"line\">    <span class=\"comment\"># allow all users (including non-authenticated users) to read and</span></span><br><span class=\"line\">    <span class=\"comment\"># publish all packages</span></span><br><span class=\"line\">    <span class=\"comment\">#</span></span><br><span class=\"line\">    <span class=\"comment\"># you can specify usernames/groupnames (depending on your auth plugin)</span></span><br><span class=\"line\">    <span class=\"comment\"># and three keywords: &quot;$all&quot;, &quot;$anonymous&quot;, &quot;$authenticated&quot;</span></span><br><span class=\"line\">    <span class=\"attr\">access:</span> <span class=\"string\">$all</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># allow all known users to publish/publish packages</span></span><br><span class=\"line\">    <span class=\"comment\"># (anyone can register by default, remember?)</span></span><br><span class=\"line\">    <span class=\"attr\">publish:</span> <span class=\"string\">$authenticated</span></span><br><span class=\"line\">    <span class=\"attr\">unpublish:</span> <span class=\"string\">$authenticated</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># if package is not available locally, proxy requests to &#x27;npmjs&#x27; registry</span></span><br><span class=\"line\">    <span class=\"attr\">proxy:</span> <span class=\"string\">npmjs</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># You can specify HTTP/1.1 server keep alive timeout in seconds for incoming connections.</span></span><br><span class=\"line\"><span class=\"comment\"># A value of 0 makes the http server behave similarly to Node.js versions prior to 8.0.0, which did not have a keep-alive timeout.</span></span><br><span class=\"line\"><span class=\"comment\"># WORKAROUND: Through given configuration you can workaround following issue https://github.com/verdaccio/verdaccio/issues/301. Set to 0 in case 60 is not enough.</span></span><br><span class=\"line\"><span class=\"attr\">server:</span></span><br><span class=\"line\">  <span class=\"attr\">keepAliveTimeout:</span> <span class=\"number\">60</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">middlewares:</span></span><br><span class=\"line\">  <span class=\"attr\">audit:</span></span><br><span class=\"line\">    <span class=\"attr\">enabled:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">   </span><br><span class=\"line\"><span class=\"comment\"># 监听的端口，IP,重点,不配置这个,只能本机能访问</span></span><br><span class=\"line\"><span class=\"attr\">listen:</span> <span class=\"number\">0.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span><span class=\"string\">:4873</span></span><br><span class=\"line\"><span class=\"comment\"># log settings</span></span><br><span class=\"line\"><span class=\"attr\">logs:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> &#123; <span class=\"attr\">type:</span> <span class=\"string\">stdout</span>, <span class=\"attr\">format:</span> <span class=\"string\">pretty</span>, <span class=\"attr\">level:</span> <span class=\"string\">http</span> &#125;</span><br><span class=\"line\">  <span class=\"comment\">#- &#123;type: file, path: verdaccio.log, level: info&#125;</span></span><br><span class=\"line\"><span class=\"comment\">#experiments:</span></span><br><span class=\"line\"><span class=\"comment\">#  # support for npm token command</span></span><br><span class=\"line\"><span class=\"comment\">#  token: false</span></span><br><span class=\"line\"><span class=\"comment\">#  # support for the new v1 search endpoint, functional by incomplete read more on ticket 1732</span></span><br><span class=\"line\"><span class=\"comment\">#  search: false</span></span><br><span class=\"line\"><span class=\"comment\">#  # disable writing body size to logs, read more on ticket 1912</span></span><br><span class=\"line\"><span class=\"comment\">#  bytesin_off: false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># This affect the web and api (not developed yet)</span></span><br><span class=\"line\"><span class=\"comment\">#i18n:</span></span><br><span class=\"line\"><span class=\"comment\">#web: en-US</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"使用-nrm-设置-Verdaccio-的源\"><a href=\"#使用-nrm-设置-Verdaccio-的源\" class=\"headerlink\" title=\"使用 nrm 设置 Verdaccio 的源\"></a>使用 nrm 设置 Verdaccio 的源</h3><p><code>nrm add verdaccio http://localhost:4873/</code></p>\n<h3 id=\"注册用户\"><a href=\"#注册用户\" class=\"headerlink\" title=\"注册用户\"></a>注册用户</h3><p><code>npm adduser --registry http://localhost:4873</code></p>\n<h3 id=\"登陆私有npm-，输入注册的用户名，密码，邮箱\"><a href=\"#登陆私有npm-，输入注册的用户名，密码，邮箱\" class=\"headerlink\" title=\"登陆私有npm ，输入注册的用户名，密码，邮箱\"></a>登陆私有npm ，输入注册的用户名，密码，邮箱</h3><p><code>npm login–-registry http://localhost:4873</code></p>\n<h3 id=\"发布包：需要去掉-package-里的私有字段\"><a href=\"#发布包：需要去掉-package-里的私有字段\" class=\"headerlink\" title=\"发布包：需要去掉 package 里的私有字段\"></a>发布包：需要去掉 package 里的私有字段</h3><p><code>npm publish --registry http://localhost:4873</code></p>"},{"title":"css3实现左右滚动跑马灯公告","abbrlink":"90c577a3","date":"2020-11-09T09:58:27.000Z","_content":"\n### 通常的做法\n\n#### 1：js定时器\n由于这次做的是钉钉工作台自定义组件，钉钉不建议使用定时器，会影响性能\n#### 2：css3 动画实现\ncss3动画流畅不卡顿。需要解决3个问题：\n1：循环滚动，且最后一条滚动完之后紧接着第一条出现\n2：滚动速度可调\n3：内容没有超过滚动区时，不需要滚动\n<!-- more -->\n要实现的效果图如下图所示：\n![](1.png)\n\n对于循环滚动，如果按照一般做法，是没有办法做到 最后一条滚动完之后紧接着第一条出现的，那么怎么办呢？再复制一个滚动列表就可以了，第一个列表开始滚动时，第二个列表延时滚动，滚动速度一样，这样当第一个列表滚动完以后，第二个列表就会紧接着出现了。\n对于滚动的速度，因为滚动的宽度是不定的，是根据接口返回的内容决定的，但是 对于animation动画来说，宽度是一定的，改变整个动画的时间即可达到变速的效果，需要使用钉钉的查看元素的信息api去获取各个元素的宽度，动态设置速度。\n下面是关键代码 \n\n``` \n// js\nmethods: { \n    async dealData() {\n      let _sysInfo = await getSdk().getSystemInfo() || {};\n      let { windowWidth } = _sysInfo;\n      let rpxToPxRatio = windowWidth / 750;\n\n      let { widthControl, marqueeLogic, marqueeSpeed } = this.props.componentProps;\n      // 需要先将列表的最大宽度设置为屏幕的宽度\n      this.setData({\n        listWidth: `--listMaxWidth: ${windowWidth}px;`\n      })\n      const query = my.createSelectorQuery();\n\n      query\n        .selectAll(`.marquee-notice .content`)\n        .boundingClientRect()\n        .selectAll(`.marquee-notice .list-group .list`)\n        .boundingClientRect()\n        .selectAll(`.marquee-notice .content-left`)\n        .boundingClientRect()\n        .exec(res => {\n          console.error(res);\n          let contentWidth = res[0][0].width;\n          let _arr = res[1];\n          let _width = 0;\n          let plusWidth = res[2][0].width; // plusWidth表示每一行滚动的总距离\n          for (let i = 0; i < _arr.length; i++) {\n            _width += (_arr[i].width)\n          }\n\n          let $_width = _width * 2 - plusWidth >= contentWidth ? _width * 2 - plusWidth : contentWidth;\n\n          let speed = $_width >= (contentWidth * 2) ? (0.0187) : (0.0187 * 2); // 如果总的列表宽度大于等于 content 宽度的两倍（因为是两个列表动画）则使用3 / 161速率，否则使用6 / 161 。速度不能百分比准确\n          let groupStyle_1 = '';\n          let groupStyle_2 = '';\n          console.error('list宽度和content宽度', _width, contentWidth)\n          if (marqueeLogic === 1 || marqueeLogic === 2 && (_width + 10) > contentWidth) {\n            // 无论是否超过内容宽度，都滚动\n            groupStyle_1 = `\n              animation: run ${$_width * (speed / marqueeSpeed)}s linear 0s infinite;\n              --width:${-(parseInt($_width))}px;\n              --leftPosition: ${plusWidth}px;\n            `;\n            groupStyle_2 = `\n              animation: run2 ${$_width * (speed / marqueeSpeed)}s linear ${$_width * (speed / marqueeSpeed) / 2}s infinite;\n              --width:${-(parseInt($_width))}px;\n              --leftPosition: ${plusWidth}px;          \n            `;\n          } else {\n            // 只有超过content宽度才滚动\n            groupStyle_1 = 'transform: translateX(0);';\n          }\n          this.setData({\n            groupStyle_1: groupStyle_1,\n            groupStyle_2: groupStyle_2,\n          })\n\n        });\n\n    },\n}\n```\n```\n// css 关键代码：\n.list-group-2 {\n    display: flex;\n    position: absolute;\n    width: 100%;\n    // animation: run2 linear 24s infinite;\n    // animation-delay:12s; 因为变量是通过js查询的，存在异步，所以只能写行内样式\n    transform: translateX(var(--leftPosition, 375px));\n}\n// 第一行滚动文本\n@keyframes run {\n\n    0% {\n    transform: translateX(var(--leftPosition, 375px));\n    opacity: 1;\n\n    }\n\n    1% {\n    opacity: 1;\n    }\n\n    99% {\n    opacity: 1;\n    }\n\n    100% {\n    transform: translateX(var(--width, -600px));\n    opacity: 0;\n    }\n}\n\n// 第二行滚动文本\n@keyframes run2 {\n\n    0% {\n    transform: translateX(var(--leftPosition, 375px));\n\n    }\n\n    1% {\n    opacity: 1;\n    }\n\n    99% {\n    opacity: 1;\n    }\n\n    100% {\n    transform: translateX(var(--width, -600px));\n    }\n}\n```\n```\n// axml\n<view class=\"content\" style=\"{{listWidth}}\">\n    <view class=\"list-group\"  style=\"{{groupStyle_1}}\">\n    <block a:for=\"{{list}}\" a:key=\"{{i}}\" a:for-index=\"i\">\n        <view class=\"list {{componentProps.widthControl === 1 ? 'max-width' : ''}}\" onTap=\"handleTapLink\" data-url=\"{{item.link}}\">\n        <view class=\"list-text\">{{item.title}}</view>\n        </view>\n    </block>\n    </view>\n    <view class=\"list-group-2\"  style=\"{{groupStyle_2}}\">\n    <block a:for=\"{{list}}\" a:key=\"{{i}}\" a:for-index=\"i\">\n        <view class=\"list {{componentProps.widthControl === 1 ? 'max-width' : ''}}\" onTap=\"handleTapLink\" data-url=\"{{item.link}}\" style=\"{{componentProps.widthControl === 1 ? 'max-width: var(--listMaxWidth, 4rem)':''}}\">\n        <view class=\"list-text\">{{item.title}}</view>\n        </view>\n    </block>\n    </view>\n</view>\n```","source":"_posts/css3实现左右滚动跑马灯公告.md","raw":"---\ntitle: css3实现左右滚动跑马灯公告\ntags:\n  - 小程序\n  - 钉钉小程序\ncategories: 前端\nabbrlink: 90c577a3\ndate: 2020-11-09 17:58:27\n---\n\n### 通常的做法\n\n#### 1：js定时器\n由于这次做的是钉钉工作台自定义组件，钉钉不建议使用定时器，会影响性能\n#### 2：css3 动画实现\ncss3动画流畅不卡顿。需要解决3个问题：\n1：循环滚动，且最后一条滚动完之后紧接着第一条出现\n2：滚动速度可调\n3：内容没有超过滚动区时，不需要滚动\n<!-- more -->\n要实现的效果图如下图所示：\n![](1.png)\n\n对于循环滚动，如果按照一般做法，是没有办法做到 最后一条滚动完之后紧接着第一条出现的，那么怎么办呢？再复制一个滚动列表就可以了，第一个列表开始滚动时，第二个列表延时滚动，滚动速度一样，这样当第一个列表滚动完以后，第二个列表就会紧接着出现了。\n对于滚动的速度，因为滚动的宽度是不定的，是根据接口返回的内容决定的，但是 对于animation动画来说，宽度是一定的，改变整个动画的时间即可达到变速的效果，需要使用钉钉的查看元素的信息api去获取各个元素的宽度，动态设置速度。\n下面是关键代码 \n\n``` \n// js\nmethods: { \n    async dealData() {\n      let _sysInfo = await getSdk().getSystemInfo() || {};\n      let { windowWidth } = _sysInfo;\n      let rpxToPxRatio = windowWidth / 750;\n\n      let { widthControl, marqueeLogic, marqueeSpeed } = this.props.componentProps;\n      // 需要先将列表的最大宽度设置为屏幕的宽度\n      this.setData({\n        listWidth: `--listMaxWidth: ${windowWidth}px;`\n      })\n      const query = my.createSelectorQuery();\n\n      query\n        .selectAll(`.marquee-notice .content`)\n        .boundingClientRect()\n        .selectAll(`.marquee-notice .list-group .list`)\n        .boundingClientRect()\n        .selectAll(`.marquee-notice .content-left`)\n        .boundingClientRect()\n        .exec(res => {\n          console.error(res);\n          let contentWidth = res[0][0].width;\n          let _arr = res[1];\n          let _width = 0;\n          let plusWidth = res[2][0].width; // plusWidth表示每一行滚动的总距离\n          for (let i = 0; i < _arr.length; i++) {\n            _width += (_arr[i].width)\n          }\n\n          let $_width = _width * 2 - plusWidth >= contentWidth ? _width * 2 - plusWidth : contentWidth;\n\n          let speed = $_width >= (contentWidth * 2) ? (0.0187) : (0.0187 * 2); // 如果总的列表宽度大于等于 content 宽度的两倍（因为是两个列表动画）则使用3 / 161速率，否则使用6 / 161 。速度不能百分比准确\n          let groupStyle_1 = '';\n          let groupStyle_2 = '';\n          console.error('list宽度和content宽度', _width, contentWidth)\n          if (marqueeLogic === 1 || marqueeLogic === 2 && (_width + 10) > contentWidth) {\n            // 无论是否超过内容宽度，都滚动\n            groupStyle_1 = `\n              animation: run ${$_width * (speed / marqueeSpeed)}s linear 0s infinite;\n              --width:${-(parseInt($_width))}px;\n              --leftPosition: ${plusWidth}px;\n            `;\n            groupStyle_2 = `\n              animation: run2 ${$_width * (speed / marqueeSpeed)}s linear ${$_width * (speed / marqueeSpeed) / 2}s infinite;\n              --width:${-(parseInt($_width))}px;\n              --leftPosition: ${plusWidth}px;          \n            `;\n          } else {\n            // 只有超过content宽度才滚动\n            groupStyle_1 = 'transform: translateX(0);';\n          }\n          this.setData({\n            groupStyle_1: groupStyle_1,\n            groupStyle_2: groupStyle_2,\n          })\n\n        });\n\n    },\n}\n```\n```\n// css 关键代码：\n.list-group-2 {\n    display: flex;\n    position: absolute;\n    width: 100%;\n    // animation: run2 linear 24s infinite;\n    // animation-delay:12s; 因为变量是通过js查询的，存在异步，所以只能写行内样式\n    transform: translateX(var(--leftPosition, 375px));\n}\n// 第一行滚动文本\n@keyframes run {\n\n    0% {\n    transform: translateX(var(--leftPosition, 375px));\n    opacity: 1;\n\n    }\n\n    1% {\n    opacity: 1;\n    }\n\n    99% {\n    opacity: 1;\n    }\n\n    100% {\n    transform: translateX(var(--width, -600px));\n    opacity: 0;\n    }\n}\n\n// 第二行滚动文本\n@keyframes run2 {\n\n    0% {\n    transform: translateX(var(--leftPosition, 375px));\n\n    }\n\n    1% {\n    opacity: 1;\n    }\n\n    99% {\n    opacity: 1;\n    }\n\n    100% {\n    transform: translateX(var(--width, -600px));\n    }\n}\n```\n```\n// axml\n<view class=\"content\" style=\"{{listWidth}}\">\n    <view class=\"list-group\"  style=\"{{groupStyle_1}}\">\n    <block a:for=\"{{list}}\" a:key=\"{{i}}\" a:for-index=\"i\">\n        <view class=\"list {{componentProps.widthControl === 1 ? 'max-width' : ''}}\" onTap=\"handleTapLink\" data-url=\"{{item.link}}\">\n        <view class=\"list-text\">{{item.title}}</view>\n        </view>\n    </block>\n    </view>\n    <view class=\"list-group-2\"  style=\"{{groupStyle_2}}\">\n    <block a:for=\"{{list}}\" a:key=\"{{i}}\" a:for-index=\"i\">\n        <view class=\"list {{componentProps.widthControl === 1 ? 'max-width' : ''}}\" onTap=\"handleTapLink\" data-url=\"{{item.link}}\" style=\"{{componentProps.widthControl === 1 ? 'max-width: var(--listMaxWidth, 4rem)':''}}\">\n        <view class=\"list-text\">{{item.title}}</view>\n        </view>\n    </block>\n    </view>\n</view>\n```","slug":"css3实现左右滚动跑马灯公告","published":1,"updated":"2021-04-22T01:56:08.202Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckx9sf6050007z8nk4ivy81uc","content":"<h3 id=\"通常的做法\"><a href=\"#通常的做法\" class=\"headerlink\" title=\"通常的做法\"></a>通常的做法</h3><h4 id=\"1：js定时器\"><a href=\"#1：js定时器\" class=\"headerlink\" title=\"1：js定时器\"></a>1：js定时器</h4><p>由于这次做的是钉钉工作台自定义组件，钉钉不建议使用定时器，会影响性能</p>\n<h4 id=\"2：css3-动画实现\"><a href=\"#2：css3-动画实现\" class=\"headerlink\" title=\"2：css3 动画实现\"></a>2：css3 动画实现</h4><p>css3动画流畅不卡顿。需要解决3个问题：<br>1：循环滚动，且最后一条滚动完之后紧接着第一条出现<br>2：滚动速度可调<br>3：内容没有超过滚动区时，不需要滚动</p>\n<a id=\"more\"></a>\n<p>要实现的效果图如下图所示：<br><img src=\"1.png\"></p>\n<p>对于循环滚动，如果按照一般做法，是没有办法做到 最后一条滚动完之后紧接着第一条出现的，那么怎么办呢？再复制一个滚动列表就可以了，第一个列表开始滚动时，第二个列表延时滚动，滚动速度一样，这样当第一个列表滚动完以后，第二个列表就会紧接着出现了。<br>对于滚动的速度，因为滚动的宽度是不定的，是根据接口返回的内容决定的，但是 对于animation动画来说，宽度是一定的，改变整个动画的时间即可达到变速的效果，需要使用钉钉的查看元素的信息api去获取各个元素的宽度，动态设置速度。<br>下面是关键代码 </p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// js</span></span><br><span class=\"line\">methods: &#123; </span><br><span class=\"line\">    <span class=\"keyword\">async</span> dealData() &#123;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> _sysInfo = <span class=\"keyword\">await</span> getSdk().getSystemInfo() || &#123;&#125;;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> &#123; windowWidth &#125; = _sysInfo;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> rpxToPxRatio = windowWidth / <span class=\"number\">750</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">let</span> &#123; widthControl, marqueeLogic, marqueeSpeed &#125; = <span class=\"built_in\">this</span>.props.componentProps;</span><br><span class=\"line\">      <span class=\"comment\">// 需要先将列表的最大宽度设置为屏幕的宽度</span></span><br><span class=\"line\">      <span class=\"built_in\">this</span>.setData(&#123;</span><br><span class=\"line\">        listWidth: <span class=\"string\">`--listMaxWidth: <span class=\"subst\">$&#123;windowWidth&#125;</span>px;`</span></span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">      <span class=\"keyword\">const</span> query = my.createSelectorQuery();</span><br><span class=\"line\"></span><br><span class=\"line\">      query</span><br><span class=\"line\">        .selectAll(<span class=\"string\">`.marquee-notice .content`</span>)</span><br><span class=\"line\">        .boundingClientRect()</span><br><span class=\"line\">        .selectAll(<span class=\"string\">`.marquee-notice .list-group .list`</span>)</span><br><span class=\"line\">        .boundingClientRect()</span><br><span class=\"line\">        .selectAll(<span class=\"string\">`.marquee-notice .content-left`</span>)</span><br><span class=\"line\">        .boundingClientRect()</span><br><span class=\"line\">        .exec(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> &#123;</span><br><span class=\"line\">          <span class=\"built_in\">console</span>.error(res);</span><br><span class=\"line\">          <span class=\"keyword\">let</span> contentWidth = res[<span class=\"number\">0</span>][<span class=\"number\">0</span>].width;</span><br><span class=\"line\">          <span class=\"keyword\">let</span> _arr = res[<span class=\"number\">1</span>];</span><br><span class=\"line\">          <span class=\"keyword\">let</span> _width = <span class=\"number\">0</span>;</span><br><span class=\"line\">          <span class=\"keyword\">let</span> plusWidth = res[<span class=\"number\">2</span>][<span class=\"number\">0</span>].width; <span class=\"comment\">// plusWidth表示每一行滚动的总距离</span></span><br><span class=\"line\">          <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; _arr.length; i++) &#123;</span><br><span class=\"line\">            _width += (_arr[i].width)</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">          <span class=\"keyword\">let</span> $_width = _width * <span class=\"number\">2</span> - plusWidth &gt;= contentWidth ? _width * <span class=\"number\">2</span> - plusWidth : contentWidth;</span><br><span class=\"line\"></span><br><span class=\"line\">          <span class=\"keyword\">let</span> speed = $_width &gt;= (contentWidth * <span class=\"number\">2</span>) ? (<span class=\"number\">0.0187</span>) : (<span class=\"number\">0.0187</span> * <span class=\"number\">2</span>); <span class=\"comment\">// 如果总的列表宽度大于等于 content 宽度的两倍（因为是两个列表动画）则使用3 / 161速率，否则使用6 / 161 。速度不能百分比准确</span></span><br><span class=\"line\">          <span class=\"keyword\">let</span> groupStyle_1 = <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">          <span class=\"keyword\">let</span> groupStyle_2 = <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">          <span class=\"built_in\">console</span>.error(<span class=\"string\">&#x27;list宽度和content宽度&#x27;</span>, _width, contentWidth)</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (marqueeLogic === <span class=\"number\">1</span> || marqueeLogic === <span class=\"number\">2</span> &amp;&amp; (_width + <span class=\"number\">10</span>) &gt; contentWidth) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 无论是否超过内容宽度，都滚动</span></span><br><span class=\"line\">            groupStyle_1 = <span class=\"string\">`</span></span><br><span class=\"line\"><span class=\"string\">              animation: run <span class=\"subst\">$&#123;$_width * (speed / marqueeSpeed)&#125;</span>s linear 0s infinite;</span></span><br><span class=\"line\"><span class=\"string\">              --width:<span class=\"subst\">$&#123;-(<span class=\"built_in\">parseInt</span>($_width))&#125;</span>px;</span></span><br><span class=\"line\"><span class=\"string\">              --leftPosition: <span class=\"subst\">$&#123;plusWidth&#125;</span>px;</span></span><br><span class=\"line\"><span class=\"string\">            `</span>;</span><br><span class=\"line\">            groupStyle_2 = <span class=\"string\">`</span></span><br><span class=\"line\"><span class=\"string\">              animation: run2 <span class=\"subst\">$&#123;$_width * (speed <span class=\"regexp\">/ marqueeSpeed)&#125;s linear $&#123;$_width * (speed /</span> marqueeSpeed) / <span class=\"number\">2</span>&#125;</span>s infinite;</span></span><br><span class=\"line\"><span class=\"string\">              --width:<span class=\"subst\">$&#123;-(<span class=\"built_in\">parseInt</span>($_width))&#125;</span>px;</span></span><br><span class=\"line\"><span class=\"string\">              --leftPosition: <span class=\"subst\">$&#123;plusWidth&#125;</span>px;          </span></span><br><span class=\"line\"><span class=\"string\">            `</span>;</span><br><span class=\"line\">          &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 只有超过content宽度才滚动</span></span><br><span class=\"line\">            groupStyle_1 = <span class=\"string\">&#x27;transform: translateX(0);&#x27;</span>;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          <span class=\"built_in\">this</span>.setData(&#123;</span><br><span class=\"line\">            groupStyle_1: groupStyle_1,</span><br><span class=\"line\">            groupStyle_2: groupStyle_2,</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// css 关键代码：</span></span><br><span class=\"line\"><span class=\"selector-class\">.list-group-2</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">    <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">    <span class=\"comment\">// animation: run2 linear 24s infinite;</span></span><br><span class=\"line\">    <span class=\"comment\">// animation-delay:12s; 因为变量是通过js查询的，存在异步，所以只能写行内样式</span></span><br><span class=\"line\">    <span class=\"attribute\">transform</span>: translateX(var(--leftPosition, <span class=\"number\">375px</span>));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 第一行滚动文本</span></span><br><span class=\"line\"><span class=\"keyword\">@keyframes</span> run &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    0% &#123;</span><br><span class=\"line\">    <span class=\"attribute\">transform</span>: translateX(var(--leftPosition, <span class=\"number\">375px</span>));</span><br><span class=\"line\">    <span class=\"attribute\">opacity</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    1% &#123;</span><br><span class=\"line\">    <span class=\"attribute\">opacity</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    99% &#123;</span><br><span class=\"line\">    <span class=\"attribute\">opacity</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    100% &#123;</span><br><span class=\"line\">    <span class=\"attribute\">transform</span>: translateX(var(--width, -<span class=\"number\">600px</span>));</span><br><span class=\"line\">    <span class=\"attribute\">opacity</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 第二行滚动文本</span></span><br><span class=\"line\"><span class=\"keyword\">@keyframes</span> run2 &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    0% &#123;</span><br><span class=\"line\">    <span class=\"attribute\">transform</span>: translateX(var(--leftPosition, <span class=\"number\">375px</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    1% &#123;</span><br><span class=\"line\">    <span class=\"attribute\">opacity</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    99% &#123;</span><br><span class=\"line\">    <span class=\"attribute\">opacity</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    100% &#123;</span><br><span class=\"line\">    <span class=\"attribute\">transform</span>: translateX(var(--width, -<span class=\"number\">600px</span>));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight handlebars\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"xml\">// axml</span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">view</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;content&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;</span></span></span><span class=\"template-variable\">&#123;&#123;<span class=\"name\">listWidth</span>&#125;&#125;</span><span class=\"xml\"><span class=\"tag\"><span class=\"string\">&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">view</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;list-group&quot;</span>  <span class=\"attr\">style</span>=<span class=\"string\">&quot;</span></span></span><span class=\"template-variable\">&#123;&#123;<span class=\"name\">groupStyle_1</span>&#125;&#125;</span><span class=\"xml\"><span class=\"tag\"><span class=\"string\">&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">block</span> <span class=\"attr\">a:for</span>=<span class=\"string\">&quot;</span></span></span><span class=\"template-variable\">&#123;&#123;<span class=\"name\">list</span>&#125;&#125;</span><span class=\"xml\"><span class=\"tag\"><span class=\"string\">&quot;</span> <span class=\"attr\">a:key</span>=<span class=\"string\">&quot;</span></span></span><span class=\"template-variable\">&#123;&#123;<span class=\"name\">i</span>&#125;&#125;</span><span class=\"xml\"><span class=\"tag\"><span class=\"string\">&quot;</span> <span class=\"attr\">a:for-index</span>=<span class=\"string\">&quot;i&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">view</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;list </span></span></span><span class=\"template-variable\">&#123;&#123;<span class=\"name\">componentProps.widthControl</span> === <span class=\"number\">1</span> ? <span class=\"string\">&#x27;max-width&#x27;</span> : <span class=\"string\">&#x27;&#x27;</span>&#125;&#125;</span><span class=\"xml\"><span class=\"tag\"><span class=\"string\">&quot;</span> <span class=\"attr\">onTap</span>=<span class=\"string\">&quot;handleTapLink&quot;</span> <span class=\"attr\">data-url</span>=<span class=\"string\">&quot;</span></span></span><span class=\"template-variable\">&#123;&#123;<span class=\"name\">item.link</span>&#125;&#125;</span><span class=\"xml\"><span class=\"tag\"><span class=\"string\">&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">view</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;list-text&quot;</span>&gt;</span></span><span class=\"template-variable\">&#123;&#123;<span class=\"name\">item.title</span>&#125;&#125;</span><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">view</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;/<span class=\"name\">view</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">block</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">view</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">view</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;list-group-2&quot;</span>  <span class=\"attr\">style</span>=<span class=\"string\">&quot;</span></span></span><span class=\"template-variable\">&#123;&#123;<span class=\"name\">groupStyle_2</span>&#125;&#125;</span><span class=\"xml\"><span class=\"tag\"><span class=\"string\">&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">block</span> <span class=\"attr\">a:for</span>=<span class=\"string\">&quot;</span></span></span><span class=\"template-variable\">&#123;&#123;<span class=\"name\">list</span>&#125;&#125;</span><span class=\"xml\"><span class=\"tag\"><span class=\"string\">&quot;</span> <span class=\"attr\">a:key</span>=<span class=\"string\">&quot;</span></span></span><span class=\"template-variable\">&#123;&#123;<span class=\"name\">i</span>&#125;&#125;</span><span class=\"xml\"><span class=\"tag\"><span class=\"string\">&quot;</span> <span class=\"attr\">a:for-index</span>=<span class=\"string\">&quot;i&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">view</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;list </span></span></span><span class=\"template-variable\">&#123;&#123;<span class=\"name\">componentProps.widthControl</span> === <span class=\"number\">1</span> ? <span class=\"string\">&#x27;max-width&#x27;</span> : <span class=\"string\">&#x27;&#x27;</span>&#125;&#125;</span><span class=\"xml\"><span class=\"tag\"><span class=\"string\">&quot;</span> <span class=\"attr\">onTap</span>=<span class=\"string\">&quot;handleTapLink&quot;</span> <span class=\"attr\">data-url</span>=<span class=\"string\">&quot;</span></span></span><span class=\"template-variable\">&#123;&#123;<span class=\"name\">item.link</span>&#125;&#125;</span><span class=\"xml\"><span class=\"tag\"><span class=\"string\">&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;</span></span></span><span class=\"template-variable\">&#123;&#123;<span class=\"name\">componentProps.widthControl</span> === <span class=\"number\">1</span> ? <span class=\"string\">&#x27;max-width: var(--listMaxWidth, 4rem)&#x27;</span>:&#x27;&#x27;&#125;&#125;</span><span class=\"xml\"><span class=\"tag\"><span class=\"string\">&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">view</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;list-text&quot;</span>&gt;</span></span><span class=\"template-variable\">&#123;&#123;<span class=\"name\">item.title</span>&#125;&#125;</span><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">view</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;/<span class=\"name\">view</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">block</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">view</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">view</span>&gt;</span></span></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<h3 id=\"通常的做法\"><a href=\"#通常的做法\" class=\"headerlink\" title=\"通常的做法\"></a>通常的做法</h3><h4 id=\"1：js定时器\"><a href=\"#1：js定时器\" class=\"headerlink\" title=\"1：js定时器\"></a>1：js定时器</h4><p>由于这次做的是钉钉工作台自定义组件，钉钉不建议使用定时器，会影响性能</p>\n<h4 id=\"2：css3-动画实现\"><a href=\"#2：css3-动画实现\" class=\"headerlink\" title=\"2：css3 动画实现\"></a>2：css3 动画实现</h4><p>css3动画流畅不卡顿。需要解决3个问题：<br>1：循环滚动，且最后一条滚动完之后紧接着第一条出现<br>2：滚动速度可调<br>3：内容没有超过滚动区时，不需要滚动</p>","more":"<p>要实现的效果图如下图所示：<br><img src=\"1.png\"></p>\n<p>对于循环滚动，如果按照一般做法，是没有办法做到 最后一条滚动完之后紧接着第一条出现的，那么怎么办呢？再复制一个滚动列表就可以了，第一个列表开始滚动时，第二个列表延时滚动，滚动速度一样，这样当第一个列表滚动完以后，第二个列表就会紧接着出现了。<br>对于滚动的速度，因为滚动的宽度是不定的，是根据接口返回的内容决定的，但是 对于animation动画来说，宽度是一定的，改变整个动画的时间即可达到变速的效果，需要使用钉钉的查看元素的信息api去获取各个元素的宽度，动态设置速度。<br>下面是关键代码 </p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// js</span></span><br><span class=\"line\">methods: &#123; </span><br><span class=\"line\">    <span class=\"keyword\">async</span> dealData() &#123;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> _sysInfo = <span class=\"keyword\">await</span> getSdk().getSystemInfo() || &#123;&#125;;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> &#123; windowWidth &#125; = _sysInfo;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> rpxToPxRatio = windowWidth / <span class=\"number\">750</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">let</span> &#123; widthControl, marqueeLogic, marqueeSpeed &#125; = <span class=\"built_in\">this</span>.props.componentProps;</span><br><span class=\"line\">      <span class=\"comment\">// 需要先将列表的最大宽度设置为屏幕的宽度</span></span><br><span class=\"line\">      <span class=\"built_in\">this</span>.setData(&#123;</span><br><span class=\"line\">        listWidth: <span class=\"string\">`--listMaxWidth: <span class=\"subst\">$&#123;windowWidth&#125;</span>px;`</span></span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">      <span class=\"keyword\">const</span> query = my.createSelectorQuery();</span><br><span class=\"line\"></span><br><span class=\"line\">      query</span><br><span class=\"line\">        .selectAll(<span class=\"string\">`.marquee-notice .content`</span>)</span><br><span class=\"line\">        .boundingClientRect()</span><br><span class=\"line\">        .selectAll(<span class=\"string\">`.marquee-notice .list-group .list`</span>)</span><br><span class=\"line\">        .boundingClientRect()</span><br><span class=\"line\">        .selectAll(<span class=\"string\">`.marquee-notice .content-left`</span>)</span><br><span class=\"line\">        .boundingClientRect()</span><br><span class=\"line\">        .exec(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> &#123;</span><br><span class=\"line\">          <span class=\"built_in\">console</span>.error(res);</span><br><span class=\"line\">          <span class=\"keyword\">let</span> contentWidth = res[<span class=\"number\">0</span>][<span class=\"number\">0</span>].width;</span><br><span class=\"line\">          <span class=\"keyword\">let</span> _arr = res[<span class=\"number\">1</span>];</span><br><span class=\"line\">          <span class=\"keyword\">let</span> _width = <span class=\"number\">0</span>;</span><br><span class=\"line\">          <span class=\"keyword\">let</span> plusWidth = res[<span class=\"number\">2</span>][<span class=\"number\">0</span>].width; <span class=\"comment\">// plusWidth表示每一行滚动的总距离</span></span><br><span class=\"line\">          <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; _arr.length; i++) &#123;</span><br><span class=\"line\">            _width += (_arr[i].width)</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">          <span class=\"keyword\">let</span> $_width = _width * <span class=\"number\">2</span> - plusWidth &gt;= contentWidth ? _width * <span class=\"number\">2</span> - plusWidth : contentWidth;</span><br><span class=\"line\"></span><br><span class=\"line\">          <span class=\"keyword\">let</span> speed = $_width &gt;= (contentWidth * <span class=\"number\">2</span>) ? (<span class=\"number\">0.0187</span>) : (<span class=\"number\">0.0187</span> * <span class=\"number\">2</span>); <span class=\"comment\">// 如果总的列表宽度大于等于 content 宽度的两倍（因为是两个列表动画）则使用3 / 161速率，否则使用6 / 161 。速度不能百分比准确</span></span><br><span class=\"line\">          <span class=\"keyword\">let</span> groupStyle_1 = <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">          <span class=\"keyword\">let</span> groupStyle_2 = <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">          <span class=\"built_in\">console</span>.error(<span class=\"string\">&#x27;list宽度和content宽度&#x27;</span>, _width, contentWidth)</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (marqueeLogic === <span class=\"number\">1</span> || marqueeLogic === <span class=\"number\">2</span> &amp;&amp; (_width + <span class=\"number\">10</span>) &gt; contentWidth) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 无论是否超过内容宽度，都滚动</span></span><br><span class=\"line\">            groupStyle_1 = <span class=\"string\">`</span></span><br><span class=\"line\"><span class=\"string\">              animation: run <span class=\"subst\">$&#123;$_width * (speed / marqueeSpeed)&#125;</span>s linear 0s infinite;</span></span><br><span class=\"line\"><span class=\"string\">              --width:<span class=\"subst\">$&#123;-(<span class=\"built_in\">parseInt</span>($_width))&#125;</span>px;</span></span><br><span class=\"line\"><span class=\"string\">              --leftPosition: <span class=\"subst\">$&#123;plusWidth&#125;</span>px;</span></span><br><span class=\"line\"><span class=\"string\">            `</span>;</span><br><span class=\"line\">            groupStyle_2 = <span class=\"string\">`</span></span><br><span class=\"line\"><span class=\"string\">              animation: run2 <span class=\"subst\">$&#123;$_width * (speed <span class=\"regexp\">/ marqueeSpeed)&#125;s linear $&#123;$_width * (speed /</span> marqueeSpeed) / <span class=\"number\">2</span>&#125;</span>s infinite;</span></span><br><span class=\"line\"><span class=\"string\">              --width:<span class=\"subst\">$&#123;-(<span class=\"built_in\">parseInt</span>($_width))&#125;</span>px;</span></span><br><span class=\"line\"><span class=\"string\">              --leftPosition: <span class=\"subst\">$&#123;plusWidth&#125;</span>px;          </span></span><br><span class=\"line\"><span class=\"string\">            `</span>;</span><br><span class=\"line\">          &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 只有超过content宽度才滚动</span></span><br><span class=\"line\">            groupStyle_1 = <span class=\"string\">&#x27;transform: translateX(0);&#x27;</span>;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          <span class=\"built_in\">this</span>.setData(&#123;</span><br><span class=\"line\">            groupStyle_1: groupStyle_1,</span><br><span class=\"line\">            groupStyle_2: groupStyle_2,</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// css 关键代码：</span></span><br><span class=\"line\"><span class=\"selector-class\">.list-group-2</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">    <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">    <span class=\"comment\">// animation: run2 linear 24s infinite;</span></span><br><span class=\"line\">    <span class=\"comment\">// animation-delay:12s; 因为变量是通过js查询的，存在异步，所以只能写行内样式</span></span><br><span class=\"line\">    <span class=\"attribute\">transform</span>: translateX(var(--leftPosition, <span class=\"number\">375px</span>));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 第一行滚动文本</span></span><br><span class=\"line\"><span class=\"keyword\">@keyframes</span> run &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    0% &#123;</span><br><span class=\"line\">    <span class=\"attribute\">transform</span>: translateX(var(--leftPosition, <span class=\"number\">375px</span>));</span><br><span class=\"line\">    <span class=\"attribute\">opacity</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    1% &#123;</span><br><span class=\"line\">    <span class=\"attribute\">opacity</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    99% &#123;</span><br><span class=\"line\">    <span class=\"attribute\">opacity</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    100% &#123;</span><br><span class=\"line\">    <span class=\"attribute\">transform</span>: translateX(var(--width, -<span class=\"number\">600px</span>));</span><br><span class=\"line\">    <span class=\"attribute\">opacity</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 第二行滚动文本</span></span><br><span class=\"line\"><span class=\"keyword\">@keyframes</span> run2 &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    0% &#123;</span><br><span class=\"line\">    <span class=\"attribute\">transform</span>: translateX(var(--leftPosition, <span class=\"number\">375px</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    1% &#123;</span><br><span class=\"line\">    <span class=\"attribute\">opacity</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    99% &#123;</span><br><span class=\"line\">    <span class=\"attribute\">opacity</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    100% &#123;</span><br><span class=\"line\">    <span class=\"attribute\">transform</span>: translateX(var(--width, -<span class=\"number\">600px</span>));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight handlebars\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"xml\">// axml</span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">view</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;content&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;</span></span></span><span class=\"template-variable\">&#123;&#123;<span class=\"name\">listWidth</span>&#125;&#125;</span><span class=\"xml\"><span class=\"tag\"><span class=\"string\">&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">view</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;list-group&quot;</span>  <span class=\"attr\">style</span>=<span class=\"string\">&quot;</span></span></span><span class=\"template-variable\">&#123;&#123;<span class=\"name\">groupStyle_1</span>&#125;&#125;</span><span class=\"xml\"><span class=\"tag\"><span class=\"string\">&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">block</span> <span class=\"attr\">a:for</span>=<span class=\"string\">&quot;</span></span></span><span class=\"template-variable\">&#123;&#123;<span class=\"name\">list</span>&#125;&#125;</span><span class=\"xml\"><span class=\"tag\"><span class=\"string\">&quot;</span> <span class=\"attr\">a:key</span>=<span class=\"string\">&quot;</span></span></span><span class=\"template-variable\">&#123;&#123;<span class=\"name\">i</span>&#125;&#125;</span><span class=\"xml\"><span class=\"tag\"><span class=\"string\">&quot;</span> <span class=\"attr\">a:for-index</span>=<span class=\"string\">&quot;i&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">view</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;list </span></span></span><span class=\"template-variable\">&#123;&#123;<span class=\"name\">componentProps.widthControl</span> === <span class=\"number\">1</span> ? <span class=\"string\">&#x27;max-width&#x27;</span> : <span class=\"string\">&#x27;&#x27;</span>&#125;&#125;</span><span class=\"xml\"><span class=\"tag\"><span class=\"string\">&quot;</span> <span class=\"attr\">onTap</span>=<span class=\"string\">&quot;handleTapLink&quot;</span> <span class=\"attr\">data-url</span>=<span class=\"string\">&quot;</span></span></span><span class=\"template-variable\">&#123;&#123;<span class=\"name\">item.link</span>&#125;&#125;</span><span class=\"xml\"><span class=\"tag\"><span class=\"string\">&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">view</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;list-text&quot;</span>&gt;</span></span><span class=\"template-variable\">&#123;&#123;<span class=\"name\">item.title</span>&#125;&#125;</span><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">view</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;/<span class=\"name\">view</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">block</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">view</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">view</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;list-group-2&quot;</span>  <span class=\"attr\">style</span>=<span class=\"string\">&quot;</span></span></span><span class=\"template-variable\">&#123;&#123;<span class=\"name\">groupStyle_2</span>&#125;&#125;</span><span class=\"xml\"><span class=\"tag\"><span class=\"string\">&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">block</span> <span class=\"attr\">a:for</span>=<span class=\"string\">&quot;</span></span></span><span class=\"template-variable\">&#123;&#123;<span class=\"name\">list</span>&#125;&#125;</span><span class=\"xml\"><span class=\"tag\"><span class=\"string\">&quot;</span> <span class=\"attr\">a:key</span>=<span class=\"string\">&quot;</span></span></span><span class=\"template-variable\">&#123;&#123;<span class=\"name\">i</span>&#125;&#125;</span><span class=\"xml\"><span class=\"tag\"><span class=\"string\">&quot;</span> <span class=\"attr\">a:for-index</span>=<span class=\"string\">&quot;i&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">view</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;list </span></span></span><span class=\"template-variable\">&#123;&#123;<span class=\"name\">componentProps.widthControl</span> === <span class=\"number\">1</span> ? <span class=\"string\">&#x27;max-width&#x27;</span> : <span class=\"string\">&#x27;&#x27;</span>&#125;&#125;</span><span class=\"xml\"><span class=\"tag\"><span class=\"string\">&quot;</span> <span class=\"attr\">onTap</span>=<span class=\"string\">&quot;handleTapLink&quot;</span> <span class=\"attr\">data-url</span>=<span class=\"string\">&quot;</span></span></span><span class=\"template-variable\">&#123;&#123;<span class=\"name\">item.link</span>&#125;&#125;</span><span class=\"xml\"><span class=\"tag\"><span class=\"string\">&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;</span></span></span><span class=\"template-variable\">&#123;&#123;<span class=\"name\">componentProps.widthControl</span> === <span class=\"number\">1</span> ? <span class=\"string\">&#x27;max-width: var(--listMaxWidth, 4rem)&#x27;</span>:&#x27;&#x27;&#125;&#125;</span><span class=\"xml\"><span class=\"tag\"><span class=\"string\">&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">view</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;list-text&quot;</span>&gt;</span></span><span class=\"template-variable\">&#123;&#123;<span class=\"name\">item.title</span>&#125;&#125;</span><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">view</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;/<span class=\"name\">view</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">block</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">view</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">view</span>&gt;</span></span></span><br></pre></td></tr></table></figure>"},{"title":"element-ui 上传组件函数自定义参数传递","abbrlink":"845b95cc","date":"2019-05-07T12:09:05.000Z","_content":"\n有时候在表格中需要在每行中有上传需求时，需要定位到是哪一行上传的图片，然后才能组合数组发送到后端，这个时候默认的参数就无法满足我们的需求了，我们需要根据当前行的index来一一对应当前行的文件上传。比如要实现下面的效果：\n<!-- more -->\n![](3.png)\n要实现参数的自定义，我们需要在vue模板中修改函数调用的方式，通过类似：`((val)=>{func(val)})`的方式来调用相应的函数。\n![](1.png)\n以及在文件编辑时要注意修改:file-list为表格中的字段，才能一一对应上\n![](2.png)\n","source":"_posts/element-ui-上传组件函数自定义参数传递.md","raw":"---\ntitle: element-ui 上传组件函数自定义参数传递\ntags:\n  - element-ui\n  - vue\ncategories: 前端\nabbrlink: 845b95cc\ndate: 2019-05-07 20:09:05\n---\n\n有时候在表格中需要在每行中有上传需求时，需要定位到是哪一行上传的图片，然后才能组合数组发送到后端，这个时候默认的参数就无法满足我们的需求了，我们需要根据当前行的index来一一对应当前行的文件上传。比如要实现下面的效果：\n<!-- more -->\n![](3.png)\n要实现参数的自定义，我们需要在vue模板中修改函数调用的方式，通过类似：`((val)=>{func(val)})`的方式来调用相应的函数。\n![](1.png)\n以及在文件编辑时要注意修改:file-list为表格中的字段，才能一一对应上\n![](2.png)\n","slug":"element-ui-上传组件函数自定义参数传递","published":1,"updated":"2021-04-22T01:56:08.202Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckx9sf6080009z8nk10pnhsyd","content":"<p>有时候在表格中需要在每行中有上传需求时，需要定位到是哪一行上传的图片，然后才能组合数组发送到后端，这个时候默认的参数就无法满足我们的需求了，我们需要根据当前行的index来一一对应当前行的文件上传。比如要实现下面的效果：</p>\n<a id=\"more\"></a>\n<p><img src=\"3.png\"><br>要实现参数的自定义，我们需要在vue模板中修改函数调用的方式，通过类似：<code>((val)=&gt;&#123;func(val)&#125;)</code>的方式来调用相应的函数。<br><img src=\"1.png\"><br>以及在文件编辑时要注意修改:file-list为表格中的字段，才能一一对应上<br><img src=\"2.png\"></p>\n","site":{"data":{}},"excerpt":"<p>有时候在表格中需要在每行中有上传需求时，需要定位到是哪一行上传的图片，然后才能组合数组发送到后端，这个时候默认的参数就无法满足我们的需求了，我们需要根据当前行的index来一一对应当前行的文件上传。比如要实现下面的效果：</p>","more":"<p><img src=\"3.png\"><br>要实现参数的自定义，我们需要在vue模板中修改函数调用的方式，通过类似：<code>((val)=&gt;&#123;func(val)&#125;)</code>的方式来调用相应的函数。<br><img src=\"1.png\"><br>以及在文件编辑时要注意修改:file-list为表格中的字段，才能一一对应上<br><img src=\"2.png\"></p>"},{"title":"element-ui 表格中的form的input动态验证规则","abbrlink":"3156ccd5","date":"2019-04-27T13:23:46.000Z","_content":"### 表格中的input需要做某些校验，比如，“本次报销金额”要小于“未报销金额”，这就有点麻烦了，我们都知道，element的form的验证规则rules都是在初始化的时候就定好了的，比如时间验证：\n<!-- more -->\n```\ndate2: [\n    { type: 'date', required: true, message: '请选择时间', trigger: 'change' }\n],\n```\n而我们项目中的是这样的:\n![](4.png) 又不想自定义指令来做，还是看下element能不能做吧，于是就开始看文档，发现只能用自定义rules，但是自定义指令，写死的规则也不符合要求啊，因为表格的数据都是不固定的，\n首先我们把表格的数据源字段移到我们的form中\n![](1.png)\n![](2.png)\n![](3.png)\n然后自定义规则：\n![](5.png)\n这里需要用到一些技巧，比如在模板中，\n```\n:prop=\"`inputTaxTable.${scope.$index}.thisApplyMoney`\"\n```\n在需要校验的列中，`inputTaxTable.${scope.$index}.thisApplyMoney` 查找当前行的数据源，\n\n以及查找“未报销金额”这行的数据来跟当前金额进行对比的时候，保证找到的当前行的数据。\n```\n //field字段中包含了该行表格的index\n    let field=rule.field;//规则名称\n    let _fieldArr=[];\n    _fieldArr=field.split('.');\n    let _index=_fieldArr[1];//得到表格的第n行\n\n    if(Number.parseFloat(value)>Number.parseFloat(this.ruleForm.inputTaxTable[_index].notApplyMoney)){\n        return callback(new Error('不可大于未报销金额'));\n    }else{\n        callback()  //这里一定要这样返回，否则validate函数只会执行一次\n    }\n    \n}\n```\n\n\n","source":"_posts/element-ui-表格中的form的input动态验证规则.md","raw":"---\ntitle: element-ui 表格中的form的input动态验证规则\ntags:\n  - element-ui\n  - vue\ncategories: 前端\nabbrlink: 3156ccd5\ndate: 2019-04-27 21:23:46\n---\n### 表格中的input需要做某些校验，比如，“本次报销金额”要小于“未报销金额”，这就有点麻烦了，我们都知道，element的form的验证规则rules都是在初始化的时候就定好了的，比如时间验证：\n<!-- more -->\n```\ndate2: [\n    { type: 'date', required: true, message: '请选择时间', trigger: 'change' }\n],\n```\n而我们项目中的是这样的:\n![](4.png) 又不想自定义指令来做，还是看下element能不能做吧，于是就开始看文档，发现只能用自定义rules，但是自定义指令，写死的规则也不符合要求啊，因为表格的数据都是不固定的，\n首先我们把表格的数据源字段移到我们的form中\n![](1.png)\n![](2.png)\n![](3.png)\n然后自定义规则：\n![](5.png)\n这里需要用到一些技巧，比如在模板中，\n```\n:prop=\"`inputTaxTable.${scope.$index}.thisApplyMoney`\"\n```\n在需要校验的列中，`inputTaxTable.${scope.$index}.thisApplyMoney` 查找当前行的数据源，\n\n以及查找“未报销金额”这行的数据来跟当前金额进行对比的时候，保证找到的当前行的数据。\n```\n //field字段中包含了该行表格的index\n    let field=rule.field;//规则名称\n    let _fieldArr=[];\n    _fieldArr=field.split('.');\n    let _index=_fieldArr[1];//得到表格的第n行\n\n    if(Number.parseFloat(value)>Number.parseFloat(this.ruleForm.inputTaxTable[_index].notApplyMoney)){\n        return callback(new Error('不可大于未报销金额'));\n    }else{\n        callback()  //这里一定要这样返回，否则validate函数只会执行一次\n    }\n    \n}\n```\n\n\n","slug":"element-ui-表格中的form的input动态验证规则","published":1,"updated":"2021-04-22T01:56:08.202Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckx9sf60a000bz8nk00k1bc3n","content":"<h3 id=\"表格中的input需要做某些校验，比如，“本次报销金额”要小于“未报销金额”，这就有点麻烦了，我们都知道，element的form的验证规则rules都是在初始化的时候就定好了的，比如时间验证：\"><a href=\"#表格中的input需要做某些校验，比如，“本次报销金额”要小于“未报销金额”，这就有点麻烦了，我们都知道，element的form的验证规则rules都是在初始化的时候就定好了的，比如时间验证：\" class=\"headerlink\" title=\"表格中的input需要做某些校验，比如，“本次报销金额”要小于“未报销金额”，这就有点麻烦了，我们都知道，element的form的验证规则rules都是在初始化的时候就定好了的，比如时间验证：\"></a>表格中的input需要做某些校验，比如，“本次报销金额”要小于“未报销金额”，这就有点麻烦了，我们都知道，element的form的验证规则rules都是在初始化的时候就定好了的，比如时间验证：</h3><a id=\"more\"></a>\n<figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">date2:</span> [</span><br><span class=\"line\">    &#123; <span class=\"attr\">type:</span> <span class=\"string\">&#x27;date&#x27;</span>, <span class=\"attr\">required:</span> <span class=\"literal\">true</span>, <span class=\"attr\">message:</span> <span class=\"string\">&#x27;请选择时间&#x27;</span>, <span class=\"attr\">trigger:</span> <span class=\"string\">&#x27;change&#x27;</span> &#125;</span><br><span class=\"line\">],</span><br></pre></td></tr></table></figure>\n<p>而我们项目中的是这样的:<br><img src=\"4.png\"> 又不想自定义指令来做，还是看下element能不能做吧，于是就开始看文档，发现只能用自定义rules，但是自定义指令，写死的规则也不符合要求啊，因为表格的数据都是不固定的，<br>首先我们把表格的数据源字段移到我们的form中<br><img src=\"1.png\"><br><img src=\"2.png\"><br><img src=\"3.png\"><br>然后自定义规则：<br><img src=\"5.png\"><br>这里需要用到一些技巧，比如在模板中，</p>\n<figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:prop=<span class=\"string\">&quot;`inputTaxTable.<span class=\"subst\">$&#123;scope.$index&#125;</span>.thisApplyMoney`&quot;</span></span><br></pre></td></tr></table></figure>\n<p>在需要校验的列中，<code>inputTaxTable.$&#123;scope.$index&#125;.thisApplyMoney</code> 查找当前行的数据源，</p>\n<p>以及查找“未报销金额”这行的数据来跟当前金额进行对比的时候，保证找到的当前行的数据。</p>\n<figure class=\"highlight reasonml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"comment\">//field字段中包含了该行表格的index</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> field=rule.field;<span class=\"comment\">//规则名称</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> _fieldArr=<span class=\"literal\">[]</span>;</span><br><span class=\"line\">    _fieldArr=field.split(<span class=\"character\">&#x27;.&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">let</span> _index=_fieldArr<span class=\"literal\">[<span class=\"number\">1</span>]</span>;<span class=\"comment\">//得到表格的第n行</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">Number</span>.</span></span>parse<span class=\"constructor\">Float(<span class=\"params\">value</span>)</span>&gt;<span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">Number</span>.</span></span>parse<span class=\"constructor\">Float(<span class=\"params\">this</span>.<span class=\"params\">ruleForm</span>.<span class=\"params\">inputTaxTable</span>[<span class=\"params\">_index</span>].<span class=\"params\">notApplyMoney</span>)</span>)&#123;</span><br><span class=\"line\">        return callback(<span class=\"keyword\">new</span> <span class=\"constructor\">Error(&#x27;不可大于未报销金额&#x27;)</span>);</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        callback<span class=\"literal\">()</span>  <span class=\"comment\">//这里一定要这样返回，否则validate函数只会执行一次</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n","site":{"data":{}},"excerpt":"<h3 id=\"表格中的input需要做某些校验，比如，“本次报销金额”要小于“未报销金额”，这就有点麻烦了，我们都知道，element的form的验证规则rules都是在初始化的时候就定好了的，比如时间验证：\"><a href=\"#表格中的input需要做某些校验，比如，“本次报销金额”要小于“未报销金额”，这就有点麻烦了，我们都知道，element的form的验证规则rules都是在初始化的时候就定好了的，比如时间验证：\" class=\"headerlink\" title=\"表格中的input需要做某些校验，比如，“本次报销金额”要小于“未报销金额”，这就有点麻烦了，我们都知道，element的form的验证规则rules都是在初始化的时候就定好了的，比如时间验证：\"></a>表格中的input需要做某些校验，比如，“本次报销金额”要小于“未报销金额”，这就有点麻烦了，我们都知道，element的form的验证规则rules都是在初始化的时候就定好了的，比如时间验证：</h3>","more":"<figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">date2:</span> [</span><br><span class=\"line\">    &#123; <span class=\"attr\">type:</span> <span class=\"string\">&#x27;date&#x27;</span>, <span class=\"attr\">required:</span> <span class=\"literal\">true</span>, <span class=\"attr\">message:</span> <span class=\"string\">&#x27;请选择时间&#x27;</span>, <span class=\"attr\">trigger:</span> <span class=\"string\">&#x27;change&#x27;</span> &#125;</span><br><span class=\"line\">],</span><br></pre></td></tr></table></figure>\n<p>而我们项目中的是这样的:<br><img src=\"4.png\"> 又不想自定义指令来做，还是看下element能不能做吧，于是就开始看文档，发现只能用自定义rules，但是自定义指令，写死的规则也不符合要求啊，因为表格的数据都是不固定的，<br>首先我们把表格的数据源字段移到我们的form中<br><img src=\"1.png\"><br><img src=\"2.png\"><br><img src=\"3.png\"><br>然后自定义规则：<br><img src=\"5.png\"><br>这里需要用到一些技巧，比如在模板中，</p>\n<figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:prop=<span class=\"string\">&quot;`inputTaxTable.<span class=\"subst\">$&#123;scope.$index&#125;</span>.thisApplyMoney`&quot;</span></span><br></pre></td></tr></table></figure>\n<p>在需要校验的列中，<code>inputTaxTable.$&#123;scope.$index&#125;.thisApplyMoney</code> 查找当前行的数据源，</p>\n<p>以及查找“未报销金额”这行的数据来跟当前金额进行对比的时候，保证找到的当前行的数据。</p>\n<figure class=\"highlight reasonml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"comment\">//field字段中包含了该行表格的index</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> field=rule.field;<span class=\"comment\">//规则名称</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> _fieldArr=<span class=\"literal\">[]</span>;</span><br><span class=\"line\">    _fieldArr=field.split(<span class=\"character\">&#x27;.&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">let</span> _index=_fieldArr<span class=\"literal\">[<span class=\"number\">1</span>]</span>;<span class=\"comment\">//得到表格的第n行</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">Number</span>.</span></span>parse<span class=\"constructor\">Float(<span class=\"params\">value</span>)</span>&gt;<span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">Number</span>.</span></span>parse<span class=\"constructor\">Float(<span class=\"params\">this</span>.<span class=\"params\">ruleForm</span>.<span class=\"params\">inputTaxTable</span>[<span class=\"params\">_index</span>].<span class=\"params\">notApplyMoney</span>)</span>)&#123;</span><br><span class=\"line\">        return callback(<span class=\"keyword\">new</span> <span class=\"constructor\">Error(&#x27;不可大于未报销金额&#x27;)</span>);</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        callback<span class=\"literal\">()</span>  <span class=\"comment\">//这里一定要这样返回，否则validate函数只会执行一次</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"js判断一个变量是对象还是数组的实用方法记录","abbrlink":"367b716d","date":"2019-03-14T02:54:51.000Z","_content":"在实际开发中，经常需要检测一个变量的类型，是字符串、数字、布尔还是对象、数组？还是null、undefined？ 对于字符串和数字、布尔这种基本类型，用typeof()来检测就足够了，但是typeof用在数组和对象、null之间就不灵了。\n<!-- more -->\n![](1.jpg)\n由图中可以看出，变量为null，数组，对象的abc使用typeof检测出来的都是object，没有办法进一步区分。\n\n### 使用constructor检测\n![](2.jpg)\n\n```\n    var arr=[1,2];\n    var obj={};\n    console.log(arr.constructor === Array) //true\n    console.log(obj.constructor === Array) //false\n    \n```\n### 使用instanceof \n```\n    var arr=[1,2];\n    var obj={};\n    console.log(arr instanceof Array); //true\n\tconsole.log(obj instanceof Array); //false\n\n```\nconstructor和instanceof 在iframe下使用时会失效，每个iframe都有一套环境，都有一个window，不共享原型链。\n\n\n<font color=\"red\">下面的代码取自网络</font>\n```\n    var iframe = document.createElement('iframe'); //创建iframe\n    document.body.appendChild(iframe); //添加到body中\n    xArray = window.frames[window.frames.length-1].Array;\n    var arr = new xArray(1,2,3); // 声明数组[1,2,3]\n    alert(arr instanceof Array); // false\n    alert(arr.constructor === Array); // false \n\n```\n为什么会出现这样的情况呢？原因就是：在当前窗口引入框架，其实就是引入了window对象，当我们在遍历iframe框架里的变量时使用arr instanceof Array 或者arr.constructor === Array，要注意这个Array是当前window对象的Array，而不是构造出arr的iframe里的window，所以会返回false。\n\n### 使用toString方法\n\n```\n    var arr=[1,2];\n    var obj={};\n    console.log(Object.prototype.toString.call(arr)); // \"[object Array]\"\n\tconsole.log(Object.prototype.toString.call(obj)); // \"[object Object]\"\n```\n\n### 使用Array.isArray() \nECMAScript5将Array.isArray()正式引入JavaScript，目的就是准确地检测一个值是否为数组。IE9+、 Firefox 4+、Safari 5+、Opera 10.5+和 Chrome都实现了这个方法。但是在IE8之前的版本是不支持的。\n\n<font color=\"red\">综合上述方法，自己封装一个函数</font>\n```\n    var arr = [];\n    var arr2 = {};\n    function isArrayFn(value){\n        if (typeof Array.isArray === \"function\") {\n            //先检测是否有isArray方法\n            return Array.isArray(value);\n        }else{\n            //不支持isArray方法，则使用toString方法\n            return Object.prototype.toString.call(value) === \"[object Array]\";\n            //如果是对象则是\"[object Object]\"\n        }\n    }\n    console.log(isArrayFn(arr)); // true\n    console.log(isArrayFn(arr2)); // false\n\n```\n","source":"_posts/js判断一个变量是对象还是数组的实用方法记录.md","raw":"---\ntitle: js判断一个变量是对象还是数组的实用方法记录\ntags: js\ncategories: 前端\nabbrlink: 367b716d\ndate: 2019-03-14 10:54:51\n---\n在实际开发中，经常需要检测一个变量的类型，是字符串、数字、布尔还是对象、数组？还是null、undefined？ 对于字符串和数字、布尔这种基本类型，用typeof()来检测就足够了，但是typeof用在数组和对象、null之间就不灵了。\n<!-- more -->\n![](1.jpg)\n由图中可以看出，变量为null，数组，对象的abc使用typeof检测出来的都是object，没有办法进一步区分。\n\n### 使用constructor检测\n![](2.jpg)\n\n```\n    var arr=[1,2];\n    var obj={};\n    console.log(arr.constructor === Array) //true\n    console.log(obj.constructor === Array) //false\n    \n```\n### 使用instanceof \n```\n    var arr=[1,2];\n    var obj={};\n    console.log(arr instanceof Array); //true\n\tconsole.log(obj instanceof Array); //false\n\n```\nconstructor和instanceof 在iframe下使用时会失效，每个iframe都有一套环境，都有一个window，不共享原型链。\n\n\n<font color=\"red\">下面的代码取自网络</font>\n```\n    var iframe = document.createElement('iframe'); //创建iframe\n    document.body.appendChild(iframe); //添加到body中\n    xArray = window.frames[window.frames.length-1].Array;\n    var arr = new xArray(1,2,3); // 声明数组[1,2,3]\n    alert(arr instanceof Array); // false\n    alert(arr.constructor === Array); // false \n\n```\n为什么会出现这样的情况呢？原因就是：在当前窗口引入框架，其实就是引入了window对象，当我们在遍历iframe框架里的变量时使用arr instanceof Array 或者arr.constructor === Array，要注意这个Array是当前window对象的Array，而不是构造出arr的iframe里的window，所以会返回false。\n\n### 使用toString方法\n\n```\n    var arr=[1,2];\n    var obj={};\n    console.log(Object.prototype.toString.call(arr)); // \"[object Array]\"\n\tconsole.log(Object.prototype.toString.call(obj)); // \"[object Object]\"\n```\n\n### 使用Array.isArray() \nECMAScript5将Array.isArray()正式引入JavaScript，目的就是准确地检测一个值是否为数组。IE9+、 Firefox 4+、Safari 5+、Opera 10.5+和 Chrome都实现了这个方法。但是在IE8之前的版本是不支持的。\n\n<font color=\"red\">综合上述方法，自己封装一个函数</font>\n```\n    var arr = [];\n    var arr2 = {};\n    function isArrayFn(value){\n        if (typeof Array.isArray === \"function\") {\n            //先检测是否有isArray方法\n            return Array.isArray(value);\n        }else{\n            //不支持isArray方法，则使用toString方法\n            return Object.prototype.toString.call(value) === \"[object Array]\";\n            //如果是对象则是\"[object Object]\"\n        }\n    }\n    console.log(isArrayFn(arr)); // true\n    console.log(isArrayFn(arr2)); // false\n\n```\n","slug":"js判断一个变量是对象还是数组的实用方法记录","published":1,"updated":"2021-04-22T01:56:08.212Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckx9sf60d000fz8nka06feskx","content":"<p>在实际开发中，经常需要检测一个变量的类型，是字符串、数字、布尔还是对象、数组？还是null、undefined？ 对于字符串和数字、布尔这种基本类型，用typeof()来检测就足够了，但是typeof用在数组和对象、null之间就不灵了。</p>\n<a id=\"more\"></a>\n<p><img src=\"1.jpg\"><br>由图中可以看出，变量为null，数组，对象的abc使用typeof检测出来的都是object，没有办法进一步区分。</p>\n<h3 id=\"使用constructor检测\"><a href=\"#使用constructor检测\" class=\"headerlink\" title=\"使用constructor检测\"></a>使用constructor检测</h3><p><img src=\"2.jpg\"></p>\n<figure class=\"highlight delphi\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr=[<span class=\"number\">1</span>,<span class=\"number\">2</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj=<span class=\"comment\">&#123;&#125;</span>;</span><br><span class=\"line\">console.log(arr.<span class=\"keyword\">constructor</span> === <span class=\"keyword\">Array</span>) <span class=\"comment\">//true</span></span><br><span class=\"line\">console.log(obj.<span class=\"keyword\">constructor</span> === <span class=\"keyword\">Array</span>) <span class=\"comment\">//false</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"使用instanceof\"><a href=\"#使用instanceof\" class=\"headerlink\" title=\"使用instanceof\"></a>使用instanceof</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   <span class=\"keyword\">var</span> arr=[<span class=\"number\">1</span>,<span class=\"number\">2</span>];</span><br><span class=\"line\">   <span class=\"keyword\">var</span> obj=&#123;&#125;;</span><br><span class=\"line\">   <span class=\"built_in\">console</span>.log(arr <span class=\"keyword\">instanceof</span> <span class=\"built_in\">Array</span>); <span class=\"comment\">//true</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(obj <span class=\"keyword\">instanceof</span> <span class=\"built_in\">Array</span>); <span class=\"comment\">//false</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>constructor和instanceof 在iframe下使用时会失效，每个iframe都有一套环境，都有一个window，不共享原型链。</p>\n<p><font color=\"red\">下面的代码取自网络</font></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> iframe = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">&#x27;iframe&#x27;</span>); <span class=\"comment\">//创建iframe</span></span><br><span class=\"line\"><span class=\"built_in\">document</span>.body.appendChild(iframe); <span class=\"comment\">//添加到body中</span></span><br><span class=\"line\">xArray = <span class=\"built_in\">window</span>.frames[<span class=\"built_in\">window</span>.frames.length<span class=\"number\">-1</span>].Array;</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr = <span class=\"keyword\">new</span> xArray(<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>); <span class=\"comment\">// 声明数组[1,2,3]</span></span><br><span class=\"line\">alert(arr <span class=\"keyword\">instanceof</span> <span class=\"built_in\">Array</span>); <span class=\"comment\">// false</span></span><br><span class=\"line\">alert(arr.constructor === <span class=\"built_in\">Array</span>); <span class=\"comment\">// false </span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>为什么会出现这样的情况呢？原因就是：在当前窗口引入框架，其实就是引入了window对象，当我们在遍历iframe框架里的变量时使用arr instanceof Array 或者arr.constructor === Array，要注意这个Array是当前window对象的Array，而不是构造出arr的iframe里的window，所以会返回false。</p>\n<h3 id=\"使用toString方法\"><a href=\"#使用toString方法\" class=\"headerlink\" title=\"使用toString方法\"></a>使用toString方法</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   <span class=\"keyword\">var</span> arr=[<span class=\"number\">1</span>,<span class=\"number\">2</span>];</span><br><span class=\"line\">   <span class=\"keyword\">var</span> obj=&#123;&#125;;</span><br><span class=\"line\">   <span class=\"built_in\">console</span>.log(<span class=\"built_in\">Object</span>.prototype.toString.call(arr)); <span class=\"comment\">// &quot;[object Array]&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">Object</span>.prototype.toString.call(obj)); <span class=\"comment\">// &quot;[object Object]&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"使用Array-isArray\"><a href=\"#使用Array-isArray\" class=\"headerlink\" title=\"使用Array.isArray()\"></a>使用Array.isArray()</h3><p>ECMAScript5将Array.isArray()正式引入JavaScript，目的就是准确地检测一个值是否为数组。IE9+、 Firefox 4+、Safari 5+、Opera 10.5+和 Chrome都实现了这个方法。但是在IE8之前的版本是不支持的。</p>\n<p><font color=\"red\">综合上述方法，自己封装一个函数</font></p>\n<figure class=\"highlight reasonml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var arr = <span class=\"literal\">[]</span>;</span><br><span class=\"line\">var arr2 = &#123;&#125;;</span><br><span class=\"line\"><span class=\"keyword\">function</span> is<span class=\"constructor\">ArrayFn(<span class=\"params\">value</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (typeof <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">Array</span>.</span></span>isArray<span class=\"operator\"> === </span><span class=\"string\">&quot;function&quot;</span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">//先检测是否有isArray方法</span></span><br><span class=\"line\">        return <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">Array</span>.</span></span>is<span class=\"constructor\">Array(<span class=\"params\">value</span>)</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//不支持isArray方法，则使用toString方法</span></span><br><span class=\"line\">        return <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">Object</span>.</span></span>prototype.toString.call(value)<span class=\"operator\"> === </span><span class=\"string\">&quot;[object Array]&quot;</span>;</span><br><span class=\"line\">        <span class=\"comment\">//如果是对象则是&quot;[object Object]&quot;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">console.log(is<span class=\"constructor\">ArrayFn(<span class=\"params\">arr</span>)</span>); <span class=\"comment\">// true</span></span><br><span class=\"line\">console.log(is<span class=\"constructor\">ArrayFn(<span class=\"params\">arr2</span>)</span>); <span class=\"comment\">// false</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<p>在实际开发中，经常需要检测一个变量的类型，是字符串、数字、布尔还是对象、数组？还是null、undefined？ 对于字符串和数字、布尔这种基本类型，用typeof()来检测就足够了，但是typeof用在数组和对象、null之间就不灵了。</p>","more":"<p><img src=\"1.jpg\"><br>由图中可以看出，变量为null，数组，对象的abc使用typeof检测出来的都是object，没有办法进一步区分。</p>\n<h3 id=\"使用constructor检测\"><a href=\"#使用constructor检测\" class=\"headerlink\" title=\"使用constructor检测\"></a>使用constructor检测</h3><p><img src=\"2.jpg\"></p>\n<figure class=\"highlight delphi\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr=[<span class=\"number\">1</span>,<span class=\"number\">2</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj=<span class=\"comment\">&#123;&#125;</span>;</span><br><span class=\"line\">console.log(arr.<span class=\"keyword\">constructor</span> === <span class=\"keyword\">Array</span>) <span class=\"comment\">//true</span></span><br><span class=\"line\">console.log(obj.<span class=\"keyword\">constructor</span> === <span class=\"keyword\">Array</span>) <span class=\"comment\">//false</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"使用instanceof\"><a href=\"#使用instanceof\" class=\"headerlink\" title=\"使用instanceof\"></a>使用instanceof</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   <span class=\"keyword\">var</span> arr=[<span class=\"number\">1</span>,<span class=\"number\">2</span>];</span><br><span class=\"line\">   <span class=\"keyword\">var</span> obj=&#123;&#125;;</span><br><span class=\"line\">   <span class=\"built_in\">console</span>.log(arr <span class=\"keyword\">instanceof</span> <span class=\"built_in\">Array</span>); <span class=\"comment\">//true</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(obj <span class=\"keyword\">instanceof</span> <span class=\"built_in\">Array</span>); <span class=\"comment\">//false</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>constructor和instanceof 在iframe下使用时会失效，每个iframe都有一套环境，都有一个window，不共享原型链。</p>\n<p><font color=\"red\">下面的代码取自网络</font></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> iframe = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">&#x27;iframe&#x27;</span>); <span class=\"comment\">//创建iframe</span></span><br><span class=\"line\"><span class=\"built_in\">document</span>.body.appendChild(iframe); <span class=\"comment\">//添加到body中</span></span><br><span class=\"line\">xArray = <span class=\"built_in\">window</span>.frames[<span class=\"built_in\">window</span>.frames.length<span class=\"number\">-1</span>].Array;</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr = <span class=\"keyword\">new</span> xArray(<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>); <span class=\"comment\">// 声明数组[1,2,3]</span></span><br><span class=\"line\">alert(arr <span class=\"keyword\">instanceof</span> <span class=\"built_in\">Array</span>); <span class=\"comment\">// false</span></span><br><span class=\"line\">alert(arr.constructor === <span class=\"built_in\">Array</span>); <span class=\"comment\">// false </span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>为什么会出现这样的情况呢？原因就是：在当前窗口引入框架，其实就是引入了window对象，当我们在遍历iframe框架里的变量时使用arr instanceof Array 或者arr.constructor === Array，要注意这个Array是当前window对象的Array，而不是构造出arr的iframe里的window，所以会返回false。</p>\n<h3 id=\"使用toString方法\"><a href=\"#使用toString方法\" class=\"headerlink\" title=\"使用toString方法\"></a>使用toString方法</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   <span class=\"keyword\">var</span> arr=[<span class=\"number\">1</span>,<span class=\"number\">2</span>];</span><br><span class=\"line\">   <span class=\"keyword\">var</span> obj=&#123;&#125;;</span><br><span class=\"line\">   <span class=\"built_in\">console</span>.log(<span class=\"built_in\">Object</span>.prototype.toString.call(arr)); <span class=\"comment\">// &quot;[object Array]&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">Object</span>.prototype.toString.call(obj)); <span class=\"comment\">// &quot;[object Object]&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"使用Array-isArray\"><a href=\"#使用Array-isArray\" class=\"headerlink\" title=\"使用Array.isArray()\"></a>使用Array.isArray()</h3><p>ECMAScript5将Array.isArray()正式引入JavaScript，目的就是准确地检测一个值是否为数组。IE9+、 Firefox 4+、Safari 5+、Opera 10.5+和 Chrome都实现了这个方法。但是在IE8之前的版本是不支持的。</p>\n<p><font color=\"red\">综合上述方法，自己封装一个函数</font></p>\n<figure class=\"highlight reasonml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var arr = <span class=\"literal\">[]</span>;</span><br><span class=\"line\">var arr2 = &#123;&#125;;</span><br><span class=\"line\"><span class=\"keyword\">function</span> is<span class=\"constructor\">ArrayFn(<span class=\"params\">value</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (typeof <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">Array</span>.</span></span>isArray<span class=\"operator\"> === </span><span class=\"string\">&quot;function&quot;</span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">//先检测是否有isArray方法</span></span><br><span class=\"line\">        return <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">Array</span>.</span></span>is<span class=\"constructor\">Array(<span class=\"params\">value</span>)</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//不支持isArray方法，则使用toString方法</span></span><br><span class=\"line\">        return <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">Object</span>.</span></span>prototype.toString.call(value)<span class=\"operator\"> === </span><span class=\"string\">&quot;[object Array]&quot;</span>;</span><br><span class=\"line\">        <span class=\"comment\">//如果是对象则是&quot;[object Object]&quot;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">console.log(is<span class=\"constructor\">ArrayFn(<span class=\"params\">arr</span>)</span>); <span class=\"comment\">// true</span></span><br><span class=\"line\">console.log(is<span class=\"constructor\">ArrayFn(<span class=\"params\">arr2</span>)</span>); <span class=\"comment\">// false</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>"},{"title":"koa2 中上传文件","abbrlink":"9a00eab2","date":"2021-01-22T01:36:15.000Z","_content":"\nkoa2 上传文件\n\n本来是使用 `koa-body` 这个包来接收上传文件的，这个包也可以读取get请求，本来以为直接用它来接收文件及其他请求，把`koa-bodyparser`去掉，但是后来发现`koa-body` 接收post请求时报415，不支持的媒体类型错误，然后一时也 找不出原因，就干脆不用这个包了，接收正常的请求还是使用`koa-bodyparser`，然后文件上传接收用`@koa/multer`。\n\n\n`@koa/multer`不是一个中间件，因此不能像其他中间件一样直接在app.js中引入，使用的方式如下：\n\n```\n// 前端路由\nconst router = require('koa-router')();\nconst path = require('path')\nrouter.prefix('/api'); //路由前缀\nconst multer = require('@koa/multer');\n\n// 上传配置\nconst storage = multer.diskStorage({\n  destination: function (req, file, cb) {\n    cb(null, path.join(__dirname, '../../public/upload/'));\n  },\n  filename: function (req, file, cb) {\n    cb(null, file.fieldname + '-' + Date.now() + '.png')\n  }\n})\n\nconst upload = multer({ storage: storage })\n// 使用multer上传\nrouter.post('/tv/upload_channel_poster', upload.single('file'), Tv.updateChannelPoster)\n\n```","source":"_posts/koa2-中上传文件.md","raw":"---\ntitle: koa2 中上传文件\nabbrlink: 9a00eab2\ndate: 2021-01-22 09:36:15\ntags:\n  - nodejs\n  - koa2\ncategories: 后端\n---\n\nkoa2 上传文件\n\n本来是使用 `koa-body` 这个包来接收上传文件的，这个包也可以读取get请求，本来以为直接用它来接收文件及其他请求，把`koa-bodyparser`去掉，但是后来发现`koa-body` 接收post请求时报415，不支持的媒体类型错误，然后一时也 找不出原因，就干脆不用这个包了，接收正常的请求还是使用`koa-bodyparser`，然后文件上传接收用`@koa/multer`。\n\n\n`@koa/multer`不是一个中间件，因此不能像其他中间件一样直接在app.js中引入，使用的方式如下：\n\n```\n// 前端路由\nconst router = require('koa-router')();\nconst path = require('path')\nrouter.prefix('/api'); //路由前缀\nconst multer = require('@koa/multer');\n\n// 上传配置\nconst storage = multer.diskStorage({\n  destination: function (req, file, cb) {\n    cb(null, path.join(__dirname, '../../public/upload/'));\n  },\n  filename: function (req, file, cb) {\n    cb(null, file.fieldname + '-' + Date.now() + '.png')\n  }\n})\n\nconst upload = multer({ storage: storage })\n// 使用multer上传\nrouter.post('/tv/upload_channel_poster', upload.single('file'), Tv.updateChannelPoster)\n\n```","slug":"koa2-中上传文件","published":1,"updated":"2021-04-22T01:56:08.212Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckx9sf60e000gz8nk98ncclcm","content":"<p>koa2 上传文件</p>\n<p>本来是使用 <code>koa-body</code> 这个包来接收上传文件的，这个包也可以读取get请求，本来以为直接用它来接收文件及其他请求，把<code>koa-bodyparser</code>去掉，但是后来发现<code>koa-body</code> 接收post请求时报415，不支持的媒体类型错误，然后一时也 找不出原因，就干脆不用这个包了，接收正常的请求还是使用<code>koa-bodyparser</code>，然后文件上传接收用<code>@koa/multer</code>。</p>\n<p><code>@koa/multer</code>不是一个中间件，因此不能像其他中间件一样直接在app.js中引入，使用的方式如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 前端路由</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> router = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;koa-router&#x27;</span>)();</span><br><span class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;path&#x27;</span>)</span><br><span class=\"line\">router.prefix(<span class=\"string\">&#x27;/api&#x27;</span>); <span class=\"comment\">//路由前缀</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> multer = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;@koa/multer&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 上传配置</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> storage = multer.diskStorage(&#123;</span><br><span class=\"line\">  destination: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">req, file, cb</span>) </span>&#123;</span><br><span class=\"line\">    cb(<span class=\"literal\">null</span>, path.join(__dirname, <span class=\"string\">&#x27;../../public/upload/&#x27;</span>));</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  filename: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">req, file, cb</span>) </span>&#123;</span><br><span class=\"line\">    cb(<span class=\"literal\">null</span>, file.fieldname + <span class=\"string\">&#x27;-&#x27;</span> + <span class=\"built_in\">Date</span>.now() + <span class=\"string\">&#x27;.png&#x27;</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> upload = multer(&#123; <span class=\"attr\">storage</span>: storage &#125;)</span><br><span class=\"line\"><span class=\"comment\">// 使用multer上传</span></span><br><span class=\"line\">router.post(<span class=\"string\">&#x27;/tv/upload_channel_poster&#x27;</span>, upload.single(<span class=\"string\">&#x27;file&#x27;</span>), Tv.updateChannelPoster)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>koa2 上传文件</p>\n<p>本来是使用 <code>koa-body</code> 这个包来接收上传文件的，这个包也可以读取get请求，本来以为直接用它来接收文件及其他请求，把<code>koa-bodyparser</code>去掉，但是后来发现<code>koa-body</code> 接收post请求时报415，不支持的媒体类型错误，然后一时也 找不出原因，就干脆不用这个包了，接收正常的请求还是使用<code>koa-bodyparser</code>，然后文件上传接收用<code>@koa/multer</code>。</p>\n<p><code>@koa/multer</code>不是一个中间件，因此不能像其他中间件一样直接在app.js中引入，使用的方式如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 前端路由</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> router = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;koa-router&#x27;</span>)();</span><br><span class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;path&#x27;</span>)</span><br><span class=\"line\">router.prefix(<span class=\"string\">&#x27;/api&#x27;</span>); <span class=\"comment\">//路由前缀</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> multer = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;@koa/multer&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 上传配置</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> storage = multer.diskStorage(&#123;</span><br><span class=\"line\">  destination: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">req, file, cb</span>) </span>&#123;</span><br><span class=\"line\">    cb(<span class=\"literal\">null</span>, path.join(__dirname, <span class=\"string\">&#x27;../../public/upload/&#x27;</span>));</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  filename: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">req, file, cb</span>) </span>&#123;</span><br><span class=\"line\">    cb(<span class=\"literal\">null</span>, file.fieldname + <span class=\"string\">&#x27;-&#x27;</span> + <span class=\"built_in\">Date</span>.now() + <span class=\"string\">&#x27;.png&#x27;</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> upload = multer(&#123; <span class=\"attr\">storage</span>: storage &#125;)</span><br><span class=\"line\"><span class=\"comment\">// 使用multer上传</span></span><br><span class=\"line\">router.post(<span class=\"string\">&#x27;/tv/upload_channel_poster&#x27;</span>, upload.single(<span class=\"string\">&#x27;file&#x27;</span>), Tv.updateChannelPoster)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>"},{"title":"react 常用组件","abbrlink":"4080e15","date":"2021-05-17T09:42:47.000Z","_content":"\n# react 常用组件 整理\n\n|  组件名称   | 地址  | 简介 |\n|  :----  | :----  | :----  |\n| React-classnames  | https://www.jianshu.com/p/23accf80a850 | 动态添加多个类 |\n| Immutable.js  | https://www.w3cschool.cn/doc_immutable/ | 数据不可变 |\n| better-scroll  | 封装例子 https://www.cnblogs.com/crazycode2/p/12589226.html | 滚动插件，可用于上拉加载、下拉刷新。主要移动端 |\n","source":"_posts/react-常用组件.md","raw":"---\ntitle: react 常用组件\nabbrlink: '4080e15'\ndate: 2021-05-17 17:42:47\ntags:\n---\n\n# react 常用组件 整理\n\n|  组件名称   | 地址  | 简介 |\n|  :----  | :----  | :----  |\n| React-classnames  | https://www.jianshu.com/p/23accf80a850 | 动态添加多个类 |\n| Immutable.js  | https://www.w3cschool.cn/doc_immutable/ | 数据不可变 |\n| better-scroll  | 封装例子 https://www.cnblogs.com/crazycode2/p/12589226.html | 滚动插件，可用于上拉加载、下拉刷新。主要移动端 |\n","slug":"react-常用组件","published":1,"updated":"2021-05-18T03:40:54.666Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckx9sf60i000lz8nkcubl8nco","content":"<h1 id=\"react-常用组件-整理\"><a href=\"#react-常用组件-整理\" class=\"headerlink\" title=\"react 常用组件 整理\"></a>react 常用组件 整理</h1><table>\n<thead>\n<tr>\n<th align=\"left\">组件名称</th>\n<th align=\"left\">地址</th>\n<th align=\"left\">简介</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">React-classnames</td>\n<td align=\"left\"><a href=\"https://www.jianshu.com/p/23accf80a850\">https://www.jianshu.com/p/23accf80a850</a></td>\n<td align=\"left\">动态添加多个类</td>\n</tr>\n<tr>\n<td align=\"left\">Immutable.js</td>\n<td align=\"left\"><a href=\"https://www.w3cschool.cn/doc_immutable/\">https://www.w3cschool.cn/doc_immutable/</a></td>\n<td align=\"left\">数据不可变</td>\n</tr>\n<tr>\n<td align=\"left\">better-scroll</td>\n<td align=\"left\">封装例子 <a href=\"https://www.cnblogs.com/crazycode2/p/12589226.html\">https://www.cnblogs.com/crazycode2/p/12589226.html</a></td>\n<td align=\"left\">滚动插件，可用于上拉加载、下拉刷新。主要移动端</td>\n</tr>\n</tbody></table>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"react-常用组件-整理\"><a href=\"#react-常用组件-整理\" class=\"headerlink\" title=\"react 常用组件 整理\"></a>react 常用组件 整理</h1><table>\n<thead>\n<tr>\n<th align=\"left\">组件名称</th>\n<th align=\"left\">地址</th>\n<th align=\"left\">简介</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">React-classnames</td>\n<td align=\"left\"><a href=\"https://www.jianshu.com/p/23accf80a850\">https://www.jianshu.com/p/23accf80a850</a></td>\n<td align=\"left\">动态添加多个类</td>\n</tr>\n<tr>\n<td align=\"left\">Immutable.js</td>\n<td align=\"left\"><a href=\"https://www.w3cschool.cn/doc_immutable/\">https://www.w3cschool.cn/doc_immutable/</a></td>\n<td align=\"left\">数据不可变</td>\n</tr>\n<tr>\n<td align=\"left\">better-scroll</td>\n<td align=\"left\">封装例子 <a href=\"https://www.cnblogs.com/crazycode2/p/12589226.html\">https://www.cnblogs.com/crazycode2/p/12589226.html</a></td>\n<td align=\"left\">滚动插件，可用于上拉加载、下拉刷新。主要移动端</td>\n</tr>\n</tbody></table>\n"},{"title":"ubantu apt-get install方式安装mysql","abbrlink":13666,"date":"2019-05-15T06:41:02.000Z","_content":"\n# 在ubantu上安装mysql并不难，主要是记录下安装数据库时居然不像windows那样选择安装位置，设置用户和密码等\n\n1. `sudo apt-get install mysql-server` 安装mysql核心服务\n2. `sudo apt-get install mysql-server` 安装mysql客户端\n<!-- more -->\n\n安装完成后我们需要去mysql目录查看用户名和密码\n`sudo vim /etc/mysql/debain.cnf`\n```\n[client]\nhost     = localhost\nuser     = debian-sys-maint\npassword = wrMqzOiffsyheEe1\nsocket   = /var/run/mysqld/mysqld.sock\n[mysql_upgrade]\nhost     = localhost\nuser     = debian-sys-maint\npassword = wrMqzOiffsyheEe1\nsocket   = /var/run/mysqld/mysqld.sock\n\n```\n我们用debian-sys-maint用户来登陆\n`mysql -u debian-sys-maint -p`\n输入密码：`wrMqzOiffsyheEe1`\n然后修改密码：\n```\nupdate mysql.user set authentication_string=PASSWORD('root'), plugin='mysql_native_password' where user='root';\n```\n<font color=\"red\">\n注意，authentication_string是密码 ，plugin是验证方式，这两个一定要同时改。从mysql5.7开始root的默认验证方式是auth_socket\n</font>\n可以输入 ` select user, plugin from mysql.user;` 查看到以下内容：\n```\n+------------------+-----------------------+\n| user             | plugin                |\n+------------------+-----------------------+\n| root             | auth_socket           |\n| mysql.session    | mysql_native_password |\n| mysql.sys        | mysql_native_password |\n| debian-sys-maint | mysql_native_password |\n+------------------+-----------------------+\n4 rows in set (0.02 sec)\n\n```\n修改后的：\n```\n+------------------+-----------------------+\n| user             | plugin                |\n+------------------+-----------------------+\n| root             | mysql_native_password |\n| mysql.session    | mysql_native_password |\n| mysql.sys        | mysql_native_password |\n| debian-sys-maint | mysql_native_password |\n+------------------+-----------------------+\n4 rows in set (0.02 sec)\n```\nmysql_native_password这种系统root用户登录时才可以登录数据库的root用户。所以需要把auth_socket改为mysql_native_password，才可以不受系统用户限制。\n\n然后`exit;`推出mysql。`sudo service mysql restart` 重启mysql服务\n\n","source":"_posts/ubantu-apt-get-install方式安装mysql.md","raw":"---\ntitle: ubantu apt-get install方式安装mysql\nabbrlink: 13666\ndate: 2019-05-15 14:41:02\ntags: linux\ncategories: linux\n---\n\n# 在ubantu上安装mysql并不难，主要是记录下安装数据库时居然不像windows那样选择安装位置，设置用户和密码等\n\n1. `sudo apt-get install mysql-server` 安装mysql核心服务\n2. `sudo apt-get install mysql-server` 安装mysql客户端\n<!-- more -->\n\n安装完成后我们需要去mysql目录查看用户名和密码\n`sudo vim /etc/mysql/debain.cnf`\n```\n[client]\nhost     = localhost\nuser     = debian-sys-maint\npassword = wrMqzOiffsyheEe1\nsocket   = /var/run/mysqld/mysqld.sock\n[mysql_upgrade]\nhost     = localhost\nuser     = debian-sys-maint\npassword = wrMqzOiffsyheEe1\nsocket   = /var/run/mysqld/mysqld.sock\n\n```\n我们用debian-sys-maint用户来登陆\n`mysql -u debian-sys-maint -p`\n输入密码：`wrMqzOiffsyheEe1`\n然后修改密码：\n```\nupdate mysql.user set authentication_string=PASSWORD('root'), plugin='mysql_native_password' where user='root';\n```\n<font color=\"red\">\n注意，authentication_string是密码 ，plugin是验证方式，这两个一定要同时改。从mysql5.7开始root的默认验证方式是auth_socket\n</font>\n可以输入 ` select user, plugin from mysql.user;` 查看到以下内容：\n```\n+------------------+-----------------------+\n| user             | plugin                |\n+------------------+-----------------------+\n| root             | auth_socket           |\n| mysql.session    | mysql_native_password |\n| mysql.sys        | mysql_native_password |\n| debian-sys-maint | mysql_native_password |\n+------------------+-----------------------+\n4 rows in set (0.02 sec)\n\n```\n修改后的：\n```\n+------------------+-----------------------+\n| user             | plugin                |\n+------------------+-----------------------+\n| root             | mysql_native_password |\n| mysql.session    | mysql_native_password |\n| mysql.sys        | mysql_native_password |\n| debian-sys-maint | mysql_native_password |\n+------------------+-----------------------+\n4 rows in set (0.02 sec)\n```\nmysql_native_password这种系统root用户登录时才可以登录数据库的root用户。所以需要把auth_socket改为mysql_native_password，才可以不受系统用户限制。\n\n然后`exit;`推出mysql。`sudo service mysql restart` 重启mysql服务\n\n","slug":"ubantu-apt-get-install方式安装mysql","published":1,"updated":"2021-04-22T01:56:08.212Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckx9sf60o000nz8nk4aoae1tt","content":"<h1 id=\"在ubantu上安装mysql并不难，主要是记录下安装数据库时居然不像windows那样选择安装位置，设置用户和密码等\"><a href=\"#在ubantu上安装mysql并不难，主要是记录下安装数据库时居然不像windows那样选择安装位置，设置用户和密码等\" class=\"headerlink\" title=\"在ubantu上安装mysql并不难，主要是记录下安装数据库时居然不像windows那样选择安装位置，设置用户和密码等\"></a>在ubantu上安装mysql并不难，主要是记录下安装数据库时居然不像windows那样选择安装位置，设置用户和密码等</h1><ol>\n<li><code>sudo apt-get install mysql-server</code> 安装mysql核心服务</li>\n<li><code>sudo apt-get install mysql-server</code> 安装mysql客户端<a id=\"more\"></a>\n\n</li>\n</ol>\n<p>安装完成后我们需要去mysql目录查看用户名和密码<br><code>sudo vim /etc/mysql/debain.cnf</code></p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[client]</span><br><span class=\"line\">host     = localhost</span><br><span class=\"line\">user     = debian-sys-maint</span><br><span class=\"line\">password = wrMqzOiffsyheEe1</span><br><span class=\"line\">socket   = /var/run/mysqld/mysqld.sock</span><br><span class=\"line\">[mysql_upgrade]</span><br><span class=\"line\">host     = localhost</span><br><span class=\"line\">user     = debian-sys-maint</span><br><span class=\"line\">password = wrMqzOiffsyheEe1</span><br><span class=\"line\">socket   = /var/run/mysqld/mysqld.sock</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>我们用debian-sys-maint用户来登陆<br><code>mysql -u debian-sys-maint -p</code><br>输入密码：<code>wrMqzOiffsyheEe1</code><br>然后修改密码：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">update</span> mysql.user <span class=\"keyword\">set</span> authentication_string=<span class=\"keyword\">PASSWORD</span>(<span class=\"string\">&#x27;root&#x27;</span>), <span class=\"keyword\">plugin</span>=<span class=\"string\">&#x27;mysql_native_password&#x27;</span> <span class=\"keyword\">where</span> <span class=\"keyword\">user</span>=<span class=\"string\">&#x27;root&#x27;</span>;</span><br></pre></td></tr></table></figure>\n<font color=\"red\">\n注意，authentication_string是密码 ，plugin是验证方式，这两个一定要同时改。从mysql5.7开始root的默认验证方式是auth_socket\n</font>\n可以输入 ` select user, plugin from mysql.user;` 查看到以下内容：\n<figure class=\"highlight gherkin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">+------------------+-----------------------+</span><br><span class=\"line\">|<span class=\"string\"> user             </span>|<span class=\"string\"> plugin                </span>|</span><br><span class=\"line\">+------------------+-----------------------+</span><br><span class=\"line\">|<span class=\"string\"> root             </span>|<span class=\"string\"> auth_socket           </span>|</span><br><span class=\"line\">|<span class=\"string\"> mysql.session    </span>|<span class=\"string\"> mysql_native_password </span>|</span><br><span class=\"line\">|<span class=\"string\"> mysql.sys        </span>|<span class=\"string\"> mysql_native_password </span>|</span><br><span class=\"line\">|<span class=\"string\"> debian-sys-maint </span>|<span class=\"string\"> mysql_native_password </span>|</span><br><span class=\"line\">+------------------+-----------------------+</span><br><span class=\"line\">4 rows in set (0.02 sec)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n修改后的：\n<figure class=\"highlight asciidoc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"code\">+------------------+</span>-----------------------+</span><br><span class=\"line\">| user             | plugin                |</span><br><span class=\"line\"><span class=\"code\">+------------------+</span>-----------------------+</span><br><span class=\"line\">| root             | mysql<span class=\"emphasis\">_native_</span>password |</span><br><span class=\"line\">| mysql.session    | mysql<span class=\"emphasis\">_native_</span>password |</span><br><span class=\"line\">| mysql.sys        | mysql<span class=\"emphasis\">_native_</span>password |</span><br><span class=\"line\">| debian-sys-maint | mysql<span class=\"emphasis\">_native_</span>password |</span><br><span class=\"line\"><span class=\"code\">+------------------+</span>-----------------------+</span><br><span class=\"line\">4 rows in set (0.02 sec)</span><br></pre></td></tr></table></figure>\nmysql_native_password这种系统root用户登录时才可以登录数据库的root用户。所以需要把auth_socket改为mysql_native_password，才可以不受系统用户限制。\n\n<p>然后<code>exit;</code>推出mysql。<code>sudo service mysql restart</code> 重启mysql服务</p>\n","site":{"data":{}},"excerpt":"<h1 id=\"在ubantu上安装mysql并不难，主要是记录下安装数据库时居然不像windows那样选择安装位置，设置用户和密码等\"><a href=\"#在ubantu上安装mysql并不难，主要是记录下安装数据库时居然不像windows那样选择安装位置，设置用户和密码等\" class=\"headerlink\" title=\"在ubantu上安装mysql并不难，主要是记录下安装数据库时居然不像windows那样选择安装位置，设置用户和密码等\"></a>在ubantu上安装mysql并不难，主要是记录下安装数据库时居然不像windows那样选择安装位置，设置用户和密码等</h1><ol>\n<li><code>sudo apt-get install mysql-server</code> 安装mysql核心服务</li>\n<li><code>sudo apt-get install mysql-server</code> 安装mysql客户端","more":"</li>\n</ol>\n<p>安装完成后我们需要去mysql目录查看用户名和密码<br><code>sudo vim /etc/mysql/debain.cnf</code></p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[client]</span><br><span class=\"line\">host     = localhost</span><br><span class=\"line\">user     = debian-sys-maint</span><br><span class=\"line\">password = wrMqzOiffsyheEe1</span><br><span class=\"line\">socket   = /var/run/mysqld/mysqld.sock</span><br><span class=\"line\">[mysql_upgrade]</span><br><span class=\"line\">host     = localhost</span><br><span class=\"line\">user     = debian-sys-maint</span><br><span class=\"line\">password = wrMqzOiffsyheEe1</span><br><span class=\"line\">socket   = /var/run/mysqld/mysqld.sock</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>我们用debian-sys-maint用户来登陆<br><code>mysql -u debian-sys-maint -p</code><br>输入密码：<code>wrMqzOiffsyheEe1</code><br>然后修改密码：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">update</span> mysql.user <span class=\"keyword\">set</span> authentication_string=<span class=\"keyword\">PASSWORD</span>(<span class=\"string\">&#x27;root&#x27;</span>), <span class=\"keyword\">plugin</span>=<span class=\"string\">&#x27;mysql_native_password&#x27;</span> <span class=\"keyword\">where</span> <span class=\"keyword\">user</span>=<span class=\"string\">&#x27;root&#x27;</span>;</span><br></pre></td></tr></table></figure>\n<font color=\"red\">\n注意，authentication_string是密码 ，plugin是验证方式，这两个一定要同时改。从mysql5.7开始root的默认验证方式是auth_socket\n</font>\n可以输入 ` select user, plugin from mysql.user;` 查看到以下内容：\n<figure class=\"highlight gherkin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">+------------------+-----------------------+</span><br><span class=\"line\">|<span class=\"string\"> user             </span>|<span class=\"string\"> plugin                </span>|</span><br><span class=\"line\">+------------------+-----------------------+</span><br><span class=\"line\">|<span class=\"string\"> root             </span>|<span class=\"string\"> auth_socket           </span>|</span><br><span class=\"line\">|<span class=\"string\"> mysql.session    </span>|<span class=\"string\"> mysql_native_password </span>|</span><br><span class=\"line\">|<span class=\"string\"> mysql.sys        </span>|<span class=\"string\"> mysql_native_password </span>|</span><br><span class=\"line\">|<span class=\"string\"> debian-sys-maint </span>|<span class=\"string\"> mysql_native_password </span>|</span><br><span class=\"line\">+------------------+-----------------------+</span><br><span class=\"line\">4 rows in set (0.02 sec)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n修改后的：\n<figure class=\"highlight asciidoc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"code\">+------------------+</span>-----------------------+</span><br><span class=\"line\">| user             | plugin                |</span><br><span class=\"line\"><span class=\"code\">+------------------+</span>-----------------------+</span><br><span class=\"line\">| root             | mysql<span class=\"emphasis\">_native_</span>password |</span><br><span class=\"line\">| mysql.session    | mysql<span class=\"emphasis\">_native_</span>password |</span><br><span class=\"line\">| mysql.sys        | mysql<span class=\"emphasis\">_native_</span>password |</span><br><span class=\"line\">| debian-sys-maint | mysql<span class=\"emphasis\">_native_</span>password |</span><br><span class=\"line\"><span class=\"code\">+------------------+</span>-----------------------+</span><br><span class=\"line\">4 rows in set (0.02 sec)</span><br></pre></td></tr></table></figure>\nmysql_native_password这种系统root用户登录时才可以登录数据库的root用户。所以需要把auth_socket改为mysql_native_password，才可以不受系统用户限制。\n\n<p>然后<code>exit;</code>推出mysql。<code>sudo service mysql restart</code> 重启mysql服务</p>"},{"title":"webpack4从头构建一个简单的vue2项目","abbrlink":"b38ec8f3","date":"2019-04-20T08:22:45.000Z","_content":"\n### 前言\nvue早就有成熟的vue-cli工具了，现在是vue-cli 3.0了，但是觉得很有必要自己去实现一下，有助于自己技术的提高，也能更好地去了解webpack。本人是webpack菜鸟，有些资料是网上学习整理过来的。\n<!-- more -->\n\n### 1.新建目录文件夹\n第一步当然是新建工程目录了，具体怎么建就随便了，比如我建立webpackVue这个目录\n### 2.新建package.json文件\npackage.json是nodejs项目必需的配置文件。使用`npm init`,按照提示一步步填写项目名称，作者等信息\n### 3.webpack配置\n新建build文件夹\nbuild目录下新建webpack.base.conf.js,webpack.dev.conf.js,webpack.prod.conf.js文件，webpack.base.conf.js是公共基础配置，webpack.dev.conf.js是生产环境配置文件，webpack.prod.conf.js是生产环境配置。\n创建一个src目录，用来存放我们的项目源文件，然后创建main.js文件，创建一个index.html\n```\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>webpack4搭建vue</title>\n</head>\n<body>\n    <div id=\"app\"></div>\n</body>\n</html>\n```\n![](1.jpg) 目录结构是这样的\n\n下载webpack webpack-dev-server webpack-cli (这里webpack是局部安装)\n`npm i webpack webpack-dev-server webpack-cli -D`\n打开webpack.base.config.js，逐步添加配置\n```\nvar path = require('path');\nvar webpack = require('webpack');\nmodule.exports ={\n    //入口文件\n    entry:{\n        main: path.resolve(__dirname, '../src/main.js')\n    },\n    //输出目录\n    output:{\n        path: path.resolve(__dirname, '../dist'),\n        filename: '[name].[hash].js'\n    },\n    module:{\n        rules:[]\n    },\n    plugins:[\n        new webpack.HashedModuleIdsPlugin(), // 解决vender后面的hash每次都改变\n    ],\n    resolve:{\n\n    }\n}\n```\n### 4.配置loader\n配置babel编译代码：下载babel-loader，babel-core，babel-preset-dev。\n`npm i babel-loader babel-core babel-preset-env -D`\n\nbabel-preset-env 帮助我们配置 babel。我们只需要告诉它我们要兼容的情况（目标运行环境），它就会自动把代码转换为兼容对应环境的代码。\nbabel-core是作为babel的核心存在，babel的核心api都在这个模块里面\n这里有个注意的地方，就是babel的版本的问题，运行的时候根据提示安装合适的版本就好了，这里不记得是babel的哪个工具需要7的版本了。\n在webpack.base.conf.js文件中增加babel配置\n```\nrules:[\n    {\n        test: /\\.js$/, //匹配.js结尾的文件\n        use: ['babel-loader'],\n        exclude:/node_modules/ //排除node_modules里面的js\n    },\n]\n```\n新建.babelrc文件，.babelrc是babel全局配置文件\n```\n{\n    \"presets\":[\n        [\"env\",{\n            \"targets\": {    \n                \"browsers\": [\"> 1%\", \"last 2 versions\", \"not ie <=8\"],\n                //\"chrome\": 52,\n                //\"browsers\": [\"last 2 versions\", \"safari 7\"]\n            },       \n            \"modules\": false\n        }]\n    ]\n}\n```\n#### 下载file-loader\n`npm i file-loader -D`\n继续追加配置\n```\nrules:[\n    {\n        test: /\\.(jpg|png|svg|gif)$/,\n        use:['file-loader']\n    },\n    {\n        test:/\\.(woff|woff2|eot|ttf|otf)$/\n    },\n]\n```\n#### 下载css-loader，vue-style-loader，sass-loader， node-sass，less，less-loader并配置css，scss，sass,less\n`npm i css-loader vue-style-loader sass-loader node-sass less-loader less -D`\n```\nrules:[\n    {\n        test:/\\.(sa|sc|c)ss$/,\n        use:[\n            {\n                loader: 'vue-style-loader'\n            },\n            'css-loader',\n            'sass-loader'\n        ]\n    },\n    {\n        test:/\\.less$/,\n        use:[\n            {\n                loader: 'vue-style-loader'\n            },\n            'css-loader',\n            'sass-loader'\n        ]\n    },\n]\n```\n### 5.处理html文件\n下载html-webpack-plugin\n`npm i html-webpack-plugin -D`\n```\nvar HtmlWebpackPlugin = require('html-webpack-plugin'); //在base配置文件头部引入\nnew HtmlWebpackPlugin({\n    template: path.resolve(__dirname, '../index.html')\n}),\n```\n### 6.解析模块的配置和配置别名\n```\nresolve: {\n    // 能够使用户在引入模块时不带扩展\n    extensions: ['.js', '.json', '.vue', 'css'],\n    //别名\n    alias: {\n        'vue$':'vue/dist/vue.esm.js',\n        '@': path.resolve(__dirname, '../src')\n    }\n    \n}\n```\n### 7.配置webpack.dev.conf.js文件\n下载 webpack-merge，用于合并配置\n`npm i webpack-merge -D`\n```\nvar merge = require('webpack-merge');\nvar baseConfig = require('./webpack.base.conf');\nvar path = require('path');\nvar webpack = require('webpack');\nmodule.exports = merge(baseConfig, {\n    devtool: 'inline-source-map', // 压缩方式\n    mode: 'development',\n    devServer: {\n        hot: true, // 热更新\n        open: true, // 自动打开页面\n        contentBase: path.resolve(__dirname, '../src'), // 告诉服务从哪提供内容\n    },\n    plugins: [\n        new webpack.HotModuleReplacementPlugin(), //开启热更新\n    ]\n})\n```\n### 8.配置webpack.prod.conf.js\n```\nvar merge = require('webpack-merge');\nvar baseConfig = require('./webpack.base.conf');\nvar path = require('path');\nvar webpack = require('webpack');\nmodule.exports = merge(baseConfig, {\n    devtool: 'source-map', // 压缩方式\n    mode: 'production',\n    plugins: [\n\n    ]\n})\n```\n### 9.配置vue-loader\n首先要下载vue，以及vue相关的模块\n`npm i vue vue-loader vue-template-compiler -D`\n继续完善webpack.base.cond.js\n```\nvar VueLoaderPlugin=require('vue-loader/lib/plugin');\n//省略部分代码...\nrules:[\n    {\n        test: /\\.vue$/,\n        use: ['vue-loader'],\n        exclude: /node_modules/\n    },\n]\n//省略部分代码...\nplugins:[\n    new VueLoaderPlugin(), // 它的职责是将你定义过的其它规则复制并应用到 .vue 文件里相应语言的块\n]\n```\n在src目录新建app.vue文件和main.js文件\n```\n//app.vue\n<template>\n    <div>{{str}}</div>\n</template>\n<script>\n  export default {\n    name: 'App',\n    data () {\n      return {\n        str: '欢迎来到自定义webpack4+vue构建'\n      }\n    }\n  }\n</script>\n<style lang=\"scss\">\n  div {\n    color: red;\n  }\n</style>\n```\n```\n//main.js\nimport Vue from 'vue'\nimport App from './App'\n\nnew Vue({\n    el: \"#app\",\n    render: (h) => h(App)\n})\n```\n### 10.配置命令\n\n打开package.json文件，并配置开发和打包命令\n```\n// 省略代码。。。\n\"scripts\": {\n  \"dev\": \"webpack-dev-server  --progress --config build/webpack.dev.conf.js\",\n   \"build\": \"webpack --config build/webpack.prod.conf.js\"\n  }\n\n```\n`npm run dev` 就可以启动项目了\n![](2.png)\n\n## 继续优化...\n\n### 11. 区分环境引入不同地址\n\n新建config文件夹并新建dev.env.js和prod.env.js\n```\n//dev.env.js 开发环境配置\n'use strict'\n\nmodule.exports = {\n    NODE_ENV: \"development\",\n    BASE_API: \"http://1456\",\n}\n```\n\n```\n//prod.env.js 生产环境配置\n'use strict'\n\nmodule.exports = {\n    NODE_ENV: \"production\",    BASE_API: \"http://123.com\",\n}\n\n```\n### 12.优化webpack配置\n解决更改文件打包时dist文件没有清除，再次打包。\n下载clean-webpack-plugin，并配置webpack.prod.conf.js文件\n`npm i clean-webpack-plugin -D`\n\n```\n//webpack.prod.conf.js\n// 引入clean-webpack-plugin\nvar CleanWebpackPlugin = require('clean-webpack-plugin');\n// 省略代码。。。。\nplugins: [\n    new CleanWebPackPlugin();\n]\n\n```\n根据不同环境提取css\n下载mini-css-extract-plugin，并配置webpack.prod.conf.js文件\n`npm i mini-css-extract-plugin -D`\n```\n//webpack.prod.conf.js\nconst MiniCssExtractPlugin = require('mini-css-extract-plugin');\nmodule: {\n    rules: [\n        {\n            test: /\\.(c|sc|sa)ss$/,\n            use: [\n                {\n                loader: MiniCssExtractPlugin.loader,\n                },\n                'css-loader',\n                'sass-loader'\n            ]\n        },\n        {\n        test: /\\.less$/,\n        use: [\n            {\n            loader: MiniCssExtractPlugin.loader,\n            },\n            'css-loader',\n            'less-loader'\n            ]\n        }\n    ]\n},\nplugins: [\n    new MiniCssExtractPlugin({\n        filename: '[name].[hash].css'\n    })\n]\n\n```\n<font color=\"red\">webpack.base.conf.js中删除使用vue-style-loader的代码，并在webpack.dev.conf.js中定义</font>\n\n```\nmodule: {\n    rules: [\n      {\n        test: /\\.(c|sc|sa)ss$/,\n        use: [\n          {\n            loader: 'vue-style-loader',\n          },\n          'css-loader',\n          'sass-loader'\n        ]\n      },\n      {\n        test: /\\.less$/,\n        use: [\n          {\n            loader: 'vue-style-loader',\n          },\n          'css-loader',\n          'less-loader'\n         ]\n      }\n    ]\n  },\n//以上这段webpack.base.conf.js中的代码移到webpack.dev.conf.js中\n```\n[这个配置vue-loader中有提到](https://link.juejin.im?target=https%3A%2F%2Fvue-loader.vuejs.org%2Fzh%2Fguide%2Fextract-css.html%23webpack-4)\n\n#### 第三方库单独打包 \n把依赖的第三方库抽取出来单独打包，加快打包进度\n下载autodll-webpack-plugin\n`npm i autodll-webpack-plugin -D`\n\n在webpack.base.conf.js中配置\n```\n//webpack.base.conf.js\n//省略部分代码\nvar AutodllWebpackpackPlugin = require('autodll-webpack-plugin');\nplugins: [\n    new AutodllWebpackpackPlugin ({\n        inject: true,\n        debugger: true,\n        filename: '[name].js',\n        path: './dll',\n        entry: {\n            vendor: ['vue']\n        }\n    })\n]\n\n```\ntips: inject 为 true，插件会自动把打包出来的第三方库文件插入到 HTML。filename 是打包后文件的名称。path 是打包后的路径。entry 是入口，vendor 是你指定的名称，数组内容就是要打包的第三方库的名称，不要写全路径，Webpack 会自动去 node_modules 中找到的。\n#### 提取公共代码\n在 webpack.base.conf.js的 plugins 属性中添加如下插件对象\n`new webpack.optimize.SplitChunksPlugin()`\n#### 打包时压缩js和css\n下载optimize-css-assets-webpack-plugin和uglifyjs-webpack-plugin\n\n`npm i uglifyjs-webpack-plugin uglifyjs-webpack-plugin optimize-css-assets-webpack-plugin -D`\n\n在webpack.prod.conf.js中分别引入optimize-css-assets-webpack-plugin和uglifyjs-webpack-plugin并增加optimization\n```\n//webpack.prod.conf.js\nvar OptimizeCSSAssetsPlugin = require(\"optimize-css-assets-webpack-plugin\");\nvar UglifyJsPlugin = require(\"uglifyjs-webpack-plugin\");\n// 省略部分代码\noptimization: {\n        minimizer: [\n        // 压缩JS\n        new UglifyJsPlugin({\n        uglifyOptions: {\n            compress: {\n            warnings: false, // 去除警告\n            drop_debugger: true, // 去除debugger\n            drop_console: true // 去除console.log\n            },\n        },\n        cache: true, // 开启缓存\n        parallel: true, // 平行压缩\n        sourceMap: false // set to true if you want JS source maps\n        }),\n        // 压缩css\n        new OptimizeCSSAssetsPlugin({})\n    ]\n},\n\n```\n#### css自动加前缀\n下载postcss-loader 和autoprefixer\n`npm i postcss-loader autoprefixer -D`\n分别在webpack.dev.conf.js和webpack.prod.conf.js的use中添加postcss-loader\n在module中的rules中的use中追加：\n```\nuse: [\n    'postcss-loader'\n]\n```\n在项目下增加postcss.config.js\n```\n// 配置cssz加前缀\nmodule.exports = {\n  plugins: [\n    require('autoprefixer')\n  ]\n}\n```\n差不多就这样了,对了，还有一点就是打包出来的html里面引用`/dll/vendor.js`需要手动改成`./dll/vendor.js`这个下次也要优化下，我记得vue-cli 2版本中有一个地方是可以配置的","source":"_posts/webpack4从头构建一个简单的vue2项目.md","raw":"---\ntitle: webpack4从头构建一个简单的vue2项目\ntags:\n  - nodejs\n  - webpack\n  - vue\ncategories: 前端\nabbrlink: b38ec8f3\ndate: 2019-04-20 16:22:45\n---\n\n### 前言\nvue早就有成熟的vue-cli工具了，现在是vue-cli 3.0了，但是觉得很有必要自己去实现一下，有助于自己技术的提高，也能更好地去了解webpack。本人是webpack菜鸟，有些资料是网上学习整理过来的。\n<!-- more -->\n\n### 1.新建目录文件夹\n第一步当然是新建工程目录了，具体怎么建就随便了，比如我建立webpackVue这个目录\n### 2.新建package.json文件\npackage.json是nodejs项目必需的配置文件。使用`npm init`,按照提示一步步填写项目名称，作者等信息\n### 3.webpack配置\n新建build文件夹\nbuild目录下新建webpack.base.conf.js,webpack.dev.conf.js,webpack.prod.conf.js文件，webpack.base.conf.js是公共基础配置，webpack.dev.conf.js是生产环境配置文件，webpack.prod.conf.js是生产环境配置。\n创建一个src目录，用来存放我们的项目源文件，然后创建main.js文件，创建一个index.html\n```\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>webpack4搭建vue</title>\n</head>\n<body>\n    <div id=\"app\"></div>\n</body>\n</html>\n```\n![](1.jpg) 目录结构是这样的\n\n下载webpack webpack-dev-server webpack-cli (这里webpack是局部安装)\n`npm i webpack webpack-dev-server webpack-cli -D`\n打开webpack.base.config.js，逐步添加配置\n```\nvar path = require('path');\nvar webpack = require('webpack');\nmodule.exports ={\n    //入口文件\n    entry:{\n        main: path.resolve(__dirname, '../src/main.js')\n    },\n    //输出目录\n    output:{\n        path: path.resolve(__dirname, '../dist'),\n        filename: '[name].[hash].js'\n    },\n    module:{\n        rules:[]\n    },\n    plugins:[\n        new webpack.HashedModuleIdsPlugin(), // 解决vender后面的hash每次都改变\n    ],\n    resolve:{\n\n    }\n}\n```\n### 4.配置loader\n配置babel编译代码：下载babel-loader，babel-core，babel-preset-dev。\n`npm i babel-loader babel-core babel-preset-env -D`\n\nbabel-preset-env 帮助我们配置 babel。我们只需要告诉它我们要兼容的情况（目标运行环境），它就会自动把代码转换为兼容对应环境的代码。\nbabel-core是作为babel的核心存在，babel的核心api都在这个模块里面\n这里有个注意的地方，就是babel的版本的问题，运行的时候根据提示安装合适的版本就好了，这里不记得是babel的哪个工具需要7的版本了。\n在webpack.base.conf.js文件中增加babel配置\n```\nrules:[\n    {\n        test: /\\.js$/, //匹配.js结尾的文件\n        use: ['babel-loader'],\n        exclude:/node_modules/ //排除node_modules里面的js\n    },\n]\n```\n新建.babelrc文件，.babelrc是babel全局配置文件\n```\n{\n    \"presets\":[\n        [\"env\",{\n            \"targets\": {    \n                \"browsers\": [\"> 1%\", \"last 2 versions\", \"not ie <=8\"],\n                //\"chrome\": 52,\n                //\"browsers\": [\"last 2 versions\", \"safari 7\"]\n            },       \n            \"modules\": false\n        }]\n    ]\n}\n```\n#### 下载file-loader\n`npm i file-loader -D`\n继续追加配置\n```\nrules:[\n    {\n        test: /\\.(jpg|png|svg|gif)$/,\n        use:['file-loader']\n    },\n    {\n        test:/\\.(woff|woff2|eot|ttf|otf)$/\n    },\n]\n```\n#### 下载css-loader，vue-style-loader，sass-loader， node-sass，less，less-loader并配置css，scss，sass,less\n`npm i css-loader vue-style-loader sass-loader node-sass less-loader less -D`\n```\nrules:[\n    {\n        test:/\\.(sa|sc|c)ss$/,\n        use:[\n            {\n                loader: 'vue-style-loader'\n            },\n            'css-loader',\n            'sass-loader'\n        ]\n    },\n    {\n        test:/\\.less$/,\n        use:[\n            {\n                loader: 'vue-style-loader'\n            },\n            'css-loader',\n            'sass-loader'\n        ]\n    },\n]\n```\n### 5.处理html文件\n下载html-webpack-plugin\n`npm i html-webpack-plugin -D`\n```\nvar HtmlWebpackPlugin = require('html-webpack-plugin'); //在base配置文件头部引入\nnew HtmlWebpackPlugin({\n    template: path.resolve(__dirname, '../index.html')\n}),\n```\n### 6.解析模块的配置和配置别名\n```\nresolve: {\n    // 能够使用户在引入模块时不带扩展\n    extensions: ['.js', '.json', '.vue', 'css'],\n    //别名\n    alias: {\n        'vue$':'vue/dist/vue.esm.js',\n        '@': path.resolve(__dirname, '../src')\n    }\n    \n}\n```\n### 7.配置webpack.dev.conf.js文件\n下载 webpack-merge，用于合并配置\n`npm i webpack-merge -D`\n```\nvar merge = require('webpack-merge');\nvar baseConfig = require('./webpack.base.conf');\nvar path = require('path');\nvar webpack = require('webpack');\nmodule.exports = merge(baseConfig, {\n    devtool: 'inline-source-map', // 压缩方式\n    mode: 'development',\n    devServer: {\n        hot: true, // 热更新\n        open: true, // 自动打开页面\n        contentBase: path.resolve(__dirname, '../src'), // 告诉服务从哪提供内容\n    },\n    plugins: [\n        new webpack.HotModuleReplacementPlugin(), //开启热更新\n    ]\n})\n```\n### 8.配置webpack.prod.conf.js\n```\nvar merge = require('webpack-merge');\nvar baseConfig = require('./webpack.base.conf');\nvar path = require('path');\nvar webpack = require('webpack');\nmodule.exports = merge(baseConfig, {\n    devtool: 'source-map', // 压缩方式\n    mode: 'production',\n    plugins: [\n\n    ]\n})\n```\n### 9.配置vue-loader\n首先要下载vue，以及vue相关的模块\n`npm i vue vue-loader vue-template-compiler -D`\n继续完善webpack.base.cond.js\n```\nvar VueLoaderPlugin=require('vue-loader/lib/plugin');\n//省略部分代码...\nrules:[\n    {\n        test: /\\.vue$/,\n        use: ['vue-loader'],\n        exclude: /node_modules/\n    },\n]\n//省略部分代码...\nplugins:[\n    new VueLoaderPlugin(), // 它的职责是将你定义过的其它规则复制并应用到 .vue 文件里相应语言的块\n]\n```\n在src目录新建app.vue文件和main.js文件\n```\n//app.vue\n<template>\n    <div>{{str}}</div>\n</template>\n<script>\n  export default {\n    name: 'App',\n    data () {\n      return {\n        str: '欢迎来到自定义webpack4+vue构建'\n      }\n    }\n  }\n</script>\n<style lang=\"scss\">\n  div {\n    color: red;\n  }\n</style>\n```\n```\n//main.js\nimport Vue from 'vue'\nimport App from './App'\n\nnew Vue({\n    el: \"#app\",\n    render: (h) => h(App)\n})\n```\n### 10.配置命令\n\n打开package.json文件，并配置开发和打包命令\n```\n// 省略代码。。。\n\"scripts\": {\n  \"dev\": \"webpack-dev-server  --progress --config build/webpack.dev.conf.js\",\n   \"build\": \"webpack --config build/webpack.prod.conf.js\"\n  }\n\n```\n`npm run dev` 就可以启动项目了\n![](2.png)\n\n## 继续优化...\n\n### 11. 区分环境引入不同地址\n\n新建config文件夹并新建dev.env.js和prod.env.js\n```\n//dev.env.js 开发环境配置\n'use strict'\n\nmodule.exports = {\n    NODE_ENV: \"development\",\n    BASE_API: \"http://1456\",\n}\n```\n\n```\n//prod.env.js 生产环境配置\n'use strict'\n\nmodule.exports = {\n    NODE_ENV: \"production\",    BASE_API: \"http://123.com\",\n}\n\n```\n### 12.优化webpack配置\n解决更改文件打包时dist文件没有清除，再次打包。\n下载clean-webpack-plugin，并配置webpack.prod.conf.js文件\n`npm i clean-webpack-plugin -D`\n\n```\n//webpack.prod.conf.js\n// 引入clean-webpack-plugin\nvar CleanWebpackPlugin = require('clean-webpack-plugin');\n// 省略代码。。。。\nplugins: [\n    new CleanWebPackPlugin();\n]\n\n```\n根据不同环境提取css\n下载mini-css-extract-plugin，并配置webpack.prod.conf.js文件\n`npm i mini-css-extract-plugin -D`\n```\n//webpack.prod.conf.js\nconst MiniCssExtractPlugin = require('mini-css-extract-plugin');\nmodule: {\n    rules: [\n        {\n            test: /\\.(c|sc|sa)ss$/,\n            use: [\n                {\n                loader: MiniCssExtractPlugin.loader,\n                },\n                'css-loader',\n                'sass-loader'\n            ]\n        },\n        {\n        test: /\\.less$/,\n        use: [\n            {\n            loader: MiniCssExtractPlugin.loader,\n            },\n            'css-loader',\n            'less-loader'\n            ]\n        }\n    ]\n},\nplugins: [\n    new MiniCssExtractPlugin({\n        filename: '[name].[hash].css'\n    })\n]\n\n```\n<font color=\"red\">webpack.base.conf.js中删除使用vue-style-loader的代码，并在webpack.dev.conf.js中定义</font>\n\n```\nmodule: {\n    rules: [\n      {\n        test: /\\.(c|sc|sa)ss$/,\n        use: [\n          {\n            loader: 'vue-style-loader',\n          },\n          'css-loader',\n          'sass-loader'\n        ]\n      },\n      {\n        test: /\\.less$/,\n        use: [\n          {\n            loader: 'vue-style-loader',\n          },\n          'css-loader',\n          'less-loader'\n         ]\n      }\n    ]\n  },\n//以上这段webpack.base.conf.js中的代码移到webpack.dev.conf.js中\n```\n[这个配置vue-loader中有提到](https://link.juejin.im?target=https%3A%2F%2Fvue-loader.vuejs.org%2Fzh%2Fguide%2Fextract-css.html%23webpack-4)\n\n#### 第三方库单独打包 \n把依赖的第三方库抽取出来单独打包，加快打包进度\n下载autodll-webpack-plugin\n`npm i autodll-webpack-plugin -D`\n\n在webpack.base.conf.js中配置\n```\n//webpack.base.conf.js\n//省略部分代码\nvar AutodllWebpackpackPlugin = require('autodll-webpack-plugin');\nplugins: [\n    new AutodllWebpackpackPlugin ({\n        inject: true,\n        debugger: true,\n        filename: '[name].js',\n        path: './dll',\n        entry: {\n            vendor: ['vue']\n        }\n    })\n]\n\n```\ntips: inject 为 true，插件会自动把打包出来的第三方库文件插入到 HTML。filename 是打包后文件的名称。path 是打包后的路径。entry 是入口，vendor 是你指定的名称，数组内容就是要打包的第三方库的名称，不要写全路径，Webpack 会自动去 node_modules 中找到的。\n#### 提取公共代码\n在 webpack.base.conf.js的 plugins 属性中添加如下插件对象\n`new webpack.optimize.SplitChunksPlugin()`\n#### 打包时压缩js和css\n下载optimize-css-assets-webpack-plugin和uglifyjs-webpack-plugin\n\n`npm i uglifyjs-webpack-plugin uglifyjs-webpack-plugin optimize-css-assets-webpack-plugin -D`\n\n在webpack.prod.conf.js中分别引入optimize-css-assets-webpack-plugin和uglifyjs-webpack-plugin并增加optimization\n```\n//webpack.prod.conf.js\nvar OptimizeCSSAssetsPlugin = require(\"optimize-css-assets-webpack-plugin\");\nvar UglifyJsPlugin = require(\"uglifyjs-webpack-plugin\");\n// 省略部分代码\noptimization: {\n        minimizer: [\n        // 压缩JS\n        new UglifyJsPlugin({\n        uglifyOptions: {\n            compress: {\n            warnings: false, // 去除警告\n            drop_debugger: true, // 去除debugger\n            drop_console: true // 去除console.log\n            },\n        },\n        cache: true, // 开启缓存\n        parallel: true, // 平行压缩\n        sourceMap: false // set to true if you want JS source maps\n        }),\n        // 压缩css\n        new OptimizeCSSAssetsPlugin({})\n    ]\n},\n\n```\n#### css自动加前缀\n下载postcss-loader 和autoprefixer\n`npm i postcss-loader autoprefixer -D`\n分别在webpack.dev.conf.js和webpack.prod.conf.js的use中添加postcss-loader\n在module中的rules中的use中追加：\n```\nuse: [\n    'postcss-loader'\n]\n```\n在项目下增加postcss.config.js\n```\n// 配置cssz加前缀\nmodule.exports = {\n  plugins: [\n    require('autoprefixer')\n  ]\n}\n```\n差不多就这样了,对了，还有一点就是打包出来的html里面引用`/dll/vendor.js`需要手动改成`./dll/vendor.js`这个下次也要优化下，我记得vue-cli 2版本中有一个地方是可以配置的","slug":"webpack4从头构建一个简单的vue2项目","published":1,"updated":"2021-04-22T01:56:08.212Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckx9sf60q000rz8nk8nrtgwwi","content":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>vue早就有成熟的vue-cli工具了，现在是vue-cli 3.0了，但是觉得很有必要自己去实现一下，有助于自己技术的提高，也能更好地去了解webpack。本人是webpack菜鸟，有些资料是网上学习整理过来的。</p>\n<a id=\"more\"></a>\n\n<h3 id=\"1-新建目录文件夹\"><a href=\"#1-新建目录文件夹\" class=\"headerlink\" title=\"1.新建目录文件夹\"></a>1.新建目录文件夹</h3><p>第一步当然是新建工程目录了，具体怎么建就随便了，比如我建立webpackVue这个目录</p>\n<h3 id=\"2-新建package-json文件\"><a href=\"#2-新建package-json文件\" class=\"headerlink\" title=\"2.新建package.json文件\"></a>2.新建package.json文件</h3><p>package.json是nodejs项目必需的配置文件。使用<code>npm init</code>,按照提示一步步填写项目名称，作者等信息</p>\n<h3 id=\"3-webpack配置\"><a href=\"#3-webpack配置\" class=\"headerlink\" title=\"3.webpack配置\"></a>3.webpack配置</h3><p>新建build文件夹<br>build目录下新建webpack.base.conf.js,webpack.dev.conf.js,webpack.prod.conf.js文件，webpack.base.conf.js是公共基础配置，webpack.dev.conf.js是生产环境配置文件，webpack.prod.conf.js是生产环境配置。<br>创建一个src目录，用来存放我们的项目源文件，然后创建main.js文件，创建一个index.html</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>webpack4搭建vue<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;app&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"1.jpg\"> 目录结构是这样的</p>\n<p>下载webpack webpack-dev-server webpack-cli (这里webpack是局部安装)<br><code>npm i webpack webpack-dev-server webpack-cli -D</code><br>打开webpack.base.config.js，逐步添加配置</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;path&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> webpack = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;webpack&#x27;</span>);</span><br><span class=\"line\"><span class=\"built_in\">module</span>.<span class=\"built_in\">exports</span> =&#123;</span><br><span class=\"line\">    <span class=\"comment\">//入口文件</span></span><br><span class=\"line\">    entry:&#123;</span><br><span class=\"line\">        main: path.resolve(__dirname, <span class=\"string\">&#x27;../src/main.js&#x27;</span>)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">//输出目录</span></span><br><span class=\"line\">    output:&#123;</span><br><span class=\"line\">        path: path.resolve(__dirname, <span class=\"string\">&#x27;../dist&#x27;</span>),</span><br><span class=\"line\">        filename: <span class=\"string\">&#x27;[name].[hash].js&#x27;</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"keyword\">module</span>:&#123;</span><br><span class=\"line\">        rules:[]</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    plugins:[</span><br><span class=\"line\">        <span class=\"keyword\">new</span> webpack.HashedModuleIdsPlugin(), <span class=\"comment\">// 解决vender后面的hash每次都改变</span></span><br><span class=\"line\">    ],</span><br><span class=\"line\">    resolve:&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-配置loader\"><a href=\"#4-配置loader\" class=\"headerlink\" title=\"4.配置loader\"></a>4.配置loader</h3><p>配置babel编译代码：下载babel-loader，babel-core，babel-preset-dev。<br><code>npm i babel-loader babel-core babel-preset-env -D</code></p>\n<p>babel-preset-env 帮助我们配置 babel。我们只需要告诉它我们要兼容的情况（目标运行环境），它就会自动把代码转换为兼容对应环境的代码。<br>babel-core是作为babel的核心存在，babel的核心api都在这个模块里面<br>这里有个注意的地方，就是babel的版本的问题，运行的时候根据提示安装合适的版本就好了，这里不记得是babel的哪个工具需要7的版本了。<br>在webpack.base.conf.js文件中增加babel配置</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rules:[</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        test: <span class=\"regexp\">/\\.js$/</span>, <span class=\"regexp\">//</span>匹配.js结尾的文件</span><br><span class=\"line\">        use: [<span class=\"string\">&#x27;babel-loader&#x27;</span>],</span><br><span class=\"line\">        exclude:<span class=\"regexp\">/node_modules/</span> <span class=\"regexp\">//</span>排除node_modules里面的js</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<p>新建.babelrc文件，.babelrc是babel全局配置文件</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">&quot;presets&quot;</span>:[</span><br><span class=\"line\">        [<span class=\"string\">&quot;env&quot;</span>,&#123;</span><br><span class=\"line\">            <span class=\"attr\">&quot;targets&quot;</span>: &#123;    </span><br><span class=\"line\">                <span class=\"attr\">&quot;browsers&quot;</span>: [<span class=\"string\">&quot;&gt; 1%&quot;</span>, <span class=\"string\">&quot;last 2 versions&quot;</span>, <span class=\"string\">&quot;not ie &lt;=8&quot;</span>],</span><br><span class=\"line\">                <span class=\"comment\">//&quot;chrome&quot;: 52,</span></span><br><span class=\"line\">                <span class=\"comment\">//&quot;browsers&quot;: [&quot;last 2 versions&quot;, &quot;safari 7&quot;]</span></span><br><span class=\"line\">            &#125;,       </span><br><span class=\"line\">            <span class=\"attr\">&quot;modules&quot;</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">        &#125;]</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"下载file-loader\"><a href=\"#下载file-loader\" class=\"headerlink\" title=\"下载file-loader\"></a>下载file-loader</h4><p><code>npm i file-loader -D</code><br>继续追加配置</p>\n<figure class=\"highlight coq\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rules:[</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        test: /\\.(jpg|<span class=\"type\">png</span>|<span class=\"type\">svg</span>|<span class=\"type\">gif</span>)$/,</span><br><span class=\"line\">        use:[&#x27;file-loader&#x27;]</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        test:/\\.(woff|<span class=\"type\">woff2</span>|<span class=\"type\">eot</span>|<span class=\"type\">ttf</span>|<span class=\"type\">otf</span>)$/</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<h4 id=\"下载css-loader，vue-style-loader，sass-loader，-node-sass，less，less-loader并配置css，scss，sass-less\"><a href=\"#下载css-loader，vue-style-loader，sass-loader，-node-sass，less，less-loader并配置css，scss，sass-less\" class=\"headerlink\" title=\"下载css-loader，vue-style-loader，sass-loader， node-sass，less，less-loader并配置css，scss，sass,less\"></a>下载css-loader，vue-style-loader，sass-loader， node-sass，less，less-loader并配置css，scss，sass,less</h4><p><code>npm i css-loader vue-style-loader sass-loader node-sass less-loader less -D</code></p>\n<figure class=\"highlight sml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rules:[</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        test:/\\.(sa|sc|c)ss$/,</span><br><span class=\"line\">        use:[</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                loader: <span class=\"symbol\">&#x27;vue</span>-style-loader&#x27;</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            <span class=\"symbol\">&#x27;css</span>-loader&#x27;,</span><br><span class=\"line\">            <span class=\"symbol\">&#x27;sass</span>-loader&#x27;</span><br><span class=\"line\">        ]</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        test:/\\.less$/,</span><br><span class=\"line\">        use:[</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                loader: <span class=\"symbol\">&#x27;vue</span>-style-loader&#x27;</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            <span class=\"symbol\">&#x27;css</span>-loader&#x27;,</span><br><span class=\"line\">            <span class=\"symbol\">&#x27;sass</span>-loader&#x27;</span><br><span class=\"line\">        ]</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<h3 id=\"5-处理html文件\"><a href=\"#5-处理html文件\" class=\"headerlink\" title=\"5.处理html文件\"></a>5.处理html文件</h3><p>下载html-webpack-plugin<br><code>npm i html-webpack-plugin -D</code></p>\n<figure class=\"highlight haxe\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> HtmlWebpackPlugin = require(<span class=\"string\">&#x27;html-webpack-plugin&#x27;</span>); <span class=\"comment\">//在base配置文件头部引入</span></span><br><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"type\">HtmlWebpackPlugin</span>(&#123;</span><br><span class=\"line\">    template: <span class=\"type\">path</span>.resolve(__dirname, <span class=\"string\">&#x27;../index.html&#x27;</span>)</span><br><span class=\"line\">&#125;),</span><br></pre></td></tr></table></figure>\n<h3 id=\"6-解析模块的配置和配置别名\"><a href=\"#6-解析模块的配置和配置别名\" class=\"headerlink\" title=\"6.解析模块的配置和配置别名\"></a>6.解析模块的配置和配置别名</h3><figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">resolve</span>: &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 能够使用户在引入模块时不带扩展</span></span><br><span class=\"line\">    <span class=\"attribute\">extensions</span>: [<span class=\"string\">&#x27;.js&#x27;</span>, <span class=\"string\">&#x27;.json&#x27;</span>, <span class=\"string\">&#x27;.vue&#x27;</span>, <span class=\"string\">&#x27;css&#x27;</span>],</span><br><span class=\"line\">    <span class=\"comment\">//别名</span></span><br><span class=\"line\">    <span class=\"attribute\">alias</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">&#x27;vue$&#x27;</span>:<span class=\"string\">&#x27;vue/dist/vue.esm.js&#x27;</span>,</span><br><span class=\"line\">        <span class=\"string\">&#x27;@&#x27;</span>: path.resolve(__dirname, <span class=\"string\">&#x27;../src&#x27;</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"7-配置webpack-dev-conf-js文件\"><a href=\"#7-配置webpack-dev-conf-js文件\" class=\"headerlink\" title=\"7.配置webpack.dev.conf.js文件\"></a>7.配置webpack.dev.conf.js文件</h3><p>下载 webpack-merge，用于合并配置<br><code>npm i webpack-merge -D</code></p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> merge = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;webpack-merge&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> baseConfig = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./webpack.base.conf&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;path&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> webpack = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;webpack&#x27;</span>);</span><br><span class=\"line\"><span class=\"built_in\">module</span>.<span class=\"built_in\">exports</span> = merge(baseConfig, &#123;</span><br><span class=\"line\">    devtool: <span class=\"string\">&#x27;inline-source-map&#x27;</span>, <span class=\"comment\">// 压缩方式</span></span><br><span class=\"line\">    mode: <span class=\"string\">&#x27;development&#x27;</span>,</span><br><span class=\"line\">    devServer: &#123;</span><br><span class=\"line\">        hot: <span class=\"literal\">true</span>, <span class=\"comment\">// 热更新</span></span><br><span class=\"line\">        open: <span class=\"literal\">true</span>, <span class=\"comment\">// 自动打开页面</span></span><br><span class=\"line\">        contentBase: path.resolve(__dirname, <span class=\"string\">&#x27;../src&#x27;</span>), <span class=\"comment\">// 告诉服务从哪提供内容</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    plugins: [</span><br><span class=\"line\">        <span class=\"keyword\">new</span> webpack.HotModuleReplacementPlugin(), <span class=\"comment\">//开启热更新</span></span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h3 id=\"8-配置webpack-prod-conf-js\"><a href=\"#8-配置webpack-prod-conf-js\" class=\"headerlink\" title=\"8.配置webpack.prod.conf.js\"></a>8.配置webpack.prod.conf.js</h3><figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> merge = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;webpack-merge&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> baseConfig = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./webpack.base.conf&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;path&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> webpack = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;webpack&#x27;</span>);</span><br><span class=\"line\"><span class=\"built_in\">module</span>.<span class=\"built_in\">exports</span> = merge(baseConfig, &#123;</span><br><span class=\"line\">    devtool: <span class=\"string\">&#x27;source-map&#x27;</span>, <span class=\"comment\">// 压缩方式</span></span><br><span class=\"line\">    mode: <span class=\"string\">&#x27;production&#x27;</span>,</span><br><span class=\"line\">    plugins: [</span><br><span class=\"line\"></span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h3 id=\"9-配置vue-loader\"><a href=\"#9-配置vue-loader\" class=\"headerlink\" title=\"9.配置vue-loader\"></a>9.配置vue-loader</h3><p>首先要下载vue，以及vue相关的模块<br><code>npm i vue vue-loader vue-template-compiler -D</code><br>继续完善webpack.base.cond.js</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var VueLoaderPlugin=require(<span class=\"string\">&#x27;vue-loader/lib/plugin&#x27;</span>);</span><br><span class=\"line\"><span class=\"regexp\">//</span>省略部分代码...</span><br><span class=\"line\">rules:[</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        test: <span class=\"regexp\">/\\.vue$/</span>,</span><br><span class=\"line\">        use: [<span class=\"string\">&#x27;vue-loader&#x27;</span>],</span><br><span class=\"line\">        exclude: <span class=\"regexp\">/node_modules/</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">]</span><br><span class=\"line\"><span class=\"regexp\">//</span>省略部分代码...</span><br><span class=\"line\">plugins:[</span><br><span class=\"line\">    new VueLoaderPlugin(), <span class=\"regexp\">//</span> 它的职责是将你定义过的其它规则复制并应用到 .vue 文件里相应语言的块</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<p>在src目录新建app.vue文件和main.js文件</p>\n<figure class=\"highlight handlebars\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"xml\">//app.vue</span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><span class=\"template-variable\">&#123;&#123;<span class=\"name\">str</span>&#125;&#125;</span><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">  export default &#123;</span></span><br><span class=\"line\"><span class=\"xml\">    name: &#x27;App&#x27;,</span></span><br><span class=\"line\"><span class=\"xml\">    data () &#123;</span></span><br><span class=\"line\"><span class=\"xml\">      return &#123;</span></span><br><span class=\"line\"><span class=\"xml\">        str: &#x27;欢迎来到自定义webpack4+vue构建&#x27;</span></span><br><span class=\"line\"><span class=\"xml\">      &#125;</span></span><br><span class=\"line\"><span class=\"xml\">    &#125;</span></span><br><span class=\"line\"><span class=\"xml\">  &#125;</span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;scss&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">  div &#123;</span></span><br><span class=\"line\"><span class=\"xml\">    color: red;</span></span><br><span class=\"line\"><span class=\"xml\">  &#125;</span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight coffeescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//main.js</span><br><span class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> App <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./App&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">    el: <span class=\"string\">&quot;#app&quot;</span>,</span><br><span class=\"line\">    render: <span class=\"function\"><span class=\"params\">(h)</span> =&gt;</span> h(App)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h3 id=\"10-配置命令\"><a href=\"#10-配置命令\" class=\"headerlink\" title=\"10.配置命令\"></a>10.配置命令</h3><p>打开package.json文件，并配置开发和打包命令</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"regexp\">//</span> 省略代码。。。</span><br><span class=\"line\"><span class=\"string\">&quot;scripts&quot;</span>: &#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;dev&quot;</span>: <span class=\"string\">&quot;webpack-dev-server  --progress --config build/webpack.dev.conf.js&quot;</span>,</span><br><span class=\"line\">   <span class=\"string\">&quot;build&quot;</span>: <span class=\"string\">&quot;webpack --config build/webpack.prod.conf.js&quot;</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><code>npm run dev</code> 就可以启动项目了<br><img src=\"2.png\"></p>\n<h2 id=\"继续优化…\"><a href=\"#继续优化…\" class=\"headerlink\" title=\"继续优化…\"></a>继续优化…</h2><h3 id=\"11-区分环境引入不同地址\"><a href=\"#11-区分环境引入不同地址\" class=\"headerlink\" title=\"11. 区分环境引入不同地址\"></a>11. 区分环境引入不同地址</h3><p>新建config文件夹并新建dev.env.js和prod.env.js</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//dev.env.js 开发环境配置</span></span><br><span class=\"line\"><span class=\"meta\">&#x27;use strict&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">    NODE_ENV: <span class=\"string\">&quot;development&quot;</span>,</span><br><span class=\"line\">    BASE_API: <span class=\"string\">&quot;http://1456&quot;</span>,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//prod.env.js 生产环境配置</span></span><br><span class=\"line\"><span class=\"meta\">&#x27;use strict&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">    NODE_ENV: <span class=\"string\">&quot;production&quot;</span>,    <span class=\"attr\">BASE_API</span>: <span class=\"string\">&quot;http://123.com&quot;</span>,</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"12-优化webpack配置\"><a href=\"#12-优化webpack配置\" class=\"headerlink\" title=\"12.优化webpack配置\"></a>12.优化webpack配置</h3><p>解决更改文件打包时dist文件没有清除，再次打包。<br>下载clean-webpack-plugin，并配置webpack.prod.conf.js文件<br><code>npm i clean-webpack-plugin -D</code></p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"regexp\">//</span>webpack.prod.conf.js</span><br><span class=\"line\"><span class=\"regexp\">//</span> 引入clean-webpack-plugin</span><br><span class=\"line\">var CleanWebpackPlugin = require(<span class=\"string\">&#x27;clean-webpack-plugin&#x27;</span>);</span><br><span class=\"line\"><span class=\"regexp\">//</span> 省略代码。。。。</span><br><span class=\"line\">plugins: [</span><br><span class=\"line\">    new CleanWebPackPlugin();</span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>根据不同环境提取css<br>下载mini-css-extract-plugin，并配置webpack.prod.conf.js文件<br><code>npm i mini-css-extract-plugin -D</code></p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//webpack.prod.conf.js</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> MiniCssExtractPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;mini-css-extract-plugin&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">module</span>: &#123;</span><br><span class=\"line\">    rules: [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            test: <span class=\"regexp\">/\\.(c|sc|sa)ss$/</span>,</span><br><span class=\"line\">            use: [</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                loader: MiniCssExtractPlugin.loader,</span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">                <span class=\"string\">&#x27;css-loader&#x27;</span>,</span><br><span class=\"line\">                <span class=\"string\">&#x27;sass-loader&#x27;</span></span><br><span class=\"line\">            ]</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">        test: <span class=\"regexp\">/\\.less$/</span>,</span><br><span class=\"line\">        use: [</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">            loader: MiniCssExtractPlugin.loader,</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            <span class=\"string\">&#x27;css-loader&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;less-loader&#x27;</span></span><br><span class=\"line\">            ]</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">plugins: [</span><br><span class=\"line\">    <span class=\"keyword\">new</span> MiniCssExtractPlugin(&#123;</span><br><span class=\"line\">        filename: <span class=\"string\">&#x27;[name].[hash].css&#x27;</span></span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><font color=\"red\">webpack.base.conf.js中删除使用vue-style-loader的代码，并在webpack.dev.conf.js中定义</font></p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">module</span>: &#123;</span><br><span class=\"line\">    rules: [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        test: <span class=\"regexp\">/\\.(c|sc|sa)ss$/</span>,</span><br><span class=\"line\">        use: [</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            loader: <span class=\"string\">&#x27;vue-style-loader&#x27;</span>,</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          <span class=\"string\">&#x27;css-loader&#x27;</span>,</span><br><span class=\"line\">          <span class=\"string\">&#x27;sass-loader&#x27;</span></span><br><span class=\"line\">        ]</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        test: <span class=\"regexp\">/\\.less$/</span>,</span><br><span class=\"line\">        use: [</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            loader: <span class=\"string\">&#x27;vue-style-loader&#x27;</span>,</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          <span class=\"string\">&#x27;css-loader&#x27;</span>,</span><br><span class=\"line\">          <span class=\"string\">&#x27;less-loader&#x27;</span></span><br><span class=\"line\">         ]</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"><span class=\"comment\">//以上这段webpack.base.conf.js中的代码移到webpack.dev.conf.js中</span></span><br></pre></td></tr></table></figure>\n<p><a href=\"https://link.juejin.im/?target=https://vue-loader.vuejs.org/zh/guide/extract-css.html%23webpack-4\">这个配置vue-loader中有提到</a></p>\n<h4 id=\"第三方库单独打包\"><a href=\"#第三方库单独打包\" class=\"headerlink\" title=\"第三方库单独打包\"></a>第三方库单独打包</h4><p>把依赖的第三方库抽取出来单独打包，加快打包进度<br>下载autodll-webpack-plugin<br><code>npm i autodll-webpack-plugin -D</code></p>\n<p>在webpack.base.conf.js中配置</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//webpack.base.conf.js</span></span><br><span class=\"line\"><span class=\"comment\">//省略部分代码</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> AutodllWebpackpackPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;autodll-webpack-plugin&#x27;</span>);</span><br><span class=\"line\">plugins: [</span><br><span class=\"line\">    <span class=\"keyword\">new</span> AutodllWebpackpackPlugin (&#123;</span><br><span class=\"line\">        inject: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"keyword\">debugger</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        filename: <span class=\"string\">&#x27;[name].js&#x27;</span>,</span><br><span class=\"line\">        path: <span class=\"string\">&#x27;./dll&#x27;</span>,</span><br><span class=\"line\">        entry: &#123;</span><br><span class=\"line\">            vendor: [<span class=\"string\">&#x27;vue&#x27;</span>]</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>tips: inject 为 true，插件会自动把打包出来的第三方库文件插入到 HTML。filename 是打包后文件的名称。path 是打包后的路径。entry 是入口，vendor 是你指定的名称，数组内容就是要打包的第三方库的名称，不要写全路径，Webpack 会自动去 node_modules 中找到的。</p>\n<h4 id=\"提取公共代码\"><a href=\"#提取公共代码\" class=\"headerlink\" title=\"提取公共代码\"></a>提取公共代码</h4><p>在 webpack.base.conf.js的 plugins 属性中添加如下插件对象<br><code>new webpack.optimize.SplitChunksPlugin()</code></p>\n<h4 id=\"打包时压缩js和css\"><a href=\"#打包时压缩js和css\" class=\"headerlink\" title=\"打包时压缩js和css\"></a>打包时压缩js和css</h4><p>下载optimize-css-assets-webpack-plugin和uglifyjs-webpack-plugin</p>\n<p><code>npm i uglifyjs-webpack-plugin uglifyjs-webpack-plugin optimize-css-assets-webpack-plugin -D</code></p>\n<p>在webpack.prod.conf.js中分别引入optimize-css-assets-webpack-plugin和uglifyjs-webpack-plugin并增加optimization</p>\n<figure class=\"highlight lasso\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//webpack.prod.conf.js</span></span><br><span class=\"line\"><span class=\"built_in\">var</span> OptimizeCSSAssetsPlugin = <span class=\"keyword\">require</span>(<span class=\"string\">&quot;optimize-css-assets-webpack-plugin&quot;</span>);</span><br><span class=\"line\"><span class=\"built_in\">var</span> UglifyJsPlugin = <span class=\"keyword\">require</span>(<span class=\"string\">&quot;uglifyjs-webpack-plugin&quot;</span>);</span><br><span class=\"line\"><span class=\"comment\">// 省略部分代码</span></span><br><span class=\"line\">optimization: &#123;</span><br><span class=\"line\">        minimizer: <span class=\"meta\">[</span></span><br><span class=\"line\">        <span class=\"comment\">// 压缩JS</span></span><br><span class=\"line\">        <span class=\"literal\">new</span> UglifyJsPlugin(&#123;</span><br><span class=\"line\">        uglifyOptions: &#123;</span><br><span class=\"line\">            compress: &#123;</span><br><span class=\"line\">            warnings: <span class=\"literal\">false</span>, <span class=\"comment\">// 去除警告</span></span><br><span class=\"line\">            drop_debugger: <span class=\"literal\">true</span>, <span class=\"comment\">// 去除debugger</span></span><br><span class=\"line\">            drop_console: <span class=\"literal\">true</span> <span class=\"comment\">// 去除console.log</span></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"keyword\">cache</span>: <span class=\"literal\">true</span>, <span class=\"comment\">// 开启缓存</span></span><br><span class=\"line\">        parallel: <span class=\"literal\">true</span>, <span class=\"comment\">// 平行压缩</span></span><br><span class=\"line\">        sourceMap: <span class=\"literal\">false</span> <span class=\"comment\">// set to true if you want JS source maps</span></span><br><span class=\"line\">        &#125;),</span><br><span class=\"line\">        <span class=\"comment\">// 压缩css</span></span><br><span class=\"line\">        <span class=\"literal\">new</span> OptimizeCSSAssetsPlugin(&#123;&#125;)</span><br><span class=\"line\">    <span class=\"meta\">]</span></span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h4 id=\"css自动加前缀\"><a href=\"#css自动加前缀\" class=\"headerlink\" title=\"css自动加前缀\"></a>css自动加前缀</h4><p>下载postcss-loader 和autoprefixer<br><code>npm i postcss-loader autoprefixer -D</code><br>分别在webpack.dev.conf.js和webpack.prod.conf.js的use中添加postcss-loader<br>在module中的rules中的use中追加：</p>\n<figure class=\"highlight actionscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">use</span>: [</span><br><span class=\"line\">    <span class=\"string\">&#x27;postcss-loader&#x27;</span></span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<p>在项目下增加postcss.config.js</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 配置cssz加前缀</span></span><br><span class=\"line\"><span class=\"built_in\">module</span>.<span class=\"built_in\">exports</span> = &#123;</span><br><span class=\"line\">  plugins: [</span><br><span class=\"line\">    <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;autoprefixer&#x27;</span>)</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>差不多就这样了,对了，还有一点就是打包出来的html里面引用<code>/dll/vendor.js</code>需要手动改成<code>./dll/vendor.js</code>这个下次也要优化下，我记得vue-cli 2版本中有一个地方是可以配置的</p>\n","site":{"data":{}},"excerpt":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>vue早就有成熟的vue-cli工具了，现在是vue-cli 3.0了，但是觉得很有必要自己去实现一下，有助于自己技术的提高，也能更好地去了解webpack。本人是webpack菜鸟，有些资料是网上学习整理过来的。</p>","more":"<h3 id=\"1-新建目录文件夹\"><a href=\"#1-新建目录文件夹\" class=\"headerlink\" title=\"1.新建目录文件夹\"></a>1.新建目录文件夹</h3><p>第一步当然是新建工程目录了，具体怎么建就随便了，比如我建立webpackVue这个目录</p>\n<h3 id=\"2-新建package-json文件\"><a href=\"#2-新建package-json文件\" class=\"headerlink\" title=\"2.新建package.json文件\"></a>2.新建package.json文件</h3><p>package.json是nodejs项目必需的配置文件。使用<code>npm init</code>,按照提示一步步填写项目名称，作者等信息</p>\n<h3 id=\"3-webpack配置\"><a href=\"#3-webpack配置\" class=\"headerlink\" title=\"3.webpack配置\"></a>3.webpack配置</h3><p>新建build文件夹<br>build目录下新建webpack.base.conf.js,webpack.dev.conf.js,webpack.prod.conf.js文件，webpack.base.conf.js是公共基础配置，webpack.dev.conf.js是生产环境配置文件，webpack.prod.conf.js是生产环境配置。<br>创建一个src目录，用来存放我们的项目源文件，然后创建main.js文件，创建一个index.html</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>webpack4搭建vue<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;app&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"1.jpg\"> 目录结构是这样的</p>\n<p>下载webpack webpack-dev-server webpack-cli (这里webpack是局部安装)<br><code>npm i webpack webpack-dev-server webpack-cli -D</code><br>打开webpack.base.config.js，逐步添加配置</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;path&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> webpack = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;webpack&#x27;</span>);</span><br><span class=\"line\"><span class=\"built_in\">module</span>.<span class=\"built_in\">exports</span> =&#123;</span><br><span class=\"line\">    <span class=\"comment\">//入口文件</span></span><br><span class=\"line\">    entry:&#123;</span><br><span class=\"line\">        main: path.resolve(__dirname, <span class=\"string\">&#x27;../src/main.js&#x27;</span>)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">//输出目录</span></span><br><span class=\"line\">    output:&#123;</span><br><span class=\"line\">        path: path.resolve(__dirname, <span class=\"string\">&#x27;../dist&#x27;</span>),</span><br><span class=\"line\">        filename: <span class=\"string\">&#x27;[name].[hash].js&#x27;</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"keyword\">module</span>:&#123;</span><br><span class=\"line\">        rules:[]</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    plugins:[</span><br><span class=\"line\">        <span class=\"keyword\">new</span> webpack.HashedModuleIdsPlugin(), <span class=\"comment\">// 解决vender后面的hash每次都改变</span></span><br><span class=\"line\">    ],</span><br><span class=\"line\">    resolve:&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-配置loader\"><a href=\"#4-配置loader\" class=\"headerlink\" title=\"4.配置loader\"></a>4.配置loader</h3><p>配置babel编译代码：下载babel-loader，babel-core，babel-preset-dev。<br><code>npm i babel-loader babel-core babel-preset-env -D</code></p>\n<p>babel-preset-env 帮助我们配置 babel。我们只需要告诉它我们要兼容的情况（目标运行环境），它就会自动把代码转换为兼容对应环境的代码。<br>babel-core是作为babel的核心存在，babel的核心api都在这个模块里面<br>这里有个注意的地方，就是babel的版本的问题，运行的时候根据提示安装合适的版本就好了，这里不记得是babel的哪个工具需要7的版本了。<br>在webpack.base.conf.js文件中增加babel配置</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rules:[</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        test: <span class=\"regexp\">/\\.js$/</span>, <span class=\"regexp\">//</span>匹配.js结尾的文件</span><br><span class=\"line\">        use: [<span class=\"string\">&#x27;babel-loader&#x27;</span>],</span><br><span class=\"line\">        exclude:<span class=\"regexp\">/node_modules/</span> <span class=\"regexp\">//</span>排除node_modules里面的js</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<p>新建.babelrc文件，.babelrc是babel全局配置文件</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">&quot;presets&quot;</span>:[</span><br><span class=\"line\">        [<span class=\"string\">&quot;env&quot;</span>,&#123;</span><br><span class=\"line\">            <span class=\"attr\">&quot;targets&quot;</span>: &#123;    </span><br><span class=\"line\">                <span class=\"attr\">&quot;browsers&quot;</span>: [<span class=\"string\">&quot;&gt; 1%&quot;</span>, <span class=\"string\">&quot;last 2 versions&quot;</span>, <span class=\"string\">&quot;not ie &lt;=8&quot;</span>],</span><br><span class=\"line\">                <span class=\"comment\">//&quot;chrome&quot;: 52,</span></span><br><span class=\"line\">                <span class=\"comment\">//&quot;browsers&quot;: [&quot;last 2 versions&quot;, &quot;safari 7&quot;]</span></span><br><span class=\"line\">            &#125;,       </span><br><span class=\"line\">            <span class=\"attr\">&quot;modules&quot;</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">        &#125;]</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"下载file-loader\"><a href=\"#下载file-loader\" class=\"headerlink\" title=\"下载file-loader\"></a>下载file-loader</h4><p><code>npm i file-loader -D</code><br>继续追加配置</p>\n<figure class=\"highlight coq\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rules:[</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        test: /\\.(jpg|<span class=\"type\">png</span>|<span class=\"type\">svg</span>|<span class=\"type\">gif</span>)$/,</span><br><span class=\"line\">        use:[&#x27;file-loader&#x27;]</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        test:/\\.(woff|<span class=\"type\">woff2</span>|<span class=\"type\">eot</span>|<span class=\"type\">ttf</span>|<span class=\"type\">otf</span>)$/</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<h4 id=\"下载css-loader，vue-style-loader，sass-loader，-node-sass，less，less-loader并配置css，scss，sass-less\"><a href=\"#下载css-loader，vue-style-loader，sass-loader，-node-sass，less，less-loader并配置css，scss，sass-less\" class=\"headerlink\" title=\"下载css-loader，vue-style-loader，sass-loader， node-sass，less，less-loader并配置css，scss，sass,less\"></a>下载css-loader，vue-style-loader，sass-loader， node-sass，less，less-loader并配置css，scss，sass,less</h4><p><code>npm i css-loader vue-style-loader sass-loader node-sass less-loader less -D</code></p>\n<figure class=\"highlight sml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rules:[</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        test:/\\.(sa|sc|c)ss$/,</span><br><span class=\"line\">        use:[</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                loader: <span class=\"symbol\">&#x27;vue</span>-style-loader&#x27;</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            <span class=\"symbol\">&#x27;css</span>-loader&#x27;,</span><br><span class=\"line\">            <span class=\"symbol\">&#x27;sass</span>-loader&#x27;</span><br><span class=\"line\">        ]</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        test:/\\.less$/,</span><br><span class=\"line\">        use:[</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                loader: <span class=\"symbol\">&#x27;vue</span>-style-loader&#x27;</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            <span class=\"symbol\">&#x27;css</span>-loader&#x27;,</span><br><span class=\"line\">            <span class=\"symbol\">&#x27;sass</span>-loader&#x27;</span><br><span class=\"line\">        ]</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<h3 id=\"5-处理html文件\"><a href=\"#5-处理html文件\" class=\"headerlink\" title=\"5.处理html文件\"></a>5.处理html文件</h3><p>下载html-webpack-plugin<br><code>npm i html-webpack-plugin -D</code></p>\n<figure class=\"highlight haxe\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> HtmlWebpackPlugin = require(<span class=\"string\">&#x27;html-webpack-plugin&#x27;</span>); <span class=\"comment\">//在base配置文件头部引入</span></span><br><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"type\">HtmlWebpackPlugin</span>(&#123;</span><br><span class=\"line\">    template: <span class=\"type\">path</span>.resolve(__dirname, <span class=\"string\">&#x27;../index.html&#x27;</span>)</span><br><span class=\"line\">&#125;),</span><br></pre></td></tr></table></figure>\n<h3 id=\"6-解析模块的配置和配置别名\"><a href=\"#6-解析模块的配置和配置别名\" class=\"headerlink\" title=\"6.解析模块的配置和配置别名\"></a>6.解析模块的配置和配置别名</h3><figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">resolve</span>: &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 能够使用户在引入模块时不带扩展</span></span><br><span class=\"line\">    <span class=\"attribute\">extensions</span>: [<span class=\"string\">&#x27;.js&#x27;</span>, <span class=\"string\">&#x27;.json&#x27;</span>, <span class=\"string\">&#x27;.vue&#x27;</span>, <span class=\"string\">&#x27;css&#x27;</span>],</span><br><span class=\"line\">    <span class=\"comment\">//别名</span></span><br><span class=\"line\">    <span class=\"attribute\">alias</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">&#x27;vue$&#x27;</span>:<span class=\"string\">&#x27;vue/dist/vue.esm.js&#x27;</span>,</span><br><span class=\"line\">        <span class=\"string\">&#x27;@&#x27;</span>: path.resolve(__dirname, <span class=\"string\">&#x27;../src&#x27;</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"7-配置webpack-dev-conf-js文件\"><a href=\"#7-配置webpack-dev-conf-js文件\" class=\"headerlink\" title=\"7.配置webpack.dev.conf.js文件\"></a>7.配置webpack.dev.conf.js文件</h3><p>下载 webpack-merge，用于合并配置<br><code>npm i webpack-merge -D</code></p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> merge = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;webpack-merge&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> baseConfig = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./webpack.base.conf&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;path&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> webpack = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;webpack&#x27;</span>);</span><br><span class=\"line\"><span class=\"built_in\">module</span>.<span class=\"built_in\">exports</span> = merge(baseConfig, &#123;</span><br><span class=\"line\">    devtool: <span class=\"string\">&#x27;inline-source-map&#x27;</span>, <span class=\"comment\">// 压缩方式</span></span><br><span class=\"line\">    mode: <span class=\"string\">&#x27;development&#x27;</span>,</span><br><span class=\"line\">    devServer: &#123;</span><br><span class=\"line\">        hot: <span class=\"literal\">true</span>, <span class=\"comment\">// 热更新</span></span><br><span class=\"line\">        open: <span class=\"literal\">true</span>, <span class=\"comment\">// 自动打开页面</span></span><br><span class=\"line\">        contentBase: path.resolve(__dirname, <span class=\"string\">&#x27;../src&#x27;</span>), <span class=\"comment\">// 告诉服务从哪提供内容</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    plugins: [</span><br><span class=\"line\">        <span class=\"keyword\">new</span> webpack.HotModuleReplacementPlugin(), <span class=\"comment\">//开启热更新</span></span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h3 id=\"8-配置webpack-prod-conf-js\"><a href=\"#8-配置webpack-prod-conf-js\" class=\"headerlink\" title=\"8.配置webpack.prod.conf.js\"></a>8.配置webpack.prod.conf.js</h3><figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> merge = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;webpack-merge&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> baseConfig = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./webpack.base.conf&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;path&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> webpack = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;webpack&#x27;</span>);</span><br><span class=\"line\"><span class=\"built_in\">module</span>.<span class=\"built_in\">exports</span> = merge(baseConfig, &#123;</span><br><span class=\"line\">    devtool: <span class=\"string\">&#x27;source-map&#x27;</span>, <span class=\"comment\">// 压缩方式</span></span><br><span class=\"line\">    mode: <span class=\"string\">&#x27;production&#x27;</span>,</span><br><span class=\"line\">    plugins: [</span><br><span class=\"line\"></span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h3 id=\"9-配置vue-loader\"><a href=\"#9-配置vue-loader\" class=\"headerlink\" title=\"9.配置vue-loader\"></a>9.配置vue-loader</h3><p>首先要下载vue，以及vue相关的模块<br><code>npm i vue vue-loader vue-template-compiler -D</code><br>继续完善webpack.base.cond.js</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var VueLoaderPlugin=require(<span class=\"string\">&#x27;vue-loader/lib/plugin&#x27;</span>);</span><br><span class=\"line\"><span class=\"regexp\">//</span>省略部分代码...</span><br><span class=\"line\">rules:[</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        test: <span class=\"regexp\">/\\.vue$/</span>,</span><br><span class=\"line\">        use: [<span class=\"string\">&#x27;vue-loader&#x27;</span>],</span><br><span class=\"line\">        exclude: <span class=\"regexp\">/node_modules/</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">]</span><br><span class=\"line\"><span class=\"regexp\">//</span>省略部分代码...</span><br><span class=\"line\">plugins:[</span><br><span class=\"line\">    new VueLoaderPlugin(), <span class=\"regexp\">//</span> 它的职责是将你定义过的其它规则复制并应用到 .vue 文件里相应语言的块</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<p>在src目录新建app.vue文件和main.js文件</p>\n<figure class=\"highlight handlebars\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"xml\">//app.vue</span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><span class=\"template-variable\">&#123;&#123;<span class=\"name\">str</span>&#125;&#125;</span><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">  export default &#123;</span></span><br><span class=\"line\"><span class=\"xml\">    name: &#x27;App&#x27;,</span></span><br><span class=\"line\"><span class=\"xml\">    data () &#123;</span></span><br><span class=\"line\"><span class=\"xml\">      return &#123;</span></span><br><span class=\"line\"><span class=\"xml\">        str: &#x27;欢迎来到自定义webpack4+vue构建&#x27;</span></span><br><span class=\"line\"><span class=\"xml\">      &#125;</span></span><br><span class=\"line\"><span class=\"xml\">    &#125;</span></span><br><span class=\"line\"><span class=\"xml\">  &#125;</span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;scss&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">  div &#123;</span></span><br><span class=\"line\"><span class=\"xml\">    color: red;</span></span><br><span class=\"line\"><span class=\"xml\">  &#125;</span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight coffeescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//main.js</span><br><span class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> App <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./App&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">    el: <span class=\"string\">&quot;#app&quot;</span>,</span><br><span class=\"line\">    render: <span class=\"function\"><span class=\"params\">(h)</span> =&gt;</span> h(App)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h3 id=\"10-配置命令\"><a href=\"#10-配置命令\" class=\"headerlink\" title=\"10.配置命令\"></a>10.配置命令</h3><p>打开package.json文件，并配置开发和打包命令</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"regexp\">//</span> 省略代码。。。</span><br><span class=\"line\"><span class=\"string\">&quot;scripts&quot;</span>: &#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;dev&quot;</span>: <span class=\"string\">&quot;webpack-dev-server  --progress --config build/webpack.dev.conf.js&quot;</span>,</span><br><span class=\"line\">   <span class=\"string\">&quot;build&quot;</span>: <span class=\"string\">&quot;webpack --config build/webpack.prod.conf.js&quot;</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><code>npm run dev</code> 就可以启动项目了<br><img src=\"2.png\"></p>\n<h2 id=\"继续优化…\"><a href=\"#继续优化…\" class=\"headerlink\" title=\"继续优化…\"></a>继续优化…</h2><h3 id=\"11-区分环境引入不同地址\"><a href=\"#11-区分环境引入不同地址\" class=\"headerlink\" title=\"11. 区分环境引入不同地址\"></a>11. 区分环境引入不同地址</h3><p>新建config文件夹并新建dev.env.js和prod.env.js</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//dev.env.js 开发环境配置</span></span><br><span class=\"line\"><span class=\"meta\">&#x27;use strict&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">    NODE_ENV: <span class=\"string\">&quot;development&quot;</span>,</span><br><span class=\"line\">    BASE_API: <span class=\"string\">&quot;http://1456&quot;</span>,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//prod.env.js 生产环境配置</span></span><br><span class=\"line\"><span class=\"meta\">&#x27;use strict&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">    NODE_ENV: <span class=\"string\">&quot;production&quot;</span>,    <span class=\"attr\">BASE_API</span>: <span class=\"string\">&quot;http://123.com&quot;</span>,</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"12-优化webpack配置\"><a href=\"#12-优化webpack配置\" class=\"headerlink\" title=\"12.优化webpack配置\"></a>12.优化webpack配置</h3><p>解决更改文件打包时dist文件没有清除，再次打包。<br>下载clean-webpack-plugin，并配置webpack.prod.conf.js文件<br><code>npm i clean-webpack-plugin -D</code></p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"regexp\">//</span>webpack.prod.conf.js</span><br><span class=\"line\"><span class=\"regexp\">//</span> 引入clean-webpack-plugin</span><br><span class=\"line\">var CleanWebpackPlugin = require(<span class=\"string\">&#x27;clean-webpack-plugin&#x27;</span>);</span><br><span class=\"line\"><span class=\"regexp\">//</span> 省略代码。。。。</span><br><span class=\"line\">plugins: [</span><br><span class=\"line\">    new CleanWebPackPlugin();</span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>根据不同环境提取css<br>下载mini-css-extract-plugin，并配置webpack.prod.conf.js文件<br><code>npm i mini-css-extract-plugin -D</code></p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//webpack.prod.conf.js</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> MiniCssExtractPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;mini-css-extract-plugin&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">module</span>: &#123;</span><br><span class=\"line\">    rules: [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            test: <span class=\"regexp\">/\\.(c|sc|sa)ss$/</span>,</span><br><span class=\"line\">            use: [</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                loader: MiniCssExtractPlugin.loader,</span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">                <span class=\"string\">&#x27;css-loader&#x27;</span>,</span><br><span class=\"line\">                <span class=\"string\">&#x27;sass-loader&#x27;</span></span><br><span class=\"line\">            ]</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">        test: <span class=\"regexp\">/\\.less$/</span>,</span><br><span class=\"line\">        use: [</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">            loader: MiniCssExtractPlugin.loader,</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            <span class=\"string\">&#x27;css-loader&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;less-loader&#x27;</span></span><br><span class=\"line\">            ]</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">plugins: [</span><br><span class=\"line\">    <span class=\"keyword\">new</span> MiniCssExtractPlugin(&#123;</span><br><span class=\"line\">        filename: <span class=\"string\">&#x27;[name].[hash].css&#x27;</span></span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><font color=\"red\">webpack.base.conf.js中删除使用vue-style-loader的代码，并在webpack.dev.conf.js中定义</font></p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">module</span>: &#123;</span><br><span class=\"line\">    rules: [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        test: <span class=\"regexp\">/\\.(c|sc|sa)ss$/</span>,</span><br><span class=\"line\">        use: [</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            loader: <span class=\"string\">&#x27;vue-style-loader&#x27;</span>,</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          <span class=\"string\">&#x27;css-loader&#x27;</span>,</span><br><span class=\"line\">          <span class=\"string\">&#x27;sass-loader&#x27;</span></span><br><span class=\"line\">        ]</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        test: <span class=\"regexp\">/\\.less$/</span>,</span><br><span class=\"line\">        use: [</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            loader: <span class=\"string\">&#x27;vue-style-loader&#x27;</span>,</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          <span class=\"string\">&#x27;css-loader&#x27;</span>,</span><br><span class=\"line\">          <span class=\"string\">&#x27;less-loader&#x27;</span></span><br><span class=\"line\">         ]</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"><span class=\"comment\">//以上这段webpack.base.conf.js中的代码移到webpack.dev.conf.js中</span></span><br></pre></td></tr></table></figure>\n<p><a href=\"https://link.juejin.im/?target=https://vue-loader.vuejs.org/zh/guide/extract-css.html%23webpack-4\">这个配置vue-loader中有提到</a></p>\n<h4 id=\"第三方库单独打包\"><a href=\"#第三方库单独打包\" class=\"headerlink\" title=\"第三方库单独打包\"></a>第三方库单独打包</h4><p>把依赖的第三方库抽取出来单独打包，加快打包进度<br>下载autodll-webpack-plugin<br><code>npm i autodll-webpack-plugin -D</code></p>\n<p>在webpack.base.conf.js中配置</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//webpack.base.conf.js</span></span><br><span class=\"line\"><span class=\"comment\">//省略部分代码</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> AutodllWebpackpackPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;autodll-webpack-plugin&#x27;</span>);</span><br><span class=\"line\">plugins: [</span><br><span class=\"line\">    <span class=\"keyword\">new</span> AutodllWebpackpackPlugin (&#123;</span><br><span class=\"line\">        inject: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"keyword\">debugger</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        filename: <span class=\"string\">&#x27;[name].js&#x27;</span>,</span><br><span class=\"line\">        path: <span class=\"string\">&#x27;./dll&#x27;</span>,</span><br><span class=\"line\">        entry: &#123;</span><br><span class=\"line\">            vendor: [<span class=\"string\">&#x27;vue&#x27;</span>]</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>tips: inject 为 true，插件会自动把打包出来的第三方库文件插入到 HTML。filename 是打包后文件的名称。path 是打包后的路径。entry 是入口，vendor 是你指定的名称，数组内容就是要打包的第三方库的名称，不要写全路径，Webpack 会自动去 node_modules 中找到的。</p>\n<h4 id=\"提取公共代码\"><a href=\"#提取公共代码\" class=\"headerlink\" title=\"提取公共代码\"></a>提取公共代码</h4><p>在 webpack.base.conf.js的 plugins 属性中添加如下插件对象<br><code>new webpack.optimize.SplitChunksPlugin()</code></p>\n<h4 id=\"打包时压缩js和css\"><a href=\"#打包时压缩js和css\" class=\"headerlink\" title=\"打包时压缩js和css\"></a>打包时压缩js和css</h4><p>下载optimize-css-assets-webpack-plugin和uglifyjs-webpack-plugin</p>\n<p><code>npm i uglifyjs-webpack-plugin uglifyjs-webpack-plugin optimize-css-assets-webpack-plugin -D</code></p>\n<p>在webpack.prod.conf.js中分别引入optimize-css-assets-webpack-plugin和uglifyjs-webpack-plugin并增加optimization</p>\n<figure class=\"highlight lasso\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//webpack.prod.conf.js</span></span><br><span class=\"line\"><span class=\"built_in\">var</span> OptimizeCSSAssetsPlugin = <span class=\"keyword\">require</span>(<span class=\"string\">&quot;optimize-css-assets-webpack-plugin&quot;</span>);</span><br><span class=\"line\"><span class=\"built_in\">var</span> UglifyJsPlugin = <span class=\"keyword\">require</span>(<span class=\"string\">&quot;uglifyjs-webpack-plugin&quot;</span>);</span><br><span class=\"line\"><span class=\"comment\">// 省略部分代码</span></span><br><span class=\"line\">optimization: &#123;</span><br><span class=\"line\">        minimizer: <span class=\"meta\">[</span></span><br><span class=\"line\">        <span class=\"comment\">// 压缩JS</span></span><br><span class=\"line\">        <span class=\"literal\">new</span> UglifyJsPlugin(&#123;</span><br><span class=\"line\">        uglifyOptions: &#123;</span><br><span class=\"line\">            compress: &#123;</span><br><span class=\"line\">            warnings: <span class=\"literal\">false</span>, <span class=\"comment\">// 去除警告</span></span><br><span class=\"line\">            drop_debugger: <span class=\"literal\">true</span>, <span class=\"comment\">// 去除debugger</span></span><br><span class=\"line\">            drop_console: <span class=\"literal\">true</span> <span class=\"comment\">// 去除console.log</span></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"keyword\">cache</span>: <span class=\"literal\">true</span>, <span class=\"comment\">// 开启缓存</span></span><br><span class=\"line\">        parallel: <span class=\"literal\">true</span>, <span class=\"comment\">// 平行压缩</span></span><br><span class=\"line\">        sourceMap: <span class=\"literal\">false</span> <span class=\"comment\">// set to true if you want JS source maps</span></span><br><span class=\"line\">        &#125;),</span><br><span class=\"line\">        <span class=\"comment\">// 压缩css</span></span><br><span class=\"line\">        <span class=\"literal\">new</span> OptimizeCSSAssetsPlugin(&#123;&#125;)</span><br><span class=\"line\">    <span class=\"meta\">]</span></span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h4 id=\"css自动加前缀\"><a href=\"#css自动加前缀\" class=\"headerlink\" title=\"css自动加前缀\"></a>css自动加前缀</h4><p>下载postcss-loader 和autoprefixer<br><code>npm i postcss-loader autoprefixer -D</code><br>分别在webpack.dev.conf.js和webpack.prod.conf.js的use中添加postcss-loader<br>在module中的rules中的use中追加：</p>\n<figure class=\"highlight actionscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">use</span>: [</span><br><span class=\"line\">    <span class=\"string\">&#x27;postcss-loader&#x27;</span></span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<p>在项目下增加postcss.config.js</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 配置cssz加前缀</span></span><br><span class=\"line\"><span class=\"built_in\">module</span>.<span class=\"built_in\">exports</span> = &#123;</span><br><span class=\"line\">  plugins: [</span><br><span class=\"line\">    <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;autoprefixer&#x27;</span>)</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>差不多就这样了,对了，还有一点就是打包出来的html里面引用<code>/dll/vendor.js</code>需要手动改成<code>./dll/vendor.js</code>这个下次也要优化下，我记得vue-cli 2版本中有一个地方是可以配置的</p>"},{"title":"windows下使用nexus搭建私有仓库并使用vue-cli 3 搭建组件库","abbrlink":"73a5b140","date":"2019-08-13T02:21:42.000Z","_content":"\n主要分为两部分：第一部分是nexus私有仓库的搭建，第二部分是vue-cli 3的组件搭建并发布到nexus本地仓库。\n## nexus私有仓库的搭建\n<!-- more -->\n### 环境搭建\n1. 首先需要在[<font style=\"color:red\">官网</font>](https://www.sonatype.com/oss-thank-you-win64.zip?submissionGuid=2c6a43fc-9aa5-4acc-b995-87cb63b04d66)下载nexus windows版本（注意：需要翻墙，自备梯子）。\n2. 以管理员身份运行cmd（注意：必须是管理员运行且必须是cmd，win10的powershell都会报错），然后切换到`C:\\node\\nexus\\nexus-3.18.0-01-win64\\nexus-3.18.0-01\\bin` 软件下载后的解压目录。\n<font style=\"color:red\">nexus启动前，最好修改下`C:\\node\\nexus\\nexus-3.18.0-01-win64\\nexus-3.18.0-01\\bin\\nexus.vmoptions`的配置</font>，防止出现内存不足的报错导致无法启动，我这里修改为\n```\n-Xms600m\n-Xmx600m\n-XX:MaxDirectMemorySize=1G\n```\n默认都是约2G\n\n```\nnexus.exe /install #执行安装命令， 成功后会提示Installed service 'nexus\nnexus.exe /run #运行服务，首次运行需要等待1~2分钟\n```\n3. 启动完毕后,进入 http://(本机IP):8081（最好是自定义电脑ip），点击右上角Sign In进行登录，默认账号 admin\n默认密码存放在`C:\\node\\nexus\\nexus-3.18.0-01-win64\\sonatype-work\\nexus3\\**.password` 打开文件后复制密码串进行登录，\n登录后会提示修改密码，修改完重新登录即可。然后`**.password`文件就会自动删除。\n\n### 添加npm仓库\n\n点击左侧菜单Repositories 查看仓库列表\n![](1.png)\n* 点击Create repository按钮创建仓库\n* group表示分组 hosted表示本机私有 proxy表示远程代理（中央仓库）\n* 若registry配置为group（包括hosted和proxy）,首次会从hosted拉取，若无则从proxy拉取并缓存，下次则直接从缓存取\n\n1. 添加npm(proxy)仓库：\n选择npm(proxy)\n输入`Name: npmjs.org`\n`Remote storage: https://registry.npmjs.org`\n如图：\n![](2.png)\n\n2. 添加npm(hosted)仓库：\n选择npm(hosted)\n输入`Name：npm-hosted`用于存放自己发布的私有包\n如图：\n![](3.png)\n3. 添加npm(group)仓库：\n选择npm(group)\n输入`Name: npm-group`，并在Member repositories里选择之前添加的两个移到右边\n如图：\n![](4.png)\n\n### 配置与验证npm仓库\n添加发布角色用户及权限\n1. 添加权限认证 将npm Beared Token Realm 添加至右边\n如图：\n![](5.png)\n2. 创建nx-deploy角色并赋予一个nx-repository-view---*的权限码\n![](6.png)\n3. 创建deployer用户 同时设定角色为nx-deploy\n![](7.png)\n\n### 变更依赖源\n安装nrm `npm i -g nrm`\n\n```\nnpm config set registry https://registry.npm.taobao.org #设置为探宝源\nnrm add private http://192.168.38.64:8081/repository/npm-all/ #本机ip\nnrm use private #使用私有源\n```\n### 发布流程\n每次发布前记得在package.json中检查version 有没有修改，要确认比上一个版本号高\n### 编译文件\n`yarn lib`或者使用npm\n### 登录npm\n`npm login -registry http://192.168.38.64:8081/repository/npm-hosted/`\n### 发布\n`npm publish -registry http://192.168.38.64:8081/repository/npm-hosted/`\n发布成功后在npm-hosted 能看到发布后的包\n![](8.png)\n### 使用方式\n\n```\n\"dependencies\": {\n\"组件库名称\": \"版本号\"\n}\n\nimport 组件库名称 from '组件库名称'\nVue.use(组件库名称)\n```\n### 项目启动\n`yarn serve`或者使用npm\n### 组件库文件目录结构\n\n```\n├── examples                      # 示例展示  \n│   ├── api                       # 接口类  \n│   ├── assets                    # 资源文件夹  \n│   ├── common                    # 工具类  \n│   ├── components                # 项目内部组件  \n│   ├── page                      # 页面  \n│   ├── router                    # 路由配置  \n│   ├── style                     # 页面样式问题，主题等  \n│   ├── App.vue                   # 入口页面  \n│   ├── main.js                   # 入口文件 加载组件 初始化等  \n├── lib                           # 编译后输出的组件目录  \n├── packages                      # 公共组件目录    \n│   ├── query-drop-box            # demo组件  \n│   ├── simple-input              # demo组件  \n│   ├── index.js                  # 组件入口文件  \n├── public                        # 静态资源  \n│   │── favicon.ico               # favicon图标  \n│   └── index.html                # html模板  \n├── .gitignore                    # git 配置  \n├── .npmignore                    # npm 配置  \n├── vue.config.js                 # vue-cli 配置  \n├── babel.config.js               # babel 配置  \n├── yarn.lock                     # yarn依赖 配置  \n└── package.json                  # package.json  \n```\n这里贴一下`vue.config.js`文件的配置：\n```\nconst path = require('path');\nfunction resolve(dir) {\n    return path.join(__dirname, dir)\n}\n\nmodule.exports = {\n    pages: {\n        index: {\n            entry: 'examples/main.js',\n            template: 'public/index.html',\n            filename: 'index.html'\n        }\n    },\n    productionSourceMap: false,\n    css: {\n        extract: false,\n        modules: false,\n        sourceMap: false,\n        loaderOptions: {}\n    },\n\n    // 扩展 webpack 配置，使 packages 加入编译\n    chainWebpack: config => {\n        config.module\n            .rule('js')\n            .include\n            .add('/packages/')\n            .end()\n            .use('babel')\n            .loader('babel-loader')\n            .tap(options => {\n                // 修改它的选项...\n                return options\n            })\n        config.resolve.alias\n            .set('@', resolve('examples'))\n            .set('src', resolve('examples'))\n            .set('components', resolve('examples/components'))\n            .set('examples', resolve('examples'))\n            .set('common', resolve('examples/common'))\n            .set('packages', resolve('packages'))\n            .set('api', resolve('examples/api'))\n            /* 添加分析工具*/\n        if (process.env.NODE_ENV === 'production') {\n            if (process.env.npm_config_report) {\n                config\n                    .plugin('webpack-bundle-analyzer')\n                    .use(require('webpack-bundle-analyzer').BundleAnalyzerPlugin)\n                    .end()\n                config.plugins.delete('prefetch')\n            }\n        }\n    }\n}\n```","source":"_posts/windows下使用nexus搭建私有仓库并使用vue-cli-3-搭建组件库.md","raw":"---\ntitle: windows下使用nexus搭建私有仓库并使用vue-cli 3 搭建组件库\nabbrlink: 73a5b140\ndate: 2019-08-13 10:21:42\ntags:\n  - nexus\n  - vue\ncategories: 前端\n---\n\n主要分为两部分：第一部分是nexus私有仓库的搭建，第二部分是vue-cli 3的组件搭建并发布到nexus本地仓库。\n## nexus私有仓库的搭建\n<!-- more -->\n### 环境搭建\n1. 首先需要在[<font style=\"color:red\">官网</font>](https://www.sonatype.com/oss-thank-you-win64.zip?submissionGuid=2c6a43fc-9aa5-4acc-b995-87cb63b04d66)下载nexus windows版本（注意：需要翻墙，自备梯子）。\n2. 以管理员身份运行cmd（注意：必须是管理员运行且必须是cmd，win10的powershell都会报错），然后切换到`C:\\node\\nexus\\nexus-3.18.0-01-win64\\nexus-3.18.0-01\\bin` 软件下载后的解压目录。\n<font style=\"color:red\">nexus启动前，最好修改下`C:\\node\\nexus\\nexus-3.18.0-01-win64\\nexus-3.18.0-01\\bin\\nexus.vmoptions`的配置</font>，防止出现内存不足的报错导致无法启动，我这里修改为\n```\n-Xms600m\n-Xmx600m\n-XX:MaxDirectMemorySize=1G\n```\n默认都是约2G\n\n```\nnexus.exe /install #执行安装命令， 成功后会提示Installed service 'nexus\nnexus.exe /run #运行服务，首次运行需要等待1~2分钟\n```\n3. 启动完毕后,进入 http://(本机IP):8081（最好是自定义电脑ip），点击右上角Sign In进行登录，默认账号 admin\n默认密码存放在`C:\\node\\nexus\\nexus-3.18.0-01-win64\\sonatype-work\\nexus3\\**.password` 打开文件后复制密码串进行登录，\n登录后会提示修改密码，修改完重新登录即可。然后`**.password`文件就会自动删除。\n\n### 添加npm仓库\n\n点击左侧菜单Repositories 查看仓库列表\n![](1.png)\n* 点击Create repository按钮创建仓库\n* group表示分组 hosted表示本机私有 proxy表示远程代理（中央仓库）\n* 若registry配置为group（包括hosted和proxy）,首次会从hosted拉取，若无则从proxy拉取并缓存，下次则直接从缓存取\n\n1. 添加npm(proxy)仓库：\n选择npm(proxy)\n输入`Name: npmjs.org`\n`Remote storage: https://registry.npmjs.org`\n如图：\n![](2.png)\n\n2. 添加npm(hosted)仓库：\n选择npm(hosted)\n输入`Name：npm-hosted`用于存放自己发布的私有包\n如图：\n![](3.png)\n3. 添加npm(group)仓库：\n选择npm(group)\n输入`Name: npm-group`，并在Member repositories里选择之前添加的两个移到右边\n如图：\n![](4.png)\n\n### 配置与验证npm仓库\n添加发布角色用户及权限\n1. 添加权限认证 将npm Beared Token Realm 添加至右边\n如图：\n![](5.png)\n2. 创建nx-deploy角色并赋予一个nx-repository-view---*的权限码\n![](6.png)\n3. 创建deployer用户 同时设定角色为nx-deploy\n![](7.png)\n\n### 变更依赖源\n安装nrm `npm i -g nrm`\n\n```\nnpm config set registry https://registry.npm.taobao.org #设置为探宝源\nnrm add private http://192.168.38.64:8081/repository/npm-all/ #本机ip\nnrm use private #使用私有源\n```\n### 发布流程\n每次发布前记得在package.json中检查version 有没有修改，要确认比上一个版本号高\n### 编译文件\n`yarn lib`或者使用npm\n### 登录npm\n`npm login -registry http://192.168.38.64:8081/repository/npm-hosted/`\n### 发布\n`npm publish -registry http://192.168.38.64:8081/repository/npm-hosted/`\n发布成功后在npm-hosted 能看到发布后的包\n![](8.png)\n### 使用方式\n\n```\n\"dependencies\": {\n\"组件库名称\": \"版本号\"\n}\n\nimport 组件库名称 from '组件库名称'\nVue.use(组件库名称)\n```\n### 项目启动\n`yarn serve`或者使用npm\n### 组件库文件目录结构\n\n```\n├── examples                      # 示例展示  \n│   ├── api                       # 接口类  \n│   ├── assets                    # 资源文件夹  \n│   ├── common                    # 工具类  \n│   ├── components                # 项目内部组件  \n│   ├── page                      # 页面  \n│   ├── router                    # 路由配置  \n│   ├── style                     # 页面样式问题，主题等  \n│   ├── App.vue                   # 入口页面  \n│   ├── main.js                   # 入口文件 加载组件 初始化等  \n├── lib                           # 编译后输出的组件目录  \n├── packages                      # 公共组件目录    \n│   ├── query-drop-box            # demo组件  \n│   ├── simple-input              # demo组件  \n│   ├── index.js                  # 组件入口文件  \n├── public                        # 静态资源  \n│   │── favicon.ico               # favicon图标  \n│   └── index.html                # html模板  \n├── .gitignore                    # git 配置  \n├── .npmignore                    # npm 配置  \n├── vue.config.js                 # vue-cli 配置  \n├── babel.config.js               # babel 配置  \n├── yarn.lock                     # yarn依赖 配置  \n└── package.json                  # package.json  \n```\n这里贴一下`vue.config.js`文件的配置：\n```\nconst path = require('path');\nfunction resolve(dir) {\n    return path.join(__dirname, dir)\n}\n\nmodule.exports = {\n    pages: {\n        index: {\n            entry: 'examples/main.js',\n            template: 'public/index.html',\n            filename: 'index.html'\n        }\n    },\n    productionSourceMap: false,\n    css: {\n        extract: false,\n        modules: false,\n        sourceMap: false,\n        loaderOptions: {}\n    },\n\n    // 扩展 webpack 配置，使 packages 加入编译\n    chainWebpack: config => {\n        config.module\n            .rule('js')\n            .include\n            .add('/packages/')\n            .end()\n            .use('babel')\n            .loader('babel-loader')\n            .tap(options => {\n                // 修改它的选项...\n                return options\n            })\n        config.resolve.alias\n            .set('@', resolve('examples'))\n            .set('src', resolve('examples'))\n            .set('components', resolve('examples/components'))\n            .set('examples', resolve('examples'))\n            .set('common', resolve('examples/common'))\n            .set('packages', resolve('packages'))\n            .set('api', resolve('examples/api'))\n            /* 添加分析工具*/\n        if (process.env.NODE_ENV === 'production') {\n            if (process.env.npm_config_report) {\n                config\n                    .plugin('webpack-bundle-analyzer')\n                    .use(require('webpack-bundle-analyzer').BundleAnalyzerPlugin)\n                    .end()\n                config.plugins.delete('prefetch')\n            }\n        }\n    }\n}\n```","slug":"windows下使用nexus搭建私有仓库并使用vue-cli-3-搭建组件库","published":1,"updated":"2021-04-22T01:56:08.212Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckx9sf60r000uz8nk9mnkenje","content":"<p>主要分为两部分：第一部分是nexus私有仓库的搭建，第二部分是vue-cli 3的组件搭建并发布到nexus本地仓库。</p>\n<h2 id=\"nexus私有仓库的搭建\"><a href=\"#nexus私有仓库的搭建\" class=\"headerlink\" title=\"nexus私有仓库的搭建\"></a>nexus私有仓库的搭建</h2><a id=\"more\"></a>\n<h3 id=\"环境搭建\"><a href=\"#环境搭建\" class=\"headerlink\" title=\"环境搭建\"></a>环境搭建</h3><ol>\n<li>首先需要在<a href=\"https://www.sonatype.com/oss-thank-you-win64.zip?submissionGuid=2c6a43fc-9aa5-4acc-b995-87cb63b04d66\"><font style=\"color:red\">官网</font></a>下载nexus windows版本（注意：需要翻墙，自备梯子）。</li>\n<li>以管理员身份运行cmd（注意：必须是管理员运行且必须是cmd，win10的powershell都会报错），然后切换到<code>C:\\node\\nexus\\nexus-3.18.0-01-win64\\nexus-3.18.0-01\\bin</code> 软件下载后的解压目录。<br><font style=\"color:red\">nexus启动前，最好修改下<code>C:\\node\\nexus\\nexus-3.18.0-01-win64\\nexus-3.18.0-01\\bin\\nexus.vmoptions</code>的配置</font>，防止出现内存不足的报错导致无法启动，我这里修改为<figure class=\"highlight diff\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"deletion\">-Xms600m</span></span><br><span class=\"line\"><span class=\"deletion\">-Xmx600m</span></span><br><span class=\"line\"><span class=\"deletion\">-XX:MaxDirectMemorySize=1G</span></span><br></pre></td></tr></table></figure>\n默认都是约2G</li>\n</ol>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nexus.exe /install #执行安装命令， 成功后会提示Installed<span class=\"built_in\"> service </span><span class=\"string\">&#x27;nexus</span></span><br><span class=\"line\"><span class=\"string\">nexus.exe /run #运行服务，首次运行需要等待1~2分钟</span></span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>启动完毕后,进入 http://(本机IP):8081（最好是自定义电脑ip），点击右上角Sign In进行登录，默认账号 admin<br>默认密码存放在<code>C:\\node\\nexus\\nexus-3.18.0-01-win64\\sonatype-work\\nexus3\\**.password</code> 打开文件后复制密码串进行登录，<br>登录后会提示修改密码，修改完重新登录即可。然后<code>**.password</code>文件就会自动删除。</li>\n</ol>\n<h3 id=\"添加npm仓库\"><a href=\"#添加npm仓库\" class=\"headerlink\" title=\"添加npm仓库\"></a>添加npm仓库</h3><p>点击左侧菜单Repositories 查看仓库列表<br><img src=\"1.png\"></p>\n<ul>\n<li>点击Create repository按钮创建仓库</li>\n<li>group表示分组 hosted表示本机私有 proxy表示远程代理（中央仓库）</li>\n<li>若registry配置为group（包括hosted和proxy）,首次会从hosted拉取，若无则从proxy拉取并缓存，下次则直接从缓存取</li>\n</ul>\n<ol>\n<li><p>添加npm(proxy)仓库：<br>选择npm(proxy)<br>输入<code>Name: npmjs.org</code><br><code>Remote storage: https://registry.npmjs.org</code><br>如图：<br><img src=\"2.png\"></p>\n</li>\n<li><p>添加npm(hosted)仓库：<br>选择npm(hosted)<br>输入<code>Name：npm-hosted</code>用于存放自己发布的私有包<br>如图：<br><img src=\"3.png\"></p>\n</li>\n<li><p>添加npm(group)仓库：<br>选择npm(group)<br>输入<code>Name: npm-group</code>，并在Member repositories里选择之前添加的两个移到右边<br>如图：<br><img src=\"4.png\"></p>\n</li>\n</ol>\n<h3 id=\"配置与验证npm仓库\"><a href=\"#配置与验证npm仓库\" class=\"headerlink\" title=\"配置与验证npm仓库\"></a>配置与验证npm仓库</h3><p>添加发布角色用户及权限</p>\n<ol>\n<li>添加权限认证 将npm Beared Token Realm 添加至右边<br>如图：<br><img src=\"5.png\"></li>\n<li>创建nx-deploy角色并赋予一个nx-repository-view—*的权限码<br><img src=\"6.png\"></li>\n<li>创建deployer用户 同时设定角色为nx-deploy<br><img src=\"7.png\"></li>\n</ol>\n<h3 id=\"变更依赖源\"><a href=\"#变更依赖源\" class=\"headerlink\" title=\"变更依赖源\"></a>变更依赖源</h3><p>安装nrm <code>npm i -g nrm</code></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm config <span class=\"keyword\">set</span> registry https://registry.npm.taobao.org <span class=\"comment\">#设置为探宝源</span></span><br><span class=\"line\">nrm <span class=\"keyword\">add</span> <span class=\"keyword\">private</span> <span class=\"keyword\">http</span>://<span class=\"number\">192.168</span><span class=\"number\">.38</span><span class=\"number\">.64</span>:<span class=\"number\">8081</span>/repository/npm-<span class=\"keyword\">all</span>/ <span class=\"comment\">#本机ip</span></span><br><span class=\"line\">nrm <span class=\"keyword\">use</span> <span class=\"keyword\">private</span> <span class=\"comment\">#使用私有源</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"发布流程\"><a href=\"#发布流程\" class=\"headerlink\" title=\"发布流程\"></a>发布流程</h3><p>每次发布前记得在package.json中检查version 有没有修改，要确认比上一个版本号高</p>\n<h3 id=\"编译文件\"><a href=\"#编译文件\" class=\"headerlink\" title=\"编译文件\"></a>编译文件</h3><p><code>yarn lib</code>或者使用npm</p>\n<h3 id=\"登录npm\"><a href=\"#登录npm\" class=\"headerlink\" title=\"登录npm\"></a>登录npm</h3><p><code>npm login -registry http://192.168.38.64:8081/repository/npm-hosted/</code></p>\n<h3 id=\"发布\"><a href=\"#发布\" class=\"headerlink\" title=\"发布\"></a>发布</h3><p><code>npm publish -registry http://192.168.38.64:8081/repository/npm-hosted/</code><br>发布成功后在npm-hosted 能看到发布后的包<br><img src=\"8.png\"></p>\n<h3 id=\"使用方式\"><a href=\"#使用方式\" class=\"headerlink\" title=\"使用方式\"></a>使用方式</h3><figure class=\"highlight clean\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;dependencies&quot;</span>: &#123;</span><br><span class=\"line\"><span class=\"string\">&quot;组件库名称&quot;</span>: <span class=\"string\">&quot;版本号&quot;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> 组件库名称 <span class=\"keyword\">from</span> <span class=\"string\">&#x27;组件库名称&#x27;</span></span><br><span class=\"line\">Vue.use(组件库名称)</span><br></pre></td></tr></table></figure>\n<h3 id=\"项目启动\"><a href=\"#项目启动\" class=\"headerlink\" title=\"项目启动\"></a>项目启动</h3><p><code>yarn serve</code>或者使用npm</p>\n<h3 id=\"组件库文件目录结构\"><a href=\"#组件库文件目录结构\" class=\"headerlink\" title=\"组件库文件目录结构\"></a>组件库文件目录结构</h3><figure class=\"highlight crystal\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">├── examples                      <span class=\"comment\"># 示例展示  </span></span><br><span class=\"line\">│   ├── api                       <span class=\"comment\"># 接口类  </span></span><br><span class=\"line\">│   ├── assets                    <span class=\"comment\"># 资源文件夹  </span></span><br><span class=\"line\">│   ├── common                    <span class=\"comment\"># 工具类  </span></span><br><span class=\"line\">│   ├── components                <span class=\"comment\"># 项目内部组件  </span></span><br><span class=\"line\">│   ├── page                      <span class=\"comment\"># 页面  </span></span><br><span class=\"line\">│   ├── router                    <span class=\"comment\"># 路由配置  </span></span><br><span class=\"line\">│   ├── style                     <span class=\"comment\"># 页面样式问题，主题等  </span></span><br><span class=\"line\">│   ├── App.vue                   <span class=\"comment\"># 入口页面  </span></span><br><span class=\"line\">│   ├── main.js                   <span class=\"comment\"># 入口文件 加载组件 初始化等  </span></span><br><span class=\"line\">├── <span class=\"class\"><span class=\"keyword\">lib</span>                           <span class=\"comment\"># 编译后输出的组件目录  </span></span></span><br><span class=\"line\">├── packages                      <span class=\"comment\"># 公共组件目录    </span></span><br><span class=\"line\">│   ├── query-drop-box            <span class=\"comment\"># demo组件  </span></span><br><span class=\"line\">│   ├── simple-input              <span class=\"comment\"># demo组件  </span></span><br><span class=\"line\">│   ├── index.js                  <span class=\"comment\"># 组件入口文件  </span></span><br><span class=\"line\">├── public                        <span class=\"comment\"># 静态资源  </span></span><br><span class=\"line\">│   │── favicon.ico               <span class=\"comment\"># favicon图标  </span></span><br><span class=\"line\">│   └── index.html                <span class=\"comment\"># html模板  </span></span><br><span class=\"line\">├── .gitignore                    <span class=\"comment\"># git 配置  </span></span><br><span class=\"line\">├── .npmignore                    <span class=\"comment\"># npm 配置  </span></span><br><span class=\"line\">├── vue.config.js                 <span class=\"comment\"># vue-cli 配置  </span></span><br><span class=\"line\">├── babel.config.js               <span class=\"comment\"># babel 配置  </span></span><br><span class=\"line\">├── yarn.lock                     <span class=\"comment\"># yarn依赖 配置  </span></span><br><span class=\"line\">└── package.json                  <span class=\"comment\"># package.json  </span></span><br></pre></td></tr></table></figure>\n<p>这里贴一下<code>vue.config.js</code>文件的配置：</p>\n<figure class=\"highlight sas\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const path = require(<span class=\"string\">&#x27;path&#x27;</span>);</span><br><span class=\"line\">function<span class=\"meta\"> resolve(</span>dir) &#123;</span><br><span class=\"line\">    <span class=\"meta\">return</span> path.jo<span class=\"meta\">in(</span>__dirname, dir)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">module.exports = &#123;</span><br><span class=\"line\">    pages: &#123;</span><br><span class=\"line\">        <span class=\"meta\">index</span>: &#123;</span><br><span class=\"line\">            entry: <span class=\"string\">&#x27;examples/main.js&#x27;</span>,</span><br><span class=\"line\">            template: <span class=\"string\">&#x27;public/index.html&#x27;</span>,</span><br><span class=\"line\">            <span class=\"meta\">filename</span>: <span class=\"string\">&#x27;index.html&#x27;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    productionSourceMap: false,</span><br><span class=\"line\">    css: &#123;</span><br><span class=\"line\">        extract: false,</span><br><span class=\"line\">        modules: false,</span><br><span class=\"line\">        sourceMap: false,</span><br><span class=\"line\">        loaderOptions: &#123;&#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    // 扩展 webpack 配置，使 packages 加入编译</span><br><span class=\"line\">    chainWebpack: config =&gt; &#123;</span><br><span class=\"line\">        config.module</span><br><span class=\"line\">            .rule(<span class=\"string\">&#x27;js&#x27;</span>)</span><br><span class=\"line\">            .include</span><br><span class=\"line\">            .<span class=\"meta\">add</span>(<span class=\"string\">&#x27;/packages/&#x27;</span>)</span><br><span class=\"line\">            .<span class=\"meta\">end</span>()</span><br><span class=\"line\">            .use(<span class=\"string\">&#x27;babel&#x27;</span>)</span><br><span class=\"line\">            .loader(<span class=\"string\">&#x27;babel-loader&#x27;</span>)</span><br><span class=\"line\">            .tap(<span class=\"meta\">options</span> =&gt; &#123;</span><br><span class=\"line\">                // 修改它的选项...</span><br><span class=\"line\">                <span class=\"meta\">return</span> <span class=\"meta\">options</span></span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">        config.resolve.alias</span><br><span class=\"line\">            .<span class=\"meta\">set</span>(<span class=\"string\">&#x27;@&#x27;</span>,<span class=\"meta\"> resolve(</span><span class=\"string\">&#x27;examples&#x27;</span>))</span><br><span class=\"line\">            .<span class=\"meta\">set</span>(<span class=\"string\">&#x27;src&#x27;</span>,<span class=\"meta\"> resolve(</span><span class=\"string\">&#x27;examples&#x27;</span>))</span><br><span class=\"line\">            .<span class=\"meta\">set</span>(<span class=\"string\">&#x27;components&#x27;</span>,<span class=\"meta\"> resolve(</span><span class=\"string\">&#x27;examples/components&#x27;</span>))</span><br><span class=\"line\">            .<span class=\"meta\">set</span>(<span class=\"string\">&#x27;examples&#x27;</span>,<span class=\"meta\"> resolve(</span><span class=\"string\">&#x27;examples&#x27;</span>))</span><br><span class=\"line\">            .<span class=\"meta\">set</span>(<span class=\"string\">&#x27;common&#x27;</span>,<span class=\"meta\"> resolve(</span><span class=\"string\">&#x27;examples/common&#x27;</span>))</span><br><span class=\"line\">            .<span class=\"meta\">set</span>(<span class=\"string\">&#x27;packages&#x27;</span>,<span class=\"meta\"> resolve(</span><span class=\"string\">&#x27;packages&#x27;</span>))</span><br><span class=\"line\">            .<span class=\"meta\">set</span>(<span class=\"string\">&#x27;api&#x27;</span>,<span class=\"meta\"> resolve(</span><span class=\"string\">&#x27;examples/api&#x27;</span>))</span><br><span class=\"line\">            <span class=\"comment\">/* 添加分析工具*/</span></span><br><span class=\"line\">        <span class=\"meta\">if</span> (process.env.NODE_ENV === <span class=\"string\">&#x27;production&#x27;</span>) &#123;</span><br><span class=\"line\">            <span class=\"meta\">if</span> (process.env.npm_config_report) &#123;</span><br><span class=\"line\">                config</span><br><span class=\"line\">                    .plug<span class=\"meta\">in(</span><span class=\"string\">&#x27;webpack-bundle-analyzer&#x27;</span>)</span><br><span class=\"line\">                    .use(require(<span class=\"string\">&#x27;webpack-bundle-analyzer&#x27;</span>).BundleAnalyzerPlugin)</span><br><span class=\"line\">                    .<span class=\"meta\">end</span>()</span><br><span class=\"line\">                config.plugins.<span class=\"meta\">delete</span>(<span class=\"string\">&#x27;prefetch&#x27;</span>)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<p>主要分为两部分：第一部分是nexus私有仓库的搭建，第二部分是vue-cli 3的组件搭建并发布到nexus本地仓库。</p>\n<h2 id=\"nexus私有仓库的搭建\"><a href=\"#nexus私有仓库的搭建\" class=\"headerlink\" title=\"nexus私有仓库的搭建\"></a>nexus私有仓库的搭建</h2>","more":"<h3 id=\"环境搭建\"><a href=\"#环境搭建\" class=\"headerlink\" title=\"环境搭建\"></a>环境搭建</h3><ol>\n<li>首先需要在<a href=\"https://www.sonatype.com/oss-thank-you-win64.zip?submissionGuid=2c6a43fc-9aa5-4acc-b995-87cb63b04d66\"><font style=\"color:red\">官网</font></a>下载nexus windows版本（注意：需要翻墙，自备梯子）。</li>\n<li>以管理员身份运行cmd（注意：必须是管理员运行且必须是cmd，win10的powershell都会报错），然后切换到<code>C:\\node\\nexus\\nexus-3.18.0-01-win64\\nexus-3.18.0-01\\bin</code> 软件下载后的解压目录。<br><font style=\"color:red\">nexus启动前，最好修改下<code>C:\\node\\nexus\\nexus-3.18.0-01-win64\\nexus-3.18.0-01\\bin\\nexus.vmoptions</code>的配置</font>，防止出现内存不足的报错导致无法启动，我这里修改为<figure class=\"highlight diff\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"deletion\">-Xms600m</span></span><br><span class=\"line\"><span class=\"deletion\">-Xmx600m</span></span><br><span class=\"line\"><span class=\"deletion\">-XX:MaxDirectMemorySize=1G</span></span><br></pre></td></tr></table></figure>\n默认都是约2G</li>\n</ol>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nexus.exe /install #执行安装命令， 成功后会提示Installed<span class=\"built_in\"> service </span><span class=\"string\">&#x27;nexus</span></span><br><span class=\"line\"><span class=\"string\">nexus.exe /run #运行服务，首次运行需要等待1~2分钟</span></span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>启动完毕后,进入 http://(本机IP):8081（最好是自定义电脑ip），点击右上角Sign In进行登录，默认账号 admin<br>默认密码存放在<code>C:\\node\\nexus\\nexus-3.18.0-01-win64\\sonatype-work\\nexus3\\**.password</code> 打开文件后复制密码串进行登录，<br>登录后会提示修改密码，修改完重新登录即可。然后<code>**.password</code>文件就会自动删除。</li>\n</ol>\n<h3 id=\"添加npm仓库\"><a href=\"#添加npm仓库\" class=\"headerlink\" title=\"添加npm仓库\"></a>添加npm仓库</h3><p>点击左侧菜单Repositories 查看仓库列表<br><img src=\"1.png\"></p>\n<ul>\n<li>点击Create repository按钮创建仓库</li>\n<li>group表示分组 hosted表示本机私有 proxy表示远程代理（中央仓库）</li>\n<li>若registry配置为group（包括hosted和proxy）,首次会从hosted拉取，若无则从proxy拉取并缓存，下次则直接从缓存取</li>\n</ul>\n<ol>\n<li><p>添加npm(proxy)仓库：<br>选择npm(proxy)<br>输入<code>Name: npmjs.org</code><br><code>Remote storage: https://registry.npmjs.org</code><br>如图：<br><img src=\"2.png\"></p>\n</li>\n<li><p>添加npm(hosted)仓库：<br>选择npm(hosted)<br>输入<code>Name：npm-hosted</code>用于存放自己发布的私有包<br>如图：<br><img src=\"3.png\"></p>\n</li>\n<li><p>添加npm(group)仓库：<br>选择npm(group)<br>输入<code>Name: npm-group</code>，并在Member repositories里选择之前添加的两个移到右边<br>如图：<br><img src=\"4.png\"></p>\n</li>\n</ol>\n<h3 id=\"配置与验证npm仓库\"><a href=\"#配置与验证npm仓库\" class=\"headerlink\" title=\"配置与验证npm仓库\"></a>配置与验证npm仓库</h3><p>添加发布角色用户及权限</p>\n<ol>\n<li>添加权限认证 将npm Beared Token Realm 添加至右边<br>如图：<br><img src=\"5.png\"></li>\n<li>创建nx-deploy角色并赋予一个nx-repository-view—*的权限码<br><img src=\"6.png\"></li>\n<li>创建deployer用户 同时设定角色为nx-deploy<br><img src=\"7.png\"></li>\n</ol>\n<h3 id=\"变更依赖源\"><a href=\"#变更依赖源\" class=\"headerlink\" title=\"变更依赖源\"></a>变更依赖源</h3><p>安装nrm <code>npm i -g nrm</code></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm config <span class=\"keyword\">set</span> registry https://registry.npm.taobao.org <span class=\"comment\">#设置为探宝源</span></span><br><span class=\"line\">nrm <span class=\"keyword\">add</span> <span class=\"keyword\">private</span> <span class=\"keyword\">http</span>://<span class=\"number\">192.168</span><span class=\"number\">.38</span><span class=\"number\">.64</span>:<span class=\"number\">8081</span>/repository/npm-<span class=\"keyword\">all</span>/ <span class=\"comment\">#本机ip</span></span><br><span class=\"line\">nrm <span class=\"keyword\">use</span> <span class=\"keyword\">private</span> <span class=\"comment\">#使用私有源</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"发布流程\"><a href=\"#发布流程\" class=\"headerlink\" title=\"发布流程\"></a>发布流程</h3><p>每次发布前记得在package.json中检查version 有没有修改，要确认比上一个版本号高</p>\n<h3 id=\"编译文件\"><a href=\"#编译文件\" class=\"headerlink\" title=\"编译文件\"></a>编译文件</h3><p><code>yarn lib</code>或者使用npm</p>\n<h3 id=\"登录npm\"><a href=\"#登录npm\" class=\"headerlink\" title=\"登录npm\"></a>登录npm</h3><p><code>npm login -registry http://192.168.38.64:8081/repository/npm-hosted/</code></p>\n<h3 id=\"发布\"><a href=\"#发布\" class=\"headerlink\" title=\"发布\"></a>发布</h3><p><code>npm publish -registry http://192.168.38.64:8081/repository/npm-hosted/</code><br>发布成功后在npm-hosted 能看到发布后的包<br><img src=\"8.png\"></p>\n<h3 id=\"使用方式\"><a href=\"#使用方式\" class=\"headerlink\" title=\"使用方式\"></a>使用方式</h3><figure class=\"highlight clean\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;dependencies&quot;</span>: &#123;</span><br><span class=\"line\"><span class=\"string\">&quot;组件库名称&quot;</span>: <span class=\"string\">&quot;版本号&quot;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> 组件库名称 <span class=\"keyword\">from</span> <span class=\"string\">&#x27;组件库名称&#x27;</span></span><br><span class=\"line\">Vue.use(组件库名称)</span><br></pre></td></tr></table></figure>\n<h3 id=\"项目启动\"><a href=\"#项目启动\" class=\"headerlink\" title=\"项目启动\"></a>项目启动</h3><p><code>yarn serve</code>或者使用npm</p>\n<h3 id=\"组件库文件目录结构\"><a href=\"#组件库文件目录结构\" class=\"headerlink\" title=\"组件库文件目录结构\"></a>组件库文件目录结构</h3><figure class=\"highlight crystal\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">├── examples                      <span class=\"comment\"># 示例展示  </span></span><br><span class=\"line\">│   ├── api                       <span class=\"comment\"># 接口类  </span></span><br><span class=\"line\">│   ├── assets                    <span class=\"comment\"># 资源文件夹  </span></span><br><span class=\"line\">│   ├── common                    <span class=\"comment\"># 工具类  </span></span><br><span class=\"line\">│   ├── components                <span class=\"comment\"># 项目内部组件  </span></span><br><span class=\"line\">│   ├── page                      <span class=\"comment\"># 页面  </span></span><br><span class=\"line\">│   ├── router                    <span class=\"comment\"># 路由配置  </span></span><br><span class=\"line\">│   ├── style                     <span class=\"comment\"># 页面样式问题，主题等  </span></span><br><span class=\"line\">│   ├── App.vue                   <span class=\"comment\"># 入口页面  </span></span><br><span class=\"line\">│   ├── main.js                   <span class=\"comment\"># 入口文件 加载组件 初始化等  </span></span><br><span class=\"line\">├── <span class=\"class\"><span class=\"keyword\">lib</span>                           <span class=\"comment\"># 编译后输出的组件目录  </span></span></span><br><span class=\"line\">├── packages                      <span class=\"comment\"># 公共组件目录    </span></span><br><span class=\"line\">│   ├── query-drop-box            <span class=\"comment\"># demo组件  </span></span><br><span class=\"line\">│   ├── simple-input              <span class=\"comment\"># demo组件  </span></span><br><span class=\"line\">│   ├── index.js                  <span class=\"comment\"># 组件入口文件  </span></span><br><span class=\"line\">├── public                        <span class=\"comment\"># 静态资源  </span></span><br><span class=\"line\">│   │── favicon.ico               <span class=\"comment\"># favicon图标  </span></span><br><span class=\"line\">│   └── index.html                <span class=\"comment\"># html模板  </span></span><br><span class=\"line\">├── .gitignore                    <span class=\"comment\"># git 配置  </span></span><br><span class=\"line\">├── .npmignore                    <span class=\"comment\"># npm 配置  </span></span><br><span class=\"line\">├── vue.config.js                 <span class=\"comment\"># vue-cli 配置  </span></span><br><span class=\"line\">├── babel.config.js               <span class=\"comment\"># babel 配置  </span></span><br><span class=\"line\">├── yarn.lock                     <span class=\"comment\"># yarn依赖 配置  </span></span><br><span class=\"line\">└── package.json                  <span class=\"comment\"># package.json  </span></span><br></pre></td></tr></table></figure>\n<p>这里贴一下<code>vue.config.js</code>文件的配置：</p>\n<figure class=\"highlight sas\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const path = require(<span class=\"string\">&#x27;path&#x27;</span>);</span><br><span class=\"line\">function<span class=\"meta\"> resolve(</span>dir) &#123;</span><br><span class=\"line\">    <span class=\"meta\">return</span> path.jo<span class=\"meta\">in(</span>__dirname, dir)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">module.exports = &#123;</span><br><span class=\"line\">    pages: &#123;</span><br><span class=\"line\">        <span class=\"meta\">index</span>: &#123;</span><br><span class=\"line\">            entry: <span class=\"string\">&#x27;examples/main.js&#x27;</span>,</span><br><span class=\"line\">            template: <span class=\"string\">&#x27;public/index.html&#x27;</span>,</span><br><span class=\"line\">            <span class=\"meta\">filename</span>: <span class=\"string\">&#x27;index.html&#x27;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    productionSourceMap: false,</span><br><span class=\"line\">    css: &#123;</span><br><span class=\"line\">        extract: false,</span><br><span class=\"line\">        modules: false,</span><br><span class=\"line\">        sourceMap: false,</span><br><span class=\"line\">        loaderOptions: &#123;&#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    // 扩展 webpack 配置，使 packages 加入编译</span><br><span class=\"line\">    chainWebpack: config =&gt; &#123;</span><br><span class=\"line\">        config.module</span><br><span class=\"line\">            .rule(<span class=\"string\">&#x27;js&#x27;</span>)</span><br><span class=\"line\">            .include</span><br><span class=\"line\">            .<span class=\"meta\">add</span>(<span class=\"string\">&#x27;/packages/&#x27;</span>)</span><br><span class=\"line\">            .<span class=\"meta\">end</span>()</span><br><span class=\"line\">            .use(<span class=\"string\">&#x27;babel&#x27;</span>)</span><br><span class=\"line\">            .loader(<span class=\"string\">&#x27;babel-loader&#x27;</span>)</span><br><span class=\"line\">            .tap(<span class=\"meta\">options</span> =&gt; &#123;</span><br><span class=\"line\">                // 修改它的选项...</span><br><span class=\"line\">                <span class=\"meta\">return</span> <span class=\"meta\">options</span></span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">        config.resolve.alias</span><br><span class=\"line\">            .<span class=\"meta\">set</span>(<span class=\"string\">&#x27;@&#x27;</span>,<span class=\"meta\"> resolve(</span><span class=\"string\">&#x27;examples&#x27;</span>))</span><br><span class=\"line\">            .<span class=\"meta\">set</span>(<span class=\"string\">&#x27;src&#x27;</span>,<span class=\"meta\"> resolve(</span><span class=\"string\">&#x27;examples&#x27;</span>))</span><br><span class=\"line\">            .<span class=\"meta\">set</span>(<span class=\"string\">&#x27;components&#x27;</span>,<span class=\"meta\"> resolve(</span><span class=\"string\">&#x27;examples/components&#x27;</span>))</span><br><span class=\"line\">            .<span class=\"meta\">set</span>(<span class=\"string\">&#x27;examples&#x27;</span>,<span class=\"meta\"> resolve(</span><span class=\"string\">&#x27;examples&#x27;</span>))</span><br><span class=\"line\">            .<span class=\"meta\">set</span>(<span class=\"string\">&#x27;common&#x27;</span>,<span class=\"meta\"> resolve(</span><span class=\"string\">&#x27;examples/common&#x27;</span>))</span><br><span class=\"line\">            .<span class=\"meta\">set</span>(<span class=\"string\">&#x27;packages&#x27;</span>,<span class=\"meta\"> resolve(</span><span class=\"string\">&#x27;packages&#x27;</span>))</span><br><span class=\"line\">            .<span class=\"meta\">set</span>(<span class=\"string\">&#x27;api&#x27;</span>,<span class=\"meta\"> resolve(</span><span class=\"string\">&#x27;examples/api&#x27;</span>))</span><br><span class=\"line\">            <span class=\"comment\">/* 添加分析工具*/</span></span><br><span class=\"line\">        <span class=\"meta\">if</span> (process.env.NODE_ENV === <span class=\"string\">&#x27;production&#x27;</span>) &#123;</span><br><span class=\"line\">            <span class=\"meta\">if</span> (process.env.npm_config_report) &#123;</span><br><span class=\"line\">                config</span><br><span class=\"line\">                    .plug<span class=\"meta\">in(</span><span class=\"string\">&#x27;webpack-bundle-analyzer&#x27;</span>)</span><br><span class=\"line\">                    .use(require(<span class=\"string\">&#x27;webpack-bundle-analyzer&#x27;</span>).BundleAnalyzerPlugin)</span><br><span class=\"line\">                    .<span class=\"meta\">end</span>()</span><br><span class=\"line\">                config.plugins.<span class=\"meta\">delete</span>(<span class=\"string\">&#x27;prefetch&#x27;</span>)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"一个奇葩的表格统计需求","abbrlink":"507fa396","date":"2019-06-17T07:41:51.000Z","_content":"\n有个报表统计的需求，先上需求图：\n<!-- more -->\n![](1.jpg)\n咋一看，好像挺简单啊，不就是一个表格吗？\n这么想那就大错特错了。这个需求实际上只有三行，也就是说需要统计“数量”，“项目造价金额”，“项目合同金额”这三个字段在不同状态下的值，也就是各列的“已报备”，“已中标”.... 等等。我们知道如果要实现这一的需求，必须要把“数量”，“项目造价金额”，“项目合同金额”这三个字段在各列中当成一个字段来处理，这样才会显示三行。比如element-ui的table的简单例子：\n![](2.jpg)\n![](3.jpg)\n那后端就要返回这样的格式了\n![](4.jpg)\n<font color=red>坑就坑在我们这个后端返回的数据结构上，他说他只能按照状态查询结果返回给我！</font>\n### 来看看他返回的数据结构是什么：\n```\n{\n\t\"code\":\"200\",\n\t\"message\":\"成功\",\n\t\"responseBody\":{\n\t\t\"code\":\"1\",\n\t\t\"data\":[\n\t\t\t{\n\t\t\t\t\"averageContractAmount\":0,\n\t\t\t\t\"countBuliding\":0,\n\t\t\t\t\"countContract\":0,\n\t\t\t\t\"countProject\":2,\n\t\t\t\t\"dayTime\":null,\n\t\t\t\t\"projStatus\":0,\n\t\t\t\t\"projStatusName\":\"草稿\",\n\t\t\t\t\"totalContractAmount\":0.00,\n\t\t\t\t\"totalProjectAmount\":17.94,\n\t\t\t\t\"totalReturnAmount\":0.00\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"averageContractAmount\":0,\n\t\t\t\t\"countBuliding\":0,\n\t\t\t\t\"countContract\":0,\n\t\t\t\t\"countProject\":12,\n\t\t\t\t\"dayTime\":null,\n\t\t\t\t\"projStatus\":1,\n\t\t\t\t\"projStatusName\":\"报备中\",\n\t\t\t\t\"totalContractAmount\":0.00,\n\t\t\t\t\"totalProjectAmount\":103.65,\n\t\t\t\t\"totalReturnAmount\":0.00\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"averageContractAmount\":0,\n\t\t\t\t\"countBuliding\":0,\n\t\t\t\t\"countContract\":0,\n\t\t\t\t\"countProject\":17,\n\t\t\t\t\"dayTime\":null,\n\t\t\t\t\"projStatus\":2,\n\t\t\t\t\"projStatusName\":\"已报备\",\n\t\t\t\t\"totalContractAmount\":0.00,\n\t\t\t\t\"totalProjectAmount\":5732.99,\n\t\t\t\t\"totalReturnAmount\":0.00\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"averageContractAmount\":0,\n\t\t\t\t\"countBuliding\":0,\n\t\t\t\t\"countContract\":0,\n\t\t\t\t\"countProject\":5,\n\t\t\t\t\"dayTime\":null,\n\t\t\t\t\"projStatus\":4,\n\t\t\t\t\"projStatusName\":\"已中标\",\n\t\t\t\t\"totalContractAmount\":4478.88,\n\t\t\t\t\"totalProjectAmount\":18.11,\n\t\t\t\t\"totalReturnAmount\":0.00\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"averageContractAmount\":0,\n\t\t\t\t\"countBuliding\":0,\n\t\t\t\t\"countContract\":0,\n\t\t\t\t\"countProject\":6,\n\t\t\t\t\"dayTime\":null,\n\t\t\t\t\"projStatus\":6,\n\t\t\t\t\"projStatusName\":\"建设中\",\n\t\t\t\t\"totalContractAmount\":14.10,\n\t\t\t\t\"totalProjectAmount\":154.01,\n\t\t\t\t\"totalReturnAmount\":0.00\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"averageContractAmount\":0,\n\t\t\t\t\"countBuliding\":0,\n\t\t\t\t\"countContract\":0,\n\t\t\t\t\"countProject\":1,\n\t\t\t\t\"dayTime\":null,\n\t\t\t\t\"projStatus\":7,\n\t\t\t\t\"projStatusName\":\"已竣工\",\n\t\t\t\t\"totalContractAmount\":1.00,\n\t\t\t\t\"totalProjectAmount\":1.00,\n\t\t\t\t\"totalReturnAmount\":0.00\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"averageContractAmount\":0,\n\t\t\t\t\"countBuliding\":0,\n\t\t\t\t\"countContract\":0,\n\t\t\t\t\"countProject\":1,\n\t\t\t\t\"dayTime\":null,\n\t\t\t\t\"projStatus\":10,\n\t\t\t\t\"projStatusName\":\"已删除\",\n\t\t\t\t\"totalContractAmount\":0.00,\n\t\t\t\t\"totalProjectAmount\":0.12,\n\t\t\t\t\"totalReturnAmount\":0.00\n\t\t\t}\n\t\t],\n\t\t\"message\":\"操作成功\"\n\t}\n}\n```\n其中`projStatus`就是上面提到的“报备中”，“已中标”等等列的状态值了，但是这样渲染出来的表格是10行，因为他数组没有处理，直接有多少个状态有值就返回多少条记录。实际上我前端这边需要的字段是这样的 \n```\n[\n    { typeName: '数量', projStatus: 1, total_1: 2, total_2: 2, total_3: 2, total_4: 2, total_5: 2, total_6: 2, total_7: 2, total_8: 2, total_9: 2, total_10: 2 },\n    { typeName: '项目造价金额（万）', projStatus: 1, total_1: 2, total_2: 2, total_3: 2, total_4: 2, total_5: 2, total_6: 2, total_7: 2, total_8: 2, total_9: 2, total_10: 2 },\n\n    { typeName: '项目合同金额（万）', projStatus: 1, total_1: 2, total_2: 2, total_3: 2, total_4: 2, total_5: 2, total_6: 2, total_7: 2, total_8: 2, total_9: 2, total_10: 2 } \n]\n```\n\n这就需要自己进行艰苦的数据处理了。。。\n根据他字段返回的 `countProject //数量` `totalProjectAmount //项目造价` `totalContractAmount //项目合同`  这三个字段分类把数据重新组合成三个数组。\n```\ndeepDealArr(data, num) {\n    let countProject = [];\n    let totalProjectAmount = [];\n    let totalContractAmount = [];\n    if (num === 1) {\n        let _data = this.utils.copy(data);\n        for (let i = 0; i < _data.length; i++) {\n            let ind = _data[i].projStatus\n            const dataObj = {}\n            dataObj.projStatus = _data[i].projStatus\n            dataObj['total_' + ind] = _data[i].countProject\n            countProject.push(dataObj)\n        }\n        countProject.splice(0, 0, { typeName: '数量' })\n        return countProject;\n    } else if (num === 2) {\n        let _data = this.utils.copy(data);\n        for (let i = 0; i < _data.length; i++) {\n            let ind = _data[i].projStatus\n            const dataObj = {}\n            dataObj.projStatus = _data[i].projStatus\n            dataObj['total_' + ind] = _data[i].totalProjectAmount\n            totalProjectAmount.push(dataObj)\n        }\n        totalProjectAmount.splice(0, 0, { typeName: '项目造价金额（万）' })\n        return totalProjectAmount;\n    } else {\n        let _data = this.utils.copy(data);\n        for (let i = 0; i < _data.length; i++) {\n            let ind = _data[i].projStatus\n            const dataObj = {}\n            dataObj.projStatus = _data[i].projStatus\n            dataObj['total_' + ind] = _data[i].totalContractAmount\n            totalContractAmount.push(dataObj)\n        }\n        totalContractAmount.splice(0, 0, { typeName: '项目合同金额（万）' })\n        return totalContractAmount;\n    }\n\n}\n\n\n/**\n* 处理返回数组\n*/\ndealArry(data) {\n    let _data = this.utils.copy(data);//这个data 就是后端返回的初始结构的数据\n    let countProject = []; //数量\n    let totalProjectAmount = [];//项目造价\n    let totalContractAmount = []; //项目合同\n\n\n    //处理出来的结果是类似 [{ typeName: '数量', projStatus: 1, total_1: 2, total_2: 2, total_3: 2, total_4: 2, total_5: 2, total_6: 2, total_7: 2, total_8: 2, total_9: 2, total_10: 2 }]这种数组结构\n\n    for (let i = 0; i < _data.length; i++) {\n        if (_data[i].countProject || _data[i].countProject === 0) {\n            countProject.push({\n                projStatus: _data[i].projStatus,\n                countProject: _data[i].countProject\n            })\n        }\n        if (_data[i].totalProjectAmount || _data[i].totalProjectAmount === 0) {\n            totalProjectAmount.push({\n                projStatus: _data[i].projStatus,\n                totalProjectAmount:  _data[i].totalProjectAmount\n            })\n        }\n        if (_data[i].totalContractAmount || _data[i].totalContractAmount === 0) {\n            totalContractAmount.push({\n                projStatus: _data[i].projStatus,\n                totalContractAmount: _data[i].totalContractAmount\n            })\n        }\n    }\n\n    //因为有三行，所以需要调用deepDealArr这个函数三次 得到各自三个数组\n\n    let _countProject = this.deepDealArr(countProject, 1)\n    let _totalProjectAmount = this.deepDealArr(totalProjectAmount, 2)\n    let _totalContractAmount = this.deepDealArr(totalContractAmount, 3)\n    \n    //以下是为了把数组转成对象，然后把三行对象塞进数组中，这样表格就能出来了，\n    关键用到了Object.assign() 函数循环数组转成对象\n    let _count = {}\n    let _totalP = {}\n    let _totalC = {}\n    _countProject.map(function (e,item) {                        \n        Object.assign(_count, e);\n    });       \n    _totalProjectAmount.map(function (e,item) {                        \n        Object.assign(_totalP, e);\n    });        \n    _totalContractAmount.map(function (e,item) {                        \n        Object.assign(_totalC, e);\n    });      \n    let _newTable = [\n        _count,\n        _totalP,\n        _totalC\n    ]\n\n    this.table.data = _newTable\n\n}\n```\n这是模板文件：\n```\n<el-table :data=\"table.data\" style=\"width: 100%; margin-top: 20px;\" :loading=\"tableLoading\">\n    <el-table-column prop=\"typeName\" label=\"条目\"></el-table-column>\n    <el-table-column prop=\"total_1\" label=\"报备中\"></el-table-column>\n    <el-table-column prop=\"total_2\" label=\"已报备\"></el-table-column>\n    <el-table-column prop=\"total_3\" label=\"投标中\"></el-table-column> \n    <el-table-column prop=\"total_4\" label=\"已中标\"></el-table-column>\n    <el-table-column prop=\"total_6\" label=\"在建中\"></el-table-column>\n    <el-table-column prop=\"total_7\" label=\"已竣工\"></el-table-column>\n    <el-table-column prop=\"total_9\" label=\"已关闭\"></el-table-column>\n    <el-table-column prop=\"total_8\" label=\"已过期\"></el-table-column>\n    <el-table-column prop=\"total_10\" label=\"已删除\"></el-table-column>\n    <empty \n        v-if=\"table.data.length == 0\"\n        slot=\"empty\"\n        style=\"height: 500px\"\n        tips=\"抱歉！暂时没有数据\" \n        smallTips=\"暂时还没有相关的数据可以展示\"\n        >\n        <img src=\"~/assets/svg/table-empty.svg\" slot=\"img\"/>\n    </empty>\n</el-table>\n```\n用total_的后面的数字来对应列的状态值，这样就能一一对应上了，最后附上完成的效果图\n\n![](5.jpg)\n\n","source":"_posts/一个奇葩的表格统计需求.md","raw":"---\ntitle: 一个奇葩的表格统计需求\nabbrlink: 507fa396\ndate: 2019-06-17 15:41:51\ntags: \n    - vue \n    - js\ncategories: \n    - vue \n    - js\n---\n\n有个报表统计的需求，先上需求图：\n<!-- more -->\n![](1.jpg)\n咋一看，好像挺简单啊，不就是一个表格吗？\n这么想那就大错特错了。这个需求实际上只有三行，也就是说需要统计“数量”，“项目造价金额”，“项目合同金额”这三个字段在不同状态下的值，也就是各列的“已报备”，“已中标”.... 等等。我们知道如果要实现这一的需求，必须要把“数量”，“项目造价金额”，“项目合同金额”这三个字段在各列中当成一个字段来处理，这样才会显示三行。比如element-ui的table的简单例子：\n![](2.jpg)\n![](3.jpg)\n那后端就要返回这样的格式了\n![](4.jpg)\n<font color=red>坑就坑在我们这个后端返回的数据结构上，他说他只能按照状态查询结果返回给我！</font>\n### 来看看他返回的数据结构是什么：\n```\n{\n\t\"code\":\"200\",\n\t\"message\":\"成功\",\n\t\"responseBody\":{\n\t\t\"code\":\"1\",\n\t\t\"data\":[\n\t\t\t{\n\t\t\t\t\"averageContractAmount\":0,\n\t\t\t\t\"countBuliding\":0,\n\t\t\t\t\"countContract\":0,\n\t\t\t\t\"countProject\":2,\n\t\t\t\t\"dayTime\":null,\n\t\t\t\t\"projStatus\":0,\n\t\t\t\t\"projStatusName\":\"草稿\",\n\t\t\t\t\"totalContractAmount\":0.00,\n\t\t\t\t\"totalProjectAmount\":17.94,\n\t\t\t\t\"totalReturnAmount\":0.00\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"averageContractAmount\":0,\n\t\t\t\t\"countBuliding\":0,\n\t\t\t\t\"countContract\":0,\n\t\t\t\t\"countProject\":12,\n\t\t\t\t\"dayTime\":null,\n\t\t\t\t\"projStatus\":1,\n\t\t\t\t\"projStatusName\":\"报备中\",\n\t\t\t\t\"totalContractAmount\":0.00,\n\t\t\t\t\"totalProjectAmount\":103.65,\n\t\t\t\t\"totalReturnAmount\":0.00\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"averageContractAmount\":0,\n\t\t\t\t\"countBuliding\":0,\n\t\t\t\t\"countContract\":0,\n\t\t\t\t\"countProject\":17,\n\t\t\t\t\"dayTime\":null,\n\t\t\t\t\"projStatus\":2,\n\t\t\t\t\"projStatusName\":\"已报备\",\n\t\t\t\t\"totalContractAmount\":0.00,\n\t\t\t\t\"totalProjectAmount\":5732.99,\n\t\t\t\t\"totalReturnAmount\":0.00\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"averageContractAmount\":0,\n\t\t\t\t\"countBuliding\":0,\n\t\t\t\t\"countContract\":0,\n\t\t\t\t\"countProject\":5,\n\t\t\t\t\"dayTime\":null,\n\t\t\t\t\"projStatus\":4,\n\t\t\t\t\"projStatusName\":\"已中标\",\n\t\t\t\t\"totalContractAmount\":4478.88,\n\t\t\t\t\"totalProjectAmount\":18.11,\n\t\t\t\t\"totalReturnAmount\":0.00\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"averageContractAmount\":0,\n\t\t\t\t\"countBuliding\":0,\n\t\t\t\t\"countContract\":0,\n\t\t\t\t\"countProject\":6,\n\t\t\t\t\"dayTime\":null,\n\t\t\t\t\"projStatus\":6,\n\t\t\t\t\"projStatusName\":\"建设中\",\n\t\t\t\t\"totalContractAmount\":14.10,\n\t\t\t\t\"totalProjectAmount\":154.01,\n\t\t\t\t\"totalReturnAmount\":0.00\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"averageContractAmount\":0,\n\t\t\t\t\"countBuliding\":0,\n\t\t\t\t\"countContract\":0,\n\t\t\t\t\"countProject\":1,\n\t\t\t\t\"dayTime\":null,\n\t\t\t\t\"projStatus\":7,\n\t\t\t\t\"projStatusName\":\"已竣工\",\n\t\t\t\t\"totalContractAmount\":1.00,\n\t\t\t\t\"totalProjectAmount\":1.00,\n\t\t\t\t\"totalReturnAmount\":0.00\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"averageContractAmount\":0,\n\t\t\t\t\"countBuliding\":0,\n\t\t\t\t\"countContract\":0,\n\t\t\t\t\"countProject\":1,\n\t\t\t\t\"dayTime\":null,\n\t\t\t\t\"projStatus\":10,\n\t\t\t\t\"projStatusName\":\"已删除\",\n\t\t\t\t\"totalContractAmount\":0.00,\n\t\t\t\t\"totalProjectAmount\":0.12,\n\t\t\t\t\"totalReturnAmount\":0.00\n\t\t\t}\n\t\t],\n\t\t\"message\":\"操作成功\"\n\t}\n}\n```\n其中`projStatus`就是上面提到的“报备中”，“已中标”等等列的状态值了，但是这样渲染出来的表格是10行，因为他数组没有处理，直接有多少个状态有值就返回多少条记录。实际上我前端这边需要的字段是这样的 \n```\n[\n    { typeName: '数量', projStatus: 1, total_1: 2, total_2: 2, total_3: 2, total_4: 2, total_5: 2, total_6: 2, total_7: 2, total_8: 2, total_9: 2, total_10: 2 },\n    { typeName: '项目造价金额（万）', projStatus: 1, total_1: 2, total_2: 2, total_3: 2, total_4: 2, total_5: 2, total_6: 2, total_7: 2, total_8: 2, total_9: 2, total_10: 2 },\n\n    { typeName: '项目合同金额（万）', projStatus: 1, total_1: 2, total_2: 2, total_3: 2, total_4: 2, total_5: 2, total_6: 2, total_7: 2, total_8: 2, total_9: 2, total_10: 2 } \n]\n```\n\n这就需要自己进行艰苦的数据处理了。。。\n根据他字段返回的 `countProject //数量` `totalProjectAmount //项目造价` `totalContractAmount //项目合同`  这三个字段分类把数据重新组合成三个数组。\n```\ndeepDealArr(data, num) {\n    let countProject = [];\n    let totalProjectAmount = [];\n    let totalContractAmount = [];\n    if (num === 1) {\n        let _data = this.utils.copy(data);\n        for (let i = 0; i < _data.length; i++) {\n            let ind = _data[i].projStatus\n            const dataObj = {}\n            dataObj.projStatus = _data[i].projStatus\n            dataObj['total_' + ind] = _data[i].countProject\n            countProject.push(dataObj)\n        }\n        countProject.splice(0, 0, { typeName: '数量' })\n        return countProject;\n    } else if (num === 2) {\n        let _data = this.utils.copy(data);\n        for (let i = 0; i < _data.length; i++) {\n            let ind = _data[i].projStatus\n            const dataObj = {}\n            dataObj.projStatus = _data[i].projStatus\n            dataObj['total_' + ind] = _data[i].totalProjectAmount\n            totalProjectAmount.push(dataObj)\n        }\n        totalProjectAmount.splice(0, 0, { typeName: '项目造价金额（万）' })\n        return totalProjectAmount;\n    } else {\n        let _data = this.utils.copy(data);\n        for (let i = 0; i < _data.length; i++) {\n            let ind = _data[i].projStatus\n            const dataObj = {}\n            dataObj.projStatus = _data[i].projStatus\n            dataObj['total_' + ind] = _data[i].totalContractAmount\n            totalContractAmount.push(dataObj)\n        }\n        totalContractAmount.splice(0, 0, { typeName: '项目合同金额（万）' })\n        return totalContractAmount;\n    }\n\n}\n\n\n/**\n* 处理返回数组\n*/\ndealArry(data) {\n    let _data = this.utils.copy(data);//这个data 就是后端返回的初始结构的数据\n    let countProject = []; //数量\n    let totalProjectAmount = [];//项目造价\n    let totalContractAmount = []; //项目合同\n\n\n    //处理出来的结果是类似 [{ typeName: '数量', projStatus: 1, total_1: 2, total_2: 2, total_3: 2, total_4: 2, total_5: 2, total_6: 2, total_7: 2, total_8: 2, total_9: 2, total_10: 2 }]这种数组结构\n\n    for (let i = 0; i < _data.length; i++) {\n        if (_data[i].countProject || _data[i].countProject === 0) {\n            countProject.push({\n                projStatus: _data[i].projStatus,\n                countProject: _data[i].countProject\n            })\n        }\n        if (_data[i].totalProjectAmount || _data[i].totalProjectAmount === 0) {\n            totalProjectAmount.push({\n                projStatus: _data[i].projStatus,\n                totalProjectAmount:  _data[i].totalProjectAmount\n            })\n        }\n        if (_data[i].totalContractAmount || _data[i].totalContractAmount === 0) {\n            totalContractAmount.push({\n                projStatus: _data[i].projStatus,\n                totalContractAmount: _data[i].totalContractAmount\n            })\n        }\n    }\n\n    //因为有三行，所以需要调用deepDealArr这个函数三次 得到各自三个数组\n\n    let _countProject = this.deepDealArr(countProject, 1)\n    let _totalProjectAmount = this.deepDealArr(totalProjectAmount, 2)\n    let _totalContractAmount = this.deepDealArr(totalContractAmount, 3)\n    \n    //以下是为了把数组转成对象，然后把三行对象塞进数组中，这样表格就能出来了，\n    关键用到了Object.assign() 函数循环数组转成对象\n    let _count = {}\n    let _totalP = {}\n    let _totalC = {}\n    _countProject.map(function (e,item) {                        \n        Object.assign(_count, e);\n    });       \n    _totalProjectAmount.map(function (e,item) {                        \n        Object.assign(_totalP, e);\n    });        \n    _totalContractAmount.map(function (e,item) {                        \n        Object.assign(_totalC, e);\n    });      \n    let _newTable = [\n        _count,\n        _totalP,\n        _totalC\n    ]\n\n    this.table.data = _newTable\n\n}\n```\n这是模板文件：\n```\n<el-table :data=\"table.data\" style=\"width: 100%; margin-top: 20px;\" :loading=\"tableLoading\">\n    <el-table-column prop=\"typeName\" label=\"条目\"></el-table-column>\n    <el-table-column prop=\"total_1\" label=\"报备中\"></el-table-column>\n    <el-table-column prop=\"total_2\" label=\"已报备\"></el-table-column>\n    <el-table-column prop=\"total_3\" label=\"投标中\"></el-table-column> \n    <el-table-column prop=\"total_4\" label=\"已中标\"></el-table-column>\n    <el-table-column prop=\"total_6\" label=\"在建中\"></el-table-column>\n    <el-table-column prop=\"total_7\" label=\"已竣工\"></el-table-column>\n    <el-table-column prop=\"total_9\" label=\"已关闭\"></el-table-column>\n    <el-table-column prop=\"total_8\" label=\"已过期\"></el-table-column>\n    <el-table-column prop=\"total_10\" label=\"已删除\"></el-table-column>\n    <empty \n        v-if=\"table.data.length == 0\"\n        slot=\"empty\"\n        style=\"height: 500px\"\n        tips=\"抱歉！暂时没有数据\" \n        smallTips=\"暂时还没有相关的数据可以展示\"\n        >\n        <img src=\"~/assets/svg/table-empty.svg\" slot=\"img\"/>\n    </empty>\n</el-table>\n```\n用total_的后面的数字来对应列的状态值，这样就能一一对应上了，最后附上完成的效果图\n\n![](5.jpg)\n\n","slug":"一个奇葩的表格统计需求","published":1,"updated":"2021-04-22T01:56:08.232Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckx9sf60t000zz8nk0j3n6zru","content":"<p>有个报表统计的需求，先上需求图：</p>\n<a id=\"more\"></a>\n<p><img src=\"1.jpg\"><br>咋一看，好像挺简单啊，不就是一个表格吗？<br>这么想那就大错特错了。这个需求实际上只有三行，也就是说需要统计“数量”，“项目造价金额”，“项目合同金额”这三个字段在不同状态下的值，也就是各列的“已报备”，“已中标”…. 等等。我们知道如果要实现这一的需求，必须要把“数量”，“项目造价金额”，“项目合同金额”这三个字段在各列中当成一个字段来处理，这样才会显示三行。比如element-ui的table的简单例子：<br><img src=\"2.jpg\"><br><img src=\"3.jpg\"><br>那后端就要返回这样的格式了<br><img src=\"4.jpg\"><br><font color=red>坑就坑在我们这个后端返回的数据结构上，他说他只能按照状态查询结果返回给我！</font></p>\n<h3 id=\"来看看他返回的数据结构是什么：\"><a href=\"#来看看他返回的数据结构是什么：\" class=\"headerlink\" title=\"来看看他返回的数据结构是什么：\"></a>来看看他返回的数据结构是什么：</h3><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">&quot;code&quot;</span>:<span class=\"string\">&quot;200&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;message&quot;</span>:<span class=\"string\">&quot;成功&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;responseBody&quot;</span>:&#123;</span><br><span class=\"line\">        <span class=\"attr\">&quot;code&quot;</span>:<span class=\"string\">&quot;1&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;data&quot;</span>:[</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"attr\">&quot;averageContractAmount&quot;</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;countBuliding&quot;</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;countContract&quot;</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;countProject&quot;</span>:<span class=\"number\">2</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;dayTime&quot;</span>:<span class=\"literal\">null</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;projStatus&quot;</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;projStatusName&quot;</span>:<span class=\"string\">&quot;草稿&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;totalContractAmount&quot;</span>:<span class=\"number\">0.00</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;totalProjectAmount&quot;</span>:<span class=\"number\">17.94</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;totalReturnAmount&quot;</span>:<span class=\"number\">0.00</span></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"attr\">&quot;averageContractAmount&quot;</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;countBuliding&quot;</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;countContract&quot;</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;countProject&quot;</span>:<span class=\"number\">12</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;dayTime&quot;</span>:<span class=\"literal\">null</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;projStatus&quot;</span>:<span class=\"number\">1</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;projStatusName&quot;</span>:<span class=\"string\">&quot;报备中&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;totalContractAmount&quot;</span>:<span class=\"number\">0.00</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;totalProjectAmount&quot;</span>:<span class=\"number\">103.65</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;totalReturnAmount&quot;</span>:<span class=\"number\">0.00</span></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"attr\">&quot;averageContractAmount&quot;</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;countBuliding&quot;</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;countContract&quot;</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;countProject&quot;</span>:<span class=\"number\">17</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;dayTime&quot;</span>:<span class=\"literal\">null</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;projStatus&quot;</span>:<span class=\"number\">2</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;projStatusName&quot;</span>:<span class=\"string\">&quot;已报备&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;totalContractAmount&quot;</span>:<span class=\"number\">0.00</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;totalProjectAmount&quot;</span>:<span class=\"number\">5732.99</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;totalReturnAmount&quot;</span>:<span class=\"number\">0.00</span></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"attr\">&quot;averageContractAmount&quot;</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;countBuliding&quot;</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;countContract&quot;</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;countProject&quot;</span>:<span class=\"number\">5</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;dayTime&quot;</span>:<span class=\"literal\">null</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;projStatus&quot;</span>:<span class=\"number\">4</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;projStatusName&quot;</span>:<span class=\"string\">&quot;已中标&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;totalContractAmount&quot;</span>:<span class=\"number\">4478.88</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;totalProjectAmount&quot;</span>:<span class=\"number\">18.11</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;totalReturnAmount&quot;</span>:<span class=\"number\">0.00</span></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"attr\">&quot;averageContractAmount&quot;</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;countBuliding&quot;</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;countContract&quot;</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;countProject&quot;</span>:<span class=\"number\">6</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;dayTime&quot;</span>:<span class=\"literal\">null</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;projStatus&quot;</span>:<span class=\"number\">6</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;projStatusName&quot;</span>:<span class=\"string\">&quot;建设中&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;totalContractAmount&quot;</span>:<span class=\"number\">14.10</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;totalProjectAmount&quot;</span>:<span class=\"number\">154.01</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;totalReturnAmount&quot;</span>:<span class=\"number\">0.00</span></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"attr\">&quot;averageContractAmount&quot;</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;countBuliding&quot;</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;countContract&quot;</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;countProject&quot;</span>:<span class=\"number\">1</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;dayTime&quot;</span>:<span class=\"literal\">null</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;projStatus&quot;</span>:<span class=\"number\">7</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;projStatusName&quot;</span>:<span class=\"string\">&quot;已竣工&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;totalContractAmount&quot;</span>:<span class=\"number\">1.00</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;totalProjectAmount&quot;</span>:<span class=\"number\">1.00</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;totalReturnAmount&quot;</span>:<span class=\"number\">0.00</span></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"attr\">&quot;averageContractAmount&quot;</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;countBuliding&quot;</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;countContract&quot;</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;countProject&quot;</span>:<span class=\"number\">1</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;dayTime&quot;</span>:<span class=\"literal\">null</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;projStatus&quot;</span>:<span class=\"number\">10</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;projStatusName&quot;</span>:<span class=\"string\">&quot;已删除&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;totalContractAmount&quot;</span>:<span class=\"number\">0.00</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;totalProjectAmount&quot;</span>:<span class=\"number\">0.12</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;totalReturnAmount&quot;</span>:<span class=\"number\">0.00</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        ],</span><br><span class=\"line\">        <span class=\"attr\">&quot;message&quot;</span>:<span class=\"string\">&quot;操作成功&quot;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>其中<code>projStatus</code>就是上面提到的“报备中”，“已中标”等等列的状态值了，但是这样渲染出来的表格是10行，因为他数组没有处理，直接有多少个状态有值就返回多少条记录。实际上我前端这边需要的字段是这样的 </p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[</span><br><span class=\"line\">    &#123; <span class=\"attr\">typeName:</span> <span class=\"string\">&#x27;数量&#x27;</span>, <span class=\"attr\">projStatus:</span> <span class=\"number\">1</span>, <span class=\"attr\">total_1:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_2:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_3:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_4:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_5:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_6:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_7:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_8:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_9:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_10:</span> <span class=\"number\">2</span> &#125;,</span><br><span class=\"line\">    &#123; <span class=\"attr\">typeName:</span> <span class=\"string\">&#x27;项目造价金额（万）&#x27;</span>, <span class=\"attr\">projStatus:</span> <span class=\"number\">1</span>, <span class=\"attr\">total_1:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_2:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_3:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_4:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_5:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_6:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_7:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_8:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_9:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_10:</span> <span class=\"number\">2</span> &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    &#123; <span class=\"attr\">typeName:</span> <span class=\"string\">&#x27;项目合同金额（万）&#x27;</span>, <span class=\"attr\">projStatus:</span> <span class=\"number\">1</span>, <span class=\"attr\">total_1:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_2:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_3:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_4:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_5:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_6:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_7:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_8:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_9:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_10:</span> <span class=\"number\">2</span> &#125; </span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n\n<p>这就需要自己进行艰苦的数据处理了。。。<br>根据他字段返回的 <code>countProject //数量</code> <code>totalProjectAmount //项目造价</code> <code>totalContractAmount //项目合同</code>  这三个字段分类把数据重新组合成三个数组。</p>\n<figure class=\"highlight reasonml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deep<span class=\"constructor\">DealArr(<span class=\"params\">data</span>, <span class=\"params\">num</span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> countProject = <span class=\"literal\">[]</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> totalProjectAmount = <span class=\"literal\">[]</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> totalContractAmount = <span class=\"literal\">[]</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (num<span class=\"operator\"> === </span><span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> _data = this.utils.copy(data);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">_data</span>.</span></span>length; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> ind = _data<span class=\"literal\">[<span class=\"identifier\">i</span>]</span>.projStatus</span><br><span class=\"line\">            const dataObj = &#123;&#125;</span><br><span class=\"line\">            dataObj.projStatus = _data<span class=\"literal\">[<span class=\"identifier\">i</span>]</span>.projStatus</span><br><span class=\"line\">            dataObj<span class=\"literal\">[&#x27;<span class=\"identifier\">total_</span>&#x27; + <span class=\"identifier\">ind</span>]</span> = _data<span class=\"literal\">[<span class=\"identifier\">i</span>]</span>.countProject</span><br><span class=\"line\">            countProject.push(dataObj)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        countProject.splice(<span class=\"number\">0</span>, <span class=\"number\">0</span>, &#123; typeName: &#x27;数量&#x27; &#125;)</span><br><span class=\"line\">        return countProject;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (num<span class=\"operator\"> === </span><span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> _data = this.utils.copy(data);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">_data</span>.</span></span>length; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> ind = _data<span class=\"literal\">[<span class=\"identifier\">i</span>]</span>.projStatus</span><br><span class=\"line\">            const dataObj = &#123;&#125;</span><br><span class=\"line\">            dataObj.projStatus = _data<span class=\"literal\">[<span class=\"identifier\">i</span>]</span>.projStatus</span><br><span class=\"line\">            dataObj<span class=\"literal\">[&#x27;<span class=\"identifier\">total_</span>&#x27; + <span class=\"identifier\">ind</span>]</span> = _data<span class=\"literal\">[<span class=\"identifier\">i</span>]</span>.totalProjectAmount</span><br><span class=\"line\">            totalProjectAmount.push(dataObj)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        totalProjectAmount.splice(<span class=\"number\">0</span>, <span class=\"number\">0</span>, &#123; typeName: &#x27;项目造价金额（万）&#x27; &#125;)</span><br><span class=\"line\">        return totalProjectAmount;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> _data = this.utils.copy(data);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">_data</span>.</span></span>length; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> ind = _data<span class=\"literal\">[<span class=\"identifier\">i</span>]</span>.projStatus</span><br><span class=\"line\">            const dataObj = &#123;&#125;</span><br><span class=\"line\">            dataObj.projStatus = _data<span class=\"literal\">[<span class=\"identifier\">i</span>]</span>.projStatus</span><br><span class=\"line\">            dataObj<span class=\"literal\">[&#x27;<span class=\"identifier\">total_</span>&#x27; + <span class=\"identifier\">ind</span>]</span> = _data<span class=\"literal\">[<span class=\"identifier\">i</span>]</span>.totalContractAmount</span><br><span class=\"line\">            totalContractAmount.push(dataObj)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        totalContractAmount.splice(<span class=\"number\">0</span>, <span class=\"number\">0</span>, &#123; typeName: &#x27;项目合同金额（万）&#x27; &#125;)</span><br><span class=\"line\">        return totalContractAmount;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">* 处理返回数组</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\">deal<span class=\"constructor\">Arry(<span class=\"params\">data</span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> _data = this.utils.copy(data);<span class=\"comment\">//这个data 就是后端返回的初始结构的数据</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> countProject = <span class=\"literal\">[]</span>; <span class=\"comment\">//数量</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> totalProjectAmount = <span class=\"literal\">[]</span>;<span class=\"comment\">//项目造价</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> totalContractAmount = <span class=\"literal\">[]</span>; <span class=\"comment\">//项目合同</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//处理出来的结果是类似 [&#123; typeName: &#x27;数量&#x27;, projStatus: 1, total_1: 2, total_2: 2, total_3: 2, total_4: 2, total_5: 2, total_6: 2, total_7: 2, total_8: 2, total_9: 2, total_10: 2 &#125;]这种数组结构</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">_data</span>.</span></span>length; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (_data<span class=\"literal\">[<span class=\"identifier\">i</span>]</span>.countProject<span class=\"operator\"> || </span>_data<span class=\"literal\">[<span class=\"identifier\">i</span>]</span>.countProject<span class=\"operator\"> === </span><span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            countProject.push(&#123;</span><br><span class=\"line\">                projStatus: _data<span class=\"literal\">[<span class=\"identifier\">i</span>]</span>.projStatus,</span><br><span class=\"line\">                countProject: _data<span class=\"literal\">[<span class=\"identifier\">i</span>]</span>.countProject</span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (_data<span class=\"literal\">[<span class=\"identifier\">i</span>]</span>.totalProjectAmount<span class=\"operator\"> || </span>_data<span class=\"literal\">[<span class=\"identifier\">i</span>]</span>.totalProjectAmount<span class=\"operator\"> === </span><span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            totalProjectAmount.push(&#123;</span><br><span class=\"line\">                projStatus: _data<span class=\"literal\">[<span class=\"identifier\">i</span>]</span>.projStatus,</span><br><span class=\"line\">                totalProjectAmount:  _data<span class=\"literal\">[<span class=\"identifier\">i</span>]</span>.totalProjectAmount</span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (_data<span class=\"literal\">[<span class=\"identifier\">i</span>]</span>.totalContractAmount<span class=\"operator\"> || </span>_data<span class=\"literal\">[<span class=\"identifier\">i</span>]</span>.totalContractAmount<span class=\"operator\"> === </span><span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            totalContractAmount.push(&#123;</span><br><span class=\"line\">                projStatus: _data<span class=\"literal\">[<span class=\"identifier\">i</span>]</span>.projStatus,</span><br><span class=\"line\">                totalContractAmount: _data<span class=\"literal\">[<span class=\"identifier\">i</span>]</span>.totalContractAmount</span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//因为有三行，所以需要调用deepDealArr这个函数三次 得到各自三个数组</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">let</span> _countProject = this.deep<span class=\"constructor\">DealArr(<span class=\"params\">countProject</span>, 1)</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> _totalProjectAmount = this.deep<span class=\"constructor\">DealArr(<span class=\"params\">totalProjectAmount</span>, 2)</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> _totalContractAmount = this.deep<span class=\"constructor\">DealArr(<span class=\"params\">totalContractAmount</span>, 3)</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//以下是为了把数组转成对象，然后把三行对象塞进数组中，这样表格就能出来了，</span></span><br><span class=\"line\">    关键用到了<span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">Object</span>.</span></span>assign<span class=\"literal\">()</span> 函数循环数组转成对象</span><br><span class=\"line\">    <span class=\"keyword\">let</span> _count = &#123;&#125;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> _totalP = &#123;&#125;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> _totalC = &#123;&#125;</span><br><span class=\"line\">    <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">_countProject</span>.</span></span>map(<span class=\"keyword\">function</span> (e,item) &#123;                        </span><br><span class=\"line\">        <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">Object</span>.</span></span>assign(_count, e);</span><br><span class=\"line\">    &#125;);       </span><br><span class=\"line\">    <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">_totalProjectAmount</span>.</span></span>map(<span class=\"keyword\">function</span> (e,item) &#123;                        </span><br><span class=\"line\">        <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">Object</span>.</span></span>assign(_totalP, e);</span><br><span class=\"line\">    &#125;);        </span><br><span class=\"line\">    <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">_totalContractAmount</span>.</span></span>map(<span class=\"keyword\">function</span> (e,item) &#123;                        </span><br><span class=\"line\">        <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">Object</span>.</span></span>assign(_totalC, e);</span><br><span class=\"line\">    &#125;);      </span><br><span class=\"line\">    <span class=\"keyword\">let</span> _newTable = <span class=\"literal\">[</span></span><br><span class=\"line\"><span class=\"literal\">        <span class=\"identifier\">_count</span>,</span></span><br><span class=\"line\"><span class=\"literal\">        <span class=\"identifier\">_totalP</span>,</span></span><br><span class=\"line\"><span class=\"literal\">        <span class=\"identifier\">_totalC</span></span></span><br><span class=\"line\"><span class=\"literal\">    ]</span></span><br><span class=\"line\"></span><br><span class=\"line\">    this.table.data = _newTable</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这是模板文件：</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;el-<span class=\"keyword\">table</span> :data=&quot;table.data&quot; style=&quot;width: 100%; margin-top: 20px;&quot; :loading=&quot;tableLoading&quot;&gt;</span><br><span class=\"line\">    &lt;el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span> prop=&quot;typeName&quot; label=&quot;条目&quot;&gt;&lt;/el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span>&gt;</span><br><span class=\"line\">    &lt;el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span> prop=&quot;total_1&quot; label=&quot;报备中&quot;&gt;&lt;/el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span>&gt;</span><br><span class=\"line\">    &lt;el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span> prop=&quot;total_2&quot; label=&quot;已报备&quot;&gt;&lt;/el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span>&gt;</span><br><span class=\"line\">    &lt;el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span> prop=&quot;total_3&quot; label=&quot;投标中&quot;&gt;&lt;/el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span>&gt; </span><br><span class=\"line\">    &lt;el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span> prop=&quot;total_4&quot; label=&quot;已中标&quot;&gt;&lt;/el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span>&gt;</span><br><span class=\"line\">    &lt;el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span> prop=&quot;total_6&quot; label=&quot;在建中&quot;&gt;&lt;/el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span>&gt;</span><br><span class=\"line\">    &lt;el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span> prop=&quot;total_7&quot; label=&quot;已竣工&quot;&gt;&lt;/el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span>&gt;</span><br><span class=\"line\">    &lt;el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span> prop=&quot;total_9&quot; label=&quot;已关闭&quot;&gt;&lt;/el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span>&gt;</span><br><span class=\"line\">    &lt;el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span> prop=&quot;total_8&quot; label=&quot;已过期&quot;&gt;&lt;/el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span>&gt;</span><br><span class=\"line\">    &lt;el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span> prop=&quot;total_10&quot; label=&quot;已删除&quot;&gt;&lt;/el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span>&gt;</span><br><span class=\"line\">    &lt;empty </span><br><span class=\"line\">        v-<span class=\"keyword\">if</span>=&quot;table.data.length == 0&quot;</span><br><span class=\"line\">        slot=&quot;empty&quot;</span><br><span class=\"line\">        style=&quot;height: 500px&quot;</span><br><span class=\"line\">        tips=&quot;抱歉！暂时没有数据&quot; </span><br><span class=\"line\">        smallTips=&quot;暂时还没有相关的数据可以展示&quot;</span><br><span class=\"line\">        &gt;</span><br><span class=\"line\">        &lt;img src=&quot;~/assets/svg/table-empty.svg&quot; slot=&quot;img&quot;/&gt;</span><br><span class=\"line\">    &lt;/empty&gt;</span><br><span class=\"line\">&lt;/el-<span class=\"keyword\">table</span>&gt;</span><br></pre></td></tr></table></figure>\n<p>用total_的后面的数字来对应列的状态值，这样就能一一对应上了，最后附上完成的效果图</p>\n<p><img src=\"5.jpg\"></p>\n","site":{"data":{}},"excerpt":"<p>有个报表统计的需求，先上需求图：</p>","more":"<p><img src=\"1.jpg\"><br>咋一看，好像挺简单啊，不就是一个表格吗？<br>这么想那就大错特错了。这个需求实际上只有三行，也就是说需要统计“数量”，“项目造价金额”，“项目合同金额”这三个字段在不同状态下的值，也就是各列的“已报备”，“已中标”…. 等等。我们知道如果要实现这一的需求，必须要把“数量”，“项目造价金额”，“项目合同金额”这三个字段在各列中当成一个字段来处理，这样才会显示三行。比如element-ui的table的简单例子：<br><img src=\"2.jpg\"><br><img src=\"3.jpg\"><br>那后端就要返回这样的格式了<br><img src=\"4.jpg\"><br><font color=red>坑就坑在我们这个后端返回的数据结构上，他说他只能按照状态查询结果返回给我！</font></p>\n<h3 id=\"来看看他返回的数据结构是什么：\"><a href=\"#来看看他返回的数据结构是什么：\" class=\"headerlink\" title=\"来看看他返回的数据结构是什么：\"></a>来看看他返回的数据结构是什么：</h3><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">&quot;code&quot;</span>:<span class=\"string\">&quot;200&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;message&quot;</span>:<span class=\"string\">&quot;成功&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;responseBody&quot;</span>:&#123;</span><br><span class=\"line\">        <span class=\"attr\">&quot;code&quot;</span>:<span class=\"string\">&quot;1&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;data&quot;</span>:[</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"attr\">&quot;averageContractAmount&quot;</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;countBuliding&quot;</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;countContract&quot;</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;countProject&quot;</span>:<span class=\"number\">2</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;dayTime&quot;</span>:<span class=\"literal\">null</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;projStatus&quot;</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;projStatusName&quot;</span>:<span class=\"string\">&quot;草稿&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;totalContractAmount&quot;</span>:<span class=\"number\">0.00</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;totalProjectAmount&quot;</span>:<span class=\"number\">17.94</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;totalReturnAmount&quot;</span>:<span class=\"number\">0.00</span></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"attr\">&quot;averageContractAmount&quot;</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;countBuliding&quot;</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;countContract&quot;</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;countProject&quot;</span>:<span class=\"number\">12</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;dayTime&quot;</span>:<span class=\"literal\">null</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;projStatus&quot;</span>:<span class=\"number\">1</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;projStatusName&quot;</span>:<span class=\"string\">&quot;报备中&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;totalContractAmount&quot;</span>:<span class=\"number\">0.00</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;totalProjectAmount&quot;</span>:<span class=\"number\">103.65</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;totalReturnAmount&quot;</span>:<span class=\"number\">0.00</span></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"attr\">&quot;averageContractAmount&quot;</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;countBuliding&quot;</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;countContract&quot;</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;countProject&quot;</span>:<span class=\"number\">17</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;dayTime&quot;</span>:<span class=\"literal\">null</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;projStatus&quot;</span>:<span class=\"number\">2</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;projStatusName&quot;</span>:<span class=\"string\">&quot;已报备&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;totalContractAmount&quot;</span>:<span class=\"number\">0.00</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;totalProjectAmount&quot;</span>:<span class=\"number\">5732.99</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;totalReturnAmount&quot;</span>:<span class=\"number\">0.00</span></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"attr\">&quot;averageContractAmount&quot;</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;countBuliding&quot;</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;countContract&quot;</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;countProject&quot;</span>:<span class=\"number\">5</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;dayTime&quot;</span>:<span class=\"literal\">null</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;projStatus&quot;</span>:<span class=\"number\">4</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;projStatusName&quot;</span>:<span class=\"string\">&quot;已中标&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;totalContractAmount&quot;</span>:<span class=\"number\">4478.88</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;totalProjectAmount&quot;</span>:<span class=\"number\">18.11</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;totalReturnAmount&quot;</span>:<span class=\"number\">0.00</span></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"attr\">&quot;averageContractAmount&quot;</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;countBuliding&quot;</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;countContract&quot;</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;countProject&quot;</span>:<span class=\"number\">6</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;dayTime&quot;</span>:<span class=\"literal\">null</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;projStatus&quot;</span>:<span class=\"number\">6</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;projStatusName&quot;</span>:<span class=\"string\">&quot;建设中&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;totalContractAmount&quot;</span>:<span class=\"number\">14.10</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;totalProjectAmount&quot;</span>:<span class=\"number\">154.01</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;totalReturnAmount&quot;</span>:<span class=\"number\">0.00</span></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"attr\">&quot;averageContractAmount&quot;</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;countBuliding&quot;</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;countContract&quot;</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;countProject&quot;</span>:<span class=\"number\">1</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;dayTime&quot;</span>:<span class=\"literal\">null</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;projStatus&quot;</span>:<span class=\"number\">7</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;projStatusName&quot;</span>:<span class=\"string\">&quot;已竣工&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;totalContractAmount&quot;</span>:<span class=\"number\">1.00</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;totalProjectAmount&quot;</span>:<span class=\"number\">1.00</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;totalReturnAmount&quot;</span>:<span class=\"number\">0.00</span></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"attr\">&quot;averageContractAmount&quot;</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;countBuliding&quot;</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;countContract&quot;</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;countProject&quot;</span>:<span class=\"number\">1</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;dayTime&quot;</span>:<span class=\"literal\">null</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;projStatus&quot;</span>:<span class=\"number\">10</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;projStatusName&quot;</span>:<span class=\"string\">&quot;已删除&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;totalContractAmount&quot;</span>:<span class=\"number\">0.00</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;totalProjectAmount&quot;</span>:<span class=\"number\">0.12</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;totalReturnAmount&quot;</span>:<span class=\"number\">0.00</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        ],</span><br><span class=\"line\">        <span class=\"attr\">&quot;message&quot;</span>:<span class=\"string\">&quot;操作成功&quot;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>其中<code>projStatus</code>就是上面提到的“报备中”，“已中标”等等列的状态值了，但是这样渲染出来的表格是10行，因为他数组没有处理，直接有多少个状态有值就返回多少条记录。实际上我前端这边需要的字段是这样的 </p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[</span><br><span class=\"line\">    &#123; <span class=\"attr\">typeName:</span> <span class=\"string\">&#x27;数量&#x27;</span>, <span class=\"attr\">projStatus:</span> <span class=\"number\">1</span>, <span class=\"attr\">total_1:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_2:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_3:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_4:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_5:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_6:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_7:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_8:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_9:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_10:</span> <span class=\"number\">2</span> &#125;,</span><br><span class=\"line\">    &#123; <span class=\"attr\">typeName:</span> <span class=\"string\">&#x27;项目造价金额（万）&#x27;</span>, <span class=\"attr\">projStatus:</span> <span class=\"number\">1</span>, <span class=\"attr\">total_1:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_2:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_3:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_4:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_5:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_6:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_7:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_8:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_9:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_10:</span> <span class=\"number\">2</span> &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    &#123; <span class=\"attr\">typeName:</span> <span class=\"string\">&#x27;项目合同金额（万）&#x27;</span>, <span class=\"attr\">projStatus:</span> <span class=\"number\">1</span>, <span class=\"attr\">total_1:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_2:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_3:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_4:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_5:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_6:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_7:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_8:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_9:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_10:</span> <span class=\"number\">2</span> &#125; </span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n\n<p>这就需要自己进行艰苦的数据处理了。。。<br>根据他字段返回的 <code>countProject //数量</code> <code>totalProjectAmount //项目造价</code> <code>totalContractAmount //项目合同</code>  这三个字段分类把数据重新组合成三个数组。</p>\n<figure class=\"highlight reasonml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deep<span class=\"constructor\">DealArr(<span class=\"params\">data</span>, <span class=\"params\">num</span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> countProject = <span class=\"literal\">[]</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> totalProjectAmount = <span class=\"literal\">[]</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> totalContractAmount = <span class=\"literal\">[]</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (num<span class=\"operator\"> === </span><span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> _data = this.utils.copy(data);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">_data</span>.</span></span>length; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> ind = _data<span class=\"literal\">[<span class=\"identifier\">i</span>]</span>.projStatus</span><br><span class=\"line\">            const dataObj = &#123;&#125;</span><br><span class=\"line\">            dataObj.projStatus = _data<span class=\"literal\">[<span class=\"identifier\">i</span>]</span>.projStatus</span><br><span class=\"line\">            dataObj<span class=\"literal\">[&#x27;<span class=\"identifier\">total_</span>&#x27; + <span class=\"identifier\">ind</span>]</span> = _data<span class=\"literal\">[<span class=\"identifier\">i</span>]</span>.countProject</span><br><span class=\"line\">            countProject.push(dataObj)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        countProject.splice(<span class=\"number\">0</span>, <span class=\"number\">0</span>, &#123; typeName: &#x27;数量&#x27; &#125;)</span><br><span class=\"line\">        return countProject;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (num<span class=\"operator\"> === </span><span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> _data = this.utils.copy(data);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">_data</span>.</span></span>length; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> ind = _data<span class=\"literal\">[<span class=\"identifier\">i</span>]</span>.projStatus</span><br><span class=\"line\">            const dataObj = &#123;&#125;</span><br><span class=\"line\">            dataObj.projStatus = _data<span class=\"literal\">[<span class=\"identifier\">i</span>]</span>.projStatus</span><br><span class=\"line\">            dataObj<span class=\"literal\">[&#x27;<span class=\"identifier\">total_</span>&#x27; + <span class=\"identifier\">ind</span>]</span> = _data<span class=\"literal\">[<span class=\"identifier\">i</span>]</span>.totalProjectAmount</span><br><span class=\"line\">            totalProjectAmount.push(dataObj)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        totalProjectAmount.splice(<span class=\"number\">0</span>, <span class=\"number\">0</span>, &#123; typeName: &#x27;项目造价金额（万）&#x27; &#125;)</span><br><span class=\"line\">        return totalProjectAmount;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> _data = this.utils.copy(data);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">_data</span>.</span></span>length; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> ind = _data<span class=\"literal\">[<span class=\"identifier\">i</span>]</span>.projStatus</span><br><span class=\"line\">            const dataObj = &#123;&#125;</span><br><span class=\"line\">            dataObj.projStatus = _data<span class=\"literal\">[<span class=\"identifier\">i</span>]</span>.projStatus</span><br><span class=\"line\">            dataObj<span class=\"literal\">[&#x27;<span class=\"identifier\">total_</span>&#x27; + <span class=\"identifier\">ind</span>]</span> = _data<span class=\"literal\">[<span class=\"identifier\">i</span>]</span>.totalContractAmount</span><br><span class=\"line\">            totalContractAmount.push(dataObj)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        totalContractAmount.splice(<span class=\"number\">0</span>, <span class=\"number\">0</span>, &#123; typeName: &#x27;项目合同金额（万）&#x27; &#125;)</span><br><span class=\"line\">        return totalContractAmount;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">* 处理返回数组</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\">deal<span class=\"constructor\">Arry(<span class=\"params\">data</span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> _data = this.utils.copy(data);<span class=\"comment\">//这个data 就是后端返回的初始结构的数据</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> countProject = <span class=\"literal\">[]</span>; <span class=\"comment\">//数量</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> totalProjectAmount = <span class=\"literal\">[]</span>;<span class=\"comment\">//项目造价</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> totalContractAmount = <span class=\"literal\">[]</span>; <span class=\"comment\">//项目合同</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//处理出来的结果是类似 [&#123; typeName: &#x27;数量&#x27;, projStatus: 1, total_1: 2, total_2: 2, total_3: 2, total_4: 2, total_5: 2, total_6: 2, total_7: 2, total_8: 2, total_9: 2, total_10: 2 &#125;]这种数组结构</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">_data</span>.</span></span>length; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (_data<span class=\"literal\">[<span class=\"identifier\">i</span>]</span>.countProject<span class=\"operator\"> || </span>_data<span class=\"literal\">[<span class=\"identifier\">i</span>]</span>.countProject<span class=\"operator\"> === </span><span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            countProject.push(&#123;</span><br><span class=\"line\">                projStatus: _data<span class=\"literal\">[<span class=\"identifier\">i</span>]</span>.projStatus,</span><br><span class=\"line\">                countProject: _data<span class=\"literal\">[<span class=\"identifier\">i</span>]</span>.countProject</span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (_data<span class=\"literal\">[<span class=\"identifier\">i</span>]</span>.totalProjectAmount<span class=\"operator\"> || </span>_data<span class=\"literal\">[<span class=\"identifier\">i</span>]</span>.totalProjectAmount<span class=\"operator\"> === </span><span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            totalProjectAmount.push(&#123;</span><br><span class=\"line\">                projStatus: _data<span class=\"literal\">[<span class=\"identifier\">i</span>]</span>.projStatus,</span><br><span class=\"line\">                totalProjectAmount:  _data<span class=\"literal\">[<span class=\"identifier\">i</span>]</span>.totalProjectAmount</span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (_data<span class=\"literal\">[<span class=\"identifier\">i</span>]</span>.totalContractAmount<span class=\"operator\"> || </span>_data<span class=\"literal\">[<span class=\"identifier\">i</span>]</span>.totalContractAmount<span class=\"operator\"> === </span><span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            totalContractAmount.push(&#123;</span><br><span class=\"line\">                projStatus: _data<span class=\"literal\">[<span class=\"identifier\">i</span>]</span>.projStatus,</span><br><span class=\"line\">                totalContractAmount: _data<span class=\"literal\">[<span class=\"identifier\">i</span>]</span>.totalContractAmount</span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//因为有三行，所以需要调用deepDealArr这个函数三次 得到各自三个数组</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">let</span> _countProject = this.deep<span class=\"constructor\">DealArr(<span class=\"params\">countProject</span>, 1)</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> _totalProjectAmount = this.deep<span class=\"constructor\">DealArr(<span class=\"params\">totalProjectAmount</span>, 2)</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> _totalContractAmount = this.deep<span class=\"constructor\">DealArr(<span class=\"params\">totalContractAmount</span>, 3)</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//以下是为了把数组转成对象，然后把三行对象塞进数组中，这样表格就能出来了，</span></span><br><span class=\"line\">    关键用到了<span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">Object</span>.</span></span>assign<span class=\"literal\">()</span> 函数循环数组转成对象</span><br><span class=\"line\">    <span class=\"keyword\">let</span> _count = &#123;&#125;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> _totalP = &#123;&#125;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> _totalC = &#123;&#125;</span><br><span class=\"line\">    <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">_countProject</span>.</span></span>map(<span class=\"keyword\">function</span> (e,item) &#123;                        </span><br><span class=\"line\">        <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">Object</span>.</span></span>assign(_count, e);</span><br><span class=\"line\">    &#125;);       </span><br><span class=\"line\">    <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">_totalProjectAmount</span>.</span></span>map(<span class=\"keyword\">function</span> (e,item) &#123;                        </span><br><span class=\"line\">        <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">Object</span>.</span></span>assign(_totalP, e);</span><br><span class=\"line\">    &#125;);        </span><br><span class=\"line\">    <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">_totalContractAmount</span>.</span></span>map(<span class=\"keyword\">function</span> (e,item) &#123;                        </span><br><span class=\"line\">        <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">Object</span>.</span></span>assign(_totalC, e);</span><br><span class=\"line\">    &#125;);      </span><br><span class=\"line\">    <span class=\"keyword\">let</span> _newTable = <span class=\"literal\">[</span></span><br><span class=\"line\"><span class=\"literal\">        <span class=\"identifier\">_count</span>,</span></span><br><span class=\"line\"><span class=\"literal\">        <span class=\"identifier\">_totalP</span>,</span></span><br><span class=\"line\"><span class=\"literal\">        <span class=\"identifier\">_totalC</span></span></span><br><span class=\"line\"><span class=\"literal\">    ]</span></span><br><span class=\"line\"></span><br><span class=\"line\">    this.table.data = _newTable</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这是模板文件：</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;el-<span class=\"keyword\">table</span> :data=&quot;table.data&quot; style=&quot;width: 100%; margin-top: 20px;&quot; :loading=&quot;tableLoading&quot;&gt;</span><br><span class=\"line\">    &lt;el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span> prop=&quot;typeName&quot; label=&quot;条目&quot;&gt;&lt;/el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span>&gt;</span><br><span class=\"line\">    &lt;el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span> prop=&quot;total_1&quot; label=&quot;报备中&quot;&gt;&lt;/el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span>&gt;</span><br><span class=\"line\">    &lt;el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span> prop=&quot;total_2&quot; label=&quot;已报备&quot;&gt;&lt;/el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span>&gt;</span><br><span class=\"line\">    &lt;el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span> prop=&quot;total_3&quot; label=&quot;投标中&quot;&gt;&lt;/el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span>&gt; </span><br><span class=\"line\">    &lt;el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span> prop=&quot;total_4&quot; label=&quot;已中标&quot;&gt;&lt;/el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span>&gt;</span><br><span class=\"line\">    &lt;el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span> prop=&quot;total_6&quot; label=&quot;在建中&quot;&gt;&lt;/el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span>&gt;</span><br><span class=\"line\">    &lt;el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span> prop=&quot;total_7&quot; label=&quot;已竣工&quot;&gt;&lt;/el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span>&gt;</span><br><span class=\"line\">    &lt;el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span> prop=&quot;total_9&quot; label=&quot;已关闭&quot;&gt;&lt;/el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span>&gt;</span><br><span class=\"line\">    &lt;el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span> prop=&quot;total_8&quot; label=&quot;已过期&quot;&gt;&lt;/el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span>&gt;</span><br><span class=\"line\">    &lt;el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span> prop=&quot;total_10&quot; label=&quot;已删除&quot;&gt;&lt;/el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span>&gt;</span><br><span class=\"line\">    &lt;empty </span><br><span class=\"line\">        v-<span class=\"keyword\">if</span>=&quot;table.data.length == 0&quot;</span><br><span class=\"line\">        slot=&quot;empty&quot;</span><br><span class=\"line\">        style=&quot;height: 500px&quot;</span><br><span class=\"line\">        tips=&quot;抱歉！暂时没有数据&quot; </span><br><span class=\"line\">        smallTips=&quot;暂时还没有相关的数据可以展示&quot;</span><br><span class=\"line\">        &gt;</span><br><span class=\"line\">        &lt;img src=&quot;~/assets/svg/table-empty.svg&quot; slot=&quot;img&quot;/&gt;</span><br><span class=\"line\">    &lt;/empty&gt;</span><br><span class=\"line\">&lt;/el-<span class=\"keyword\">table</span>&gt;</span><br></pre></td></tr></table></figure>\n<p>用total_的后面的数字来对应列的状态值，这样就能一一对应上了，最后附上完成的效果图</p>\n<p><img src=\"5.jpg\"></p>"},{"title":"修改npm和yarn的全局安装包位置和缓存位置","abbrlink":"239611e0","date":"2021-12-17T02:21:46.000Z","_content":"\n最近发现C盘越来越小了，经过排查，C盘的用户文件夹很大，有30多G，实在是太大了。基本上都是应用产生的数据，其中npm目录就占了大概4、5G，实在是太大了，不能忍，于是就网上找解决方法 ，找到一个更改npm和yarn缓存目录的方法。\n\n<!-- more -->\n### npm 全局安装设置和缓存设置\n查看当前npm包的全局安装路径：\n`npm prefix -g `\n\n查看配置列表：\n`npm config ls `\n\n修改npm的包的全局安装路径： \n`npm config set prefix \"D:\\nodejs\\npm_global\"`\n\n修改npm的包的全局cache位置:\n`npm config set cache \"D:\\nodejs\\npm-cache\"`\n\n### 需要将 `D:\\nodejs\\npm_global` 添加进系统环境变量中，这里文添加进用户变量中。\n\n### yarn 的安装路径和缓存路径\n\n查看 yarn 全局安装位置：\n`yarn global dir`\n\n查看 yarn 全局cache位置:\n`yarn cache dir`\n\n改变 yarn 全局安装位置\n`yarn config  set global-folder \"D:\\nodejs\\yarn\\global\"`\n\n改变 yarn 全局cache位置:\n`yarn config set cache-folder`\n\n### 注意！以上命令需要用管理员运行cmd，执行相应的命令，否则会报错，让你怀疑人生，且网上查不到相应的报错信息。而且设置完这些路径后，卸载nodejs再重装，也不会恢复默认，估计只有重装系统才能恢复默认了。\n","source":"_posts/修改npm和yarn的全局安装包位置和缓存位置.md","raw":"---\ntitle: 修改npm和yarn的全局安装包位置和缓存位置\nabbrlink: '239611e0'\ndate: 2021-12-17 10:21:46\ntags:\n  - nodejs\ncategories: 前端\n---\n\n最近发现C盘越来越小了，经过排查，C盘的用户文件夹很大，有30多G，实在是太大了。基本上都是应用产生的数据，其中npm目录就占了大概4、5G，实在是太大了，不能忍，于是就网上找解决方法 ，找到一个更改npm和yarn缓存目录的方法。\n\n<!-- more -->\n### npm 全局安装设置和缓存设置\n查看当前npm包的全局安装路径：\n`npm prefix -g `\n\n查看配置列表：\n`npm config ls `\n\n修改npm的包的全局安装路径： \n`npm config set prefix \"D:\\nodejs\\npm_global\"`\n\n修改npm的包的全局cache位置:\n`npm config set cache \"D:\\nodejs\\npm-cache\"`\n\n### 需要将 `D:\\nodejs\\npm_global` 添加进系统环境变量中，这里文添加进用户变量中。\n\n### yarn 的安装路径和缓存路径\n\n查看 yarn 全局安装位置：\n`yarn global dir`\n\n查看 yarn 全局cache位置:\n`yarn cache dir`\n\n改变 yarn 全局安装位置\n`yarn config  set global-folder \"D:\\nodejs\\yarn\\global\"`\n\n改变 yarn 全局cache位置:\n`yarn config set cache-folder`\n\n### 注意！以上命令需要用管理员运行cmd，执行相应的命令，否则会报错，让你怀疑人生，且网上查不到相应的报错信息。而且设置完这些路径后，卸载nodejs再重装，也不会恢复默认，估计只有重装系统才能恢复默认了。\n","slug":"修改npm和yarn的全局安装包位置和缓存位置","published":1,"updated":"2021-12-17T02:43:28.257Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckx9sf60u0011z8nk9yr4160h","content":"<p>最近发现C盘越来越小了，经过排查，C盘的用户文件夹很大，有30多G，实在是太大了。基本上都是应用产生的数据，其中npm目录就占了大概4、5G，实在是太大了，不能忍，于是就网上找解决方法 ，找到一个更改npm和yarn缓存目录的方法。</p>\n<a id=\"more\"></a>\n<h3 id=\"npm-全局安装设置和缓存设置\"><a href=\"#npm-全局安装设置和缓存设置\" class=\"headerlink\" title=\"npm 全局安装设置和缓存设置\"></a>npm 全局安装设置和缓存设置</h3><p>查看当前npm包的全局安装路径：<br><code>npm prefix -g </code></p>\n<p>查看配置列表：<br><code>npm config ls </code></p>\n<p>修改npm的包的全局安装路径：<br><code>npm config set prefix &quot;D:\\nodejs\\npm_global&quot;</code></p>\n<p>修改npm的包的全局cache位置:<br><code>npm config set cache &quot;D:\\nodejs\\npm-cache&quot;</code></p>\n<h3 id=\"需要将-D-nodejs-npm-global-添加进系统环境变量中，这里文添加进用户变量中。\"><a href=\"#需要将-D-nodejs-npm-global-添加进系统环境变量中，这里文添加进用户变量中。\" class=\"headerlink\" title=\"需要将 D:\\nodejs\\npm_global 添加进系统环境变量中，这里文添加进用户变量中。\"></a>需要将 <code>D:\\nodejs\\npm_global</code> 添加进系统环境变量中，这里文添加进用户变量中。</h3><h3 id=\"yarn-的安装路径和缓存路径\"><a href=\"#yarn-的安装路径和缓存路径\" class=\"headerlink\" title=\"yarn 的安装路径和缓存路径\"></a>yarn 的安装路径和缓存路径</h3><p>查看 yarn 全局安装位置：<br><code>yarn global dir</code></p>\n<p>查看 yarn 全局cache位置:<br><code>yarn cache dir</code></p>\n<p>改变 yarn 全局安装位置<br><code>yarn config  set global-folder &quot;D:\\nodejs\\yarn\\global&quot;</code></p>\n<p>改变 yarn 全局cache位置:<br><code>yarn config set cache-folder</code></p>\n<h3 id=\"注意！以上命令需要用管理员运行cmd，执行相应的命令，否则会报错，让你怀疑人生，且网上查不到相应的报错信息。而且设置完这些路径后，卸载nodejs再重装，也不会恢复默认，估计只有重装系统才能恢复默认了。\"><a href=\"#注意！以上命令需要用管理员运行cmd，执行相应的命令，否则会报错，让你怀疑人生，且网上查不到相应的报错信息。而且设置完这些路径后，卸载nodejs再重装，也不会恢复默认，估计只有重装系统才能恢复默认了。\" class=\"headerlink\" title=\"注意！以上命令需要用管理员运行cmd，执行相应的命令，否则会报错，让你怀疑人生，且网上查不到相应的报错信息。而且设置完这些路径后，卸载nodejs再重装，也不会恢复默认，估计只有重装系统才能恢复默认了。\"></a>注意！以上命令需要用管理员运行cmd，执行相应的命令，否则会报错，让你怀疑人生，且网上查不到相应的报错信息。而且设置完这些路径后，卸载nodejs再重装，也不会恢复默认，估计只有重装系统才能恢复默认了。</h3>","site":{"data":{}},"excerpt":"<p>最近发现C盘越来越小了，经过排查，C盘的用户文件夹很大，有30多G，实在是太大了。基本上都是应用产生的数据，其中npm目录就占了大概4、5G，实在是太大了，不能忍，于是就网上找解决方法 ，找到一个更改npm和yarn缓存目录的方法。</p>","more":"<h3 id=\"npm-全局安装设置和缓存设置\"><a href=\"#npm-全局安装设置和缓存设置\" class=\"headerlink\" title=\"npm 全局安装设置和缓存设置\"></a>npm 全局安装设置和缓存设置</h3><p>查看当前npm包的全局安装路径：<br><code>npm prefix -g </code></p>\n<p>查看配置列表：<br><code>npm config ls </code></p>\n<p>修改npm的包的全局安装路径：<br><code>npm config set prefix &quot;D:\\nodejs\\npm_global&quot;</code></p>\n<p>修改npm的包的全局cache位置:<br><code>npm config set cache &quot;D:\\nodejs\\npm-cache&quot;</code></p>\n<h3 id=\"需要将-D-nodejs-npm-global-添加进系统环境变量中，这里文添加进用户变量中。\"><a href=\"#需要将-D-nodejs-npm-global-添加进系统环境变量中，这里文添加进用户变量中。\" class=\"headerlink\" title=\"需要将 D:\\nodejs\\npm_global 添加进系统环境变量中，这里文添加进用户变量中。\"></a>需要将 <code>D:\\nodejs\\npm_global</code> 添加进系统环境变量中，这里文添加进用户变量中。</h3><h3 id=\"yarn-的安装路径和缓存路径\"><a href=\"#yarn-的安装路径和缓存路径\" class=\"headerlink\" title=\"yarn 的安装路径和缓存路径\"></a>yarn 的安装路径和缓存路径</h3><p>查看 yarn 全局安装位置：<br><code>yarn global dir</code></p>\n<p>查看 yarn 全局cache位置:<br><code>yarn cache dir</code></p>\n<p>改变 yarn 全局安装位置<br><code>yarn config  set global-folder &quot;D:\\nodejs\\yarn\\global&quot;</code></p>\n<p>改变 yarn 全局cache位置:<br><code>yarn config set cache-folder</code></p>\n<h3 id=\"注意！以上命令需要用管理员运行cmd，执行相应的命令，否则会报错，让你怀疑人生，且网上查不到相应的报错信息。而且设置完这些路径后，卸载nodejs再重装，也不会恢复默认，估计只有重装系统才能恢复默认了。\"><a href=\"#注意！以上命令需要用管理员运行cmd，执行相应的命令，否则会报错，让你怀疑人生，且网上查不到相应的报错信息。而且设置完这些路径后，卸载nodejs再重装，也不会恢复默认，估计只有重装系统才能恢复默认了。\" class=\"headerlink\" title=\"注意！以上命令需要用管理员运行cmd，执行相应的命令，否则会报错，让你怀疑人生，且网上查不到相应的报错信息。而且设置完这些路径后，卸载nodejs再重装，也不会恢复默认，估计只有重装系统才能恢复默认了。\"></a>注意！以上命令需要用管理员运行cmd，执行相应的命令，否则会报错，让你怀疑人生，且网上查不到相应的报错信息。而且设置完这些路径后，卸载nodejs再重装，也不会恢复默认，估计只有重装系统才能恢复默认了。</h3>"},{"title":"在 create-react-app 中使用Ant Design中的坑","abbrlink":"204a2bf8","date":"2020-06-04T10:51:08.000Z","_content":"\n## Ant Design 中的文档有错误，参数变了\n\n这是原来的配置：\n<!-- more -->\n```\n// craco.config.js\nconst CracoLessPlugin = require('craco-less');\n\nmodule.exports = {\n  plugins: [\n    {\n      plugin: CracoLessPlugin,\n      options: {\n        lessLoaderOptions: {\n          modifyVars: { '@primary-color': '#1DA57A' },\n          javascriptEnabled: true,\n        },\n      },\n    },\n  ],\n};\n```\n\n这是正确的配置：\n\n```\n// craco.config.js\nconst CracoLessPlugin = require('craco-less');\n\nmodule.exports = {\n  plugins: [\n    {\n      plugin: CracoLessPlugin,\n      options: {\n        lessLoaderOptions: {\n           lessOptions:{\n                modifyVars: { '@primary-color': '#1DA57A' },\n                javascriptEnabled: true,\n            }\n        },\n      },\n    },\n  ],\n};\n```\n","source":"_posts/在-create-react-app-中使用Ant-Design中的坑.md","raw":"---\ntitle: 在 create-react-app 中使用Ant Design中的坑\nabbrlink: 204a2bf8\ndate: 2020-06-04 18:51:08\ntags: react,\ncategories: 前端\n---\n\n## Ant Design 中的文档有错误，参数变了\n\n这是原来的配置：\n<!-- more -->\n```\n// craco.config.js\nconst CracoLessPlugin = require('craco-less');\n\nmodule.exports = {\n  plugins: [\n    {\n      plugin: CracoLessPlugin,\n      options: {\n        lessLoaderOptions: {\n          modifyVars: { '@primary-color': '#1DA57A' },\n          javascriptEnabled: true,\n        },\n      },\n    },\n  ],\n};\n```\n\n这是正确的配置：\n\n```\n// craco.config.js\nconst CracoLessPlugin = require('craco-less');\n\nmodule.exports = {\n  plugins: [\n    {\n      plugin: CracoLessPlugin,\n      options: {\n        lessLoaderOptions: {\n           lessOptions:{\n                modifyVars: { '@primary-color': '#1DA57A' },\n                javascriptEnabled: true,\n            }\n        },\n      },\n    },\n  ],\n};\n```\n","slug":"在-create-react-app-中使用Ant-Design中的坑","published":1,"updated":"2021-04-22T01:56:08.232Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckx9sf60v0014z8nkhia4dvov","content":"<h2 id=\"Ant-Design-中的文档有错误，参数变了\"><a href=\"#Ant-Design-中的文档有错误，参数变了\" class=\"headerlink\" title=\"Ant Design 中的文档有错误，参数变了\"></a>Ant Design 中的文档有错误，参数变了</h2><p>这是原来的配置：</p>\n<a id=\"more\"></a>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// craco.config.js</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> CracoLessPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;craco-less&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.<span class=\"built_in\">exports</span> = &#123;</span><br><span class=\"line\">  plugins: [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      plugin: CracoLessPlugin,</span><br><span class=\"line\">      options: &#123;</span><br><span class=\"line\">        lessLoaderOptions: &#123;</span><br><span class=\"line\">          modifyVars: &#123; <span class=\"string\">&#x27;@primary-color&#x27;</span>: <span class=\"string\">&#x27;#1DA57A&#x27;</span> &#125;,</span><br><span class=\"line\">          javascriptEnabled: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  ],</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>这是正确的配置：</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// craco.config.js</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> CracoLessPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;craco-less&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.<span class=\"built_in\">exports</span> = &#123;</span><br><span class=\"line\">  plugins: [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      plugin: CracoLessPlugin,</span><br><span class=\"line\">      options: &#123;</span><br><span class=\"line\">        lessLoaderOptions: &#123;</span><br><span class=\"line\">           lessOptions:&#123;</span><br><span class=\"line\">                modifyVars: &#123; <span class=\"string\">&#x27;@primary-color&#x27;</span>: <span class=\"string\">&#x27;#1DA57A&#x27;</span> &#125;,</span><br><span class=\"line\">                javascriptEnabled: <span class=\"literal\">true</span>,</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  ],</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<h2 id=\"Ant-Design-中的文档有错误，参数变了\"><a href=\"#Ant-Design-中的文档有错误，参数变了\" class=\"headerlink\" title=\"Ant Design 中的文档有错误，参数变了\"></a>Ant Design 中的文档有错误，参数变了</h2><p>这是原来的配置：</p>","more":"<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// craco.config.js</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> CracoLessPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;craco-less&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.<span class=\"built_in\">exports</span> = &#123;</span><br><span class=\"line\">  plugins: [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      plugin: CracoLessPlugin,</span><br><span class=\"line\">      options: &#123;</span><br><span class=\"line\">        lessLoaderOptions: &#123;</span><br><span class=\"line\">          modifyVars: &#123; <span class=\"string\">&#x27;@primary-color&#x27;</span>: <span class=\"string\">&#x27;#1DA57A&#x27;</span> &#125;,</span><br><span class=\"line\">          javascriptEnabled: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  ],</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>这是正确的配置：</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// craco.config.js</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> CracoLessPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;craco-less&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.<span class=\"built_in\">exports</span> = &#123;</span><br><span class=\"line\">  plugins: [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      plugin: CracoLessPlugin,</span><br><span class=\"line\">      options: &#123;</span><br><span class=\"line\">        lessLoaderOptions: &#123;</span><br><span class=\"line\">           lessOptions:&#123;</span><br><span class=\"line\">                modifyVars: &#123; <span class=\"string\">&#x27;@primary-color&#x27;</span>: <span class=\"string\">&#x27;#1DA57A&#x27;</span> &#125;,</span><br><span class=\"line\">                javascriptEnabled: <span class=\"literal\">true</span>,</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  ],</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>"},{"title":"在重启阿里云ubantu后nginx、mysql、pm2等的重启","abbrlink":"c20fd3fa","date":"2019-07-05T01:25:24.000Z","_content":"由于对linux的不熟，很多命令都记不住，2018年也是花了几天时间才把服务器环境搭起来，部署了nodejs的水研村官网前后端、部署了“账目随身记”小程序后端，并且利用nginx做了小程序需要的ssl证书转发https，现在已经忘了具体的操作了，免费ssl证书准备过期了，准备又得重新折腾了，下次一定得记录下来。\n<!-- more -->\n好了，在重启服务器之前得做点准备工作，得先找出nginx安装得目录，mysql安装得目录，到时候可以直接去到目录下直接执行例如./nginx这样来启动。我以为大多数linux安装目录都差不多，于是直接网上搜别人得，结果结果不是我想要的，后来我问了位前同事，用whereis nginx 来查找nginx的位置，然后出现了以下目录：\n![](2.png)\n红色圈起来的才是我的nginx的安装目录，nginx就是可执行文件，另外，经过多次摸索和回忆，配置文件在蓝色圈起来的地方，\n具体的位置是：\n![](1.png)\n`nginx -t`为查找nginx配置文件所在的目录。\n然后默认的default配置文件我没用，我自己写了个small.conf配置文件，里面配置了syc.iyuge.cn 水研村官网前台的转发地址，以及小程序需要的account后端的https的ssl配置\n具体代码如下：\n```\n\nserver {\n    listen 443;\n    server_name small.iyuge.cn;\n    access_log /var/www/log/small-access.log;\n    error_log  /var/www/log/small-error.log;\n    ssl on;\n    ssl_certificate   /etc/nginx/cert/214999081890300.pem; #指定服务器证书路径 \n    ssl_certificate_key /etc/nginx/cert/214999081890300.key; #指定私钥证书路径\n    ssl_session_timeout 5m;\n    #ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;\n    ssl_ciphers  ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP; #指定加密算法 \n    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;#指定SSL服务器端支持的协议版本 \n    ssl_prefer_server_ciphers on;\n\n    location / {\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header Host $http_host;\n        proxy_set_header X-NginX-Proxy true;\n        proxy_pass http://127.0.0.1:3000/;\n        proxy_redirect off;\n    }\n}\n\nserver {\n    listen 80;\n    server_name syc.iyuge.cn; #这是水研村前台官网的映射\n    \n    location / {\n       \n\troot /root/code/shuiyancun_vue;\n\tindex  index.html index.htm;\n    }\n}\n\n```\n至于这个证书是怎么跟我的account关联起来的，这个我还真的忘了，我没记错的话，account和shuiyancun_back都有个nginx.conf文件,去看了下，account居然没有？只有shuiyancun_back才有。\n想起来了，原来是需要在阿里云官网开放相应的端口后，外网才能访问的，而我是用pm2来启动项目的，也会有端口号，如图：\n![](3.png)\n<font color=#ff6a00>至于怎么制作ssl证书，等我两个月后证书过期了，再摸索一次记录下来吧</font>\n重启mginx的方法可以去到`/usr/sbin/nginx`目录，执行./nginx 启动。启动mysql的方式可以有两种：1.和nginx一样，但是要加用户名和密码，`./mysql  -u root -p` 然后输入密码就打开数据库了；2.直接 `mysql -u root -p` 输入密码。\n\n另外如果发现停止了PM2中某个项目的时候，还能运行，则说明这个程序已经以另外一种方式在运行了，我们需要查找正在运行的nodejs进程:`ps aux | grep node`\n发现有进程后，直接`kill 具体pid `就可以了\n\n最后就是项目的启动了，进到项目目录执行 `pm2 restart（或者start） pm2.json\n（因为有配置文件了）` 就可以启动项目了\n注意：<font color=#ff6a00>不知道为什么pm2只能监控watch一个项目，如果是两个都watch，另一个项目无法跑起来，所以我的水研村后台就不watch了</font>","source":"_posts/在重启阿里云ubantu后nginx、mysql、pm2等的重启.md","raw":"---\ntitle: 在重启阿里云ubantu后nginx、mysql、pm2等的重启\nabbrlink: c20fd3fa\ndate: 2019-07-05 09:25:24\ntags: linux\ncategories: linux\n---\n由于对linux的不熟，很多命令都记不住，2018年也是花了几天时间才把服务器环境搭起来，部署了nodejs的水研村官网前后端、部署了“账目随身记”小程序后端，并且利用nginx做了小程序需要的ssl证书转发https，现在已经忘了具体的操作了，免费ssl证书准备过期了，准备又得重新折腾了，下次一定得记录下来。\n<!-- more -->\n好了，在重启服务器之前得做点准备工作，得先找出nginx安装得目录，mysql安装得目录，到时候可以直接去到目录下直接执行例如./nginx这样来启动。我以为大多数linux安装目录都差不多，于是直接网上搜别人得，结果结果不是我想要的，后来我问了位前同事，用whereis nginx 来查找nginx的位置，然后出现了以下目录：\n![](2.png)\n红色圈起来的才是我的nginx的安装目录，nginx就是可执行文件，另外，经过多次摸索和回忆，配置文件在蓝色圈起来的地方，\n具体的位置是：\n![](1.png)\n`nginx -t`为查找nginx配置文件所在的目录。\n然后默认的default配置文件我没用，我自己写了个small.conf配置文件，里面配置了syc.iyuge.cn 水研村官网前台的转发地址，以及小程序需要的account后端的https的ssl配置\n具体代码如下：\n```\n\nserver {\n    listen 443;\n    server_name small.iyuge.cn;\n    access_log /var/www/log/small-access.log;\n    error_log  /var/www/log/small-error.log;\n    ssl on;\n    ssl_certificate   /etc/nginx/cert/214999081890300.pem; #指定服务器证书路径 \n    ssl_certificate_key /etc/nginx/cert/214999081890300.key; #指定私钥证书路径\n    ssl_session_timeout 5m;\n    #ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;\n    ssl_ciphers  ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP; #指定加密算法 \n    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;#指定SSL服务器端支持的协议版本 \n    ssl_prefer_server_ciphers on;\n\n    location / {\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header Host $http_host;\n        proxy_set_header X-NginX-Proxy true;\n        proxy_pass http://127.0.0.1:3000/;\n        proxy_redirect off;\n    }\n}\n\nserver {\n    listen 80;\n    server_name syc.iyuge.cn; #这是水研村前台官网的映射\n    \n    location / {\n       \n\troot /root/code/shuiyancun_vue;\n\tindex  index.html index.htm;\n    }\n}\n\n```\n至于这个证书是怎么跟我的account关联起来的，这个我还真的忘了，我没记错的话，account和shuiyancun_back都有个nginx.conf文件,去看了下，account居然没有？只有shuiyancun_back才有。\n想起来了，原来是需要在阿里云官网开放相应的端口后，外网才能访问的，而我是用pm2来启动项目的，也会有端口号，如图：\n![](3.png)\n<font color=#ff6a00>至于怎么制作ssl证书，等我两个月后证书过期了，再摸索一次记录下来吧</font>\n重启mginx的方法可以去到`/usr/sbin/nginx`目录，执行./nginx 启动。启动mysql的方式可以有两种：1.和nginx一样，但是要加用户名和密码，`./mysql  -u root -p` 然后输入密码就打开数据库了；2.直接 `mysql -u root -p` 输入密码。\n\n另外如果发现停止了PM2中某个项目的时候，还能运行，则说明这个程序已经以另外一种方式在运行了，我们需要查找正在运行的nodejs进程:`ps aux | grep node`\n发现有进程后，直接`kill 具体pid `就可以了\n\n最后就是项目的启动了，进到项目目录执行 `pm2 restart（或者start） pm2.json\n（因为有配置文件了）` 就可以启动项目了\n注意：<font color=#ff6a00>不知道为什么pm2只能监控watch一个项目，如果是两个都watch，另一个项目无法跑起来，所以我的水研村后台就不watch了</font>","slug":"在重启阿里云ubantu后nginx、mysql、pm2等的重启","published":1,"updated":"2021-04-22T01:56:08.232Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckx9sf60w0018z8nkdnhb1cd6","content":"<p>由于对linux的不熟，很多命令都记不住，2018年也是花了几天时间才把服务器环境搭起来，部署了nodejs的水研村官网前后端、部署了“账目随身记”小程序后端，并且利用nginx做了小程序需要的ssl证书转发https，现在已经忘了具体的操作了，免费ssl证书准备过期了，准备又得重新折腾了，下次一定得记录下来。</p>\n<a id=\"more\"></a>\n<p>好了，在重启服务器之前得做点准备工作，得先找出nginx安装得目录，mysql安装得目录，到时候可以直接去到目录下直接执行例如./nginx这样来启动。我以为大多数linux安装目录都差不多，于是直接网上搜别人得，结果结果不是我想要的，后来我问了位前同事，用whereis nginx 来查找nginx的位置，然后出现了以下目录：<br><img src=\"2.png\"><br>红色圈起来的才是我的nginx的安装目录，nginx就是可执行文件，另外，经过多次摸索和回忆，配置文件在蓝色圈起来的地方，<br>具体的位置是：<br><img src=\"1.png\"><br><code>nginx -t</code>为查找nginx配置文件所在的目录。<br>然后默认的default配置文件我没用，我自己写了个small.conf配置文件，里面配置了syc.iyuge.cn 水研村官网前台的转发地址，以及小程序需要的account后端的https的ssl配置<br>具体代码如下：</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">server</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">listen</span> <span class=\"number\">443</span>;</span><br><span class=\"line\">    <span class=\"attribute\">server_name</span> small.iyuge.cn;</span><br><span class=\"line\">    <span class=\"attribute\">access_log</span> /var/www/log/small-access.log;</span><br><span class=\"line\">    <span class=\"attribute\">error_log</span>  /var/www/log/small-<span class=\"literal\">error</span>.log;</span><br><span class=\"line\">    <span class=\"attribute\">ssl</span> <span class=\"literal\">on</span>;</span><br><span class=\"line\">    <span class=\"attribute\">ssl_certificate</span>   /etc/nginx/cert/<span class=\"number\">214999081890300</span>.pem; <span class=\"comment\">#指定服务器证书路径 </span></span><br><span class=\"line\">    <span class=\"attribute\">ssl_certificate_key</span> /etc/nginx/cert/<span class=\"number\">214999081890300</span>.key; <span class=\"comment\">#指定私钥证书路径</span></span><br><span class=\"line\">    <span class=\"attribute\">ssl_session_timeout</span> <span class=\"number\">5m</span>;</span><br><span class=\"line\">    <span class=\"comment\">#ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;</span></span><br><span class=\"line\">    <span class=\"attribute\">ssl_ciphers</span>  ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP; <span class=\"comment\">#指定加密算法 </span></span><br><span class=\"line\">    <span class=\"attribute\">ssl_protocols</span> TLSv1 TLSv1.<span class=\"number\">1</span> TLSv1.<span class=\"number\">2</span>;<span class=\"comment\">#指定SSL服务器端支持的协议版本 </span></span><br><span class=\"line\">    <span class=\"attribute\">ssl_prefer_server_ciphers</span> <span class=\"literal\">on</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"attribute\">location</span> / &#123;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_set_header</span> X-Real-IP <span class=\"variable\">$remote_addr</span>;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_set_header</span> X-Forwarded-For <span class=\"variable\">$proxy_add_x_forwarded_for</span>;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_set_header</span> Host <span class=\"variable\">$http_host</span>;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_set_header</span> X-NginX-Proxy <span class=\"literal\">true</span>;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_pass</span> http://127.0.0.1:3000/;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_redirect</span> <span class=\"literal\">off</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">server</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">listen</span> <span class=\"number\">80</span>;</span><br><span class=\"line\">    <span class=\"attribute\">server_name</span> syc.iyuge.cn; <span class=\"comment\">#这是水研村前台官网的映射</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"attribute\">location</span> / &#123;</span><br><span class=\"line\">       </span><br><span class=\"line\">    <span class=\"attribute\">root</span> /root/code/shuiyancun_vue;</span><br><span class=\"line\">    <span class=\"attribute\">index</span>  index.html index.htm;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>至于这个证书是怎么跟我的account关联起来的，这个我还真的忘了，我没记错的话，account和shuiyancun_back都有个nginx.conf文件,去看了下，account居然没有？只有shuiyancun_back才有。<br>想起来了，原来是需要在阿里云官网开放相应的端口后，外网才能访问的，而我是用pm2来启动项目的，也会有端口号，如图：<br><img src=\"3.png\"><br><font color=#ff6a00>至于怎么制作ssl证书，等我两个月后证书过期了，再摸索一次记录下来吧</font><br>重启mginx的方法可以去到<code>/usr/sbin/nginx</code>目录，执行./nginx 启动。启动mysql的方式可以有两种：1.和nginx一样，但是要加用户名和密码，<code>./mysql  -u root -p</code> 然后输入密码就打开数据库了；2.直接 <code>mysql -u root -p</code> 输入密码。</p>\n<p>另外如果发现停止了PM2中某个项目的时候，还能运行，则说明这个程序已经以另外一种方式在运行了，我们需要查找正在运行的nodejs进程:<code>ps aux | grep node</code><br>发现有进程后，直接<code>kill 具体pid </code>就可以了</p>\n<p>最后就是项目的启动了，进到项目目录执行 <code>pm2 restart（或者start） pm2.json （因为有配置文件了）</code> 就可以启动项目了<br>注意：<font color=#ff6a00>不知道为什么pm2只能监控watch一个项目，如果是两个都watch，另一个项目无法跑起来，所以我的水研村后台就不watch了</font></p>\n","site":{"data":{}},"excerpt":"<p>由于对linux的不熟，很多命令都记不住，2018年也是花了几天时间才把服务器环境搭起来，部署了nodejs的水研村官网前后端、部署了“账目随身记”小程序后端，并且利用nginx做了小程序需要的ssl证书转发https，现在已经忘了具体的操作了，免费ssl证书准备过期了，准备又得重新折腾了，下次一定得记录下来。</p>","more":"<p>好了，在重启服务器之前得做点准备工作，得先找出nginx安装得目录，mysql安装得目录，到时候可以直接去到目录下直接执行例如./nginx这样来启动。我以为大多数linux安装目录都差不多，于是直接网上搜别人得，结果结果不是我想要的，后来我问了位前同事，用whereis nginx 来查找nginx的位置，然后出现了以下目录：<br><img src=\"2.png\"><br>红色圈起来的才是我的nginx的安装目录，nginx就是可执行文件，另外，经过多次摸索和回忆，配置文件在蓝色圈起来的地方，<br>具体的位置是：<br><img src=\"1.png\"><br><code>nginx -t</code>为查找nginx配置文件所在的目录。<br>然后默认的default配置文件我没用，我自己写了个small.conf配置文件，里面配置了syc.iyuge.cn 水研村官网前台的转发地址，以及小程序需要的account后端的https的ssl配置<br>具体代码如下：</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">server</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">listen</span> <span class=\"number\">443</span>;</span><br><span class=\"line\">    <span class=\"attribute\">server_name</span> small.iyuge.cn;</span><br><span class=\"line\">    <span class=\"attribute\">access_log</span> /var/www/log/small-access.log;</span><br><span class=\"line\">    <span class=\"attribute\">error_log</span>  /var/www/log/small-<span class=\"literal\">error</span>.log;</span><br><span class=\"line\">    <span class=\"attribute\">ssl</span> <span class=\"literal\">on</span>;</span><br><span class=\"line\">    <span class=\"attribute\">ssl_certificate</span>   /etc/nginx/cert/<span class=\"number\">214999081890300</span>.pem; <span class=\"comment\">#指定服务器证书路径 </span></span><br><span class=\"line\">    <span class=\"attribute\">ssl_certificate_key</span> /etc/nginx/cert/<span class=\"number\">214999081890300</span>.key; <span class=\"comment\">#指定私钥证书路径</span></span><br><span class=\"line\">    <span class=\"attribute\">ssl_session_timeout</span> <span class=\"number\">5m</span>;</span><br><span class=\"line\">    <span class=\"comment\">#ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;</span></span><br><span class=\"line\">    <span class=\"attribute\">ssl_ciphers</span>  ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP; <span class=\"comment\">#指定加密算法 </span></span><br><span class=\"line\">    <span class=\"attribute\">ssl_protocols</span> TLSv1 TLSv1.<span class=\"number\">1</span> TLSv1.<span class=\"number\">2</span>;<span class=\"comment\">#指定SSL服务器端支持的协议版本 </span></span><br><span class=\"line\">    <span class=\"attribute\">ssl_prefer_server_ciphers</span> <span class=\"literal\">on</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"attribute\">location</span> / &#123;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_set_header</span> X-Real-IP <span class=\"variable\">$remote_addr</span>;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_set_header</span> X-Forwarded-For <span class=\"variable\">$proxy_add_x_forwarded_for</span>;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_set_header</span> Host <span class=\"variable\">$http_host</span>;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_set_header</span> X-NginX-Proxy <span class=\"literal\">true</span>;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_pass</span> http://127.0.0.1:3000/;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_redirect</span> <span class=\"literal\">off</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">server</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">listen</span> <span class=\"number\">80</span>;</span><br><span class=\"line\">    <span class=\"attribute\">server_name</span> syc.iyuge.cn; <span class=\"comment\">#这是水研村前台官网的映射</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"attribute\">location</span> / &#123;</span><br><span class=\"line\">       </span><br><span class=\"line\">    <span class=\"attribute\">root</span> /root/code/shuiyancun_vue;</span><br><span class=\"line\">    <span class=\"attribute\">index</span>  index.html index.htm;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>至于这个证书是怎么跟我的account关联起来的，这个我还真的忘了，我没记错的话，account和shuiyancun_back都有个nginx.conf文件,去看了下，account居然没有？只有shuiyancun_back才有。<br>想起来了，原来是需要在阿里云官网开放相应的端口后，外网才能访问的，而我是用pm2来启动项目的，也会有端口号，如图：<br><img src=\"3.png\"><br><font color=#ff6a00>至于怎么制作ssl证书，等我两个月后证书过期了，再摸索一次记录下来吧</font><br>重启mginx的方法可以去到<code>/usr/sbin/nginx</code>目录，执行./nginx 启动。启动mysql的方式可以有两种：1.和nginx一样，但是要加用户名和密码，<code>./mysql  -u root -p</code> 然后输入密码就打开数据库了；2.直接 <code>mysql -u root -p</code> 输入密码。</p>\n<p>另外如果发现停止了PM2中某个项目的时候，还能运行，则说明这个程序已经以另外一种方式在运行了，我们需要查找正在运行的nodejs进程:<code>ps aux | grep node</code><br>发现有进程后，直接<code>kill 具体pid </code>就可以了</p>\n<p>最后就是项目的启动了，进到项目目录执行 <code>pm2 restart（或者start） pm2.json （因为有配置文件了）</code> 就可以启动项目了<br>注意：<font color=#ff6a00>不知道为什么pm2只能监控watch一个项目，如果是两个都watch，另一个项目无法跑起来，所以我的水研村后台就不watch了</font></p>"},{"title":"实现一个简单的深拷贝","abbrlink":"25ca6631","date":"2019-03-30T11:42:44.000Z","_content":"\n在js中经常需要用到变量的拷贝，比如`var a=1;var b=a;` 这个时候修改b的值，a不会改变`b=2;console.log(a); //1`,但是需要注意，这种方式拷贝属于浅拷贝，只局限在简单类型的拷贝：string、number、boolean、null、undefiend。如果你用这种方式拷贝一个数组或者对象，那么就得注意了，\n<!-- more -->\n```\nvar a=[1,2,3]; \nvar b=a;\nb[0]=66;\nconsole.log(a); //[66,2,3];\n```\n可以看到，b的值变了，a也变了，所以对于数组和对象不能用这种浅拷贝，因为拷贝的只是引用地址，实际上还是同一个，不过在有一种情况下，修改复制后的变量，被复制的变量不会跟着改变，那就是复制后，给复制变量重新定义值得时候，原来的变量不会受影响，因为此时已经给复制后的变量重新分配指针了，如下面所示：\n```\nvar arr = [1,2,3,4];\nvar arr_copy = arr ;\narr_copy = [1,2,3,4,5];\n\nconsole.log(arr); //[1,2,3,4]\nconsole.log(arr_copy);//[1,2,3,4,5]\n\nvar obj = {\n    name:'张三',\n    age:20\n};\nvar obj_copy = obj ;\nobj_copy = {\n    name:'李四',\n    age:20\n};\nconsole.log(obj.name);//张三\nconsole.log(obj_copy.name);//李四\n\n```\n\n### 使用递归进行深拷贝。\n```\nvar car = {\n    name : '宝马',\n    color:'红色',\n}\n//判断是数组还是对象\nfunction getType(obj){\n    if(Object.prototype.toString.call(obj)=='[object Object]'){\n        return 'Object';\n    }else if(Object.prototype.toString.call(obj)=='[object Array]'){\n        return 'Array';\n    }else{\n        return 'nomal';\n    }\n}\n\nfunction deepCopy(obj) {\n    if (getType(obj)=='nomal') {\n        return obj ;  //如果是基本类型则直接返回\n    }else{\n        var newObj = getType(obj)=='Object'?{}:[];\n        for(var key in obj){\n            if(obj.hasOwnProperty(key)){\n                newObj[key] = deepCopy(obj[key]); //递归\n            }\n        }\n    }\n    return newObj;\n}\nvar newCar = deepCopy(car) ;\nnewInfo.name = '奔驰';\nconsole.log(newCar); //{name:'奔驰',color:'红色'}\nconsole.log(car);//{name:'宝马',color:'红色'}\n```\n这里用到.hasOwnProperty是为了避免在有继承时拷贝到继承自对象中的值（也就是a继承b时,使用.hasOwnProperty就是为了只拷贝a中的变量，过滤继承自b中的变量）","source":"_posts/实现一个简单的深拷贝.md","raw":"---\ntitle: 实现一个简单的深拷贝\ntags: js\ncategories: 前端\nabbrlink: 25ca6631\ndate: 2019-03-30 19:42:44\n---\n\n在js中经常需要用到变量的拷贝，比如`var a=1;var b=a;` 这个时候修改b的值，a不会改变`b=2;console.log(a); //1`,但是需要注意，这种方式拷贝属于浅拷贝，只局限在简单类型的拷贝：string、number、boolean、null、undefiend。如果你用这种方式拷贝一个数组或者对象，那么就得注意了，\n<!-- more -->\n```\nvar a=[1,2,3]; \nvar b=a;\nb[0]=66;\nconsole.log(a); //[66,2,3];\n```\n可以看到，b的值变了，a也变了，所以对于数组和对象不能用这种浅拷贝，因为拷贝的只是引用地址，实际上还是同一个，不过在有一种情况下，修改复制后的变量，被复制的变量不会跟着改变，那就是复制后，给复制变量重新定义值得时候，原来的变量不会受影响，因为此时已经给复制后的变量重新分配指针了，如下面所示：\n```\nvar arr = [1,2,3,4];\nvar arr_copy = arr ;\narr_copy = [1,2,3,4,5];\n\nconsole.log(arr); //[1,2,3,4]\nconsole.log(arr_copy);//[1,2,3,4,5]\n\nvar obj = {\n    name:'张三',\n    age:20\n};\nvar obj_copy = obj ;\nobj_copy = {\n    name:'李四',\n    age:20\n};\nconsole.log(obj.name);//张三\nconsole.log(obj_copy.name);//李四\n\n```\n\n### 使用递归进行深拷贝。\n```\nvar car = {\n    name : '宝马',\n    color:'红色',\n}\n//判断是数组还是对象\nfunction getType(obj){\n    if(Object.prototype.toString.call(obj)=='[object Object]'){\n        return 'Object';\n    }else if(Object.prototype.toString.call(obj)=='[object Array]'){\n        return 'Array';\n    }else{\n        return 'nomal';\n    }\n}\n\nfunction deepCopy(obj) {\n    if (getType(obj)=='nomal') {\n        return obj ;  //如果是基本类型则直接返回\n    }else{\n        var newObj = getType(obj)=='Object'?{}:[];\n        for(var key in obj){\n            if(obj.hasOwnProperty(key)){\n                newObj[key] = deepCopy(obj[key]); //递归\n            }\n        }\n    }\n    return newObj;\n}\nvar newCar = deepCopy(car) ;\nnewInfo.name = '奔驰';\nconsole.log(newCar); //{name:'奔驰',color:'红色'}\nconsole.log(car);//{name:'宝马',color:'红色'}\n```\n这里用到.hasOwnProperty是为了避免在有继承时拷贝到继承自对象中的值（也就是a继承b时,使用.hasOwnProperty就是为了只拷贝a中的变量，过滤继承自b中的变量）","slug":"实现一个简单的深拷贝","published":1,"updated":"2021-04-22T01:56:08.242Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckx9sf60y001bz8nkdwhmho69","content":"<p>在js中经常需要用到变量的拷贝，比如<code>var a=1;var b=a;</code> 这个时候修改b的值，a不会改变<code>b=2;console.log(a); //1</code>,但是需要注意，这种方式拷贝属于浅拷贝，只局限在简单类型的拷贝：string、number、boolean、null、undefiend。如果你用这种方式拷贝一个数组或者对象，那么就得注意了，</p>\n<a id=\"more\"></a>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">var</span> a=[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>]; </span><br><span class=\"line\"><span class=\"attribute\">var</span> b=a;</span><br><span class=\"line\"><span class=\"attribute\">b</span>[<span class=\"number\">0</span>]=<span class=\"number\">66</span>;</span><br><span class=\"line\"><span class=\"attribute\">console</span>.log(a); //[<span class=\"number\">66</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>];</span><br></pre></td></tr></table></figure>\n<p>可以看到，b的值变了，a也变了，所以对于数组和对象不能用这种浅拷贝，因为拷贝的只是引用地址，实际上还是同一个，不过在有一种情况下，修改复制后的变量，被复制的变量不会跟着改变，那就是复制后，给复制变量重新定义值得时候，原来的变量不会受影响，因为此时已经给复制后的变量重新分配指针了，如下面所示：</p>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var arr = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>];</span><br><span class=\"line\">var arr_copy = arr ;</span><br><span class=\"line\">arr_copy = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">console.log(arr); <span class=\"comment\">//[1,2,3,4]</span></span><br><span class=\"line\">console.log(arr_copy);<span class=\"comment\">//[1,2,3,4,5]</span></span><br><span class=\"line\"></span><br><span class=\"line\">var obj = &#123;</span><br><span class=\"line\">    name:<span class=\"string\">&#x27;张三&#x27;</span>,</span><br><span class=\"line\">    age:<span class=\"number\">20</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">var obj_copy = obj ;</span><br><span class=\"line\">obj_copy = &#123;</span><br><span class=\"line\">    name:<span class=\"string\">&#x27;李四&#x27;</span>,</span><br><span class=\"line\">    age:<span class=\"number\">20</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">console.log(obj.name);<span class=\"comment\">//张三</span></span><br><span class=\"line\">console.log(obj_copy.name);<span class=\"comment\">//李四</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"使用递归进行深拷贝。\"><a href=\"#使用递归进行深拷贝。\" class=\"headerlink\" title=\"使用递归进行深拷贝。\"></a>使用递归进行深拷贝。</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> car = &#123;</span><br><span class=\"line\">    name : <span class=\"string\">&#x27;宝马&#x27;</span>,</span><br><span class=\"line\">    color:<span class=\"string\">&#x27;红色&#x27;</span>,</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//判断是数组还是对象</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getType</span>(<span class=\"params\">obj</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"built_in\">Object</span>.prototype.toString.call(obj)==<span class=\"string\">&#x27;[object Object]&#x27;</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&#x27;Object&#x27;</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(<span class=\"built_in\">Object</span>.prototype.toString.call(obj)==<span class=\"string\">&#x27;[object Array]&#x27;</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&#x27;Array&#x27;</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&#x27;nomal&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">deepCopy</span>(<span class=\"params\">obj</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (getType(obj)==<span class=\"string\">&#x27;nomal&#x27;</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> obj ;  <span class=\"comment\">//如果是基本类型则直接返回</span></span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> newObj = getType(obj)==<span class=\"string\">&#x27;Object&#x27;</span>?&#123;&#125;:[];</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> key <span class=\"keyword\">in</span> obj)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(obj.hasOwnProperty(key))&#123;</span><br><span class=\"line\">                newObj[key] = deepCopy(obj[key]); <span class=\"comment\">//递归</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> newObj;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> newCar = deepCopy(car) ;</span><br><span class=\"line\">newInfo.name = <span class=\"string\">&#x27;奔驰&#x27;</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(newCar); <span class=\"comment\">//&#123;name:&#x27;奔驰&#x27;,color:&#x27;红色&#x27;&#125;</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(car);<span class=\"comment\">//&#123;name:&#x27;宝马&#x27;,color:&#x27;红色&#x27;&#125;</span></span><br></pre></td></tr></table></figure>\n<p>这里用到.hasOwnProperty是为了避免在有继承时拷贝到继承自对象中的值（也就是a继承b时,使用.hasOwnProperty就是为了只拷贝a中的变量，过滤继承自b中的变量）</p>\n","site":{"data":{}},"excerpt":"<p>在js中经常需要用到变量的拷贝，比如<code>var a=1;var b=a;</code> 这个时候修改b的值，a不会改变<code>b=2;console.log(a); //1</code>,但是需要注意，这种方式拷贝属于浅拷贝，只局限在简单类型的拷贝：string、number、boolean、null、undefiend。如果你用这种方式拷贝一个数组或者对象，那么就得注意了，</p>","more":"<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">var</span> a=[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>]; </span><br><span class=\"line\"><span class=\"attribute\">var</span> b=a;</span><br><span class=\"line\"><span class=\"attribute\">b</span>[<span class=\"number\">0</span>]=<span class=\"number\">66</span>;</span><br><span class=\"line\"><span class=\"attribute\">console</span>.log(a); //[<span class=\"number\">66</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>];</span><br></pre></td></tr></table></figure>\n<p>可以看到，b的值变了，a也变了，所以对于数组和对象不能用这种浅拷贝，因为拷贝的只是引用地址，实际上还是同一个，不过在有一种情况下，修改复制后的变量，被复制的变量不会跟着改变，那就是复制后，给复制变量重新定义值得时候，原来的变量不会受影响，因为此时已经给复制后的变量重新分配指针了，如下面所示：</p>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var arr = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>];</span><br><span class=\"line\">var arr_copy = arr ;</span><br><span class=\"line\">arr_copy = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">console.log(arr); <span class=\"comment\">//[1,2,3,4]</span></span><br><span class=\"line\">console.log(arr_copy);<span class=\"comment\">//[1,2,3,4,5]</span></span><br><span class=\"line\"></span><br><span class=\"line\">var obj = &#123;</span><br><span class=\"line\">    name:<span class=\"string\">&#x27;张三&#x27;</span>,</span><br><span class=\"line\">    age:<span class=\"number\">20</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">var obj_copy = obj ;</span><br><span class=\"line\">obj_copy = &#123;</span><br><span class=\"line\">    name:<span class=\"string\">&#x27;李四&#x27;</span>,</span><br><span class=\"line\">    age:<span class=\"number\">20</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">console.log(obj.name);<span class=\"comment\">//张三</span></span><br><span class=\"line\">console.log(obj_copy.name);<span class=\"comment\">//李四</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"使用递归进行深拷贝。\"><a href=\"#使用递归进行深拷贝。\" class=\"headerlink\" title=\"使用递归进行深拷贝。\"></a>使用递归进行深拷贝。</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> car = &#123;</span><br><span class=\"line\">    name : <span class=\"string\">&#x27;宝马&#x27;</span>,</span><br><span class=\"line\">    color:<span class=\"string\">&#x27;红色&#x27;</span>,</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//判断是数组还是对象</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getType</span>(<span class=\"params\">obj</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"built_in\">Object</span>.prototype.toString.call(obj)==<span class=\"string\">&#x27;[object Object]&#x27;</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&#x27;Object&#x27;</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(<span class=\"built_in\">Object</span>.prototype.toString.call(obj)==<span class=\"string\">&#x27;[object Array]&#x27;</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&#x27;Array&#x27;</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&#x27;nomal&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">deepCopy</span>(<span class=\"params\">obj</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (getType(obj)==<span class=\"string\">&#x27;nomal&#x27;</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> obj ;  <span class=\"comment\">//如果是基本类型则直接返回</span></span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> newObj = getType(obj)==<span class=\"string\">&#x27;Object&#x27;</span>?&#123;&#125;:[];</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> key <span class=\"keyword\">in</span> obj)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(obj.hasOwnProperty(key))&#123;</span><br><span class=\"line\">                newObj[key] = deepCopy(obj[key]); <span class=\"comment\">//递归</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> newObj;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> newCar = deepCopy(car) ;</span><br><span class=\"line\">newInfo.name = <span class=\"string\">&#x27;奔驰&#x27;</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(newCar); <span class=\"comment\">//&#123;name:&#x27;奔驰&#x27;,color:&#x27;红色&#x27;&#125;</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(car);<span class=\"comment\">//&#123;name:&#x27;宝马&#x27;,color:&#x27;红色&#x27;&#125;</span></span><br></pre></td></tr></table></figure>\n<p>这里用到.hasOwnProperty是为了避免在有继承时拷贝到继承自对象中的值（也就是a继承b时,使用.hasOwnProperty就是为了只拷贝a中的变量，过滤继承自b中的变量）</p>"},{"title":"小程序中使用css变量","abbrlink":"27736c59","date":"2020-11-23T07:09:12.000Z","_content":"\n在js中我们经常使用变量，但是在css中也能使用变量，你有用过吗？\n今天我记录下在钉钉小程序工作台插件中使用css变量，因为我现在的工作主要是钉钉的移动端的工作台，是基于钉钉小程序开发的，然后是以单个组件的形式来开发的。\n组件有可以设置很多配置项，比如：颜色，字体大小，背景等通过改变css样控制整个组件的呈现，这个时候css变量就可以派上用场了。\n<!-- more -->\n先来看下最终的效果图\n\n![](1.png)\n这是运行后的结果。\n先说下我这程序运行的顺序：\n1 组件js获取到config.json文件的配置 》 2 将所有配置变量赋值挂到xml上 》 3 css文件使用变量\n\n``` \n// js文件\n// 初始化 css变量\nlet {\n    createLinkColor,\n    createLinkBgColor,\n    moreLinkColor,\n    selectBgColor,\n    timelineColor,\n    showFoldBtn,\n    initStyle,\n    calendarRadiusSize,\n    BgColor\n} = this.props.componentProps;\nlet cssStyle = `\n    --create-btn-color: ${createLinkColor};\n    --create-btn-bgcolor: ${createLinkBgColor};\n    --more-btn-color: ${moreLinkColor};\n    --selected-bgc: ${selectBgColor};\n    --timeline-color: ${timelineColor};\n    --calendar-border-radius: ${calendarRadiusSize}rpx;\n    --Bg-color: ${BgColor};\n`\nthis.setData({\n    cssVariable: cssStyle\n})\n```\n\n``` \n//axml文件\n<view style=\"{{cssVariable}}\">  </view>\n```\n\n``` \n//css文件\nbackground-color: var(--Bg-color, $text-color-white);\nborder-radius: var(--calendar-border-radius, 12rpx);\n```\n\ncss变量有兼容问题，使用需注意，但由于我这三小程序项目，不用关心这个问题。\n","source":"_posts/小程序中使用css变量.md","raw":"---\ntitle: 小程序中使用css变量\nabbrlink: 27736c59\ndate: 2020-11-23 15:09:12\ntags:\n  - 钉钉小程序\n  - 小程序\ncategories: 前端\n---\n\n在js中我们经常使用变量，但是在css中也能使用变量，你有用过吗？\n今天我记录下在钉钉小程序工作台插件中使用css变量，因为我现在的工作主要是钉钉的移动端的工作台，是基于钉钉小程序开发的，然后是以单个组件的形式来开发的。\n组件有可以设置很多配置项，比如：颜色，字体大小，背景等通过改变css样控制整个组件的呈现，这个时候css变量就可以派上用场了。\n<!-- more -->\n先来看下最终的效果图\n\n![](1.png)\n这是运行后的结果。\n先说下我这程序运行的顺序：\n1 组件js获取到config.json文件的配置 》 2 将所有配置变量赋值挂到xml上 》 3 css文件使用变量\n\n``` \n// js文件\n// 初始化 css变量\nlet {\n    createLinkColor,\n    createLinkBgColor,\n    moreLinkColor,\n    selectBgColor,\n    timelineColor,\n    showFoldBtn,\n    initStyle,\n    calendarRadiusSize,\n    BgColor\n} = this.props.componentProps;\nlet cssStyle = `\n    --create-btn-color: ${createLinkColor};\n    --create-btn-bgcolor: ${createLinkBgColor};\n    --more-btn-color: ${moreLinkColor};\n    --selected-bgc: ${selectBgColor};\n    --timeline-color: ${timelineColor};\n    --calendar-border-radius: ${calendarRadiusSize}rpx;\n    --Bg-color: ${BgColor};\n`\nthis.setData({\n    cssVariable: cssStyle\n})\n```\n\n``` \n//axml文件\n<view style=\"{{cssVariable}}\">  </view>\n```\n\n``` \n//css文件\nbackground-color: var(--Bg-color, $text-color-white);\nborder-radius: var(--calendar-border-radius, 12rpx);\n```\n\ncss变量有兼容问题，使用需注意，但由于我这三小程序项目，不用关心这个问题。\n","slug":"小程序中使用css变量","published":1,"updated":"2021-04-22T01:56:08.242Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckx9sf60z001ez8nk4ls4g99k","content":"<p>在js中我们经常使用变量，但是在css中也能使用变量，你有用过吗？<br>今天我记录下在钉钉小程序工作台插件中使用css变量，因为我现在的工作主要是钉钉的移动端的工作台，是基于钉钉小程序开发的，然后是以单个组件的形式来开发的。<br>组件有可以设置很多配置项，比如：颜色，字体大小，背景等通过改变css样控制整个组件的呈现，这个时候css变量就可以派上用场了。</p>\n<a id=\"more\"></a>\n<p>先来看下最终的效果图</p>\n<p><img src=\"1.png\"><br>这是运行后的结果。<br>先说下我这程序运行的顺序：<br>1 组件js获取到config.json文件的配置 》 2 将所有配置变量赋值挂到xml上 》 3 css文件使用变量</p>\n<figure class=\"highlight haml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// js文件</span></span><br><span class=\"line\"><span class=\"comment\">// 初始化 css变量</span></span><br><span class=\"line\">let &#123;</span><br><span class=\"line\">    createLinkColor,</span><br><span class=\"line\">    createLinkBgColor,</span><br><span class=\"line\">    moreLinkColor,</span><br><span class=\"line\">    selectBgColor,</span><br><span class=\"line\">    timelineColor,</span><br><span class=\"line\">    showFoldBtn,</span><br><span class=\"line\">    initStyle,</span><br><span class=\"line\">    calendarRadiusSize,</span><br><span class=\"line\">    BgColor</span><br><span class=\"line\">&#125; = this.props.componentProps;</span><br><span class=\"line\">let cssStyle = `</span><br><span class=\"line\">    -<span class=\"ruby\">-create-btn-<span class=\"symbol\">color:</span> $&#123;createLinkColor&#125;;</span></span><br><span class=\"line\"><span class=\"ruby\">    --create-btn-<span class=\"symbol\">bgcolor:</span> $&#123;createLinkBgColor&#125;;</span></span><br><span class=\"line\"><span class=\"ruby\">    --more-btn-<span class=\"symbol\">color:</span> $&#123;moreLinkColor&#125;;</span></span><br><span class=\"line\"><span class=\"ruby\">    --selected-<span class=\"symbol\">bgc:</span> $&#123;selectBgColor&#125;;</span></span><br><span class=\"line\"><span class=\"ruby\">    --timeline-<span class=\"symbol\">color:</span> $&#123;timelineColor&#125;;</span></span><br><span class=\"line\"><span class=\"ruby\">    --calendar-border-<span class=\"symbol\">radius:</span> $&#123;calendarRadiusSize&#125;rpx;</span></span><br><span class=\"line\"><span class=\"ruby\">    --Bg-<span class=\"symbol\">color:</span> $&#123;BgColor&#125;;</span></span><br><span class=\"line\"><span class=\"ruby\"><span class=\"string\">`</span></span></span><br><span class=\"line\"><span class=\"ruby\">this.setData(&#123;</span></span><br><span class=\"line\"><span class=\"ruby\">    <span class=\"symbol\">cssVariable:</span> cssStyle</span></span><br><span class=\"line\"><span class=\"ruby\">&#125;)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight handlebars\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"xml\">//axml文件</span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">view</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;</span></span></span><span class=\"template-variable\">&#123;&#123;<span class=\"name\">cssVariable</span>&#125;&#125;</span><span class=\"xml\"><span class=\"tag\"><span class=\"string\">&quot;</span>&gt;</span>  <span class=\"tag\">&lt;/<span class=\"name\">view</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight maxima\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//css文件</span><br><span class=\"line\"><span class=\"built_in\">background</span>-<span class=\"built_in\">color</span>: <span class=\"built_in\">var</span>(--Bg-<span class=\"built_in\">color</span>, $text-<span class=\"built_in\">color</span>-white);</span><br><span class=\"line\"><span class=\"built_in\">border</span>-<span class=\"built_in\">radius</span>: <span class=\"built_in\">var</span>(--calendar-<span class=\"built_in\">border</span>-<span class=\"built_in\">radius</span>, 12rpx);</span><br></pre></td></tr></table></figure>\n\n<p>css变量有兼容问题，使用需注意，但由于我这三小程序项目，不用关心这个问题。</p>\n","site":{"data":{}},"excerpt":"<p>在js中我们经常使用变量，但是在css中也能使用变量，你有用过吗？<br>今天我记录下在钉钉小程序工作台插件中使用css变量，因为我现在的工作主要是钉钉的移动端的工作台，是基于钉钉小程序开发的，然后是以单个组件的形式来开发的。<br>组件有可以设置很多配置项，比如：颜色，字体大小，背景等通过改变css样控制整个组件的呈现，这个时候css变量就可以派上用场了。</p>","more":"<p>先来看下最终的效果图</p>\n<p><img src=\"1.png\"><br>这是运行后的结果。<br>先说下我这程序运行的顺序：<br>1 组件js获取到config.json文件的配置 》 2 将所有配置变量赋值挂到xml上 》 3 css文件使用变量</p>\n<figure class=\"highlight haml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// js文件</span></span><br><span class=\"line\"><span class=\"comment\">// 初始化 css变量</span></span><br><span class=\"line\">let &#123;</span><br><span class=\"line\">    createLinkColor,</span><br><span class=\"line\">    createLinkBgColor,</span><br><span class=\"line\">    moreLinkColor,</span><br><span class=\"line\">    selectBgColor,</span><br><span class=\"line\">    timelineColor,</span><br><span class=\"line\">    showFoldBtn,</span><br><span class=\"line\">    initStyle,</span><br><span class=\"line\">    calendarRadiusSize,</span><br><span class=\"line\">    BgColor</span><br><span class=\"line\">&#125; = this.props.componentProps;</span><br><span class=\"line\">let cssStyle = `</span><br><span class=\"line\">    -<span class=\"ruby\">-create-btn-<span class=\"symbol\">color:</span> $&#123;createLinkColor&#125;;</span></span><br><span class=\"line\"><span class=\"ruby\">    --create-btn-<span class=\"symbol\">bgcolor:</span> $&#123;createLinkBgColor&#125;;</span></span><br><span class=\"line\"><span class=\"ruby\">    --more-btn-<span class=\"symbol\">color:</span> $&#123;moreLinkColor&#125;;</span></span><br><span class=\"line\"><span class=\"ruby\">    --selected-<span class=\"symbol\">bgc:</span> $&#123;selectBgColor&#125;;</span></span><br><span class=\"line\"><span class=\"ruby\">    --timeline-<span class=\"symbol\">color:</span> $&#123;timelineColor&#125;;</span></span><br><span class=\"line\"><span class=\"ruby\">    --calendar-border-<span class=\"symbol\">radius:</span> $&#123;calendarRadiusSize&#125;rpx;</span></span><br><span class=\"line\"><span class=\"ruby\">    --Bg-<span class=\"symbol\">color:</span> $&#123;BgColor&#125;;</span></span><br><span class=\"line\"><span class=\"ruby\"><span class=\"string\">`</span></span></span><br><span class=\"line\"><span class=\"ruby\">this.setData(&#123;</span></span><br><span class=\"line\"><span class=\"ruby\">    <span class=\"symbol\">cssVariable:</span> cssStyle</span></span><br><span class=\"line\"><span class=\"ruby\">&#125;)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight handlebars\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"xml\">//axml文件</span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">view</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;</span></span></span><span class=\"template-variable\">&#123;&#123;<span class=\"name\">cssVariable</span>&#125;&#125;</span><span class=\"xml\"><span class=\"tag\"><span class=\"string\">&quot;</span>&gt;</span>  <span class=\"tag\">&lt;/<span class=\"name\">view</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight maxima\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//css文件</span><br><span class=\"line\"><span class=\"built_in\">background</span>-<span class=\"built_in\">color</span>: <span class=\"built_in\">var</span>(--Bg-<span class=\"built_in\">color</span>, $text-<span class=\"built_in\">color</span>-white);</span><br><span class=\"line\"><span class=\"built_in\">border</span>-<span class=\"built_in\">radius</span>: <span class=\"built_in\">var</span>(--calendar-<span class=\"built_in\">border</span>-<span class=\"built_in\">radius</span>, 12rpx);</span><br></pre></td></tr></table></figure>\n\n<p>css变量有兼容问题，使用需注意，但由于我这三小程序项目，不用关心这个问题。</p>"},{"title":"怎么样在别的电脑同步更新发表hexo博客？","abbrlink":"301aa86","date":"2019-04-24T14:12:23.000Z","_content":"在git上放两个分支，一个master分支，用来存放hexo 生成public代码的（发布），另一个分支随便取名字吧比如hexo，就是放整个hexo源码的，到时候在别的电脑直接克隆hexo代码，然后写文章，发布，然后同步hexo分支代码。就可以了，很简单。\n<!-- more -->\n<font color=\"red\">注意：如果主题文件是从git克隆下来的，比如next主题，再提交之前先把next下的.git和.github文件夹删掉。如果之前没有删掉，发现next无法提交到github。此时要删掉你博客目录下的.git目录价下的index.lock文件</font>\n然后：\n```\n git rm --cached themes/next/\n git add themes/next/\n ```\n 如果一次不行，尝试多几次。\n 这个时候就可以提交到github了","source":"_posts/怎么样在别的电脑同步更新发表hexo博客？.md","raw":"---\ntitle: 怎么样在别的电脑同步更新发表hexo博客？\ntags: 技术\ncategories: 技术\nabbrlink: 301aa86\ndate: 2019-04-24 22:12:23\n---\n在git上放两个分支，一个master分支，用来存放hexo 生成public代码的（发布），另一个分支随便取名字吧比如hexo，就是放整个hexo源码的，到时候在别的电脑直接克隆hexo代码，然后写文章，发布，然后同步hexo分支代码。就可以了，很简单。\n<!-- more -->\n<font color=\"red\">注意：如果主题文件是从git克隆下来的，比如next主题，再提交之前先把next下的.git和.github文件夹删掉。如果之前没有删掉，发现next无法提交到github。此时要删掉你博客目录下的.git目录价下的index.lock文件</font>\n然后：\n```\n git rm --cached themes/next/\n git add themes/next/\n ```\n 如果一次不行，尝试多几次。\n 这个时候就可以提交到github了","slug":"怎么样在别的电脑同步更新发表hexo博客？","published":1,"updated":"2021-04-22T01:56:08.242Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckx9sf610001iz8nk98f808cs","content":"<p>在git上放两个分支，一个master分支，用来存放hexo 生成public代码的（发布），另一个分支随便取名字吧比如hexo，就是放整个hexo源码的，到时候在别的电脑直接克隆hexo代码，然后写文章，发布，然后同步hexo分支代码。就可以了，很简单。</p>\n<a id=\"more\"></a>\n<p><font color=\"red\">注意：如果主题文件是从git克隆下来的，比如next主题，再提交之前先把next下的.git和.github文件夹删掉。如果之前没有删掉，发现next无法提交到github。此时要删掉你博客目录下的.git目录价下的index.lock文件</font><br>然后：</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git rm --cached themes<span class=\"regexp\">/next/</span></span><br><span class=\"line\">git add themes<span class=\"regexp\">/next/</span></span><br></pre></td></tr></table></figure>\n<p> 如果一次不行，尝试多几次。<br> 这个时候就可以提交到github了</p>\n","site":{"data":{}},"excerpt":"<p>在git上放两个分支，一个master分支，用来存放hexo 生成public代码的（发布），另一个分支随便取名字吧比如hexo，就是放整个hexo源码的，到时候在别的电脑直接克隆hexo代码，然后写文章，发布，然后同步hexo分支代码。就可以了，很简单。</p>","more":"<p><font color=\"red\">注意：如果主题文件是从git克隆下来的，比如next主题，再提交之前先把next下的.git和.github文件夹删掉。如果之前没有删掉，发现next无法提交到github。此时要删掉你博客目录下的.git目录价下的index.lock文件</font><br>然后：</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git rm --cached themes<span class=\"regexp\">/next/</span></span><br><span class=\"line\">git add themes<span class=\"regexp\">/next/</span></span><br></pre></td></tr></table></figure>\n<p> 如果一次不行，尝试多几次。<br> 这个时候就可以提交到github了</p>"},{"title":"用Xshell登录阿里云服务器","abbrlink":"d86f9c95","date":"2019-06-12T03:42:29.000Z","_content":"使用Xshell登录阿里云最需要注意的一个地方就是要使用阿里云服务器的公共ip，阿里云一个有两个ip，一个是公共的，一个是私有的，这个登录管理后台查看实例就可以看得到\n<!-- more -->\n![](1.jpg)\n![](2.jpg)\n最后会弹出是否接受密钥什么的，点确定就好，或者是弹出密码不对的，也重新输入密码即可。","source":"_posts/用Xshell登录阿里云服务器.md","raw":"---\ntitle: 用Xshell登录阿里云服务器\nabbrlink: d86f9c95\ndate: 2019-06-12 11:42:29\ntags: linux\ncategories: linux\n---\n使用Xshell登录阿里云最需要注意的一个地方就是要使用阿里云服务器的公共ip，阿里云一个有两个ip，一个是公共的，一个是私有的，这个登录管理后台查看实例就可以看得到\n<!-- more -->\n![](1.jpg)\n![](2.jpg)\n最后会弹出是否接受密钥什么的，点确定就好，或者是弹出密码不对的，也重新输入密码即可。","slug":"用Xshell登录阿里云服务器","published":1,"updated":"2021-04-22T01:56:08.242Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckx9sf612001mz8nk14ah8j9c","content":"<p>使用Xshell登录阿里云最需要注意的一个地方就是要使用阿里云服务器的公共ip，阿里云一个有两个ip，一个是公共的，一个是私有的，这个登录管理后台查看实例就可以看得到</p>\n<a id=\"more\"></a>\n<p><img src=\"1.jpg\"><br><img src=\"2.jpg\"><br>最后会弹出是否接受密钥什么的，点确定就好，或者是弹出密码不对的，也重新输入密码即可。</p>\n","site":{"data":{}},"excerpt":"<p>使用Xshell登录阿里云最需要注意的一个地方就是要使用阿里云服务器的公共ip，阿里云一个有两个ip，一个是公共的，一个是私有的，这个登录管理后台查看实例就可以看得到</p>","more":"<p><img src=\"1.jpg\"><br><img src=\"2.jpg\"><br>最后会弹出是否接受密钥什么的，点确定就好，或者是弹出密码不对的，也重新输入密码即可。</p>"},{"title":"用hexo+github搭建个人博客","abbrlink":"4443dac6","date":"2019-02-27T07:33:57.000Z","_content":"## 用hexo+github page快速搭建个人静态博客\n\n### 1.hexo环境搭建\n\n首先需要电脑安装好了nodejs（具体安装步骤略过），还需要有github账号。打开cmd命令行，全局安装hexo ``npm install -g hexo-cli`` 可以使用 ``hexo v`` 来检查是否安装成功。\n<!-- more -->\n接下来使用hexo cli来创建项目：使用``hexo init`` 就会在当前文件夹下创建了项目，当然也可以使用``hexo init 文件夹名称`` 来创建文件夹的同时创建项目。接着运行 ``npm install``安装依赖，注意，安装hexo的文件夹需要是空文件夹。\n\n### 2.hexo的基本使用及常见的命令\n\n``hexo s`` 使用这个命令可以在本地跑起来，可以看到cmd窗口提示项目运行在 ``http://localhost:4000``，打开浏览器输入提示的地址即可访问了，不过可以看到，默认的主题有点丑，我们可以换一个，在这里我们换next这个简洁的主题。我们可以直接百度搜索hexo next主题官网或者去hexo官网找next主题都可以，我们找到next的github，克隆下来，放到博客项目的themes目录下，接下来打开根目录的配置文件_config.yml文件找到 theme，把默认的该为next，然后命令行``hexo clean && hexo s``刷新页面即可成功替换主题了。\n快速创建文章命令为 ``hexo new \"文章名字\"``  执行完这个命令后就会在sources下的_posts目录下创建名称为 刚刚创建的同名md文件，可以用编辑器直接打开编辑了。\n#### 这里需要注意：在next主题的配置文件下添加了菜单后，点击了提示找不到页面，不要慌，是因为默认只生产home和Archive页面，需要自己创建相应的页面，比如about页面 ``hexo new page \"about\"`` 这时 source里面多了个目录about，里面有个index.md，就可以正常访问了，内容就在那个index.md里添加\n\n### 与github对接\n\n在github上新建一个名为xxx.github.io 的仓库，然后在hexo的_config.yml中的\n\n``` \ndeploy: \n  type: git \n  repository: git@github.com:hongyu2016/hongyu2016.github.io.git \n  branch: master\n```\n填写相应的git地址，然后需要把本地项目与git仓库相关联起来，需要使用ssh来连接，git ssh连接请参考 [配置git ssh](https://www.cnblogs.com/superGG1990/p/6844952.html) 。在本地仓库与远程仓库连接的过程中可能会出现分支不匹配等错误，需要具体问题然后再进行针对性解决。本地仓库与远程仓库关联上后就可以在本地进行发布了，``hexo d``为发布命令，会将项目发布到github page，发布成功后，会在本地生成的静态文件推送到到github，其他文件是不会推送的，这个时候会把原本在github上的readme文件删除，不要慌，在resoures下新建readme文件再次发布就好了，注意：千万不要使用github的git push发布，这样发布是没有效果的，github会在每次push时发编译失败的邮件给你，因为github page只支持静态文件，所以只能使用``hexo d``命令，另外在发布前最好先``hexo clean && hexo g``先清除和重新生成静态文件发发布。发布成功后，输入xxx.github.io就可以正常访问博客了。\n\n## 结语：搭建hexo博客还是比较简单的，个人觉得在推送到github的过程中比较麻烦，容易出各种问题，这个地方需要注意。","source":"_posts/用hexo-github搭建个人博客.md","raw":"---\ntitle: 用hexo+github搭建个人博客\ntags: 技术\ncategories: 技术\nabbrlink: 4443dac6\ndate: 2019-02-27 15:33:57\n---\n## 用hexo+github page快速搭建个人静态博客\n\n### 1.hexo环境搭建\n\n首先需要电脑安装好了nodejs（具体安装步骤略过），还需要有github账号。打开cmd命令行，全局安装hexo ``npm install -g hexo-cli`` 可以使用 ``hexo v`` 来检查是否安装成功。\n<!-- more -->\n接下来使用hexo cli来创建项目：使用``hexo init`` 就会在当前文件夹下创建了项目，当然也可以使用``hexo init 文件夹名称`` 来创建文件夹的同时创建项目。接着运行 ``npm install``安装依赖，注意，安装hexo的文件夹需要是空文件夹。\n\n### 2.hexo的基本使用及常见的命令\n\n``hexo s`` 使用这个命令可以在本地跑起来，可以看到cmd窗口提示项目运行在 ``http://localhost:4000``，打开浏览器输入提示的地址即可访问了，不过可以看到，默认的主题有点丑，我们可以换一个，在这里我们换next这个简洁的主题。我们可以直接百度搜索hexo next主题官网或者去hexo官网找next主题都可以，我们找到next的github，克隆下来，放到博客项目的themes目录下，接下来打开根目录的配置文件_config.yml文件找到 theme，把默认的该为next，然后命令行``hexo clean && hexo s``刷新页面即可成功替换主题了。\n快速创建文章命令为 ``hexo new \"文章名字\"``  执行完这个命令后就会在sources下的_posts目录下创建名称为 刚刚创建的同名md文件，可以用编辑器直接打开编辑了。\n#### 这里需要注意：在next主题的配置文件下添加了菜单后，点击了提示找不到页面，不要慌，是因为默认只生产home和Archive页面，需要自己创建相应的页面，比如about页面 ``hexo new page \"about\"`` 这时 source里面多了个目录about，里面有个index.md，就可以正常访问了，内容就在那个index.md里添加\n\n### 与github对接\n\n在github上新建一个名为xxx.github.io 的仓库，然后在hexo的_config.yml中的\n\n``` \ndeploy: \n  type: git \n  repository: git@github.com:hongyu2016/hongyu2016.github.io.git \n  branch: master\n```\n填写相应的git地址，然后需要把本地项目与git仓库相关联起来，需要使用ssh来连接，git ssh连接请参考 [配置git ssh](https://www.cnblogs.com/superGG1990/p/6844952.html) 。在本地仓库与远程仓库连接的过程中可能会出现分支不匹配等错误，需要具体问题然后再进行针对性解决。本地仓库与远程仓库关联上后就可以在本地进行发布了，``hexo d``为发布命令，会将项目发布到github page，发布成功后，会在本地生成的静态文件推送到到github，其他文件是不会推送的，这个时候会把原本在github上的readme文件删除，不要慌，在resoures下新建readme文件再次发布就好了，注意：千万不要使用github的git push发布，这样发布是没有效果的，github会在每次push时发编译失败的邮件给你，因为github page只支持静态文件，所以只能使用``hexo d``命令，另外在发布前最好先``hexo clean && hexo g``先清除和重新生成静态文件发发布。发布成功后，输入xxx.github.io就可以正常访问博客了。\n\n## 结语：搭建hexo博客还是比较简单的，个人觉得在推送到github的过程中比较麻烦，容易出各种问题，这个地方需要注意。","slug":"用hexo-github搭建个人博客","published":1,"updated":"2021-04-22T01:56:08.242Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckx9sf618001qz8nk8ey76nqf","content":"<h2 id=\"用hexo-github-page快速搭建个人静态博客\"><a href=\"#用hexo-github-page快速搭建个人静态博客\" class=\"headerlink\" title=\"用hexo+github page快速搭建个人静态博客\"></a>用hexo+github page快速搭建个人静态博客</h2><h3 id=\"1-hexo环境搭建\"><a href=\"#1-hexo环境搭建\" class=\"headerlink\" title=\"1.hexo环境搭建\"></a>1.hexo环境搭建</h3><p>首先需要电脑安装好了nodejs（具体安装步骤略过），还需要有github账号。打开cmd命令行，全局安装hexo <code>npm install -g hexo-cli</code> 可以使用 <code>hexo v</code> 来检查是否安装成功。</p>\n<a id=\"more\"></a>\n<p>接下来使用hexo cli来创建项目：使用<code>hexo init</code> 就会在当前文件夹下创建了项目，当然也可以使用<code>hexo init 文件夹名称</code> 来创建文件夹的同时创建项目。接着运行 <code>npm install</code>安装依赖，注意，安装hexo的文件夹需要是空文件夹。</p>\n<h3 id=\"2-hexo的基本使用及常见的命令\"><a href=\"#2-hexo的基本使用及常见的命令\" class=\"headerlink\" title=\"2.hexo的基本使用及常见的命令\"></a>2.hexo的基本使用及常见的命令</h3><p><code>hexo s</code> 使用这个命令可以在本地跑起来，可以看到cmd窗口提示项目运行在 <code>http://localhost:4000</code>，打开浏览器输入提示的地址即可访问了，不过可以看到，默认的主题有点丑，我们可以换一个，在这里我们换next这个简洁的主题。我们可以直接百度搜索hexo next主题官网或者去hexo官网找next主题都可以，我们找到next的github，克隆下来，放到博客项目的themes目录下，接下来打开根目录的配置文件_config.yml文件找到 theme，把默认的该为next，然后命令行<code>hexo clean &amp;&amp; hexo s</code>刷新页面即可成功替换主题了。<br>快速创建文章命令为 <code>hexo new &quot;文章名字&quot;</code>  执行完这个命令后就会在sources下的_posts目录下创建名称为 刚刚创建的同名md文件，可以用编辑器直接打开编辑了。</p>\n<h4 id=\"这里需要注意：在next主题的配置文件下添加了菜单后，点击了提示找不到页面，不要慌，是因为默认只生产home和Archive页面，需要自己创建相应的页面，比如about页面-hexo-new-page-quot-about-quot-这时-source里面多了个目录about，里面有个index-md，就可以正常访问了，内容就在那个index-md里添加\"><a href=\"#这里需要注意：在next主题的配置文件下添加了菜单后，点击了提示找不到页面，不要慌，是因为默认只生产home和Archive页面，需要自己创建相应的页面，比如about页面-hexo-new-page-quot-about-quot-这时-source里面多了个目录about，里面有个index-md，就可以正常访问了，内容就在那个index-md里添加\" class=\"headerlink\" title=\"这里需要注意：在next主题的配置文件下添加了菜单后，点击了提示找不到页面，不要慌，是因为默认只生产home和Archive页面，需要自己创建相应的页面，比如about页面 hexo new page &quot;about&quot; 这时 source里面多了个目录about，里面有个index.md，就可以正常访问了，内容就在那个index.md里添加\"></a>这里需要注意：在next主题的配置文件下添加了菜单后，点击了提示找不到页面，不要慌，是因为默认只生产home和Archive页面，需要自己创建相应的页面，比如about页面 <code>hexo new page &quot;about&quot;</code> 这时 source里面多了个目录about，里面有个index.md，就可以正常访问了，内容就在那个index.md里添加</h4><h3 id=\"与github对接\"><a href=\"#与github对接\" class=\"headerlink\" title=\"与github对接\"></a>与github对接</h3><p>在github上新建一个名为xxx.github.io 的仓库，然后在hexo的_config.yml中的</p>\n<figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">deploy</span>: </span><br><span class=\"line\">  <span class=\"attribute\">type</span>: git </span><br><span class=\"line\">  <span class=\"attribute\">repository</span>: git<span class=\"variable\">@github</span>.<span class=\"attribute\">com</span>:hongyu2016/hongyu2016.github.io.git </span><br><span class=\"line\">  <span class=\"attribute\">branch</span>: master</span><br></pre></td></tr></table></figure>\n<p>填写相应的git地址，然后需要把本地项目与git仓库相关联起来，需要使用ssh来连接，git ssh连接请参考 <a href=\"https://www.cnblogs.com/superGG1990/p/6844952.html\">配置git ssh</a> 。在本地仓库与远程仓库连接的过程中可能会出现分支不匹配等错误，需要具体问题然后再进行针对性解决。本地仓库与远程仓库关联上后就可以在本地进行发布了，<code>hexo d</code>为发布命令，会将项目发布到github page，发布成功后，会在本地生成的静态文件推送到到github，其他文件是不会推送的，这个时候会把原本在github上的readme文件删除，不要慌，在resoures下新建readme文件再次发布就好了，注意：千万不要使用github的git push发布，这样发布是没有效果的，github会在每次push时发编译失败的邮件给你，因为github page只支持静态文件，所以只能使用<code>hexo d</code>命令，另外在发布前最好先<code>hexo clean &amp;&amp; hexo g</code>先清除和重新生成静态文件发发布。发布成功后，输入xxx.github.io就可以正常访问博客了。</p>\n<h2 id=\"结语：搭建hexo博客还是比较简单的，个人觉得在推送到github的过程中比较麻烦，容易出各种问题，这个地方需要注意。\"><a href=\"#结语：搭建hexo博客还是比较简单的，个人觉得在推送到github的过程中比较麻烦，容易出各种问题，这个地方需要注意。\" class=\"headerlink\" title=\"结语：搭建hexo博客还是比较简单的，个人觉得在推送到github的过程中比较麻烦，容易出各种问题，这个地方需要注意。\"></a>结语：搭建hexo博客还是比较简单的，个人觉得在推送到github的过程中比较麻烦，容易出各种问题，这个地方需要注意。</h2>","site":{"data":{}},"excerpt":"<h2 id=\"用hexo-github-page快速搭建个人静态博客\"><a href=\"#用hexo-github-page快速搭建个人静态博客\" class=\"headerlink\" title=\"用hexo+github page快速搭建个人静态博客\"></a>用hexo+github page快速搭建个人静态博客</h2><h3 id=\"1-hexo环境搭建\"><a href=\"#1-hexo环境搭建\" class=\"headerlink\" title=\"1.hexo环境搭建\"></a>1.hexo环境搭建</h3><p>首先需要电脑安装好了nodejs（具体安装步骤略过），还需要有github账号。打开cmd命令行，全局安装hexo <code>npm install -g hexo-cli</code> 可以使用 <code>hexo v</code> 来检查是否安装成功。</p>","more":"<p>接下来使用hexo cli来创建项目：使用<code>hexo init</code> 就会在当前文件夹下创建了项目，当然也可以使用<code>hexo init 文件夹名称</code> 来创建文件夹的同时创建项目。接着运行 <code>npm install</code>安装依赖，注意，安装hexo的文件夹需要是空文件夹。</p>\n<h3 id=\"2-hexo的基本使用及常见的命令\"><a href=\"#2-hexo的基本使用及常见的命令\" class=\"headerlink\" title=\"2.hexo的基本使用及常见的命令\"></a>2.hexo的基本使用及常见的命令</h3><p><code>hexo s</code> 使用这个命令可以在本地跑起来，可以看到cmd窗口提示项目运行在 <code>http://localhost:4000</code>，打开浏览器输入提示的地址即可访问了，不过可以看到，默认的主题有点丑，我们可以换一个，在这里我们换next这个简洁的主题。我们可以直接百度搜索hexo next主题官网或者去hexo官网找next主题都可以，我们找到next的github，克隆下来，放到博客项目的themes目录下，接下来打开根目录的配置文件_config.yml文件找到 theme，把默认的该为next，然后命令行<code>hexo clean &amp;&amp; hexo s</code>刷新页面即可成功替换主题了。<br>快速创建文章命令为 <code>hexo new &quot;文章名字&quot;</code>  执行完这个命令后就会在sources下的_posts目录下创建名称为 刚刚创建的同名md文件，可以用编辑器直接打开编辑了。</p>\n<h4 id=\"这里需要注意：在next主题的配置文件下添加了菜单后，点击了提示找不到页面，不要慌，是因为默认只生产home和Archive页面，需要自己创建相应的页面，比如about页面-hexo-new-page-quot-about-quot-这时-source里面多了个目录about，里面有个index-md，就可以正常访问了，内容就在那个index-md里添加\"><a href=\"#这里需要注意：在next主题的配置文件下添加了菜单后，点击了提示找不到页面，不要慌，是因为默认只生产home和Archive页面，需要自己创建相应的页面，比如about页面-hexo-new-page-quot-about-quot-这时-source里面多了个目录about，里面有个index-md，就可以正常访问了，内容就在那个index-md里添加\" class=\"headerlink\" title=\"这里需要注意：在next主题的配置文件下添加了菜单后，点击了提示找不到页面，不要慌，是因为默认只生产home和Archive页面，需要自己创建相应的页面，比如about页面 hexo new page &quot;about&quot; 这时 source里面多了个目录about，里面有个index.md，就可以正常访问了，内容就在那个index.md里添加\"></a>这里需要注意：在next主题的配置文件下添加了菜单后，点击了提示找不到页面，不要慌，是因为默认只生产home和Archive页面，需要自己创建相应的页面，比如about页面 <code>hexo new page &quot;about&quot;</code> 这时 source里面多了个目录about，里面有个index.md，就可以正常访问了，内容就在那个index.md里添加</h4><h3 id=\"与github对接\"><a href=\"#与github对接\" class=\"headerlink\" title=\"与github对接\"></a>与github对接</h3><p>在github上新建一个名为xxx.github.io 的仓库，然后在hexo的_config.yml中的</p>\n<figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">deploy</span>: </span><br><span class=\"line\">  <span class=\"attribute\">type</span>: git </span><br><span class=\"line\">  <span class=\"attribute\">repository</span>: git<span class=\"variable\">@github</span>.<span class=\"attribute\">com</span>:hongyu2016/hongyu2016.github.io.git </span><br><span class=\"line\">  <span class=\"attribute\">branch</span>: master</span><br></pre></td></tr></table></figure>\n<p>填写相应的git地址，然后需要把本地项目与git仓库相关联起来，需要使用ssh来连接，git ssh连接请参考 <a href=\"https://www.cnblogs.com/superGG1990/p/6844952.html\">配置git ssh</a> 。在本地仓库与远程仓库连接的过程中可能会出现分支不匹配等错误，需要具体问题然后再进行针对性解决。本地仓库与远程仓库关联上后就可以在本地进行发布了，<code>hexo d</code>为发布命令，会将项目发布到github page，发布成功后，会在本地生成的静态文件推送到到github，其他文件是不会推送的，这个时候会把原本在github上的readme文件删除，不要慌，在resoures下新建readme文件再次发布就好了，注意：千万不要使用github的git push发布，这样发布是没有效果的，github会在每次push时发编译失败的邮件给你，因为github page只支持静态文件，所以只能使用<code>hexo d</code>命令，另外在发布前最好先<code>hexo clean &amp;&amp; hexo g</code>先清除和重新生成静态文件发发布。发布成功后，输入xxx.github.io就可以正常访问博客了。</p>\n<h2 id=\"结语：搭建hexo博客还是比较简单的，个人觉得在推送到github的过程中比较麻烦，容易出各种问题，这个地方需要注意。\"><a href=\"#结语：搭建hexo博客还是比较简单的，个人觉得在推送到github的过程中比较麻烦，容易出各种问题，这个地方需要注意。\" class=\"headerlink\" title=\"结语：搭建hexo博客还是比较简单的，个人觉得在推送到github的过程中比较麻烦，容易出各种问题，这个地方需要注意。\"></a>结语：搭建hexo博客还是比较简单的，个人觉得在推送到github的过程中比较麻烦，容易出各种问题，这个地方需要注意。</h2>"},{"title":"解决npm install安装任何包都报错的问题","abbrlink":60785,"date":"2019-05-13T10:21:10.000Z","_content":"在ubantu18系统上，之前不知道哪里设置错了，结果用nodejs的npm install任何一个包都报错，报错信息如下：\n<!-- more -->\n```\nnpm ERR! code ENOTFOUND\nnpm ERR! errno ENOTFOUND\nnpm ERR! network request to http://registry.cnpmjs.org/cnpm failed, reason: getaddrinfo ENOTFOUND registry.cnpmjs.org registry.cnpmjs.org:80\nnpm ERR! network This is a problem related to network connectivity.\nnpm ERR! network In most cases you are behind a proxy or have bad network settings.\nnpm ERR! network \nnpm ERR! network If you are behind a proxy, please make sure that the\nnpm ERR! network 'proxy' config is set properly.  See: 'npm help config'\n\nnpm ERR! A complete log of this run can be found in:\nnpm ERR!     /home/liu/.npm/_logs/2019-05-13T12_45_42_040Z-debug.log\n\n```\n按照字面意思，应该是代理出了点问题，由于对npm的设置不是很了解，没办法，百度查查别人的解决办法吧。然后就真查到了，\n```\nnpm config set registry http://registry.cnpmjs.org\n```\n如果提示要sudo那就加上sudo就行了。\n验证一下 ： npm info underscore 如果有返回underscore的相应信息就表示成功了。\n以上内容参考网址：[http://www.cnblogs.com/nurdun/p/6824480.html](http://www.cnblogs.com/nurdun/p/6824480.html) \n","source":"_posts/解决npm-install安装任何包都报错的问题.md","raw":"---\ntitle: 解决npm install安装任何包都报错的问题\ntags: nodejs\ncategories: 前端\nabbrlink: 60785\ndate: 2019-05-13 18:21:10\n---\n在ubantu18系统上，之前不知道哪里设置错了，结果用nodejs的npm install任何一个包都报错，报错信息如下：\n<!-- more -->\n```\nnpm ERR! code ENOTFOUND\nnpm ERR! errno ENOTFOUND\nnpm ERR! network request to http://registry.cnpmjs.org/cnpm failed, reason: getaddrinfo ENOTFOUND registry.cnpmjs.org registry.cnpmjs.org:80\nnpm ERR! network This is a problem related to network connectivity.\nnpm ERR! network In most cases you are behind a proxy or have bad network settings.\nnpm ERR! network \nnpm ERR! network If you are behind a proxy, please make sure that the\nnpm ERR! network 'proxy' config is set properly.  See: 'npm help config'\n\nnpm ERR! A complete log of this run can be found in:\nnpm ERR!     /home/liu/.npm/_logs/2019-05-13T12_45_42_040Z-debug.log\n\n```\n按照字面意思，应该是代理出了点问题，由于对npm的设置不是很了解，没办法，百度查查别人的解决办法吧。然后就真查到了，\n```\nnpm config set registry http://registry.cnpmjs.org\n```\n如果提示要sudo那就加上sudo就行了。\n验证一下 ： npm info underscore 如果有返回underscore的相应信息就表示成功了。\n以上内容参考网址：[http://www.cnblogs.com/nurdun/p/6824480.html](http://www.cnblogs.com/nurdun/p/6824480.html) \n","slug":"解决npm-install安装任何包都报错的问题","published":1,"updated":"2021-04-22T01:56:08.242Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckx9sf61a001uz8nk0kibbpd8","content":"<p>在ubantu18系统上，之前不知道哪里设置错了，结果用nodejs的npm install任何一个包都报错，报错信息如下：</p>\n<a id=\"more\"></a>\n<figure class=\"highlight coffeescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">npm</span> ERR! code ENOTFOUND</span><br><span class=\"line\"><span class=\"built_in\">npm</span> ERR! errno ENOTFOUND</span><br><span class=\"line\"><span class=\"built_in\">npm</span> ERR! network request to http://registry.cnpmjs.org/cnpm failed, reason: getaddrinfo ENOTFOUND registry.cnpmjs.org registry.cnpmjs.org:<span class=\"number\">80</span></span><br><span class=\"line\"><span class=\"built_in\">npm</span> ERR! network This <span class=\"keyword\">is</span> a problem related to network connectivity.</span><br><span class=\"line\"><span class=\"built_in\">npm</span> ERR! network In most cases you are behind a proxy <span class=\"keyword\">or</span> have bad network settings.</span><br><span class=\"line\"><span class=\"built_in\">npm</span> ERR! network </span><br><span class=\"line\"><span class=\"built_in\">npm</span> ERR! network If you are behind a proxy, please make sure that the</span><br><span class=\"line\"><span class=\"built_in\">npm</span> ERR! network <span class=\"string\">&#x27;proxy&#x27;</span> config <span class=\"keyword\">is</span> set properly.  See: <span class=\"string\">&#x27;npm help config&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">npm</span> ERR! A complete log <span class=\"keyword\">of</span> <span class=\"built_in\">this</span> run can be found in:</span><br><span class=\"line\"><span class=\"built_in\">npm</span> ERR!     <span class=\"regexp\">/home/liu/</span>.<span class=\"built_in\">npm</span>/_logs/<span class=\"number\">2019</span><span class=\"number\">-05</span><span class=\"number\">-13</span>T12_45_42_040Z-debug.log</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>按照字面意思，应该是代理出了点问题，由于对npm的设置不是很了解，没办法，百度查查别人的解决办法吧。然后就真查到了，</p>\n<figure class=\"highlight tcl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm config <span class=\"keyword\">set</span> <span class=\"keyword\">registry</span> <span class=\"keyword\">http</span>://<span class=\"keyword\">registry</span>.cnpmjs.org</span><br></pre></td></tr></table></figure>\n<p>如果提示要sudo那就加上sudo就行了。<br>验证一下 ： npm info underscore 如果有返回underscore的相应信息就表示成功了。<br>以上内容参考网址：<a href=\"http://www.cnblogs.com/nurdun/p/6824480.html\">http://www.cnblogs.com/nurdun/p/6824480.html</a> </p>\n","site":{"data":{}},"excerpt":"<p>在ubantu18系统上，之前不知道哪里设置错了，结果用nodejs的npm install任何一个包都报错，报错信息如下：</p>","more":"<figure class=\"highlight coffeescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">npm</span> ERR! code ENOTFOUND</span><br><span class=\"line\"><span class=\"built_in\">npm</span> ERR! errno ENOTFOUND</span><br><span class=\"line\"><span class=\"built_in\">npm</span> ERR! network request to http://registry.cnpmjs.org/cnpm failed, reason: getaddrinfo ENOTFOUND registry.cnpmjs.org registry.cnpmjs.org:<span class=\"number\">80</span></span><br><span class=\"line\"><span class=\"built_in\">npm</span> ERR! network This <span class=\"keyword\">is</span> a problem related to network connectivity.</span><br><span class=\"line\"><span class=\"built_in\">npm</span> ERR! network In most cases you are behind a proxy <span class=\"keyword\">or</span> have bad network settings.</span><br><span class=\"line\"><span class=\"built_in\">npm</span> ERR! network </span><br><span class=\"line\"><span class=\"built_in\">npm</span> ERR! network If you are behind a proxy, please make sure that the</span><br><span class=\"line\"><span class=\"built_in\">npm</span> ERR! network <span class=\"string\">&#x27;proxy&#x27;</span> config <span class=\"keyword\">is</span> set properly.  See: <span class=\"string\">&#x27;npm help config&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">npm</span> ERR! A complete log <span class=\"keyword\">of</span> <span class=\"built_in\">this</span> run can be found in:</span><br><span class=\"line\"><span class=\"built_in\">npm</span> ERR!     <span class=\"regexp\">/home/liu/</span>.<span class=\"built_in\">npm</span>/_logs/<span class=\"number\">2019</span><span class=\"number\">-05</span><span class=\"number\">-13</span>T12_45_42_040Z-debug.log</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>按照字面意思，应该是代理出了点问题，由于对npm的设置不是很了解，没办法，百度查查别人的解决办法吧。然后就真查到了，</p>\n<figure class=\"highlight tcl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm config <span class=\"keyword\">set</span> <span class=\"keyword\">registry</span> <span class=\"keyword\">http</span>://<span class=\"keyword\">registry</span>.cnpmjs.org</span><br></pre></td></tr></table></figure>\n<p>如果提示要sudo那就加上sudo就行了。<br>验证一下 ： npm info underscore 如果有返回underscore的相应信息就表示成功了。<br>以上内容参考网址：<a href=\"http://www.cnblogs.com/nurdun/p/6824480.html\">http://www.cnblogs.com/nurdun/p/6824480.html</a> </p>"},{"title":"让支付宝 微信小程序等小程序 支持scss","abbrlink":"fbf9056","date":"2020-08-26T06:20:28.000Z","_content":"\n原生的钉钉小程序是不支持scss的，支付宝小程序编辑器也不支持配置转译scss，我们使用vscode安装scss插件的方式，来将scss文件转译为acss文件\n<!-- more -->\n## 安装插件 `Live Sass Compiler`\n## 配置vscode\n\n```\n    {\n      \"liveSassCompile.settings.formats\": [\n        {\n          \"format\": \"expanded\",\n          \"extensionName\": \".wxss\",\n          \"savePath\": null\n        }\n      ],\n      \"liveSassCompile.settings.generateMap\": false  // 去掉map文件\n    }\n```\n## 点击vscode 底部 watch 按钮,即可监听文件变动，动态编译文件\n![](1.png)\n","source":"_posts/让支付宝-微信小程序-支持scss.md","raw":"---\ntitle: 让支付宝 微信小程序等小程序 支持scss\ntags:\n  - 小程序\ncategories: 前端\nabbrlink: fbf9056\ndate: 2020-08-26 14:20:28\n---\n\n原生的钉钉小程序是不支持scss的，支付宝小程序编辑器也不支持配置转译scss，我们使用vscode安装scss插件的方式，来将scss文件转译为acss文件\n<!-- more -->\n## 安装插件 `Live Sass Compiler`\n## 配置vscode\n\n```\n    {\n      \"liveSassCompile.settings.formats\": [\n        {\n          \"format\": \"expanded\",\n          \"extensionName\": \".wxss\",\n          \"savePath\": null\n        }\n      ],\n      \"liveSassCompile.settings.generateMap\": false  // 去掉map文件\n    }\n```\n## 点击vscode 底部 watch 按钮,即可监听文件变动，动态编译文件\n![](1.png)\n","slug":"让支付宝-微信小程序-支持scss","published":1,"updated":"2021-04-22T01:56:08.242Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckx9sf61c001xz8nk5lh70a39","content":"<p>原生的钉钉小程序是不支持scss的，支付宝小程序编辑器也不支持配置转译scss，我们使用vscode安装scss插件的方式，来将scss文件转译为acss文件</p>\n<a id=\"more\"></a>\n<h2 id=\"安装插件-Live-Sass-Compiler\"><a href=\"#安装插件-Live-Sass-Compiler\" class=\"headerlink\" title=\"安装插件 Live Sass Compiler\"></a>安装插件 <code>Live Sass Compiler</code></h2><h2 id=\"配置vscode\"><a href=\"#配置vscode\" class=\"headerlink\" title=\"配置vscode\"></a>配置vscode</h2><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">&quot;liveSassCompile.settings.formats&quot;</span>: [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"attr\">&quot;format&quot;</span>: <span class=\"string\">&quot;expanded&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">&quot;extensionName&quot;</span>: <span class=\"string\">&quot;.wxss&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">&quot;savePath&quot;</span>: <span class=\"literal\">null</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  ],</span><br><span class=\"line\">  <span class=\"attr\">&quot;liveSassCompile.settings.generateMap&quot;</span>: <span class=\"literal\">false</span>  <span class=\"comment\">// 去掉map文件</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"点击vscode-底部-watch-按钮-即可监听文件变动，动态编译文件\"><a href=\"#点击vscode-底部-watch-按钮-即可监听文件变动，动态编译文件\" class=\"headerlink\" title=\"点击vscode 底部 watch 按钮,即可监听文件变动，动态编译文件\"></a>点击vscode 底部 watch 按钮,即可监听文件变动，动态编译文件</h2><p><img src=\"1.png\"></p>\n","site":{"data":{}},"excerpt":"<p>原生的钉钉小程序是不支持scss的，支付宝小程序编辑器也不支持配置转译scss，我们使用vscode安装scss插件的方式，来将scss文件转译为acss文件</p>","more":"<h2 id=\"安装插件-Live-Sass-Compiler\"><a href=\"#安装插件-Live-Sass-Compiler\" class=\"headerlink\" title=\"安装插件 Live Sass Compiler\"></a>安装插件 <code>Live Sass Compiler</code></h2><h2 id=\"配置vscode\"><a href=\"#配置vscode\" class=\"headerlink\" title=\"配置vscode\"></a>配置vscode</h2><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">&quot;liveSassCompile.settings.formats&quot;</span>: [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"attr\">&quot;format&quot;</span>: <span class=\"string\">&quot;expanded&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">&quot;extensionName&quot;</span>: <span class=\"string\">&quot;.wxss&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">&quot;savePath&quot;</span>: <span class=\"literal\">null</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  ],</span><br><span class=\"line\">  <span class=\"attr\">&quot;liveSassCompile.settings.generateMap&quot;</span>: <span class=\"literal\">false</span>  <span class=\"comment\">// 去掉map文件</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"点击vscode-底部-watch-按钮-即可监听文件变动，动态编译文件\"><a href=\"#点击vscode-底部-watch-按钮-即可监听文件变动，动态编译文件\" class=\"headerlink\" title=\"点击vscode 底部 watch 按钮,即可监听文件变动，动态编译文件\"></a>点击vscode 底部 watch 按钮,即可监听文件变动，动态编译文件</h2><p><img src=\"1.png\"></p>"},{"title":"记录element-ui 二次封装table时formatter的使用问题","abbrlink":"7f247ba3","date":"2019-04-24T14:11:01.000Z","_content":"\n### 二次封装element table表格中遇到的问题记录\n我们都知道element-ui 的table 中表格行的通过prop指定显示数据源中的字段，我们在进行二次封装时，如果数据都是很简单的字符串或者数字之类的，那就可以直接使用prop就行了，不需要做特殊的操作，但是如果是数组，那就得进行特殊的处理了。\n<!-- more -->\n我们知道element 对于表格行还提供了一个格式化的函数：formatter，常规的用法没有什么好说的了，格式化显示货币，时间等，这里要说的是当字段是数组的时候，而且要在当前列显示html元素的时候就有点蛋疼了，如果是不需要html元素，直接循环数组就行。\n下面是element table的formatter的常规用法（来自element官网）：\n```\n<template>\n  <el-table\n    :data=\"tableData\"\n    style=\"width: 100%\"\n    :default-sort = \"{prop: 'date', order: 'descending'}\"\n    >\n    <el-table-column\n      prop=\"date\"\n      label=\"日期\"\n      sortable\n      width=\"180\">\n    </el-table-column>\n    <el-table-column\n      prop=\"name\"\n      label=\"姓名\"\n      sortable\n      width=\"180\">\n    </el-table-column>\n    <el-table-column\n      prop=\"address\"\n      label=\"地址\"\n      :formatter=\"formatter\">\n    </el-table-column>\n  </el-table>\n</template>\n\n<script>\n  export default {\n    data() {\n      return {\n        tableData: [{\n          date: '2016-05-02',\n          name: '王小虎',\n          address: '上海市普陀区金沙江路 1518 弄'\n        }, {\n          date: '2016-05-04',\n          name: '王小虎',\n          address: '上海市普陀区金沙江路 1517 弄'\n        }, {\n          date: '2016-05-01',\n          name: '王小虎',\n          address: '上海市普陀区金沙江路 1519 弄'\n        }, {\n          date: '2016-05-03',\n          name: '王小虎',\n          address: '上海市普陀区金沙江路 1516 弄'\n        }]\n      }\n    },\n    methods: {\n      formatter(row, column) {\n        return row.address;\n      }\n    }\n  }\n</script>\n\n```\n下面来说下我们项目的需求\n![](1.png)\n如果不是二次封装也很容易解决，可以用template，但是我们这里说的是二次封装，这里只能用formatter函数了，父组件在调用时需要提供类似这样的数据：\n```\ntablelable:[\n    {lable:'表格行1',prop:'prop_1'},\n    {lable:'时间',prop:'time'},\n    {lable:'附件',prop:'files',\n    formatter:(row,column,cellvalue,index)={\n            //在这里进行格式化输出\n        }\n    },\n]\n// 这里提供的数据源\ntableData:[\n    {prop_1:'***',time:'2015-20-2',files:[name:'12.jpg',url:'']},\n    {prop_1:'***',time:'2015-20-2',files:[name:'12.jpg',url:'']}\n]\n```\n下面贴出图片吧\n![](2.png)\n![](3.png)\n这里的formatter必须要返回一个对象才能渲染出html，如果是返回一个字符串是没有用的，会原样输出字符串，比如'<a heref=\"\">12.jpg</a>' 他不会渲染出可点击的a  而是把一整个当成字符串输出，没有渲染。<font color=\"red\">还有一个需要注意的地方就是在这里返回的对象中的元素的属性要采用原生的写法，比如class要写成className，还有变量等也需要注意写法</font>。好了，记录下，以后再遇到就懂得处理了。\n","source":"_posts/记录element-ui-二次封装table时formatter的使用问题.md","raw":"---\ntitle: 记录element-ui 二次封装table时formatter的使用问题\ntags:\n  - element-ui\n  - vue\ncategories: 前端\nabbrlink: 7f247ba3\ndate: 2019-04-24 22:11:01\n---\n\n### 二次封装element table表格中遇到的问题记录\n我们都知道element-ui 的table 中表格行的通过prop指定显示数据源中的字段，我们在进行二次封装时，如果数据都是很简单的字符串或者数字之类的，那就可以直接使用prop就行了，不需要做特殊的操作，但是如果是数组，那就得进行特殊的处理了。\n<!-- more -->\n我们知道element 对于表格行还提供了一个格式化的函数：formatter，常规的用法没有什么好说的了，格式化显示货币，时间等，这里要说的是当字段是数组的时候，而且要在当前列显示html元素的时候就有点蛋疼了，如果是不需要html元素，直接循环数组就行。\n下面是element table的formatter的常规用法（来自element官网）：\n```\n<template>\n  <el-table\n    :data=\"tableData\"\n    style=\"width: 100%\"\n    :default-sort = \"{prop: 'date', order: 'descending'}\"\n    >\n    <el-table-column\n      prop=\"date\"\n      label=\"日期\"\n      sortable\n      width=\"180\">\n    </el-table-column>\n    <el-table-column\n      prop=\"name\"\n      label=\"姓名\"\n      sortable\n      width=\"180\">\n    </el-table-column>\n    <el-table-column\n      prop=\"address\"\n      label=\"地址\"\n      :formatter=\"formatter\">\n    </el-table-column>\n  </el-table>\n</template>\n\n<script>\n  export default {\n    data() {\n      return {\n        tableData: [{\n          date: '2016-05-02',\n          name: '王小虎',\n          address: '上海市普陀区金沙江路 1518 弄'\n        }, {\n          date: '2016-05-04',\n          name: '王小虎',\n          address: '上海市普陀区金沙江路 1517 弄'\n        }, {\n          date: '2016-05-01',\n          name: '王小虎',\n          address: '上海市普陀区金沙江路 1519 弄'\n        }, {\n          date: '2016-05-03',\n          name: '王小虎',\n          address: '上海市普陀区金沙江路 1516 弄'\n        }]\n      }\n    },\n    methods: {\n      formatter(row, column) {\n        return row.address;\n      }\n    }\n  }\n</script>\n\n```\n下面来说下我们项目的需求\n![](1.png)\n如果不是二次封装也很容易解决，可以用template，但是我们这里说的是二次封装，这里只能用formatter函数了，父组件在调用时需要提供类似这样的数据：\n```\ntablelable:[\n    {lable:'表格行1',prop:'prop_1'},\n    {lable:'时间',prop:'time'},\n    {lable:'附件',prop:'files',\n    formatter:(row,column,cellvalue,index)={\n            //在这里进行格式化输出\n        }\n    },\n]\n// 这里提供的数据源\ntableData:[\n    {prop_1:'***',time:'2015-20-2',files:[name:'12.jpg',url:'']},\n    {prop_1:'***',time:'2015-20-2',files:[name:'12.jpg',url:'']}\n]\n```\n下面贴出图片吧\n![](2.png)\n![](3.png)\n这里的formatter必须要返回一个对象才能渲染出html，如果是返回一个字符串是没有用的，会原样输出字符串，比如'<a heref=\"\">12.jpg</a>' 他不会渲染出可点击的a  而是把一整个当成字符串输出，没有渲染。<font color=\"red\">还有一个需要注意的地方就是在这里返回的对象中的元素的属性要采用原生的写法，比如class要写成className，还有变量等也需要注意写法</font>。好了，记录下，以后再遇到就懂得处理了。\n","slug":"记录element-ui-二次封装table时formatter的使用问题","published":1,"updated":"2021-04-22T01:56:08.252Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckx9sf61d0021z8nk7c845mqu","content":"<h3 id=\"二次封装element-table表格中遇到的问题记录\"><a href=\"#二次封装element-table表格中遇到的问题记录\" class=\"headerlink\" title=\"二次封装element table表格中遇到的问题记录\"></a>二次封装element table表格中遇到的问题记录</h3><p>我们都知道element-ui 的table 中表格行的通过prop指定显示数据源中的字段，我们在进行二次封装时，如果数据都是很简单的字符串或者数字之类的，那就可以直接使用prop就行了，不需要做特殊的操作，但是如果是数组，那就得进行特殊的处理了。</p>\n<a id=\"more\"></a>\n<p>我们知道element 对于表格行还提供了一个格式化的函数：formatter，常规的用法没有什么好说的了，格式化显示货币，时间等，这里要说的是当字段是数组的时候，而且要在当前列显示html元素的时候就有点蛋疼了，如果是不需要html元素，直接循环数组就行。<br>下面是element table的formatter的常规用法（来自element官网）：</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;<span class=\"keyword\">template</span>&gt;</span><br><span class=\"line\">  &lt;el-<span class=\"keyword\">table</span></span><br><span class=\"line\">    :data=&quot;tableData&quot;</span><br><span class=\"line\">    style=&quot;width: 100%&quot;</span><br><span class=\"line\">    :<span class=\"keyword\">default</span>-sort = &quot;&#123;prop: &#x27;date&#x27;, order: &#x27;descending&#x27;&#125;&quot;</span><br><span class=\"line\">    &gt;</span><br><span class=\"line\">    &lt;el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span></span><br><span class=\"line\">      prop=&quot;date&quot;</span><br><span class=\"line\">      label=&quot;日期&quot;</span><br><span class=\"line\">      sortable</span><br><span class=\"line\">      width=&quot;180&quot;&gt;</span><br><span class=\"line\">    &lt;/el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span>&gt;</span><br><span class=\"line\">    &lt;el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span></span><br><span class=\"line\">      prop=&quot;name&quot;</span><br><span class=\"line\">      label=&quot;姓名&quot;</span><br><span class=\"line\">      sortable</span><br><span class=\"line\">      width=&quot;180&quot;&gt;</span><br><span class=\"line\">    &lt;/el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span>&gt;</span><br><span class=\"line\">    &lt;el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span></span><br><span class=\"line\">      prop=&quot;address&quot;</span><br><span class=\"line\">      label=&quot;地址&quot;</span><br><span class=\"line\">      :formatter=&quot;formatter&quot;&gt;</span><br><span class=\"line\">    &lt;/el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span>&gt;</span><br><span class=\"line\">  &lt;/el-<span class=\"keyword\">table</span>&gt;</span><br><span class=\"line\">&lt;/<span class=\"keyword\">template</span>&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  export <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">    data() &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">        tableData: [&#123;</span><br><span class=\"line\">          <span class=\"type\">date</span>: <span class=\"string\">&#x27;2016-05-02&#x27;</span>,</span><br><span class=\"line\">          <span class=\"type\">name</span>: <span class=\"string\">&#x27;王小虎&#x27;</span>,</span><br><span class=\"line\">          address: <span class=\"string\">&#x27;上海市普陀区金沙江路 1518 弄&#x27;</span></span><br><span class=\"line\">        &#125;, &#123;</span><br><span class=\"line\">          <span class=\"type\">date</span>: <span class=\"string\">&#x27;2016-05-04&#x27;</span>,</span><br><span class=\"line\">          <span class=\"type\">name</span>: <span class=\"string\">&#x27;王小虎&#x27;</span>,</span><br><span class=\"line\">          address: <span class=\"string\">&#x27;上海市普陀区金沙江路 1517 弄&#x27;</span></span><br><span class=\"line\">        &#125;, &#123;</span><br><span class=\"line\">          <span class=\"type\">date</span>: <span class=\"string\">&#x27;2016-05-01&#x27;</span>,</span><br><span class=\"line\">          <span class=\"type\">name</span>: <span class=\"string\">&#x27;王小虎&#x27;</span>,</span><br><span class=\"line\">          address: <span class=\"string\">&#x27;上海市普陀区金沙江路 1519 弄&#x27;</span></span><br><span class=\"line\">        &#125;, &#123;</span><br><span class=\"line\">          <span class=\"type\">date</span>: <span class=\"string\">&#x27;2016-05-03&#x27;</span>,</span><br><span class=\"line\">          <span class=\"type\">name</span>: <span class=\"string\">&#x27;王小虎&#x27;</span>,</span><br><span class=\"line\">          address: <span class=\"string\">&#x27;上海市普陀区金沙江路 1516 弄&#x27;</span></span><br><span class=\"line\">        &#125;]</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    methods: &#123;</span><br><span class=\"line\">      formatter(<span class=\"keyword\">row</span>, <span class=\"keyword\">column</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">row</span>.address;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>下面来说下我们项目的需求<br><img src=\"1.png\"><br>如果不是二次封装也很容易解决，可以用template，但是我们这里说的是二次封装，这里只能用formatter函数了，父组件在调用时需要提供类似这样的数据：</p>\n<figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">tablelable:</span>[</span><br><span class=\"line\">    &#123;<span class=\"attr\">lable:</span><span class=\"string\">&#x27;表格行1&#x27;</span>,<span class=\"attr\">prop:</span><span class=\"string\">&#x27;prop_1&#x27;</span>&#125;,</span><br><span class=\"line\">    &#123;<span class=\"attr\">lable:</span><span class=\"string\">&#x27;时间&#x27;</span>,<span class=\"attr\">prop:</span><span class=\"string\">&#x27;time&#x27;</span>&#125;,</span><br><span class=\"line\">    &#123;<span class=\"attr\">lable:</span><span class=\"string\">&#x27;附件&#x27;</span>,<span class=\"attr\">prop:</span><span class=\"string\">&#x27;files&#x27;</span>,</span><br><span class=\"line\">    <span class=\"symbol\">formatter:</span>(row,column,cellvalue,index)=&#123;</span><br><span class=\"line\">            <span class=\"comment\">//在这里进行格式化输出</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">]</span><br><span class=\"line\"><span class=\"comment\">// 这里提供的数据源</span></span><br><span class=\"line\"><span class=\"attr\">tableData:</span>[</span><br><span class=\"line\">    &#123;<span class=\"attr\">prop_1:</span><span class=\"string\">&#x27;***&#x27;</span>,<span class=\"attr\">time:</span><span class=\"string\">&#x27;2015-20-2&#x27;</span>,<span class=\"attr\">files:</span>[<span class=\"attr\">name:</span><span class=\"string\">&#x27;12.jpg&#x27;</span>,<span class=\"attr\">url:</span><span class=\"string\">&#x27;&#x27;</span>]&#125;,</span><br><span class=\"line\">    &#123;<span class=\"attr\">prop_1:</span><span class=\"string\">&#x27;***&#x27;</span>,<span class=\"attr\">time:</span><span class=\"string\">&#x27;2015-20-2&#x27;</span>,<span class=\"attr\">files:</span>[<span class=\"attr\">name:</span><span class=\"string\">&#x27;12.jpg&#x27;</span>,<span class=\"attr\">url:</span><span class=\"string\">&#x27;&#x27;</span>]&#125;</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<p>下面贴出图片吧<br><img src=\"2.png\"><br><img src=\"3.png\"><br>这里的formatter必须要返回一个对象才能渲染出html，如果是返回一个字符串是没有用的，会原样输出字符串，比如’<a heref=\"\">12.jpg</a>‘ 他不会渲染出可点击的a  而是把一整个当成字符串输出，没有渲染。<font color=\"red\">还有一个需要注意的地方就是在这里返回的对象中的元素的属性要采用原生的写法，比如class要写成className，还有变量等也需要注意写法</font>。好了，记录下，以后再遇到就懂得处理了。</p>\n","site":{"data":{}},"excerpt":"<h3 id=\"二次封装element-table表格中遇到的问题记录\"><a href=\"#二次封装element-table表格中遇到的问题记录\" class=\"headerlink\" title=\"二次封装element table表格中遇到的问题记录\"></a>二次封装element table表格中遇到的问题记录</h3><p>我们都知道element-ui 的table 中表格行的通过prop指定显示数据源中的字段，我们在进行二次封装时，如果数据都是很简单的字符串或者数字之类的，那就可以直接使用prop就行了，不需要做特殊的操作，但是如果是数组，那就得进行特殊的处理了。</p>","more":"<p>我们知道element 对于表格行还提供了一个格式化的函数：formatter，常规的用法没有什么好说的了，格式化显示货币，时间等，这里要说的是当字段是数组的时候，而且要在当前列显示html元素的时候就有点蛋疼了，如果是不需要html元素，直接循环数组就行。<br>下面是element table的formatter的常规用法（来自element官网）：</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;<span class=\"keyword\">template</span>&gt;</span><br><span class=\"line\">  &lt;el-<span class=\"keyword\">table</span></span><br><span class=\"line\">    :data=&quot;tableData&quot;</span><br><span class=\"line\">    style=&quot;width: 100%&quot;</span><br><span class=\"line\">    :<span class=\"keyword\">default</span>-sort = &quot;&#123;prop: &#x27;date&#x27;, order: &#x27;descending&#x27;&#125;&quot;</span><br><span class=\"line\">    &gt;</span><br><span class=\"line\">    &lt;el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span></span><br><span class=\"line\">      prop=&quot;date&quot;</span><br><span class=\"line\">      label=&quot;日期&quot;</span><br><span class=\"line\">      sortable</span><br><span class=\"line\">      width=&quot;180&quot;&gt;</span><br><span class=\"line\">    &lt;/el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span>&gt;</span><br><span class=\"line\">    &lt;el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span></span><br><span class=\"line\">      prop=&quot;name&quot;</span><br><span class=\"line\">      label=&quot;姓名&quot;</span><br><span class=\"line\">      sortable</span><br><span class=\"line\">      width=&quot;180&quot;&gt;</span><br><span class=\"line\">    &lt;/el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span>&gt;</span><br><span class=\"line\">    &lt;el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span></span><br><span class=\"line\">      prop=&quot;address&quot;</span><br><span class=\"line\">      label=&quot;地址&quot;</span><br><span class=\"line\">      :formatter=&quot;formatter&quot;&gt;</span><br><span class=\"line\">    &lt;/el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span>&gt;</span><br><span class=\"line\">  &lt;/el-<span class=\"keyword\">table</span>&gt;</span><br><span class=\"line\">&lt;/<span class=\"keyword\">template</span>&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  export <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">    data() &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">        tableData: [&#123;</span><br><span class=\"line\">          <span class=\"type\">date</span>: <span class=\"string\">&#x27;2016-05-02&#x27;</span>,</span><br><span class=\"line\">          <span class=\"type\">name</span>: <span class=\"string\">&#x27;王小虎&#x27;</span>,</span><br><span class=\"line\">          address: <span class=\"string\">&#x27;上海市普陀区金沙江路 1518 弄&#x27;</span></span><br><span class=\"line\">        &#125;, &#123;</span><br><span class=\"line\">          <span class=\"type\">date</span>: <span class=\"string\">&#x27;2016-05-04&#x27;</span>,</span><br><span class=\"line\">          <span class=\"type\">name</span>: <span class=\"string\">&#x27;王小虎&#x27;</span>,</span><br><span class=\"line\">          address: <span class=\"string\">&#x27;上海市普陀区金沙江路 1517 弄&#x27;</span></span><br><span class=\"line\">        &#125;, &#123;</span><br><span class=\"line\">          <span class=\"type\">date</span>: <span class=\"string\">&#x27;2016-05-01&#x27;</span>,</span><br><span class=\"line\">          <span class=\"type\">name</span>: <span class=\"string\">&#x27;王小虎&#x27;</span>,</span><br><span class=\"line\">          address: <span class=\"string\">&#x27;上海市普陀区金沙江路 1519 弄&#x27;</span></span><br><span class=\"line\">        &#125;, &#123;</span><br><span class=\"line\">          <span class=\"type\">date</span>: <span class=\"string\">&#x27;2016-05-03&#x27;</span>,</span><br><span class=\"line\">          <span class=\"type\">name</span>: <span class=\"string\">&#x27;王小虎&#x27;</span>,</span><br><span class=\"line\">          address: <span class=\"string\">&#x27;上海市普陀区金沙江路 1516 弄&#x27;</span></span><br><span class=\"line\">        &#125;]</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    methods: &#123;</span><br><span class=\"line\">      formatter(<span class=\"keyword\">row</span>, <span class=\"keyword\">column</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">row</span>.address;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>下面来说下我们项目的需求<br><img src=\"1.png\"><br>如果不是二次封装也很容易解决，可以用template，但是我们这里说的是二次封装，这里只能用formatter函数了，父组件在调用时需要提供类似这样的数据：</p>\n<figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">tablelable:</span>[</span><br><span class=\"line\">    &#123;<span class=\"attr\">lable:</span><span class=\"string\">&#x27;表格行1&#x27;</span>,<span class=\"attr\">prop:</span><span class=\"string\">&#x27;prop_1&#x27;</span>&#125;,</span><br><span class=\"line\">    &#123;<span class=\"attr\">lable:</span><span class=\"string\">&#x27;时间&#x27;</span>,<span class=\"attr\">prop:</span><span class=\"string\">&#x27;time&#x27;</span>&#125;,</span><br><span class=\"line\">    &#123;<span class=\"attr\">lable:</span><span class=\"string\">&#x27;附件&#x27;</span>,<span class=\"attr\">prop:</span><span class=\"string\">&#x27;files&#x27;</span>,</span><br><span class=\"line\">    <span class=\"symbol\">formatter:</span>(row,column,cellvalue,index)=&#123;</span><br><span class=\"line\">            <span class=\"comment\">//在这里进行格式化输出</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">]</span><br><span class=\"line\"><span class=\"comment\">// 这里提供的数据源</span></span><br><span class=\"line\"><span class=\"attr\">tableData:</span>[</span><br><span class=\"line\">    &#123;<span class=\"attr\">prop_1:</span><span class=\"string\">&#x27;***&#x27;</span>,<span class=\"attr\">time:</span><span class=\"string\">&#x27;2015-20-2&#x27;</span>,<span class=\"attr\">files:</span>[<span class=\"attr\">name:</span><span class=\"string\">&#x27;12.jpg&#x27;</span>,<span class=\"attr\">url:</span><span class=\"string\">&#x27;&#x27;</span>]&#125;,</span><br><span class=\"line\">    &#123;<span class=\"attr\">prop_1:</span><span class=\"string\">&#x27;***&#x27;</span>,<span class=\"attr\">time:</span><span class=\"string\">&#x27;2015-20-2&#x27;</span>,<span class=\"attr\">files:</span>[<span class=\"attr\">name:</span><span class=\"string\">&#x27;12.jpg&#x27;</span>,<span class=\"attr\">url:</span><span class=\"string\">&#x27;&#x27;</span>]&#125;</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<p>下面贴出图片吧<br><img src=\"2.png\"><br><img src=\"3.png\"><br>这里的formatter必须要返回一个对象才能渲染出html，如果是返回一个字符串是没有用的，会原样输出字符串，比如’<a heref=\"\">12.jpg</a>‘ 他不会渲染出可点击的a  而是把一整个当成字符串输出，没有渲染。<font color=\"red\">还有一个需要注意的地方就是在这里返回的对象中的元素的属性要采用原生的写法，比如class要写成className，还有变量等也需要注意写法</font>。好了，记录下，以后再遇到就懂得处理了。</p>"},{"title":"运行yarn eject 后 yarn start 报错","abbrlink":"e1691e31","date":"2020-06-04T11:00:34.000Z","_content":"运行 yarn eject 把webpack配置暴露出来后，运行yarn start后报错，\n报错的内容大致是 找不到 react-scripts下的config/env.js文件，然后查了下，发现node_module下 react-scripts被清空了，package.json文件\n<!-- more -->\n下也没有这个记录了，找了很多资料都没有结果，然后索性就按照这个包，按照好后就报各种插件版本低，比如webpack，babel等，然后全部升级后，启动就没有报错了。","source":"_posts/运行yarn-eject-后-yarn-start-报错.md","raw":"---\ntitle: 运行yarn eject 后 yarn start 报错\ntags: 'react,'\ncategories: 前端\nabbrlink: e1691e31\ndate: 2020-06-04 19:00:34\n---\n运行 yarn eject 把webpack配置暴露出来后，运行yarn start后报错，\n报错的内容大致是 找不到 react-scripts下的config/env.js文件，然后查了下，发现node_module下 react-scripts被清空了，package.json文件\n<!-- more -->\n下也没有这个记录了，找了很多资料都没有结果，然后索性就按照这个包，按照好后就报各种插件版本低，比如webpack，babel等，然后全部升级后，启动就没有报错了。","slug":"运行yarn-eject-后-yarn-start-报错","published":1,"updated":"2021-04-22T01:56:08.252Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckx9sf61f0024z8nk4aye9rjn","content":"<p>运行 yarn eject 把webpack配置暴露出来后，运行yarn start后报错，<br>报错的内容大致是 找不到 react-scripts下的config/env.js文件，然后查了下，发现node_module下 react-scripts被清空了，package.json文件</p>\n<a id=\"more\"></a>\n<p>下也没有这个记录了，找了很多资料都没有结果，然后索性就按照这个包，按照好后就报各种插件版本低，比如webpack，babel等，然后全部升级后，启动就没有报错了。</p>\n","site":{"data":{}},"excerpt":"<p>运行 yarn eject 把webpack配置暴露出来后，运行yarn start后报错，<br>报错的内容大致是 找不到 react-scripts下的config/env.js文件，然后查了下，发现node_module下 react-scripts被清空了，package.json文件</p>","more":"<p>下也没有这个记录了，找了很多资料都没有结果，然后索性就按照这个包，按照好后就报各种插件版本低，比如webpack，babel等，然后全部升级后，启动就没有报错了。</p>"},{"title":"部署在github page的hexo博客绑定二级域名","abbrlink":"a7642960","date":"2019-02-26T11:45:45.000Z","_content":"## 前提：已经有了域名（这里以阿里云为例）以及能成功访问的github page（这里以hexo部署的博客为例）。\n### 1.增加域名解析：\n<!-- more -->\n![](/images/2019-2-26.png)\n这里需要注意，记录类型需要选择CNAME，主机记录为除www和@外的字符，因为我要用blog作为二级域名，所以写blog。解析线路选默认就好了，一开始我选境外，结果不行。记录值为``` ***.github.io ```(即你的github page地址)。到这里解析设置完成了。\n\n### 2.增加域名解析：\n\n在GitHub博客仓库的根目录中新建文件CNAME （没有后缀），里面填写 ``` blog.iyuge.cn ``` 注意，因为hexo在部署至github时会重新删除github的文件，所以我们必须在本地的source目录下新建CNAME文件，然后``` hexo clean && hexo g && hexo d github ```上就有CNAME文件了\n\n### 结语：至此，给github page绑定二级域名就完成了，很简单，但是需要注意的是第一次有可能不成功需要重试几次，每次可能需要等一段时间才会生效！","source":"_posts/部署在github-page的hexo博客绑定二级域名.md","raw":"---\ntitle: 部署在github page的hexo博客绑定二级域名\ntags: 技术\ncategories: 技术\nabbrlink: a7642960\ndate: 2019-02-26 19:45:45\n---\n## 前提：已经有了域名（这里以阿里云为例）以及能成功访问的github page（这里以hexo部署的博客为例）。\n### 1.增加域名解析：\n<!-- more -->\n![](/images/2019-2-26.png)\n这里需要注意，记录类型需要选择CNAME，主机记录为除www和@外的字符，因为我要用blog作为二级域名，所以写blog。解析线路选默认就好了，一开始我选境外，结果不行。记录值为``` ***.github.io ```(即你的github page地址)。到这里解析设置完成了。\n\n### 2.增加域名解析：\n\n在GitHub博客仓库的根目录中新建文件CNAME （没有后缀），里面填写 ``` blog.iyuge.cn ``` 注意，因为hexo在部署至github时会重新删除github的文件，所以我们必须在本地的source目录下新建CNAME文件，然后``` hexo clean && hexo g && hexo d github ```上就有CNAME文件了\n\n### 结语：至此，给github page绑定二级域名就完成了，很简单，但是需要注意的是第一次有可能不成功需要重试几次，每次可能需要等一段时间才会生效！","slug":"部署在github-page的hexo博客绑定二级域名","published":1,"updated":"2021-04-22T01:56:08.252Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckx9sf61g0028z8nk12o48mqv","content":"<h2 id=\"前提：已经有了域名（这里以阿里云为例）以及能成功访问的github-page（这里以hexo部署的博客为例）。\"><a href=\"#前提：已经有了域名（这里以阿里云为例）以及能成功访问的github-page（这里以hexo部署的博客为例）。\" class=\"headerlink\" title=\"前提：已经有了域名（这里以阿里云为例）以及能成功访问的github page（这里以hexo部署的博客为例）。\"></a>前提：已经有了域名（这里以阿里云为例）以及能成功访问的github page（这里以hexo部署的博客为例）。</h2><h3 id=\"1-增加域名解析：\"><a href=\"#1-增加域名解析：\" class=\"headerlink\" title=\"1.增加域名解析：\"></a>1.增加域名解析：</h3><a id=\"more\"></a>\n<p><img src=\"/images/2019-2-26.png\"><br>这里需要注意，记录类型需要选择CNAME，主机记录为除www和@外的字符，因为我要用blog作为二级域名，所以写blog。解析线路选默认就好了，一开始我选境外，结果不行。记录值为<code>***.github.io</code>(即你的github page地址)。到这里解析设置完成了。</p>\n<h3 id=\"2-增加域名解析：\"><a href=\"#2-增加域名解析：\" class=\"headerlink\" title=\"2.增加域名解析：\"></a>2.增加域名解析：</h3><p>在GitHub博客仓库的根目录中新建文件CNAME （没有后缀），里面填写 <code>blog.iyuge.cn</code> 注意，因为hexo在部署至github时会重新删除github的文件，所以我们必须在本地的source目录下新建CNAME文件，然后<code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo d github</code>上就有CNAME文件了</p>\n<h3 id=\"结语：至此，给github-page绑定二级域名就完成了，很简单，但是需要注意的是第一次有可能不成功需要重试几次，每次可能需要等一段时间才会生效！\"><a href=\"#结语：至此，给github-page绑定二级域名就完成了，很简单，但是需要注意的是第一次有可能不成功需要重试几次，每次可能需要等一段时间才会生效！\" class=\"headerlink\" title=\"结语：至此，给github page绑定二级域名就完成了，很简单，但是需要注意的是第一次有可能不成功需要重试几次，每次可能需要等一段时间才会生效！\"></a>结语：至此，给github page绑定二级域名就完成了，很简单，但是需要注意的是第一次有可能不成功需要重试几次，每次可能需要等一段时间才会生效！</h3>","site":{"data":{}},"excerpt":"<h2 id=\"前提：已经有了域名（这里以阿里云为例）以及能成功访问的github-page（这里以hexo部署的博客为例）。\"><a href=\"#前提：已经有了域名（这里以阿里云为例）以及能成功访问的github-page（这里以hexo部署的博客为例）。\" class=\"headerlink\" title=\"前提：已经有了域名（这里以阿里云为例）以及能成功访问的github page（这里以hexo部署的博客为例）。\"></a>前提：已经有了域名（这里以阿里云为例）以及能成功访问的github page（这里以hexo部署的博客为例）。</h2><h3 id=\"1-增加域名解析：\"><a href=\"#1-增加域名解析：\" class=\"headerlink\" title=\"1.增加域名解析：\"></a>1.增加域名解析：</h3>","more":"<p><img src=\"/images/2019-2-26.png\"><br>这里需要注意，记录类型需要选择CNAME，主机记录为除www和@外的字符，因为我要用blog作为二级域名，所以写blog。解析线路选默认就好了，一开始我选境外，结果不行。记录值为<code>***.github.io</code>(即你的github page地址)。到这里解析设置完成了。</p>\n<h3 id=\"2-增加域名解析：\"><a href=\"#2-增加域名解析：\" class=\"headerlink\" title=\"2.增加域名解析：\"></a>2.增加域名解析：</h3><p>在GitHub博客仓库的根目录中新建文件CNAME （没有后缀），里面填写 <code>blog.iyuge.cn</code> 注意，因为hexo在部署至github时会重新删除github的文件，所以我们必须在本地的source目录下新建CNAME文件，然后<code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo d github</code>上就有CNAME文件了</p>\n<h3 id=\"结语：至此，给github-page绑定二级域名就完成了，很简单，但是需要注意的是第一次有可能不成功需要重试几次，每次可能需要等一段时间才会生效！\"><a href=\"#结语：至此，给github-page绑定二级域名就完成了，很简单，但是需要注意的是第一次有可能不成功需要重试几次，每次可能需要等一段时间才会生效！\" class=\"headerlink\" title=\"结语：至此，给github page绑定二级域名就完成了，很简单，但是需要注意的是第一次有可能不成功需要重试几次，每次可能需要等一段时间才会生效！\"></a>结语：至此，给github page绑定二级域名就完成了，很简单，但是需要注意的是第一次有可能不成功需要重试几次，每次可能需要等一段时间才会生效！</h3>"},{"title":"阿里云服务器配置简要步骤","abbrlink":"afa0b0b8","date":"2021-07-14T10:04:44.000Z","_content":"\n## 阿里云服务器配置：\n### 1：进入主机，配置ftp服务\n下载 FileZilla Server \n安装，默认端口 14147，改为14140\n设置项：\ngeneral settings\n监听端口设置为14141。\npassive mode settings。\n需要添加用户 adduser，然后设置分享路径。\n\nftp over tls settings \n开启，证书生成放在安装目录下\n默认的端口为990改为14140\n\n使用自定义端口：14140-14150\n使用下面的ip：0.0.0.0/0\n\n### 2：回到阿里云安全组管理\n\n阿里云管理后台的安全组中需要开启14140-14150的入站规则\n\n## 配置其他web服务时，需要设置防火墙的放行端口，比如 80 端口，443端口，其他web项目启动的端口由nginx统一转发到80或者443端口即可。\n","source":"_posts/阿里云服务器配置简要步骤.md","raw":"---\ntitle: 阿里云服务器配置简要步骤\nabbrlink: afa0b0b8\ndate: 2021-07-14 18:04:44\ntags:\n---\n\n## 阿里云服务器配置：\n### 1：进入主机，配置ftp服务\n下载 FileZilla Server \n安装，默认端口 14147，改为14140\n设置项：\ngeneral settings\n监听端口设置为14141。\npassive mode settings。\n需要添加用户 adduser，然后设置分享路径。\n\nftp over tls settings \n开启，证书生成放在安装目录下\n默认的端口为990改为14140\n\n使用自定义端口：14140-14150\n使用下面的ip：0.0.0.0/0\n\n### 2：回到阿里云安全组管理\n\n阿里云管理后台的安全组中需要开启14140-14150的入站规则\n\n## 配置其他web服务时，需要设置防火墙的放行端口，比如 80 端口，443端口，其他web项目启动的端口由nginx统一转发到80或者443端口即可。\n","slug":"阿里云服务器配置简要步骤","published":1,"updated":"2021-07-14T10:13:58.706Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckx9sf61h002bz8nk0cgf5sg3","content":"<h2 id=\"阿里云服务器配置：\"><a href=\"#阿里云服务器配置：\" class=\"headerlink\" title=\"阿里云服务器配置：\"></a>阿里云服务器配置：</h2><h3 id=\"1：进入主机，配置ftp服务\"><a href=\"#1：进入主机，配置ftp服务\" class=\"headerlink\" title=\"1：进入主机，配置ftp服务\"></a>1：进入主机，配置ftp服务</h3><p>下载 FileZilla Server<br>安装，默认端口 14147，改为14140<br>设置项：<br>general settings<br>监听端口设置为14141。<br>passive mode settings。<br>需要添加用户 adduser，然后设置分享路径。</p>\n<p>ftp over tls settings<br>开启，证书生成放在安装目录下<br>默认的端口为990改为14140</p>\n<p>使用自定义端口：14140-14150<br>使用下面的ip：0.0.0.0/0</p>\n<h3 id=\"2：回到阿里云安全组管理\"><a href=\"#2：回到阿里云安全组管理\" class=\"headerlink\" title=\"2：回到阿里云安全组管理\"></a>2：回到阿里云安全组管理</h3><p>阿里云管理后台的安全组中需要开启14140-14150的入站规则</p>\n<h2 id=\"配置其他web服务时，需要设置防火墙的放行端口，比如-80-端口，443端口，其他web项目启动的端口由nginx统一转发到80或者443端口即可。\"><a href=\"#配置其他web服务时，需要设置防火墙的放行端口，比如-80-端口，443端口，其他web项目启动的端口由nginx统一转发到80或者443端口即可。\" class=\"headerlink\" title=\"配置其他web服务时，需要设置防火墙的放行端口，比如 80 端口，443端口，其他web项目启动的端口由nginx统一转发到80或者443端口即可。\"></a>配置其他web服务时，需要设置防火墙的放行端口，比如 80 端口，443端口，其他web项目启动的端口由nginx统一转发到80或者443端口即可。</h2>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"阿里云服务器配置：\"><a href=\"#阿里云服务器配置：\" class=\"headerlink\" title=\"阿里云服务器配置：\"></a>阿里云服务器配置：</h2><h3 id=\"1：进入主机，配置ftp服务\"><a href=\"#1：进入主机，配置ftp服务\" class=\"headerlink\" title=\"1：进入主机，配置ftp服务\"></a>1：进入主机，配置ftp服务</h3><p>下载 FileZilla Server<br>安装，默认端口 14147，改为14140<br>设置项：<br>general settings<br>监听端口设置为14141。<br>passive mode settings。<br>需要添加用户 adduser，然后设置分享路径。</p>\n<p>ftp over tls settings<br>开启，证书生成放在安装目录下<br>默认的端口为990改为14140</p>\n<p>使用自定义端口：14140-14150<br>使用下面的ip：0.0.0.0/0</p>\n<h3 id=\"2：回到阿里云安全组管理\"><a href=\"#2：回到阿里云安全组管理\" class=\"headerlink\" title=\"2：回到阿里云安全组管理\"></a>2：回到阿里云安全组管理</h3><p>阿里云管理后台的安全组中需要开启14140-14150的入站规则</p>\n<h2 id=\"配置其他web服务时，需要设置防火墙的放行端口，比如-80-端口，443端口，其他web项目启动的端口由nginx统一转发到80或者443端口即可。\"><a href=\"#配置其他web服务时，需要设置防火墙的放行端口，比如-80-端口，443端口，其他web项目启动的端口由nginx统一转发到80或者443端口即可。\" class=\"headerlink\" title=\"配置其他web服务时，需要设置防火墙的放行端口，比如 80 端口，443端口，其他web项目启动的端口由nginx统一转发到80或者443端口即可。\"></a>配置其他web服务时，需要设置防火墙的放行端口，比如 80 端口，443端口，其他web项目启动的端口由nginx统一转发到80或者443端口即可。</h2>"},{"title":"钉钉工作台自定义组件设计规范及注意事项","abbrlink":"4794f0e0","_content":"\n### 钉钉标准组件的默认规范：\n满栏/非满栏：padding/margin: 0 32rpx;<br />圆角：12rpx<br />默认高度：100px-375px<br />从目前的众多项目的实践来看，组件的单位能使用rpx单位优先使用rpx单位（字体也可使用rpx）。<br />\n\n### 自定义组件规范\n1、目前发现组件间没有类似vue style那样的scope属性进行样式作用域隔离，所以目前最好的方式是通过不一样的类名来区分组件，如要写成.container-wrap-title .box，而不是 .box ，以免污染全局的css。以及进行样式的设计。\n<!-- more -->\n如下图：<br />![](1.png)<br />![](2.png)<br />\n<br />2、不止是样式，js也是一样，比如，最好不要把变量声明在Component外，否则当在门户上使用到两个同样的组件时，变量就会被覆盖，无法保持独立性，所以应该把变量声明在Component内或者挂载在data里，如下图：<br />![](3.png)<br />3、之前的组件开发，对于通过配置来更改css中的font-size、各种color 等样式的，直接在axml里的style里写，比如：style=\"color:{{componentProps.titleColor}};\" 。这样做虽然能达到目的，但是会使得axml变的很难看，维护起来比较棘手；所以现在新开发的组件，涉及到通过配置来更改样式的，优先使用css中的 “var(变量,默认值)”。关于css中的变量的用法：[https://developer.mozilla.org/zh-CN/docs/Web/CSS/--*](https://developer.mozilla.org/zh-CN/docs/Web/CSS/--*)<br />在我们组件开发中的用法大概是这样的\n```javascript\n//js文件\n// 组件初始化时，获取config.json的配置，设置cssVariable变量，以便在axml 根元素使用style赋值\ndidMount() {\n  getLifecycleSdk().didMount(this.props.componentName);\n  let {\n    height,\n    titleColor,\n  } = this.props.componentProps;\n  let cssStyle = `\n  --height: ${height}rpx;   \n  --title-color: ${titleColor};    \n  `\n  this.setData({\n    cssVariable: cssStyle\n  })\n  // 组件其他业务逻辑\n},\n```\n```xml\n// axml文件使用\n<view class=\"root-wrap\" style=\"{{cssVariable}}\">\n\t// 其他子元素\n</view>\n```\n```css\n// scss文件中使用\n.root-wrap{\n\theight: var(--height, 150rpx);\n}\n```\n\n\n### 注意事项\n1：组件的名称问题，对于其他外部开发者开发的组件，以组织名称开头，以免与目前主公司的其他组件冲突\n```json\n{\n  // config.json 中的 pluginComponentName 以组织名称开头，以免与目前主公司的其他组件冲突。\n  // 比如 叮当 的，可以使用 dingdangComponet 或者 ddangComponet\n  \"pluginComponentName\": \"dingdangBanner\"\n}\n```\n2、对于不注册在门户设计器上的组件，即只有acss、axml、js、json四个文件，没有config.json文件；也就是只在其他组件中被引用的，对于这类组件需要特别注意：<br />这里的组件的开发就跟钉钉的小程序开发很像了，axml里读取props里的值不再像插件开发那样写componentProps.xxx，而是直接写xxx，而且在编辑器里props里写默认值是生效的，但是到了门户设计器，到了真实的手机环境的时候，这个默认值就会失效<br />![](4.png)<br />3、使用rpx等单位时需注意某些情况下的精度问题；比如画一个正圆时，宽高使用rpx，圆角设置50%；在手机上会出现有些圆不圆的情况，这是由于rpx转成rem，然后再在手机上转成px时会存在精度丢失（手机上有二倍屏，三倍屏），宽高使用px做单位就没这个问题。<br />\n\n### 由于组件间没有像vue那样的样式 scope隔离，所以组件间需要用组件名作为顶级选择器，嵌套使用，且顶级选择器不能重复，防止组件间样式冲突。\n建议使用scss嵌套书写css，提高开发效率，也不容易遗漏顶级选择器，但是由于acss不支持scss，我们需要用工具来实现。<br />1、首先选择vscode来开发，安装Live Sass Compiler 插件<br />2、配置settings.json\n```json\n    {\n      \"liveSassCompile.settings.formats\": [\n        {\n          \"format\": \"expanded\",\n          \"extensionName\": \".acss\",\n          \"savePath\": null\n        }\n      ],\n      \"liveSassCompile.settings.generateMap\": false  // 去掉map文件\n    }\n```\n3、点击vscode底部的watch按钮，监听文件变化，自动编译scss文件为acss文件<br />![](5.png)<br />4、完整组件至少包含6个文件。.sjs文件作为axml的辅助，详情可查看钉钉小程序开发文档<br />![](6.png)\n### 关于组件新增、删除、修改config.json文件的主意事项\n1：删除配置项：参考钉钉插件开发文档的说法，config文件的配置避免删除配置项，否则有可能引起已经在使用中的客户门户报错<br />2：修改配置项：修改配置项的名称、不改变原来配置类型的情况下增加配置选项（如增加下拉选项），这都没有什么风险；但是最好不要修改配置项的类型，比如原来是下拉框，改成了输入框，有可能引起已经在使用中的客户门户报错<br />3：新增配置项：钉钉会把组件的配置面板的所有参数的值存储到数据库，但是对于新增配置项，不会自动更新新增配置项的默认值，也就是默认值为空。因此要使已经在使用中的客户门户也对新增的默认值生效的话，必须要重新拖入组件，重新发布门户。所以，对于新增配置项，要做好兼容处理。\n","source":"_posts/钉钉工作台自定义组件设计规范及注意事项.md","raw":"---\ntitle: 钉钉工作台自定义组件设计规范及注意事项\ntags:\n  - 钉钉小程序\n  - 小程序\ncategories: 前端\nabbrlink: 4794f0e0\n---\n\n### 钉钉标准组件的默认规范：\n满栏/非满栏：padding/margin: 0 32rpx;<br />圆角：12rpx<br />默认高度：100px-375px<br />从目前的众多项目的实践来看，组件的单位能使用rpx单位优先使用rpx单位（字体也可使用rpx）。<br />\n\n### 自定义组件规范\n1、目前发现组件间没有类似vue style那样的scope属性进行样式作用域隔离，所以目前最好的方式是通过不一样的类名来区分组件，如要写成.container-wrap-title .box，而不是 .box ，以免污染全局的css。以及进行样式的设计。\n<!-- more -->\n如下图：<br />![](1.png)<br />![](2.png)<br />\n<br />2、不止是样式，js也是一样，比如，最好不要把变量声明在Component外，否则当在门户上使用到两个同样的组件时，变量就会被覆盖，无法保持独立性，所以应该把变量声明在Component内或者挂载在data里，如下图：<br />![](3.png)<br />3、之前的组件开发，对于通过配置来更改css中的font-size、各种color 等样式的，直接在axml里的style里写，比如：style=\"color:{{componentProps.titleColor}};\" 。这样做虽然能达到目的，但是会使得axml变的很难看，维护起来比较棘手；所以现在新开发的组件，涉及到通过配置来更改样式的，优先使用css中的 “var(变量,默认值)”。关于css中的变量的用法：[https://developer.mozilla.org/zh-CN/docs/Web/CSS/--*](https://developer.mozilla.org/zh-CN/docs/Web/CSS/--*)<br />在我们组件开发中的用法大概是这样的\n```javascript\n//js文件\n// 组件初始化时，获取config.json的配置，设置cssVariable变量，以便在axml 根元素使用style赋值\ndidMount() {\n  getLifecycleSdk().didMount(this.props.componentName);\n  let {\n    height,\n    titleColor,\n  } = this.props.componentProps;\n  let cssStyle = `\n  --height: ${height}rpx;   \n  --title-color: ${titleColor};    \n  `\n  this.setData({\n    cssVariable: cssStyle\n  })\n  // 组件其他业务逻辑\n},\n```\n```xml\n// axml文件使用\n<view class=\"root-wrap\" style=\"{{cssVariable}}\">\n\t// 其他子元素\n</view>\n```\n```css\n// scss文件中使用\n.root-wrap{\n\theight: var(--height, 150rpx);\n}\n```\n\n\n### 注意事项\n1：组件的名称问题，对于其他外部开发者开发的组件，以组织名称开头，以免与目前主公司的其他组件冲突\n```json\n{\n  // config.json 中的 pluginComponentName 以组织名称开头，以免与目前主公司的其他组件冲突。\n  // 比如 叮当 的，可以使用 dingdangComponet 或者 ddangComponet\n  \"pluginComponentName\": \"dingdangBanner\"\n}\n```\n2、对于不注册在门户设计器上的组件，即只有acss、axml、js、json四个文件，没有config.json文件；也就是只在其他组件中被引用的，对于这类组件需要特别注意：<br />这里的组件的开发就跟钉钉的小程序开发很像了，axml里读取props里的值不再像插件开发那样写componentProps.xxx，而是直接写xxx，而且在编辑器里props里写默认值是生效的，但是到了门户设计器，到了真实的手机环境的时候，这个默认值就会失效<br />![](4.png)<br />3、使用rpx等单位时需注意某些情况下的精度问题；比如画一个正圆时，宽高使用rpx，圆角设置50%；在手机上会出现有些圆不圆的情况，这是由于rpx转成rem，然后再在手机上转成px时会存在精度丢失（手机上有二倍屏，三倍屏），宽高使用px做单位就没这个问题。<br />\n\n### 由于组件间没有像vue那样的样式 scope隔离，所以组件间需要用组件名作为顶级选择器，嵌套使用，且顶级选择器不能重复，防止组件间样式冲突。\n建议使用scss嵌套书写css，提高开发效率，也不容易遗漏顶级选择器，但是由于acss不支持scss，我们需要用工具来实现。<br />1、首先选择vscode来开发，安装Live Sass Compiler 插件<br />2、配置settings.json\n```json\n    {\n      \"liveSassCompile.settings.formats\": [\n        {\n          \"format\": \"expanded\",\n          \"extensionName\": \".acss\",\n          \"savePath\": null\n        }\n      ],\n      \"liveSassCompile.settings.generateMap\": false  // 去掉map文件\n    }\n```\n3、点击vscode底部的watch按钮，监听文件变化，自动编译scss文件为acss文件<br />![](5.png)<br />4、完整组件至少包含6个文件。.sjs文件作为axml的辅助，详情可查看钉钉小程序开发文档<br />![](6.png)\n### 关于组件新增、删除、修改config.json文件的主意事项\n1：删除配置项：参考钉钉插件开发文档的说法，config文件的配置避免删除配置项，否则有可能引起已经在使用中的客户门户报错<br />2：修改配置项：修改配置项的名称、不改变原来配置类型的情况下增加配置选项（如增加下拉选项），这都没有什么风险；但是最好不要修改配置项的类型，比如原来是下拉框，改成了输入框，有可能引起已经在使用中的客户门户报错<br />3：新增配置项：钉钉会把组件的配置面板的所有参数的值存储到数据库，但是对于新增配置项，不会自动更新新增配置项的默认值，也就是默认值为空。因此要使已经在使用中的客户门户也对新增的默认值生效的话，必须要重新拖入组件，重新发布门户。所以，对于新增配置项，要做好兼容处理。\n","slug":"钉钉工作台自定义组件设计规范及注意事项","published":1,"date":"2021-04-22T01:56:08.252Z","updated":"2021-04-22T01:56:08.252Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckx9sf67s003jz8nk2jy35rt2","content":"<h3 id=\"钉钉标准组件的默认规范：\"><a href=\"#钉钉标准组件的默认规范：\" class=\"headerlink\" title=\"钉钉标准组件的默认规范：\"></a>钉钉标准组件的默认规范：</h3><p>满栏/非满栏：padding/margin: 0 32rpx;<br />圆角：12rpx<br />默认高度：100px-375px<br />从目前的众多项目的实践来看，组件的单位能使用rpx单位优先使用rpx单位（字体也可使用rpx）。<br /></p>\n<h3 id=\"自定义组件规范\"><a href=\"#自定义组件规范\" class=\"headerlink\" title=\"自定义组件规范\"></a>自定义组件规范</h3><p>1、目前发现组件间没有类似vue style那样的scope属性进行样式作用域隔离，所以目前最好的方式是通过不一样的类名来区分组件，如要写成.container-wrap-title .box，而不是 .box ，以免污染全局的css。以及进行样式的设计。</p>\n<a id=\"more\"></a>\n<p>如下图：<br /><img src=\"1.png\"><br /><img src=\"2.png\"><br /><br><br />2、不止是样式，js也是一样，比如，最好不要把变量声明在Component外，否则当在门户上使用到两个同样的组件时，变量就会被覆盖，无法保持独立性，所以应该把变量声明在Component内或者挂载在data里，如下图：<br /><img src=\"3.png\"><br />3、之前的组件开发，对于通过配置来更改css中的font-size、各种color 等样式的，直接在axml里的style里写，比如：style=”color:;” 。这样做虽然能达到目的，但是会使得axml变的很难看，维护起来比较棘手；所以现在新开发的组件，涉及到通过配置来更改样式的，优先使用css中的 “var(变量,默认值)”。关于css中的变量的用法：<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/--*\">https://developer.mozilla.org/zh-CN/docs/Web/CSS/–*</a><br />在我们组件开发中的用法大概是这样的</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//js文件</span></span><br><span class=\"line\"><span class=\"comment\">// 组件初始化时，获取config.json的配置，设置cssVariable变量，以便在axml 根元素使用style赋值</span></span><br><span class=\"line\">didMount() &#123;</span><br><span class=\"line\">  getLifecycleSdk().didMount(<span class=\"built_in\">this</span>.props.componentName);</span><br><span class=\"line\">  <span class=\"keyword\">let</span> &#123;</span><br><span class=\"line\">    height,</span><br><span class=\"line\">    titleColor,</span><br><span class=\"line\">  &#125; = <span class=\"built_in\">this</span>.props.componentProps;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> cssStyle = <span class=\"string\">`</span></span><br><span class=\"line\"><span class=\"string\">  --height: <span class=\"subst\">$&#123;height&#125;</span>rpx;   </span></span><br><span class=\"line\"><span class=\"string\">  --title-color: <span class=\"subst\">$&#123;titleColor&#125;</span>;    </span></span><br><span class=\"line\"><span class=\"string\">  `</span></span><br><span class=\"line\">  <span class=\"built_in\">this</span>.setData(&#123;</span><br><span class=\"line\">    cssVariable: cssStyle</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  <span class=\"comment\">// 组件其他业务逻辑</span></span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// axml文件使用</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">view</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;root-wrap&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;&#123;&#123;cssVariable&#125;&#125;&quot;</span>&gt;</span></span><br><span class=\"line\">    // 其他子元素</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">view</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// scss文件中使用</span><br><span class=\"line\"><span class=\"selector-class\">.root-wrap</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"built_in\">var</span>(--height, <span class=\"number\">150</span>rpx);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"注意事项\"><a href=\"#注意事项\" class=\"headerlink\" title=\"注意事项\"></a>注意事项</h3><p>1：组件的名称问题，对于其他外部开发者开发的组件，以组织名称开头，以免与目前主公司的其他组件冲突</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"comment\">// config.json 中的 pluginComponentName 以组织名称开头，以免与目前主公司的其他组件冲突。</span></span><br><span class=\"line\">  <span class=\"comment\">// 比如 叮当 的，可以使用 dingdangComponet 或者 ddangComponet</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;pluginComponentName&quot;</span>: <span class=\"string\">&quot;dingdangBanner&quot;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>2、对于不注册在门户设计器上的组件，即只有acss、axml、js、json四个文件，没有config.json文件；也就是只在其他组件中被引用的，对于这类组件需要特别注意：<br />这里的组件的开发就跟钉钉的小程序开发很像了，axml里读取props里的值不再像插件开发那样写componentProps.xxx，而是直接写xxx，而且在编辑器里props里写默认值是生效的，但是到了门户设计器，到了真实的手机环境的时候，这个默认值就会失效<br /><img src=\"4.png\"><br />3、使用rpx等单位时需注意某些情况下的精度问题；比如画一个正圆时，宽高使用rpx，圆角设置50%；在手机上会出现有些圆不圆的情况，这是由于rpx转成rem，然后再在手机上转成px时会存在精度丢失（手机上有二倍屏，三倍屏），宽高使用px做单位就没这个问题。<br /></p>\n<h3 id=\"由于组件间没有像vue那样的样式-scope隔离，所以组件间需要用组件名作为顶级选择器，嵌套使用，且顶级选择器不能重复，防止组件间样式冲突。\"><a href=\"#由于组件间没有像vue那样的样式-scope隔离，所以组件间需要用组件名作为顶级选择器，嵌套使用，且顶级选择器不能重复，防止组件间样式冲突。\" class=\"headerlink\" title=\"由于组件间没有像vue那样的样式 scope隔离，所以组件间需要用组件名作为顶级选择器，嵌套使用，且顶级选择器不能重复，防止组件间样式冲突。\"></a>由于组件间没有像vue那样的样式 scope隔离，所以组件间需要用组件名作为顶级选择器，嵌套使用，且顶级选择器不能重复，防止组件间样式冲突。</h3><p>建议使用scss嵌套书写css，提高开发效率，也不容易遗漏顶级选择器，但是由于acss不支持scss，我们需要用工具来实现。<br />1、首先选择vscode来开发，安装Live Sass Compiler 插件<br />2、配置settings.json</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">&quot;liveSassCompile.settings.formats&quot;</span>: [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"attr\">&quot;format&quot;</span>: <span class=\"string\">&quot;expanded&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">&quot;extensionName&quot;</span>: <span class=\"string\">&quot;.acss&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">&quot;savePath&quot;</span>: <span class=\"literal\">null</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  ],</span><br><span class=\"line\">  <span class=\"attr\">&quot;liveSassCompile.settings.generateMap&quot;</span>: <span class=\"literal\">false</span>  <span class=\"comment\">// 去掉map文件</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>3、点击vscode底部的watch按钮，监听文件变化，自动编译scss文件为acss文件<br /><img src=\"5.png\"><br />4、完整组件至少包含6个文件。.sjs文件作为axml的辅助，详情可查看钉钉小程序开发文档<br /><img src=\"6.png\"></p>\n<h3 id=\"关于组件新增、删除、修改config-json文件的主意事项\"><a href=\"#关于组件新增、删除、修改config-json文件的主意事项\" class=\"headerlink\" title=\"关于组件新增、删除、修改config.json文件的主意事项\"></a>关于组件新增、删除、修改config.json文件的主意事项</h3><p>1：删除配置项：参考钉钉插件开发文档的说法，config文件的配置避免删除配置项，否则有可能引起已经在使用中的客户门户报错<br />2：修改配置项：修改配置项的名称、不改变原来配置类型的情况下增加配置选项（如增加下拉选项），这都没有什么风险；但是最好不要修改配置项的类型，比如原来是下拉框，改成了输入框，有可能引起已经在使用中的客户门户报错<br />3：新增配置项：钉钉会把组件的配置面板的所有参数的值存储到数据库，但是对于新增配置项，不会自动更新新增配置项的默认值，也就是默认值为空。因此要使已经在使用中的客户门户也对新增的默认值生效的话，必须要重新拖入组件，重新发布门户。所以，对于新增配置项，要做好兼容处理。</p>\n","site":{"data":{}},"excerpt":"<h3 id=\"钉钉标准组件的默认规范：\"><a href=\"#钉钉标准组件的默认规范：\" class=\"headerlink\" title=\"钉钉标准组件的默认规范：\"></a>钉钉标准组件的默认规范：</h3><p>满栏/非满栏：padding/margin: 0 32rpx;<br />圆角：12rpx<br />默认高度：100px-375px<br />从目前的众多项目的实践来看，组件的单位能使用rpx单位优先使用rpx单位（字体也可使用rpx）。<br /></p>\n<h3 id=\"自定义组件规范\"><a href=\"#自定义组件规范\" class=\"headerlink\" title=\"自定义组件规范\"></a>自定义组件规范</h3><p>1、目前发现组件间没有类似vue style那样的scope属性进行样式作用域隔离，所以目前最好的方式是通过不一样的类名来区分组件，如要写成.container-wrap-title .box，而不是 .box ，以免污染全局的css。以及进行样式的设计。</p>","more":"<p>如下图：<br /><img src=\"1.png\"><br /><img src=\"2.png\"><br /><br><br />2、不止是样式，js也是一样，比如，最好不要把变量声明在Component外，否则当在门户上使用到两个同样的组件时，变量就会被覆盖，无法保持独立性，所以应该把变量声明在Component内或者挂载在data里，如下图：<br /><img src=\"3.png\"><br />3、之前的组件开发，对于通过配置来更改css中的font-size、各种color 等样式的，直接在axml里的style里写，比如：style=”color:;” 。这样做虽然能达到目的，但是会使得axml变的很难看，维护起来比较棘手；所以现在新开发的组件，涉及到通过配置来更改样式的，优先使用css中的 “var(变量,默认值)”。关于css中的变量的用法：<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/--*\">https://developer.mozilla.org/zh-CN/docs/Web/CSS/–*</a><br />在我们组件开发中的用法大概是这样的</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//js文件</span></span><br><span class=\"line\"><span class=\"comment\">// 组件初始化时，获取config.json的配置，设置cssVariable变量，以便在axml 根元素使用style赋值</span></span><br><span class=\"line\">didMount() &#123;</span><br><span class=\"line\">  getLifecycleSdk().didMount(<span class=\"built_in\">this</span>.props.componentName);</span><br><span class=\"line\">  <span class=\"keyword\">let</span> &#123;</span><br><span class=\"line\">    height,</span><br><span class=\"line\">    titleColor,</span><br><span class=\"line\">  &#125; = <span class=\"built_in\">this</span>.props.componentProps;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> cssStyle = <span class=\"string\">`</span></span><br><span class=\"line\"><span class=\"string\">  --height: <span class=\"subst\">$&#123;height&#125;</span>rpx;   </span></span><br><span class=\"line\"><span class=\"string\">  --title-color: <span class=\"subst\">$&#123;titleColor&#125;</span>;    </span></span><br><span class=\"line\"><span class=\"string\">  `</span></span><br><span class=\"line\">  <span class=\"built_in\">this</span>.setData(&#123;</span><br><span class=\"line\">    cssVariable: cssStyle</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  <span class=\"comment\">// 组件其他业务逻辑</span></span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// axml文件使用</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">view</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;root-wrap&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;&#123;&#123;cssVariable&#125;&#125;&quot;</span>&gt;</span></span><br><span class=\"line\">    // 其他子元素</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">view</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// scss文件中使用</span><br><span class=\"line\"><span class=\"selector-class\">.root-wrap</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"built_in\">var</span>(--height, <span class=\"number\">150</span>rpx);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"注意事项\"><a href=\"#注意事项\" class=\"headerlink\" title=\"注意事项\"></a>注意事项</h3><p>1：组件的名称问题，对于其他外部开发者开发的组件，以组织名称开头，以免与目前主公司的其他组件冲突</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"comment\">// config.json 中的 pluginComponentName 以组织名称开头，以免与目前主公司的其他组件冲突。</span></span><br><span class=\"line\">  <span class=\"comment\">// 比如 叮当 的，可以使用 dingdangComponet 或者 ddangComponet</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;pluginComponentName&quot;</span>: <span class=\"string\">&quot;dingdangBanner&quot;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>2、对于不注册在门户设计器上的组件，即只有acss、axml、js、json四个文件，没有config.json文件；也就是只在其他组件中被引用的，对于这类组件需要特别注意：<br />这里的组件的开发就跟钉钉的小程序开发很像了，axml里读取props里的值不再像插件开发那样写componentProps.xxx，而是直接写xxx，而且在编辑器里props里写默认值是生效的，但是到了门户设计器，到了真实的手机环境的时候，这个默认值就会失效<br /><img src=\"4.png\"><br />3、使用rpx等单位时需注意某些情况下的精度问题；比如画一个正圆时，宽高使用rpx，圆角设置50%；在手机上会出现有些圆不圆的情况，这是由于rpx转成rem，然后再在手机上转成px时会存在精度丢失（手机上有二倍屏，三倍屏），宽高使用px做单位就没这个问题。<br /></p>\n<h3 id=\"由于组件间没有像vue那样的样式-scope隔离，所以组件间需要用组件名作为顶级选择器，嵌套使用，且顶级选择器不能重复，防止组件间样式冲突。\"><a href=\"#由于组件间没有像vue那样的样式-scope隔离，所以组件间需要用组件名作为顶级选择器，嵌套使用，且顶级选择器不能重复，防止组件间样式冲突。\" class=\"headerlink\" title=\"由于组件间没有像vue那样的样式 scope隔离，所以组件间需要用组件名作为顶级选择器，嵌套使用，且顶级选择器不能重复，防止组件间样式冲突。\"></a>由于组件间没有像vue那样的样式 scope隔离，所以组件间需要用组件名作为顶级选择器，嵌套使用，且顶级选择器不能重复，防止组件间样式冲突。</h3><p>建议使用scss嵌套书写css，提高开发效率，也不容易遗漏顶级选择器，但是由于acss不支持scss，我们需要用工具来实现。<br />1、首先选择vscode来开发，安装Live Sass Compiler 插件<br />2、配置settings.json</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">&quot;liveSassCompile.settings.formats&quot;</span>: [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"attr\">&quot;format&quot;</span>: <span class=\"string\">&quot;expanded&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">&quot;extensionName&quot;</span>: <span class=\"string\">&quot;.acss&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">&quot;savePath&quot;</span>: <span class=\"literal\">null</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  ],</span><br><span class=\"line\">  <span class=\"attr\">&quot;liveSassCompile.settings.generateMap&quot;</span>: <span class=\"literal\">false</span>  <span class=\"comment\">// 去掉map文件</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>3、点击vscode底部的watch按钮，监听文件变化，自动编译scss文件为acss文件<br /><img src=\"5.png\"><br />4、完整组件至少包含6个文件。.sjs文件作为axml的辅助，详情可查看钉钉小程序开发文档<br /><img src=\"6.png\"></p>\n<h3 id=\"关于组件新增、删除、修改config-json文件的主意事项\"><a href=\"#关于组件新增、删除、修改config-json文件的主意事项\" class=\"headerlink\" title=\"关于组件新增、删除、修改config.json文件的主意事项\"></a>关于组件新增、删除、修改config.json文件的主意事项</h3><p>1：删除配置项：参考钉钉插件开发文档的说法，config文件的配置避免删除配置项，否则有可能引起已经在使用中的客户门户报错<br />2：修改配置项：修改配置项的名称、不改变原来配置类型的情况下增加配置选项（如增加下拉选项），这都没有什么风险；但是最好不要修改配置项的类型，比如原来是下拉框，改成了输入框，有可能引起已经在使用中的客户门户报错<br />3：新增配置项：钉钉会把组件的配置面板的所有参数的值存储到数据库，但是对于新增配置项，不会自动更新新增配置项的默认值，也就是默认值为空。因此要使已经在使用中的客户门户也对新增的默认值生效的话，必须要重新拖入组件，重新发布门户。所以，对于新增配置项，要做好兼容处理。</p>"},{"title":"vue cli4+lerna发布多组件到npm","abbrlink":"3b9b1ab3","date":"2022-02-15T02:54:41.000Z","_content":"\n# vue cli 工具\n使用vue create 创建一个应用，\n\n# lerna\n1. 全局安装`lerna`，`npm install lerna -g`，\n2. 切换到刚刚创建的项目目录，执行`lerna init`，生成了packages 目录，这就是组件目录了，如图：![](1.png)\n组件的package的文件内容为：![](2.png)\n3. `lerna bootstrap` 执行每个包的依赖的安装\n4. 根目录下的packages 文件：![](3.png)\n5. 根目录下的lerna.json 文件：![](4.png)\n\n# 编译、发布\n执行 `npm run l-build` 编译组件，然后再执行`npm run l-publish`，发布道npm，这里需要注意，发布道npm前需要先提交到Git仓库","source":"_posts/vue-cli4-lerna发布多组件到npm.md","raw":"---\ntitle: vue cli4+lerna发布多组件到npm\nabbrlink: 3b9b1ab3\ndate: 2022-02-15 10:54:41\ntags:\n---\n\n# vue cli 工具\n使用vue create 创建一个应用，\n\n# lerna\n1. 全局安装`lerna`，`npm install lerna -g`，\n2. 切换到刚刚创建的项目目录，执行`lerna init`，生成了packages 目录，这就是组件目录了，如图：![](1.png)\n组件的package的文件内容为：![](2.png)\n3. `lerna bootstrap` 执行每个包的依赖的安装\n4. 根目录下的packages 文件：![](3.png)\n5. 根目录下的lerna.json 文件：![](4.png)\n\n# 编译、发布\n执行 `npm run l-build` 编译组件，然后再执行`npm run l-publish`，发布道npm，这里需要注意，发布道npm前需要先提交到Git仓库","slug":"vue-cli4-lerna发布多组件到npm","published":1,"updated":"2022-02-15T03:25:47.746Z","_id":"ckznj91ne0000ucnk1fn6d72u","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"vue-cli-工具\"><a href=\"#vue-cli-工具\" class=\"headerlink\" title=\"vue cli 工具\"></a>vue cli 工具</h1><p>使用vue create 创建一个应用，</p>\n<h1 id=\"lerna\"><a href=\"#lerna\" class=\"headerlink\" title=\"lerna\"></a>lerna</h1><ol>\n<li>全局安装<code>lerna</code>，<code>npm install lerna -g</code>，</li>\n<li>切换到刚刚创建的项目目录，执行<code>lerna init</code>，生成了packages 目录，这就是组件目录了，如图：<img src=\"1.png\"><br>组件的package的文件内容为：<img src=\"2.png\"></li>\n<li><code>lerna bootstrap</code> 执行每个包的依赖的安装</li>\n<li>根目录下的packages 文件：<img src=\"3.png\"></li>\n<li>根目录下的lerna.json 文件：<img src=\"4.png\"></li>\n</ol>\n<h1 id=\"编译、发布\"><a href=\"#编译、发布\" class=\"headerlink\" title=\"编译、发布\"></a>编译、发布</h1><p>执行 <code>npm run l-build</code> 编译组件，然后再执行<code>npm run l-publish</code>，发布道npm，这里需要注意，发布道npm前需要先提交到Git仓库</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"vue-cli-工具\"><a href=\"#vue-cli-工具\" class=\"headerlink\" title=\"vue cli 工具\"></a>vue cli 工具</h1><p>使用vue create 创建一个应用，</p>\n<h1 id=\"lerna\"><a href=\"#lerna\" class=\"headerlink\" title=\"lerna\"></a>lerna</h1><ol>\n<li>全局安装<code>lerna</code>，<code>npm install lerna -g</code>，</li>\n<li>切换到刚刚创建的项目目录，执行<code>lerna init</code>，生成了packages 目录，这就是组件目录了，如图：<img src=\"1.png\"><br>组件的package的文件内容为：<img src=\"2.png\"></li>\n<li><code>lerna bootstrap</code> 执行每个包的依赖的安装</li>\n<li>根目录下的packages 文件：<img src=\"3.png\"></li>\n<li>根目录下的lerna.json 文件：<img src=\"4.png\"></li>\n</ol>\n<h1 id=\"编译、发布\"><a href=\"#编译、发布\" class=\"headerlink\" title=\"编译、发布\"></a>编译、发布</h1><p>执行 <code>npm run l-build</code> 编译组件，然后再执行<code>npm run l-publish</code>，发布道npm，这里需要注意，发布道npm前需要先提交到Git仓库</p>\n"}],"PostAsset":[{"_id":"source/_posts/css3实现左右滚动跑马灯公告/1.png","slug":"1.png","post":"ckx9sf6050007z8nk4ivy81uc","modified":0,"renderable":0},{"_id":"source/_posts/element-ui-上传组件函数自定义参数传递/1.png","slug":"1.png","post":"ckx9sf6080009z8nk10pnhsyd","modified":0,"renderable":0},{"_id":"source/_posts/element-ui-上传组件函数自定义参数传递/2.png","slug":"2.png","post":"ckx9sf6080009z8nk10pnhsyd","modified":0,"renderable":0},{"_id":"source/_posts/element-ui-上传组件函数自定义参数传递/3.png","slug":"3.png","post":"ckx9sf6080009z8nk10pnhsyd","modified":0,"renderable":0},{"_id":"source/_posts/element-ui-表格中的form的input动态验证规则/1.png","slug":"1.png","post":"ckx9sf60a000bz8nk00k1bc3n","modified":0,"renderable":0},{"_id":"source/_posts/element-ui-表格中的form的input动态验证规则/2.png","slug":"2.png","post":"ckx9sf60a000bz8nk00k1bc3n","modified":0,"renderable":0},{"_id":"source/_posts/element-ui-表格中的form的input动态验证规则/3.png","slug":"3.png","post":"ckx9sf60a000bz8nk00k1bc3n","modified":0,"renderable":0},{"_id":"source/_posts/element-ui-表格中的form的input动态验证规则/4.png","slug":"4.png","post":"ckx9sf60a000bz8nk00k1bc3n","modified":0,"renderable":0},{"_id":"source/_posts/element-ui-表格中的form的input动态验证规则/5.png","slug":"5.png","post":"ckx9sf60a000bz8nk00k1bc3n","modified":0,"renderable":0},{"_id":"source/_posts/js判断一个变量是对象还是数组的实用方法记录/1.jpg","slug":"1.jpg","post":"ckx9sf60d000fz8nka06feskx","modified":0,"renderable":0},{"_id":"source/_posts/js判断一个变量是对象还是数组的实用方法记录/2.jpg","slug":"2.jpg","post":"ckx9sf60d000fz8nka06feskx","modified":0,"renderable":0},{"_id":"source/_posts/webpack4从头构建一个简单的vue2项目/1.png","slug":"1.png","post":"ckx9sf60q000rz8nk8nrtgwwi","modified":0,"renderable":0},{"_id":"source/_posts/webpack4从头构建一个简单的vue2项目/2.png","slug":"2.png","post":"ckx9sf60q000rz8nk8nrtgwwi","modified":0,"renderable":0},{"_id":"source/_posts/windows下使用nexus搭建私有仓库并使用vue-cli-3-搭建组件库/1.png","slug":"1.png","post":"ckx9sf60r000uz8nk9mnkenje","modified":0,"renderable":0},{"_id":"source/_posts/windows下使用nexus搭建私有仓库并使用vue-cli-3-搭建组件库/2.png","slug":"2.png","post":"ckx9sf60r000uz8nk9mnkenje","modified":0,"renderable":0},{"_id":"source/_posts/windows下使用nexus搭建私有仓库并使用vue-cli-3-搭建组件库/3.png","slug":"3.png","post":"ckx9sf60r000uz8nk9mnkenje","modified":0,"renderable":0},{"_id":"source/_posts/windows下使用nexus搭建私有仓库并使用vue-cli-3-搭建组件库/4.png","slug":"4.png","post":"ckx9sf60r000uz8nk9mnkenje","modified":0,"renderable":0},{"_id":"source/_posts/windows下使用nexus搭建私有仓库并使用vue-cli-3-搭建组件库/5.png","slug":"5.png","post":"ckx9sf60r000uz8nk9mnkenje","modified":0,"renderable":0},{"_id":"source/_posts/windows下使用nexus搭建私有仓库并使用vue-cli-3-搭建组件库/6.png","slug":"6.png","post":"ckx9sf60r000uz8nk9mnkenje","modified":0,"renderable":0},{"_id":"source/_posts/windows下使用nexus搭建私有仓库并使用vue-cli-3-搭建组件库/7.png","slug":"7.png","post":"ckx9sf60r000uz8nk9mnkenje","modified":0,"renderable":0},{"_id":"source/_posts/windows下使用nexus搭建私有仓库并使用vue-cli-3-搭建组件库/8.png","slug":"8.png","post":"ckx9sf60r000uz8nk9mnkenje","modified":0,"renderable":0},{"_id":"source/_posts/一个奇葩的表格统计需求/1.jpg","slug":"1.jpg","post":"ckx9sf60t000zz8nk0j3n6zru","modified":0,"renderable":0},{"_id":"source/_posts/一个奇葩的表格统计需求/2.jpg","slug":"2.jpg","post":"ckx9sf60t000zz8nk0j3n6zru","modified":0,"renderable":0},{"_id":"source/_posts/一个奇葩的表格统计需求/3.jpg","slug":"3.jpg","post":"ckx9sf60t000zz8nk0j3n6zru","modified":0,"renderable":0},{"_id":"source/_posts/一个奇葩的表格统计需求/4.jpg","slug":"4.jpg","post":"ckx9sf60t000zz8nk0j3n6zru","modified":0,"renderable":0},{"_id":"source/_posts/一个奇葩的表格统计需求/5.jpg","slug":"5.jpg","post":"ckx9sf60t000zz8nk0j3n6zru","modified":0,"renderable":0},{"_id":"source/_posts/在重启阿里云ubantu后nginx、mysql、pm2等的重启/1.png","slug":"1.png","post":"ckx9sf60w0018z8nkdnhb1cd6","modified":0,"renderable":0},{"_id":"source/_posts/在重启阿里云ubantu后nginx、mysql、pm2等的重启/2.png","slug":"2.png","post":"ckx9sf60w0018z8nkdnhb1cd6","modified":0,"renderable":0},{"_id":"source/_posts/在重启阿里云ubantu后nginx、mysql、pm2等的重启/3.png","slug":"3.png","post":"ckx9sf60w0018z8nkdnhb1cd6","modified":0,"renderable":0},{"_id":"source/_posts/小程序中使用css变量/1.png","slug":"1.png","post":"ckx9sf60z001ez8nk4ls4g99k","modified":0,"renderable":0},{"_id":"source/_posts/用Xshell登录阿里云服务器/1.jpg","slug":"1.jpg","post":"ckx9sf612001mz8nk14ah8j9c","modified":0,"renderable":0},{"_id":"source/_posts/用Xshell登录阿里云服务器/2.jpg","slug":"2.jpg","post":"ckx9sf612001mz8nk14ah8j9c","modified":0,"renderable":0},{"_id":"source/_posts/让支付宝-微信小程序-支持scss/1.png","slug":"1.png","post":"ckx9sf61c001xz8nk5lh70a39","modified":0,"renderable":0},{"_id":"source/_posts/记录element-ui-二次封装table时formatter的使用问题/1.png","slug":"1.png","post":"ckx9sf61d0021z8nk7c845mqu","modified":0,"renderable":0},{"_id":"source/_posts/记录element-ui-二次封装table时formatter的使用问题/2.png","slug":"2.png","post":"ckx9sf61d0021z8nk7c845mqu","modified":0,"renderable":0},{"_id":"source/_posts/记录element-ui-二次封装table时formatter的使用问题/3.png","slug":"3.png","post":"ckx9sf61d0021z8nk7c845mqu","modified":0,"renderable":0},{"_id":"source/_posts/钉钉工作台自定义组件设计规范及注意事项/1.png","slug":"1.png","post":"ckx9sf67s003jz8nk2jy35rt2","modified":0,"renderable":0},{"_id":"source/_posts/钉钉工作台自定义组件设计规范及注意事项/2.png","slug":"2.png","post":"ckx9sf67s003jz8nk2jy35rt2","modified":0,"renderable":0},{"_id":"source/_posts/钉钉工作台自定义组件设计规范及注意事项/3.png","slug":"3.png","post":"ckx9sf67s003jz8nk2jy35rt2","modified":0,"renderable":0},{"_id":"source/_posts/钉钉工作台自定义组件设计规范及注意事项/4.png","slug":"4.png","post":"ckx9sf67s003jz8nk2jy35rt2","modified":0,"renderable":0},{"_id":"source/_posts/钉钉工作台自定义组件设计规范及注意事项/5.png","slug":"5.png","post":"ckx9sf67s003jz8nk2jy35rt2","modified":0,"renderable":0},{"_id":"source/_posts/钉钉工作台自定义组件设计规范及注意事项/6.png","slug":"6.png","post":"ckx9sf67s003jz8nk2jy35rt2","modified":0,"renderable":0},{"_id":"source/_posts/vue-cli4-lerna发布多组件到npm/1.png","slug":"1.png","post":"ckznj91ne0000ucnk1fn6d72u","modified":1,"renderable":0},{"_id":"source/_posts/vue-cli4-lerna发布多组件到npm/2.png","slug":"2.png","post":"ckznj91ne0000ucnk1fn6d72u","modified":1,"renderable":0},{"_id":"source/_posts/vue-cli4-lerna发布多组件到npm/3.png","slug":"3.png","post":"ckznj91ne0000ucnk1fn6d72u","modified":1,"renderable":0},{"_id":"source/_posts/vue-cli4-lerna发布多组件到npm/4.png","slug":"4.png","post":"ckznj91ne0000ucnk1fn6d72u","modified":1,"renderable":0}],"PostCategory":[{"post_id":"ckx9sf6080009z8nk10pnhsyd","category_id":"ckx9sf6030004z8nkephr6834","_id":"ckx9sf60g000hz8nk3laseb5r"},{"post_id":"ckx9sf5zx0001z8nkg83nf6tm","category_id":"ckx9sf6030004z8nkephr6834","_id":"ckx9sf60o000mz8nkdkip5xj4"},{"post_id":"ckx9sf60a000bz8nk00k1bc3n","category_id":"ckx9sf6030004z8nkephr6834","_id":"ckx9sf60p000oz8nkcy8j21k7"},{"post_id":"ckx9sf60d000fz8nka06feskx","category_id":"ckx9sf6030004z8nkephr6834","_id":"ckx9sf60r000sz8nkcoa174ec"},{"post_id":"ckx9sf6010003z8nkh9apa8hl","category_id":"ckx9sf6030004z8nkephr6834","_id":"ckx9sf60s000vz8nkep7u6y9e"},{"post_id":"ckx9sf6050007z8nk4ivy81uc","category_id":"ckx9sf6030004z8nkephr6834","_id":"ckx9sf60u0010z8nkccu4csp8"},{"post_id":"ckx9sf60q000rz8nk8nrtgwwi","category_id":"ckx9sf6030004z8nkephr6834","_id":"ckx9sf60v0012z8nk0ubf7awb"},{"post_id":"ckx9sf60e000gz8nk98ncclcm","category_id":"ckx9sf60p000pz8nk0saocozy","_id":"ckx9sf60w0015z8nke1lac4uv"},{"post_id":"ckx9sf60r000uz8nk9mnkenje","category_id":"ckx9sf6030004z8nkephr6834","_id":"ckx9sf60x0019z8nka4cb4gue"},{"post_id":"ckx9sf60o000nz8nk4aoae1tt","category_id":"ckx9sf60s000wz8nk4zci0rns","_id":"ckx9sf60y001cz8nk98q027md"},{"post_id":"ckx9sf60u0011z8nk9yr4160h","category_id":"ckx9sf6030004z8nkephr6834","_id":"ckx9sf610001gz8nkez4v3o9o"},{"post_id":"ckx9sf60v0014z8nkhia4dvov","category_id":"ckx9sf6030004z8nkephr6834","_id":"ckx9sf611001jz8nkcb5t0amn"},{"post_id":"ckx9sf60w0018z8nkdnhb1cd6","category_id":"ckx9sf60s000wz8nk4zci0rns","_id":"ckx9sf615001nz8nkhmjs5gw6"},{"post_id":"ckx9sf60y001bz8nkdwhmho69","category_id":"ckx9sf6030004z8nkephr6834","_id":"ckx9sf619001rz8nk9b23dobf"},{"post_id":"ckx9sf60z001ez8nk4ls4g99k","category_id":"ckx9sf6030004z8nkephr6834","_id":"ckx9sf61b001vz8nkaw8g66kc"},{"post_id":"ckx9sf60t000zz8nk0j3n6zru","category_id":"ckx9sf60v0013z8nk4mph26td","_id":"ckx9sf61d001zz8nkbetx52ei"},{"post_id":"ckx9sf60t000zz8nk0j3n6zru","category_id":"ckx9sf60z001fz8nkbmh3cdi4","_id":"ckx9sf61e0022z8nkhe7k1999"},{"post_id":"ckx9sf612001mz8nk14ah8j9c","category_id":"ckx9sf60s000wz8nk4zci0rns","_id":"ckx9sf61f0025z8nk71lkfru4"},{"post_id":"ckx9sf61a001uz8nk0kibbpd8","category_id":"ckx9sf6030004z8nkephr6834","_id":"ckx9sf61h0029z8nk8hqtegc9"},{"post_id":"ckx9sf610001iz8nk98f808cs","category_id":"ckx9sf615001oz8nk97v5577b","_id":"ckx9sf61i002cz8nk0x26dhyk"},{"post_id":"ckx9sf61c001xz8nk5lh70a39","category_id":"ckx9sf6030004z8nkephr6834","_id":"ckx9sf61j002ez8nk2lcvd9ek"},{"post_id":"ckx9sf61d0021z8nk7c845mqu","category_id":"ckx9sf6030004z8nkephr6834","_id":"ckx9sf61k002hz8nk6n1yejbn"},{"post_id":"ckx9sf618001qz8nk8ey76nqf","category_id":"ckx9sf615001oz8nk97v5577b","_id":"ckx9sf61k002jz8nkekgsemef"},{"post_id":"ckx9sf61f0024z8nk4aye9rjn","category_id":"ckx9sf6030004z8nkephr6834","_id":"ckx9sf61l002mz8nkevai0ibz"},{"post_id":"ckx9sf61g0028z8nk12o48mqv","category_id":"ckx9sf615001oz8nk97v5577b","_id":"ckx9sf61l002oz8nk3z0dgy0q"},{"post_id":"ckx9sf67s003jz8nk2jy35rt2","category_id":"ckx9sf6030004z8nkephr6834","_id":"ckx9sf67t003mz8nk01efft1d"}],"PostTag":[{"post_id":"ckx9sf5zx0001z8nkg83nf6tm","tag_id":"ckx9sf6040005z8nkh48lglu6","_id":"ckx9sf60d000ez8nk37xvceba"},{"post_id":"ckx9sf60d000fz8nka06feskx","tag_id":"ckx9sf6040005z8nkh48lglu6","_id":"ckx9sf60i000kz8nk2qnx2ykk"},{"post_id":"ckx9sf6010003z8nkh9apa8hl","tag_id":"ckx9sf60b000dz8nk38t14mz9","_id":"ckx9sf60r000tz8nkhf1z4dd8"},{"post_id":"ckx9sf6010003z8nkh9apa8hl","tag_id":"ckx9sf60h000jz8nk2e714ak7","_id":"ckx9sf60s000xz8nk2ofk6s81"},{"post_id":"ckx9sf6050007z8nk4ivy81uc","tag_id":"ckx9sf60q000qz8nkbg4b6akb","_id":"ckx9sf60w0017z8nkhpybdlsl"},{"post_id":"ckx9sf6050007z8nk4ivy81uc","tag_id":"ckx9sf60t000yz8nkh40e23dw","_id":"ckx9sf60x001az8nk910p03vc"},{"post_id":"ckx9sf60y001bz8nkdwhmho69","tag_id":"ckx9sf6040005z8nkh48lglu6","_id":"ckx9sf610001hz8nk258pdy4f"},{"post_id":"ckx9sf60z001ez8nk4ls4g99k","tag_id":"ckx9sf60t000yz8nkh40e23dw","_id":"ckx9sf611001lz8nk1rph0kuk"},{"post_id":"ckx9sf60z001ez8nk4ls4g99k","tag_id":"ckx9sf60q000qz8nkbg4b6akb","_id":"ckx9sf616001pz8nkhuva7d8t"},{"post_id":"ckx9sf6080009z8nk10pnhsyd","tag_id":"ckx9sf60w0016z8nkhlv453kv","_id":"ckx9sf61a001tz8nkevtg69nw"},{"post_id":"ckx9sf6080009z8nk10pnhsyd","tag_id":"ckx9sf60y001dz8nk43cb76dg","_id":"ckx9sf61c001wz8nk18ek6uij"},{"post_id":"ckx9sf60a000bz8nk00k1bc3n","tag_id":"ckx9sf60w0016z8nkhlv453kv","_id":"ckx9sf61e0023z8nkd13ohusa"},{"post_id":"ckx9sf60a000bz8nk00k1bc3n","tag_id":"ckx9sf60y001dz8nk43cb76dg","_id":"ckx9sf61g0026z8nk1qygfvs8"},{"post_id":"ckx9sf61c001xz8nk5lh70a39","tag_id":"ckx9sf60q000qz8nkbg4b6akb","_id":"ckx9sf61h002az8nk17ib8as0"},{"post_id":"ckx9sf61d0021z8nk7c845mqu","tag_id":"ckx9sf60w0016z8nkhlv453kv","_id":"ckx9sf61j002dz8nk2jmw3z0p"},{"post_id":"ckx9sf61d0021z8nk7c845mqu","tag_id":"ckx9sf60y001dz8nk43cb76dg","_id":"ckx9sf61k002gz8nk72wc7l08"},{"post_id":"ckx9sf60e000gz8nk98ncclcm","tag_id":"ckx9sf61d0020z8nkfq750621","_id":"ckx9sf61k002iz8nk1dfh89ua"},{"post_id":"ckx9sf60e000gz8nk98ncclcm","tag_id":"ckx9sf61g0027z8nkcm5130fq","_id":"ckx9sf61k002lz8nkf8o81e1i"},{"post_id":"ckx9sf60o000nz8nk4aoae1tt","tag_id":"ckx9sf61j002fz8nkdwv09kd0","_id":"ckx9sf61l002nz8nk68v66t7y"},{"post_id":"ckx9sf60q000rz8nk8nrtgwwi","tag_id":"ckx9sf61d0020z8nkfq750621","_id":"ckx9sf61n002sz8nk40p15xz7"},{"post_id":"ckx9sf60q000rz8nk8nrtgwwi","tag_id":"ckx9sf61l002pz8nkhm2canjk","_id":"ckx9sf61n002tz8nk8gk33ymb"},{"post_id":"ckx9sf60q000rz8nk8nrtgwwi","tag_id":"ckx9sf60y001dz8nk43cb76dg","_id":"ckx9sf61o002vz8nk5d511yu9"},{"post_id":"ckx9sf60r000uz8nk9mnkenje","tag_id":"ckx9sf61m002rz8nkb0l84uw2","_id":"ckx9sf61o002xz8nkf8ht68qv"},{"post_id":"ckx9sf60r000uz8nk9mnkenje","tag_id":"ckx9sf60y001dz8nk43cb76dg","_id":"ckx9sf61o002yz8nkhyy25dse"},{"post_id":"ckx9sf60t000zz8nk0j3n6zru","tag_id":"ckx9sf60y001dz8nk43cb76dg","_id":"ckx9sf61p0030z8nkaz4h3csg"},{"post_id":"ckx9sf60t000zz8nk0j3n6zru","tag_id":"ckx9sf6040005z8nkh48lglu6","_id":"ckx9sf61p0031z8nk5hza9ih6"},{"post_id":"ckx9sf60u0011z8nk9yr4160h","tag_id":"ckx9sf61d0020z8nkfq750621","_id":"ckx9sf61p0033z8nkdicbgqg9"},{"post_id":"ckx9sf60v0014z8nkhia4dvov","tag_id":"ckx9sf61p0032z8nk2qz98knc","_id":"ckx9sf61q0035z8nk7w80gzef"},{"post_id":"ckx9sf60w0018z8nkdnhb1cd6","tag_id":"ckx9sf61j002fz8nkdwv09kd0","_id":"ckx9sf61q0037z8nkbthtfusb"},{"post_id":"ckx9sf610001iz8nk98f808cs","tag_id":"ckx9sf61q0036z8nkemd1dnj9","_id":"ckx9sf61q0039z8nk7mnk5j1t"},{"post_id":"ckx9sf612001mz8nk14ah8j9c","tag_id":"ckx9sf61j002fz8nkdwv09kd0","_id":"ckx9sf61r003bz8nk3zhhgssd"},{"post_id":"ckx9sf618001qz8nk8ey76nqf","tag_id":"ckx9sf61q0036z8nkemd1dnj9","_id":"ckx9sf61r003dz8nk6eqo98ec"},{"post_id":"ckx9sf61a001uz8nk0kibbpd8","tag_id":"ckx9sf61d0020z8nkfq750621","_id":"ckx9sf61s003fz8nkgmqobd6n"},{"post_id":"ckx9sf61f0024z8nk4aye9rjn","tag_id":"ckx9sf61p0032z8nk2qz98knc","_id":"ckx9sf61t003hz8nk78t38x6a"},{"post_id":"ckx9sf61g0028z8nk12o48mqv","tag_id":"ckx9sf61q0036z8nkemd1dnj9","_id":"ckx9sf61t003iz8nk8tand7dq"},{"post_id":"ckx9sf67s003jz8nk2jy35rt2","tag_id":"ckx9sf60t000yz8nkh40e23dw","_id":"ckx9sf67t003kz8nk32dxbrq1"},{"post_id":"ckx9sf67s003jz8nk2jy35rt2","tag_id":"ckx9sf60q000qz8nkbg4b6akb","_id":"ckx9sf67t003lz8nk0ywb6qst"}],"Tag":[{"name":"js","_id":"ckx9sf6040005z8nkh48lglu6"},{"name":"私有npm仓库","_id":"ckx9sf60b000dz8nk38t14mz9"},{"name":"Verdaccio","_id":"ckx9sf60h000jz8nk2e714ak7"},{"name":"小程序","_id":"ckx9sf60q000qz8nkbg4b6akb"},{"name":"钉钉小程序","_id":"ckx9sf60t000yz8nkh40e23dw"},{"name":"element-ui","_id":"ckx9sf60w0016z8nkhlv453kv"},{"name":"vue","_id":"ckx9sf60y001dz8nk43cb76dg"},{"name":"nodejs","_id":"ckx9sf61d0020z8nkfq750621"},{"name":"koa2","_id":"ckx9sf61g0027z8nkcm5130fq"},{"name":"linux","_id":"ckx9sf61j002fz8nkdwv09kd0"},{"name":"webpack","_id":"ckx9sf61l002pz8nkhm2canjk"},{"name":"nexus","_id":"ckx9sf61m002rz8nkb0l84uw2"},{"name":"react,","_id":"ckx9sf61p0032z8nk2qz98knc"},{"name":"技术","_id":"ckx9sf61q0036z8nkemd1dnj9"}]}}