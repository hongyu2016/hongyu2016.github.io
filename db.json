{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":1,"renderable":0},{"_id":"source/README.md","path":"README.md","modified":1,"renderable":0},{"_id":"source/robots.txt","path":"robots.txt","modified":1,"renderable":0},{"_id":"source/images/2019-2-26.png","path":"images/2019-2-26.png","modified":1,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/bitbug_favicon -16x16.ico","path":"images/bitbug_favicon -16x16.ico","modified":1,"renderable":1},{"_id":"themes/next/source/images/bitbug_favicon-3x32.ico","path":"images/bitbug_favicon-3x32.ico","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"themes/next/source/uploads/avatar.png","path":"uploads/avatar.png","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/schemes/muse.js","path":"js/src/schemes/muse.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1}],"Cache":[{"_id":"source/404.html","hash":"9c88462b7440108005aff6844aea70518c00231b","modified":1557909179782},{"_id":"source/CNAME","hash":"109833a1caf13cc5305f1c288b98e4f77c19df4a","modified":1557546644927},{"_id":"source/README.md","hash":"4ff258e53cdb3d0765f6a93250e4c7cfb2814154","modified":1557546644930},{"_id":"source/robots.txt","hash":"038d29f3d9796d903ded6a515b236ad287d27248","modified":1557546645026},{"_id":"themes/next/.all-contributorsrc","hash":"0ca0200bb5cba4cd157f2cb74703c4cb4c29cda5","modified":1557546645297},{"_id":"themes/next/.bowerrc","hash":"334da94ca6f024d60d012cc26ea655681e724ad8","modified":1557546645300},{"_id":"themes/next/.eslintrc.json","hash":"d3c11de434171d55d70daadd3914bc33544b74b8","modified":1557546645305},{"_id":"themes/next/.editorconfig","hash":"211d2c92bfdddb3e81ea946f4ca7a539f150f4da","modified":1557546645303},{"_id":"themes/next/.gitattributes","hash":"8454b9313cb1a97b63fb87e2d29daee497ce6249","modified":1557546645307},{"_id":"themes/next/.gitignore","hash":"0378adb9c2dc4855b3198184df4863cb30e4059c","modified":1557546645310},{"_id":"themes/next/.stylintrc","hash":"3b7f9785e9ad0dab764e1c535b40df02f4ff5fd6","modified":1557546645315},{"_id":"themes/next/.travis.yml","hash":"fb9ac54e875f6ea16d5c83db497f6bd70ae83198","modified":1557546645319},{"_id":"themes/next/README.md","hash":"943f9fd6ed1781350cdd05a26a1cfad24d035c8b","modified":1557546645321},{"_id":"themes/next/_config.yml","hash":"30ea6f033c73939a74ea0108d6af7e1343396a7d","modified":1557546645325},{"_id":"themes/next/crowdin.yml","hash":"4a53f5985e545c635cb56b2a57ed290cb8cf8942","modified":1557546645332},{"_id":"themes/next/bower.json","hash":"fd8b18788ca1bdabad013110562e7c4af0c96ff3","modified":1557546645328},{"_id":"themes/next/gulpfile.coffee","hash":"67eaf2515100971f6195b60eeebbfe5e8de895ab","modified":1557546645417},{"_id":"themes/next/package.json","hash":"311d3d04301b1930058f631624d2a0976408c46a","modified":1557546645786},{"_id":"source/_posts/1-2-3-map-parseInt-报错问解决办法.md","hash":"e989bcf919fe7207dc00c4c0e7d35c9cde39ec78","modified":1557546644934},{"_id":"source/_posts/element-ui-上传组件函数自定义参数传递.md","hash":"5602ee323cd0bc2486e100fbcd2186701a2dd9d1","modified":1557546644937},{"_id":"source/_posts/element-ui-表格中的form的input动态验证规则.md","hash":"42cc6e0d00dcf02c99ac0b0502f92503d5122a4f","modified":1557557262445},{"_id":"source/_posts/js判断一个变量是对象还是数组的实用方法记录.md","hash":"e111490905080041e2bba40a39d910d90a5513b0","modified":1557546644966},{"_id":"source/_posts/ubantu-apt-get-install方式安装mysql.md","hash":"26ddf05bf3d10ddea57eabd757553c14451f3a4d","modified":1557905581903},{"_id":"source/_posts/webpack4从头构建一个简单的vue2项目.md","hash":"6f53f556bf9a3e81df7050f46c8744dd51f1211d","modified":1557546644976},{"_id":"source/_posts/怎么样在别的电脑同步更新发表hexo博客？.md","hash":"945388ab37e54eadcf493bddbf2cc9079abb68e8","modified":1557546644988},{"_id":"source/_posts/实现一个简单的深拷贝.md","hash":"aa7a6f75d0feca1f0485e61ba510c873929d5f58","modified":1557546644986},{"_id":"source/_posts/用hexo-github搭建个人博客.md","hash":"1af7bde53ec36dc45d2f2c0c337b5e521b3656af","modified":1557546644991},{"_id":"source/_posts/解决npm-install安装任何包都报错的问题.md","hash":"f1064d5aa06c49d802d8f5b98971ce74f5cf4759","modified":1557905581903},{"_id":"source/_posts/记录element-ui-二次封装table时formatter的使用问题.md","hash":"2edc25c9b9492e285cedb1fa07b8bced1fd33d00","modified":1557546644993},{"_id":"source/_posts/部署在github-page的hexo博客绑定二级域名.md","hash":"d26c44a652ef3dc1d0a716cedad4c15754ec21f4","modified":1557546645005},{"_id":"source/archives/index.md","hash":"254fe39be7af27ea1cdb0663e40f58345a14a3e6","modified":1557546645012},{"_id":"source/about/index.md","hash":"c5dc91887953db379443ff0887dfcf55185a6be7","modified":1557546645009},{"_id":"source/images/2019-2-26.png","hash":"8f24528dfcc0382abcd8fe829c34ad7501827c46","modified":1557546645021},{"_id":"source/categories/index.md","hash":"4a8208a95b911cfe57f5a3b09989b424b54bc78d","modified":1557546645016},{"_id":"source/tags/index.md","hash":"99a9fdf7f3a9a269187f2dd5024309058e8b95b9","modified":1557546645030},{"_id":"themes/next/docs/ALGOLIA-SEARCH.md","hash":"1dada3c3404445a00367882b8f97cdf092b7943d","modified":1557546645341},{"_id":"themes/next/docs/AGPL3.md","hash":"f463f95b169d64983f59fa6f3e4b6760290a0e6b","modified":1557546645338},{"_id":"themes/next/docs/AUTHORS.md","hash":"51a0a13da55ff3d596970b2f9ab4531c6b2211f2","modified":1557546645344},{"_id":"themes/next/docs/DATA-FILES.md","hash":"9a1895c0a0db705c4c48f512e86917f9af1ec3fb","modified":1557546645348},{"_id":"themes/next/docs/INSTALLATION.md","hash":"b74ef6fedf76cdb156e2265759ee0a789ddd49cc","modified":1557546645351},{"_id":"themes/next/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"721a1aa9feed1b580ab99af8e69ed22699121e88","modified":1557546645354},{"_id":"themes/next/docs/LICENSE.txt","hash":"ae5ad07e4f4106bad55535dba042221539e6c7f9","modified":1557546645357},{"_id":"themes/next/docs/MATH.md","hash":"0540cd9c961b07931af9f38a83bc9a0f90cd5291","modified":1557546645361},{"_id":"themes/next/docs/UPDATE-FROM-5.1.X.md","hash":"c9f2ed8e15c137b1885d9ca8b7197d9f457971e9","modified":1557546645365},{"_id":"themes/next/languages/de.yml","hash":"641e49587d41bb87e4d5932dc3d975754ded7953","modified":1557546645421},{"_id":"themes/next/languages/default.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1557546645425},{"_id":"themes/next/languages/en.yml","hash":"d66b8b48840443a4f9c72c7696a21e292f685a47","modified":1557546645428},{"_id":"themes/next/languages/fr.yml","hash":"ebcd1f188af8c3f5ef1f0923e794c839fbfae2d4","modified":1557546645430},{"_id":"themes/next/languages/id.yml","hash":"9709a4dbacc56a1571a96b139b872128d6959e90","modified":1557546645433},{"_id":"themes/next/languages/it.yml","hash":"4e3adeb10c0fa627935d69ae1783ce0894f5dee5","modified":1557546645436},{"_id":"themes/next/languages/ja.yml","hash":"82afb0a5637ad67065fa5b2624fa56c7c240c3c6","modified":1557546645439},{"_id":"themes/next/languages/ko.yml","hash":"33e065ceb21590b8eb32430a69e76c2f057eb758","modified":1557546645442},{"_id":"themes/next/languages/nl.yml","hash":"060efc260c1c529469d739d97dcee79683e8f411","modified":1557546645444},{"_id":"themes/next/languages/pt-BR.yml","hash":"dc09e290e908744ca28e093dbdd859ca2a20290e","modified":1557546645448},{"_id":"themes/next/languages/ru.yml","hash":"720b92a9ec075b68737d296b1f29ad8e01151c85","modified":1557546645456},{"_id":"themes/next/languages/pt.yml","hash":"53e2a52b9d5dc20c04080acd4f5b954e8699780f","modified":1557546645452},{"_id":"themes/next/languages/tr.yml","hash":"6d2f53d3687a7a46c67c78ab47908accd8812add","modified":1557546645459},{"_id":"themes/next/languages/uk.yml","hash":"6320439c6e9ff81e5b8f8129ca16e9a744b37032","modified":1557546645462},{"_id":"themes/next/languages/vi.yml","hash":"e2b3b18359ab41d58c64b2002acfedd60a7505a4","modified":1557546645465},{"_id":"themes/next/languages/zh-HK.yml","hash":"c22113c4a6c748c18093dae56da5a9e8c5b963cd","modified":1557546645468},{"_id":"themes/next/languages/zh-Hans.yml","hash":"069f15da910d6f9756be448167c07ea5aa5dc346","modified":1557546645470},{"_id":"themes/next/languages/zh-TW.yml","hash":"dbf4dd87716babb2db4f5332fae9ec190a6f636a","modified":1557546645473},{"_id":"themes/next/layout/_layout.swig","hash":"711df7ec91ff3515955603cf240586656673ceed","modified":1557546645491},{"_id":"themes/next/layout/archive.swig","hash":"4b53070008775ecfd03953bd1b4adfcb0fabcaac","modified":1557546645766},{"_id":"themes/next/layout/category.swig","hash":"f0e3338bfa5efb205d2c28e635e9611f1fff3b55","modified":1557546645769},{"_id":"themes/next/layout/index.swig","hash":"bdcc9f57adef49706b16b107791cacecbc23c1dc","modified":1557546645772},{"_id":"themes/next/layout/page.swig","hash":"1d28997ec69d3c236c0dac86cc7a8fbcfdbbb03f","modified":1557546645775},{"_id":"themes/next/layout/post.swig","hash":"af74e97d57cf00cde6f8dbd4364f27910915454e","modified":1557546645777},{"_id":"themes/next/layout/schedule.swig","hash":"e79f43df0e9a6cf48bbf00882de48c5a58080247","modified":1557546645780},{"_id":"themes/next/layout/tag.swig","hash":"7cda2822e50b9fee9848a6b81e6c2d1aca830aeb","modified":1557546645784},{"_id":"themes/next/scripts/merge-configs.js","hash":"5f96f63e86825fd7028c2522e4111103e261a758","modified":1557546645807},{"_id":"themes/next/scripts/merge.js","hash":"39b84b937b2a9608b94e5872349a47200e1800ff","modified":1557546645811},{"_id":"themes/next/test/.jshintrc","hash":"c9fca43ae0d99718e45a6f5ce736a18ba5fc8fb6","modified":1557546646452},{"_id":"themes/next/test/helpers.js","hash":"f25e7f3265eb5a6e1ccbb5e5012fa9bebf134105","modified":1557546646456},{"_id":"themes/next/test/intern.js","hash":"db90b1063356727d72be0d77054fdc32fa882a66","modified":1557546646458},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1557546646241},{"_id":"source/_posts/element-ui-上传组件函数自定义参数传递/1.png","hash":"ead49f0f3a675a1a0df47a2d8bf6ffaa2ad41550","modified":1557546644941},{"_id":"source/_posts/element-ui-上传组件函数自定义参数传递/2.png","hash":"e796281bac9aadf1cf2d35abed8bb11b194883fe","modified":1557546644944},{"_id":"source/_posts/element-ui-上传组件函数自定义参数传递/3.png","hash":"b75fe1970b5278c5f1d4f5001bb55e9c053fff52","modified":1557546644946},{"_id":"source/_posts/element-ui-表格中的form的input动态验证规则/1.png","hash":"10264588102714359a980206c040c9ddb7cea605","modified":1557546644953},{"_id":"source/_posts/element-ui-表格中的form的input动态验证规则/2.png","hash":"191416348a4434089560929f5e2b547f2af24ac6","modified":1557546644956},{"_id":"source/_posts/element-ui-表格中的form的input动态验证规则/3.png","hash":"86ec7353f6c193a4ac6eb7d770656cf24dbb8524","modified":1557546644959},{"_id":"source/_posts/element-ui-表格中的form的input动态验证规则/4.png","hash":"94d20fcae17886203ecc58e493d72f22dd181656","modified":1557546644961},{"_id":"source/_posts/element-ui-表格中的form的input动态验证规则/5.png","hash":"6408623a332923fdd073c3a3d01d4b51801a5f28","modified":1557546644964},{"_id":"source/_posts/js判断一个变量是对象还是数组的实用方法记录/1.jpg","hash":"fbee0ee26b8db424d8925521f8b055ddef18d6fd","modified":1557546644970},{"_id":"source/_posts/js判断一个变量是对象还是数组的实用方法记录/2.jpg","hash":"6398dc248ae2a9353582e519c092755498c00e06","modified":1557546644973},{"_id":"source/_posts/webpack4从头构建一个简单的vue2项目/1.png","hash":"28803ad48576d6031fc620df00df92edd8a5c734","modified":1557546644979},{"_id":"source/_posts/webpack4从头构建一个简单的vue2项目/2.png","hash":"de756293494f1fa6b4ae40745a94b8ad6283626c","modified":1557546644983},{"_id":"source/_posts/记录element-ui-二次封装table时formatter的使用问题/1.png","hash":"ea2de96dfa875f22ae64a5aed7c64d02eed58889","modified":1557546644997},{"_id":"source/_posts/记录element-ui-二次封装table时formatter的使用问题/2.png","hash":"dcac407692b787cbf57033c800fbea954e716ea0","modified":1557546645000},{"_id":"source/_posts/记录element-ui-二次封装table时formatter的使用问题/3.png","hash":"e3cda13ef4ae41ef6d02c790714f190f7f53eeb4","modified":1557546645003},{"_id":"themes/next/docs/ru/DATA-FILES.md","hash":"a51de08657f5946f4028b11373280ddc04639525","modified":1557546645370},{"_id":"themes/next/docs/ru/INSTALLATION.md","hash":"7b2963daac19b0c14f98ebef375d5fbce8fc3f44","modified":1557546645373},{"_id":"themes/next/docs/ru/README.md","hash":"0b69e831b4617f801d9b49e8ce810daacbbee6c1","modified":1557546645376},{"_id":"themes/next/docs/ru/UPDATE-FROM-5.1.X.md","hash":"1a4e41adcf5831057f3f7b3025ed4a5ef7c442b4","modified":1557546645382},{"_id":"themes/next/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"e771c5b745608c6fb5ae2fa1c06c61b3699627ec","modified":1557546645386},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"9b512cb820627fcc45c9f77c7a122aa99e021bd5","modified":1557546645390},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"6ea741f380dc3e90661d12db7e115a94b77643a4","modified":1557546645394},{"_id":"themes/next/docs/zh-CN/DATA-FILES.md","hash":"67f4a987e7db0ab1ce1ea4c311f2961df07b6681","modified":1557546645398},{"_id":"themes/next/docs/zh-CN/INSTALLATION.md","hash":"baca12cc24be082f1db28c7f283493569666321c","modified":1557546645401},{"_id":"themes/next/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"b17fc344ff61603f83387c0f9b2b2189aae81d50","modified":1557546645404},{"_id":"themes/next/docs/zh-CN/MATH.md","hash":"734b371a0dd910eb9fe087f50c95ce35340bb832","modified":1557546645407},{"_id":"themes/next/docs/zh-CN/README.md","hash":"7fb215a0a633384948ac9228ac14617b4a974dbd","modified":1557546645410},{"_id":"themes/next/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"2095d1214a4e519a1d31b67b41c89080fa3285d3","modified":1557546645413},{"_id":"themes/next/layout/_custom/head.swig","hash":"a223919d2e1bf17ca4d6abb2c86f2efca9883dc1","modified":1557546645479},{"_id":"themes/next/layout/_custom/header.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1557546645483},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1557546645488},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"891ab67815969dd8736cb22fbbb3f791b8fff4e4","modified":1557546645506},{"_id":"themes/next/layout/_macro/post.swig","hash":"b556f35aa61650bcedd5e69517c0cff1a0ad6856","modified":1557546645509},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"838686a5d2c3ae5c03b69842e931d9efe276e55a","modified":1557546645512},{"_id":"themes/next/layout/_partials/comments.swig","hash":"54afb7b78509ed8fac5d23daecc147b0fe615d1d","modified":1557546645518},{"_id":"themes/next/layout/_partials/footer.swig","hash":"6d56acdcdc12ebca9c1d90f8a2b52ad17aafca6e","modified":1557546645522},{"_id":"themes/next/layout/_partials/github-banner.swig","hash":"710ae10cb6cafc21e40c57dd9b31f0980b030f4b","modified":1557546645525},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"914155d5d758306cff405beefd4a07973fd8fc77","modified":1557546645566},{"_id":"themes/next/layout/_partials/post-edit.swig","hash":"dee345054d564dd56f74bb143942d3edd1cb8150","modified":1557546645570},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"6337747816219616916e73bdfd6961a164f872cf","modified":1557546645610},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"c31d54154eed347f603009d2d65f7bf8d9a6885a","modified":1557546645613},{"_id":"themes/next/layout/_scripts/noscript.swig","hash":"efb3404a3303622f3be60944d9d1926972c5c248","modified":1557546645615},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"68ad21aef6481d014e7ec0b674e469f2f82ea231","modified":1557546645639},{"_id":"themes/next/layout/_third-party/baidu-push.swig","hash":"b315b5885abcbed75debc8049e9fc943d9fafb5c","modified":1557546645690},{"_id":"themes/next/layout/_third-party/bookmark.swig","hash":"4b93dc7ac0573c402aabcb5c933bbcb893b07c51","modified":1557546645694},{"_id":"themes/next/layout/_third-party/copy-code.swig","hash":"c80b04aabdeef0e03a08284c82324089710abd45","modified":1557546645721},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"9e00cb9b3fdfe2e2c4877a874d0d3ecb7fd0f3ee","modified":1557546645723},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"7db4ad4a8dd5420dad2f6890f5299945df0af970","modified":1557546645737},{"_id":"themes/next/layout/_third-party/pangu.swig","hash":"76f5933925670044ec65b454295ba7e0a8439986","modified":1557546645739},{"_id":"themes/next/layout/_third-party/pdf.swig","hash":"d66dec72ea7ad5026260914e3545551645e0ab37","modified":1557546645742},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"c476dc3693a9dd0be2d136a45b0d7fdef55d4d92","modified":1557546645745},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"85ca359866325ce82f5f0f88576fae13a763b5eb","modified":1557546645747},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"f58463133bf8cfef5ff07f686b834ff8cbbe492f","modified":1557546645750},{"_id":"themes/next/scripts/helpers/engine.js","hash":"cdb6152582313268d970ffeef99b4a8a7850f034","modified":1557546645801},{"_id":"themes/next/scripts/helpers/next-url.js","hash":"3db90c52bc8af57c6fa4a9dbdc524e1ecdc8b7b1","modified":1557546645805},{"_id":"themes/next/scripts/tags/button.js","hash":"dba55534ef4a11fb6723ec73e3ef4dcf7589ed9f","modified":1557546645815},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"4519ab8e6898f2ee90d05cde060375462b937a7d","modified":1557546645819},{"_id":"themes/next/scripts/tags/exturl.js","hash":"e9dab948e6327b22b4fc0c66cf97f6600a444dd5","modified":1557546645822},{"_id":"themes/next/scripts/tags/full-image.js","hash":"b2ed8de4065c302fac1654f0d3d3ecb5fa6e0f80","modified":1557546645825},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"03575b534303f42c81ba6187ec601a5578913a39","modified":1557546645828},{"_id":"themes/next/scripts/tags/include-raw.js","hash":"ab4a82a7246265717556c7a42f897430340b88cf","modified":1557546645831},{"_id":"themes/next/scripts/tags/label.js","hash":"48f68ab33d42e638c2ab5f89f40c34fc2fa1e6dc","modified":1557546645837},{"_id":"themes/next/scripts/tags/note.js","hash":"f1b560d6e63d1b06fd80e12bbac32660125c223c","modified":1557546645839},{"_id":"themes/next/scripts/tags/tabs.js","hash":"ca885c8fa46a76a7b8977730575551622497410b","modified":1557546645842},{"_id":"themes/next/source/css/main.styl","hash":"5e7d28bc539e84f8b03e68df82292f7fc0f2d023","modified":1557546646238},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1557546646246},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1557546646250},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1557546646253},{"_id":"themes/next/source/images/bitbug_favicon -16x16.ico","hash":"c5aeb4da5f32d485c5c4e270d3ee0e082b63784f","modified":1557546646259},{"_id":"themes/next/source/images/bitbug_favicon-3x32.ico","hash":"0ce6be69735bdaff0ce533f2f20be12177a58d23","modified":1557546646262},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1557546646266},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1557546646270},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1557546646274},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1557546646276},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1557546646279},{"_id":"themes/next/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1557546646282},{"_id":"themes/next/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1557546646285},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1557546646288},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1557546646290},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1557546646294},{"_id":"themes/next/source/images/logo.svg","hash":"169f56fd82941591dad3abd734a50ec7259be950","modified":1557546646297},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1557546646301},{"_id":"themes/next/source/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1557546646304},{"_id":"themes/next/source/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1557546646307},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1557546646311},{"_id":"themes/next/source/uploads/avatar.png","hash":"b7cbde16b4bdd0328a6dbf0631148bbfbb58468b","modified":1557546646448},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1557546646109},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1557546646111},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1557546646122},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1557546646224},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1557546646233},{"_id":"themes/next/layout/_macro/menu/menu-badge.swig","hash":"4eb8e222dc337211efb0d3bbdb5e29af3e6ecdb8","modified":1557546645498},{"_id":"themes/next/layout/_macro/menu/menu-item.swig","hash":"25aea3d764b952f3f6d28ab86d7212d138e892df","modified":1557546645502},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"b57bf9c865bed0f22157176a8085de168a1aef77","modified":1557546645529},{"_id":"themes/next/layout/_partials/head/head-unique.swig","hash":"4b53a0659a7e800871d8e9a4bd20f7b892a8e29b","modified":1557546645535},{"_id":"themes/next/layout/_partials/head/head.swig","hash":"187316a1d565f98eac138b5ce2180b52a190028c","modified":1557546645539},{"_id":"themes/next/layout/_partials/header/brand.swig","hash":"2177da1d3c64abb6b3398f90885cf543ae6fe6da","modified":1557546645543},{"_id":"themes/next/layout/_partials/header/index.swig","hash":"c909f6e96373c151dea325bcddfdd8c9522421b6","modified":1557546645546},{"_id":"themes/next/layout/_partials/header/menu.swig","hash":"39c4ad0e36b7c1260da98ba345f7bd72a2ac0f2e","modified":1557546645549},{"_id":"themes/next/layout/_partials/header/sub-menu.swig","hash":"e015c7d9b84062b60b15b36be3ef11929dd10943","modified":1557546645552},{"_id":"themes/next/layout/_partials/page/breadcrumb.swig","hash":"daa6e5b7dbc409d6bf8a031d5413d8229e9c0995","modified":1557546645559},{"_id":"themes/next/layout/_partials/page/page-header.swig","hash":"f46699a9daa5fef599733cbab35cb75cf7a05444","modified":1557546645563},{"_id":"themes/next/layout/_partials/post/post-copyright.swig","hash":"55de88525c05af6053524c78ef4b42b46c3bfb6d","modified":1557546645573},{"_id":"themes/next/layout/_partials/post/post-related.swig","hash":"f331ad02beea8990066d32ad6ec9f859672c3615","modified":1557546645577},{"_id":"themes/next/layout/_partials/post/reward.swig","hash":"fc69f1f3950d9b81b0d474735e512053be169e8e","modified":1557546645580},{"_id":"themes/next/layout/_partials/post/wechat-subscriber.swig","hash":"0949c72a944b9abd5e5cc654b5556ac9450d431b","modified":1557546645583},{"_id":"themes/next/layout/_partials/search/algolia-search.swig","hash":"2530de0f3125a912756f6c0e9090cd012134a4c5","modified":1557546645587},{"_id":"themes/next/layout/_partials/search/index.swig","hash":"71b2fb364563cacc6afdf15d1f6876255ae2f9f2","modified":1557546645592},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"b2f0d247b213e4cf8de47af6a304d98070cc7256","modified":1557546645595},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"31245e09ce0465b994cebd94223a531585c4eab4","modified":1557546645598},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"c609097b95eb6127c2784f47f2230e6e6efc0be2","modified":1557546645602},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"54b43d406cf37932e7b60f46814e864d31b1842c","modified":1557546645605},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"e0f0a753d4920ffb37ddbc8270515654a0b9b92a","modified":1557546645620},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a62c93f19429f159bcf0c2e533ffc619aa399755","modified":1557546645625},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"3c548934b97cc426544947f7a2ae35c270b5e33f","modified":1557546645630},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"84018384d00e4a584d613589adae6674a3060a36","modified":1557546645634},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"23c6d15aa2a305f9d29caee1b60cfae84d32fa09","modified":1557546645636},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"66d562b3778dbc839f7c00103bd0099c5d61602a","modified":1557546645645},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"83dd7df11b100bae38c9faab9a478f92149a0315","modified":1557546645649},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"73576c9683d9ad9b124916dc6c660607fe7cc1fa","modified":1557546645652},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"2e1de38f44af00209129d4051b7ae307cb11ad68","modified":1557546645654},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"335005a9f8b36349f0ad0a7beeba6969c55fc7f7","modified":1557546645660},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"53202062267391353d49f269e7eb74eb87d30921","modified":1557546645662},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"8ab040fccba41675bc835973515530af8a51f8bd","modified":1557546645666},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"69d7697cbf423efad54d47dad038a5afc2e02695","modified":1557546645669},{"_id":"themes/next/layout/_third-party/analytics/growingio.swig","hash":"623e73bedef067ac24a398ef27c8197295da872d","modified":1557546645673},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"39928f358dd13d9fc1a4641800e57be157ecd815","modified":1557546645676},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"a4d752d17ddfc579730401ff3e3dfd4ec290c8de","modified":1557546645679},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"d18c87d7839e7407e39acd2998bcc9e0b34611b0","modified":1557546645683},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"a22d1ea29a5ffe46199ab7d108a291a05af8d5b6","modified":1557546645685},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"6143aa0ed0d9bbe24c5859f66ea0a5611d73ecd2","modified":1557546645688},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"bc3fc9d053b3d1fc0cd3918bf9a629a6f38f6414","modified":1557546645698},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"d685df1516cb138d7a83bac5d7878a1e0fa8bc04","modified":1557546645702},{"_id":"themes/next/layout/_third-party/comments/gitalk.swig","hash":"8bcc3430241e267a06abfbb4e9ca125838bc5a71","modified":1557546645706},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"0149e803ed7d30163df3b3ba3f578e5584a2e4af","modified":1557546645710},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"bd529bf26f28745eb8ded3be7652d33d55fec8d4","modified":1557546645712},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"1a5d94f5779a2ce13abc886dd78e0617f89c34b9","modified":1557546645715},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"bd6d763c1233cd89512c323ce0992daf7f9fd0e5","modified":1557546645718},{"_id":"themes/next/layout/_third-party/math/index.swig","hash":"43a20fa0e9ae2f4254f04813f9c619dd36b49ae5","modified":1557546645728},{"_id":"themes/next/layout/_third-party/math/katex.swig","hash":"ea1c136f960667a0a13b334db497b9b19c41f629","modified":1557546645731},{"_id":"themes/next/layout/_third-party/math/mathjax.swig","hash":"6f7217ff64cf67ee239954d3499a3c9e76bad061","modified":1557546645734},{"_id":"themes/next/layout/_third-party/search/algolia-search.swig","hash":"89e41d4c298d8d70b4d1c833c7e599d089f2b3d4","modified":1557546645754},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"078bd2d5815eb23e8c5f74467dc0042babea00ae","modified":1557546645757},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"d45ca53af17d1d83fd27f8ed0917a72f0060e1a9","modified":1557546645762},{"_id":"themes/next/scripts/filters/after_post_render/exturl.js","hash":"bfa8e5a91d22a5ba22e8f3da337fdb5e8b2600fd","modified":1557546645794},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"3403fdd8efde1a0afd11ae8a5a97673f5903087f","modified":1557546646103},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"07f7da320689f828f6e36a6123807964a45157a0","modified":1557546646107},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"8aa98ae349908736ba43196c42498fd5bdeb780a","modified":1557546646118},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"d1deb849e697cfb6258b8ab7bfb47e219210ccd9","modified":1557546646121},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"e9b0752f08398709e787546a246baca12b4c557f","modified":1557546646218},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"a25408534f8fe6e321db4bbf9dd03335d648fe17","modified":1557546646223},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"da7049f3d9a157abe0ecc62611edcf43605ba84d","modified":1557546646227},{"_id":"themes/next/source/css/_variables/base.styl","hash":"e37aab667be94576f6145b61a78cfe87836c68b6","modified":1557546646231},{"_id":"themes/next/source/js/src/affix.js","hash":"ad343aa406fd8181b5f310434817ce98fc2219e3","modified":1557546646320},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"84906eeae57bd06744dd20160b93eacf658f97e2","modified":1557546646324},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"c7e2a588b679d46379124141bb2f30bc2f3210e2","modified":1557546646331},{"_id":"themes/next/source/js/src/exturl.js","hash":"c48aa4b3c0e578a807fd3661e6cd4f3890777437","modified":1557546646335},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"1512c751d219577d338ac0780fb2bbd9075d5298","modified":1557546646338},{"_id":"themes/next/source/js/src/motion.js","hash":"e70f961d24e4e61a2df5bf640ab51acee8f1ffbd","modified":1557546646341},{"_id":"themes/next/source/js/src/post-details.js","hash":"7d309b771e86c7e22ce11cc25625481ef7d5985c","modified":1557546646343},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"c4867626afab749404daf321367f9b6b8e223f69","modified":1557546646354},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"68d3690152c89e7adb08bb35ec28dbda2bd93686","modified":1557546646357},{"_id":"themes/next/source/js/src/utils.js","hash":"a9d04f6ffea45938a2dca885c23642b9c9cdc3be","modified":1557546646360},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"b4aefc910578d76b267e86dfffdd5121c8db9aec","modified":1557546646369},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"03ddbf76c1dd1afb93eed0b670d2eee747472ef1","modified":1557546646372},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"c31ff06a740955e44edd4403902e653ccabfd4db","modified":1557546646375},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1557546646378},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"71e7183634dc1b9449f590f15ebd7201add22ca7","modified":1557546646383},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1557546646434},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"dbbfb50f6502f6b81dcc9fee7b31f1e812da3464","modified":1557546646438},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1557546646442},{"_id":"themes/next/source/lib/jquery/index.js","hash":"17a740d68a1c330876c198b6a4d9319f379f3af2","modified":1557546646415},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"bbb788b453236e5b4af7c81df8efcfc6bde08903","modified":1557546645854},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"237d185ac62ec9877e300947fa0109c44fb8db19","modified":1557546645857},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"8b32928686c327151e13d3ab100157f9a03cd59f","modified":1557546645861},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"ff4489cd582f518bba6909a301ac1292a38b4e96","modified":1557546645863},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"7ad4081466b397e2a6204141bb7768b7c01bd93c","modified":1557546645867},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"4f2801fc4cf3f31bf2069f41db8c6ce0e3da9e39","modified":1557546645929},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"c97c819a65f6967485184399397601e5133deda6","modified":1557546646019},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"1a4ac0d119f2126ef8951897338706edce112235","modified":1557546646075},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"c0e8647244e1ef106e94c3c8ac4a64bca2677159","modified":1557546646083},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"cb2c0beb69bfc56c0ed86e609bc1c35edb799b99","modified":1557546646086},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"33a74fcd6c38cea356f6d2994a19f46dcfd5d8a4","modified":1557546646089},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"3f40e8a9fe8e7bd5cfc4cf4cbbbcb9539462e973","modified":1557546646091},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a17e2b871a335f290afb392a08f94fd35f59c715","modified":1557546646095},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"c4bfce1fca9ea5d0fd991d98e08b8e771d33d731","modified":1557546646099},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"5f1e5d7b9d44ef3e6ad442e083753fee76d3b112","modified":1557546646131},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"d0e9065b0dbbc01811259f0597d1790268b4881b","modified":1557546646135},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"eecb2081ee1eef1e2152c7fea9310366e33b1eac","modified":1557546646139},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"b1025c421406d2c24cc92a02ae28c1915b01e240","modified":1557546646142},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"a80782a6eb3b40da2e14251da49069aff3115d8a","modified":1557546646145},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"06d9d00257abd28414ec0b746f866bf9911cf5ec","modified":1557546646148},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"9f35b95beb344f4eeca5ca584fbe7206f791372e","modified":1557546646153},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"15254414a52f05618c54a2ac7f4635f99077ec30","modified":1557546646157},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"31127dcbf4c7b4ada53ffbf1638b5fe325b7cbc0","modified":1557546646171},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"157e6915dcf5990566e463acffa71043b2651c07","modified":1557546646175},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"4ed12bf17eeb7cd4f22dd01fdd486cda68d169a8","modified":1557546646178},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"9f35b95beb344f4eeca5ca584fbe7206f791372e","modified":1557546646181},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"b26f8a3394d8357a5bfd24d9f8bf62d7b4063ebb","modified":1557546646184},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"30d61fa31e405fcfe3d2ff6174ccad60be1745f9","modified":1557546646194},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"28f0444ccdc85a34ada651d8ee52479e16311167","modified":1557546646198},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"11fcaaf7524445a194801e1048ea2fb84b316414","modified":1557546646200},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"1f6e2ce674735269599acc6d77b3ea18d31967fc","modified":1557546646205},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"a5395766dfdda81285d0cd3ddebe8e8bc924fa2a","modified":1557546646208},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"0d6f0df798449b710e1e5dbd43d470089b2a3c95","modified":1557546646211},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"a558803ca81cceae2bdc22c18ef638fcc023681b","modified":1557546646214},{"_id":"themes/next/source/js/src/schemes/muse.js","hash":"ccc0c5cd4ec6f8159c98990ad83f11a5c0b0234c","modified":1557546646347},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"3eea56cc9ce47bb4760930c4c69cebf847a7fbb2","modified":1557546646352},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"3655f1fdf1e584c4d8e8d39026093ca306a5a341","modified":1557546646388},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1557546646391},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"88af80502c44cd52ca81ffe7dc7276b7eccb06cf","modified":1557546646394},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"41ea797c68dbcff2f6fb3aba1d1043a22e7cc0f6","modified":1557546646421},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"a817b6c158cbc5bab3582713de9fe18a18a80552","modified":1557546646425},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"4237c6e9d59da349639de20e559e87c2c0218cfd","modified":1557546646430},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"2df409df04fdb52d7234876a9f6e502edd4e3929","modified":1557546645870},{"_id":"themes/next/source/css/_common/components/header/github-banner.styl","hash":"48bb741f6bda73b322a25a8fbe37fd3d5e0ff601","modified":1557546645875},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"34f5ac3c1ed2dd31e9297cc4c0733e71bc2e252f","modified":1557546645878},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d63e0cacc53dd375fcc113465a4328c59ff5f2c1","modified":1557546645881},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"1ec3102ee8f5b8cc0877da1fd109d37470401e7b","modified":1557546645884},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"b8647d6140141b0a160607f6353e4d4594cca92e","modified":1557546645886},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"1727702eac5d326b5c81a667944a245016668231","modified":1557546645889},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"167986d0f649516671ddf7193eebba7b421cd115","modified":1557546645893},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"32bbf059c57677e754a918c927ac63e2d843108f","modified":1557546645897},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"7fe4d4d656e86276c17cb4e48a560cb6a4def703","modified":1557546645900},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"e5a5f8747fdf2ca960e4e73c081b8952afd62224","modified":1557546645909},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"fa1cea6fcc3f552d57cc7d28380a304859139bf6","modified":1557546645913},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"7fb593f90d74a99c21840679933b9ef6fdc16a61","modified":1557546645916},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"ad4cae23c8e383f4fabc9a2a95bca6055020d22e","modified":1557546645919},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"4e3838d7ac81d9ad133960f0f7ed58a44a015285","modified":1557546645922},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"db1df0186a4572844d69d0d7bb974bd120cb64d5","modified":1557546645926},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"62fbbd32cf5a99ae550c45c763a2c4813a138d01","modified":1557546645935},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"3241c9ae85ca11b6c4e125ac471aa4342ba1ce9c","modified":1557546645939},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"fc94dd09b4245143b452d6cf2fc4c12134d99d6d","modified":1557546645943},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"77da38898bdd99cf8fd3e0ae8cc4d2ac943bcb60","modified":1557546645945},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"8703ff5ebfc76420565b92b1b873e03fb9d9cf15","modified":1557546645949},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"b6a241626783d2ac115d683fd59ec283af68e5bb","modified":1557546645951},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"a0e84b21ecc1f69d8d42c83630c1004d3419e3fd","modified":1557546645955},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"7b69c1ad392f8a386854e318d4c8ddeb9ba8d793","modified":1557546645959},{"_id":"themes/next/source/css/_common/components/post/post-reading_progress.styl","hash":"2ea91d7b75966d471bf857a9f3fbf87fd01aea90","modified":1557546645961},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"989b7d718914b5242506947aa5767b3f2480d8f9","modified":1557546645965},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"b2495ae5e04dcca610aacadc47881d9e716cd440","modified":1557546645967},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"5a982d8ef3b3623ea5f59e63728990f5623c1b57","modified":1557546645970},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"539fc0880b2e035e8316d5d4b423703195c1b7ba","modified":1557546645976},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"01567edaea6978628aa5521a122a85434c418bfd","modified":1557546645978},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"981795aad232c8bd3f52a0ed8720db696d18a234","modified":1557546645981},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"2e36956c5f8802f703c7ce3893d16323a0e09d4c","modified":1557546645984},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"fa57ec9a6f1943c0558856dfba2d6b8faca0cd4d","modified":1557546645990},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"2e26e4429c2457b8ca12555426659c2fc65a5cea","modified":1557546645994},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"41858f2dfd34a57d0a2016b1bce08efb61943b7a","modified":1557546645996},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"11c22f0fb3f6beb13e5a425ec064a4ff974c13b7","modified":1557546645999},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"4c1705e5c3fbf0e3f5d3fb29edec4a29c87b4c95","modified":1557546646002},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"7e2ba73073daaea0a18c3d67ff137dd683af7011","modified":1557546646005},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"dd5f7057680faefc9306fab3172106f762c1a517","modified":1557546646007},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"b9a19654b6a2685b5426afac8b09cdbd80fae00c","modified":1557546646010},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"4ec203c52db47bca67c229ef1f3693c9d40b4ef9","modified":1557546646013},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"f1fdfd0bc6b66a38581a4fbe096b25aadfc53246","modified":1557546646016},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"2fe76476432b31993338cb45cdb3b29a518b6379","modified":1557546646023},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"2d58ad90f148e845bc7023751a7a13260600f8d6","modified":1557546646026},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"2ad1a2a9bbf6742d1b0762c4c623b68113d1e0fe","modified":1557546646029},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"2ab1322fe52ab5aafd49e68f5bd890e8380ee927","modified":1557546646032},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"72cabf6edfd64697e37950cc3e66fbea6ba47b66","modified":1557546646035},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"2937e566ad0f3d9adc0865b269fdca62b7576fdd","modified":1557546646037},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"30ccc107061dc23943198f087759079161ee24e9","modified":1557546646040},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"f1640253cbbf71d0c04c34c25bd61045894f98bc","modified":1557546646044},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"f26c32a0c3045e5ae826b983abc3a3c139456663","modified":1557546646050},{"_id":"themes/next/source/css/_common/components/third-party/gitalk.styl","hash":"a01484e350ad5fc9b1fdfbfafb2ddd9687ad4d20","modified":1557546646054},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"49913bb2b702d52d77528cd9378126aa67c0082c","modified":1557546646057},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"2a1008f1044b450b806adc166754ba9513e68375","modified":1557546646060},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"16087276945fa038f199692e3eabb1c52b8ea633","modified":1557546646063},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"28825ae15fa20ae3942cdaa7bcc1f3523ce59acc","modified":1557546646066},{"_id":"themes/next/source/css/_common/components/third-party/related-posts.styl","hash":"74412b0bf4ec0d28aedd2e60b27affd4d5cd1452","modified":1557546646068},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"3529aae283864fa0f09925ee8217905632e9a930","modified":1557546646071},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"a07aa12cc36ac5c819670c2a3c17d07ed7a08986","modified":1557546646162},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1557546646168},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1557546646190},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1557546646404},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1557546646408},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1557546646399},{"_id":"public/baidusitemap.xml","hash":"3add613fc8b94c74fb63740a9b40ac78855e7890","modified":1557909192438},{"_id":"public/search.xml","hash":"965fe22f70d9ba7488c75f411f7e03aab8ce0c54","modified":1557909192438},{"_id":"public/sitemap.xml","hash":"ee15508b11463d642dbbd1d52745bbd2d230cf5f","modified":1557909192449},{"_id":"public/404.html","hash":"b2a66ef95f4a5896c8abe7ff567b96b9a47d5c70","modified":1557909192456},{"_id":"public/archives/index.html","hash":"2b200e5bcf4a2952dd0c98b4766d14c157b9ce4c","modified":1557909192456},{"_id":"public/about/index.html","hash":"09dfd97cb449c885c10b07bf31f1db400c71757f","modified":1557909192456},{"_id":"public/categories/index.html","hash":"384a4e9c446199bd96b729cdcc7d725dbcd623a5","modified":1557909192456},{"_id":"public/tags/index.html","hash":"b98885d7b51a49ce467a22041bcadf66b26b676a","modified":1557909192457},{"_id":"public/posts/13666/index.html","hash":"9598b644d7978026326607ff94a399d50a9d21bb","modified":1557909192457},{"_id":"public/posts/60785/index.html","hash":"f58e92f6bba61d98de3dc8d6f42d5e6ab43c135d","modified":1557909192457},{"_id":"public/posts/845b95cc/index.html","hash":"acef6a9e2fa5b4b5c079b5e8ba4d74a2a7c59a22","modified":1557909192457},{"_id":"public/posts/3156ccd5/index.html","hash":"80954f8e01021def01b828cf15b2260e9e48d427","modified":1557909192457},{"_id":"public/posts/301aa86/index.html","hash":"a1351b194c4db86690bbcfdbe6d39dddb713b667","modified":1557909192457},{"_id":"public/posts/7f247ba3/index.html","hash":"ba7f64239aca56196a3a25de08bb1cf406470e08","modified":1557909192457},{"_id":"public/posts/b38ec8f3/index.html","hash":"573a8d5726eaa465f33aacb8f5ce70eb00fe98bc","modified":1557909192457},{"_id":"public/posts/25ca6631/index.html","hash":"8ea93e9648765c211640d96dd3caacf3feccac83","modified":1557909192457},{"_id":"public/posts/1428c068/index.html","hash":"33567a091f37b4c784fd451bf5760328d065767b","modified":1557909192458},{"_id":"public/posts/367b716d/index.html","hash":"4fc711ebcdafb26b371737cd76b8038fcd7cac77","modified":1557909192458},{"_id":"public/posts/4443dac6/index.html","hash":"635c557a8dc068d12a66b64c31b4e2eafd35b2d4","modified":1557909192458},{"_id":"public/posts/a7642960/index.html","hash":"0a0efd0b8612018cd5e7b17e30ca416669164a08","modified":1557909192458},{"_id":"public/archives/page/2/index.html","hash":"6c00b5d59ba9f50839da7453f8a42c73d39d17c7","modified":1557909192458},{"_id":"public/archives/2019/index.html","hash":"e0331ad410c85d734f73ece944b429c24c505b87","modified":1557909192458},{"_id":"public/archives/2019/02/index.html","hash":"083dbf603cc1b8c730e2c327623927263e0c1314","modified":1557909192458},{"_id":"public/archives/2019/03/index.html","hash":"9710448e734cb97f130bf17da6135deb485a1b0a","modified":1557909192459},{"_id":"public/archives/2019/04/index.html","hash":"8543555e9a9a5328df34428b1f6d70f57eedc1b3","modified":1557909192459},{"_id":"public/archives/2019/page/2/index.html","hash":"4cf8f2b277d26cd5df1849f9156d0bd2afc761f4","modified":1557909192459},{"_id":"public/archives/2019/05/index.html","hash":"2b8b7a498ae3372231e751b1e8117680623537ef","modified":1557909192459},{"_id":"public/categories/前端/index.html","hash":"798de0c16739e924a06ad36c2d075da618d82dee","modified":1557909192459},{"_id":"public/categories/linux/index.html","hash":"d18f0c97b3e1c467a6a0c8ef37ad4a8b25d44442","modified":1557909192459},{"_id":"public/categories/技术/index.html","hash":"aac2347ddd7e52278eda2304bbf7e090e13747f6","modified":1557909192459},{"_id":"public/index.html","hash":"eec9c947669eb0dfa31f86242adaa51bd18c1ccc","modified":1557909192459},{"_id":"public/page/2/index.html","hash":"57a8fa39572a43d334ec292119489e002e3c3bc3","modified":1557909192459},{"_id":"public/tags/js/index.html","hash":"89d14c5d76c008cb4475c484be4cda671193e966","modified":1557909192460},{"_id":"public/tags/element-ui/index.html","hash":"904fb10dbaf829f1e0ecb782e7ef8dc63ca074c6","modified":1557909192460},{"_id":"public/tags/vue/index.html","hash":"5857e071a9101132f64984a0b0b03fcff74fd6e8","modified":1557909192460},{"_id":"public/tags/linux/index.html","hash":"a3634c151ee65b2d0f9da66cf879fb4675db6564","modified":1557909192460},{"_id":"public/tags/技术/index.html","hash":"baaed65b5ec123bce1d6fcc35df22b5ab669f32f","modified":1557909192460},{"_id":"public/tags/nodejs/index.html","hash":"240789a399acf8fb99f7ca2efc78c6b596a8e02c","modified":1557909192460},{"_id":"public/tags/webpack/index.html","hash":"073b4e014249ab98fb1e5e52b1ad4236ee99df79","modified":1557909192460},{"_id":"public/README.md","hash":"4ff258e53cdb3d0765f6a93250e4c7cfb2814154","modified":1557909192481},{"_id":"public/CNAME","hash":"109833a1caf13cc5305f1c288b98e4f77c19df4a","modified":1557909192481},{"_id":"public/robots.txt","hash":"038d29f3d9796d903ded6a515b236ad287d27248","modified":1557909192481},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1557909192481},{"_id":"public/images/2019-2-26.png","hash":"8f24528dfcc0382abcd8fe829c34ad7501827c46","modified":1557909192481},{"_id":"public/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1557909192482},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1557909192482},{"_id":"public/images/bitbug_favicon -16x16.ico","hash":"c5aeb4da5f32d485c5c4e270d3ee0e082b63784f","modified":1557909192482},{"_id":"public/images/bitbug_favicon-3x32.ico","hash":"0ce6be69735bdaff0ce533f2f20be12177a58d23","modified":1557909192482},{"_id":"public/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1557909192482},{"_id":"public/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1557909192482},{"_id":"public/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1557909192482},{"_id":"public/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1557909192482},{"_id":"public/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1557909192482},{"_id":"public/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1557909192482},{"_id":"public/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1557909192483},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1557909192483},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1557909192483},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1557909192483},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1557909192483},{"_id":"public/images/logo.svg","hash":"169f56fd82941591dad3abd734a50ec7259be950","modified":1557909192483},{"_id":"public/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1557909192483},{"_id":"public/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1557909192483},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1557909192483},{"_id":"public/uploads/avatar.png","hash":"b7cbde16b4bdd0328a6dbf0631148bbfbb58468b","modified":1557909192483},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1557909192483},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1557909192484},{"_id":"public/posts/367b716d/1.jpg","hash":"fbee0ee26b8db424d8925521f8b055ddef18d6fd","modified":1557909192484},{"_id":"public/posts/845b95cc/1.png","hash":"ead49f0f3a675a1a0df47a2d8bf6ffaa2ad41550","modified":1557909192484},{"_id":"public/posts/367b716d/2.jpg","hash":"6398dc248ae2a9353582e519c092755498c00e06","modified":1557909192484},{"_id":"public/posts/845b95cc/3.png","hash":"b75fe1970b5278c5f1d4f5001bb55e9c053fff52","modified":1557909192484},{"_id":"public/posts/845b95cc/2.png","hash":"e796281bac9aadf1cf2d35abed8bb11b194883fe","modified":1557909192484},{"_id":"public/posts/7f247ba3/1.png","hash":"ea2de96dfa875f22ae64a5aed7c64d02eed58889","modified":1557909192484},{"_id":"public/posts/7f247ba3/2.png","hash":"dcac407692b787cbf57033c800fbea954e716ea0","modified":1557909192484},{"_id":"public/posts/7f247ba3/3.png","hash":"e3cda13ef4ae41ef6d02c790714f190f7f53eeb4","modified":1557909192484},{"_id":"public/posts/3156ccd5/4.png","hash":"94d20fcae17886203ecc58e493d72f22dd181656","modified":1557909192484},{"_id":"public/posts/3156ccd5/3.png","hash":"86ec7353f6c193a4ac6eb7d770656cf24dbb8524","modified":1557909192484},{"_id":"public/posts/3156ccd5/2.png","hash":"191416348a4434089560929f5e2b547f2af24ac6","modified":1557909192484},{"_id":"public/posts/3156ccd5/1.png","hash":"10264588102714359a980206c040c9ddb7cea605","modified":1557909192485},{"_id":"public/posts/3156ccd5/5.png","hash":"6408623a332923fdd073c3a3d01d4b51801a5f28","modified":1557909192485},{"_id":"public/posts/b38ec8f3/2.png","hash":"de756293494f1fa6b4ae40745a94b8ad6283626c","modified":1557909192485},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1557909193181},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1557909193182},{"_id":"public/posts/b38ec8f3/1.png","hash":"28803ad48576d6031fc620df00df92edd8a5c734","modified":1557909193182},{"_id":"public/js/src/affix.js","hash":"a2aab233d99297435a5274bf512c3c753fe08e80","modified":1557909193225},{"_id":"public/js/src/exturl.js","hash":"54825acc8de4793feac415be227b965428f4e97d","modified":1557909193226},{"_id":"public/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1557909193226},{"_id":"public/js/src/bootstrap.js","hash":"1c41508b83cb0c4512e64b4d63afa1be954ce8ef","modified":1557909193226},{"_id":"public/js/src/algolia-search.js","hash":"1f7f10c579e7703d0f6acb8b73f3d78a07d0c623","modified":1557909193227},{"_id":"public/js/src/post-details.js","hash":"0dde5e6d4547587662a3256317a9d5d1db507692","modified":1557909193227},{"_id":"public/js/src/scrollspy.js","hash":"fa3c92968bcdbcb8d95a1729f7659d9753cbd077","modified":1557909193228},{"_id":"public/js/src/scroll-cookie.js","hash":"d07b3776708d4ae79ed2037c4c7391d5c9b06b19","modified":1557909193228},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1557909193228},{"_id":"public/js/src/schemes/muse.js","hash":"e9bfa6b343b67625f58757efce46ccdaac8f308c","modified":1557909193228},{"_id":"public/js/src/schemes/pisces.js","hash":"9eb63cba0327d3d11b6cbfcbe40b88e97a8378a3","modified":1557909193228},{"_id":"public/css/main.css","hash":"30cedc43666f1762788a51d75c044e3a0236b3da","modified":1557909193228},{"_id":"public/js/src/motion.js","hash":"7933a30382a84b655238f6e78d42ea1b99af4de6","modified":1557909193266},{"_id":"public/js/src/utils.js","hash":"1e515f5c5e9872b875090481b5bebfbf175d32fe","modified":1557909193267},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1557909193267},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1557909193267},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1557909193267},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1557909193267},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1557909193332},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1557909193354},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1557909193354},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1557909193354},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1557909193369},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1557909193382}],"Category":[{"name":"前端","_id":"cjvoywn0t0005hwuxui4wbnrw"},{"name":"linux","_id":"cjvoywn1e000ohwuxhp1yi2hp"},{"name":"技术","_id":"cjvoywn1i000whwuxo6khhx7h"}],"Data":[],"Page":[{"_content":"<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"UTF-8\" http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no\">\n<title>404-对不起！您访问的页面不存在</title>\n<style type=\"text/css\">\n    *{\n        margin: 0;\n        padding: 0;\n    }\n    .container{\n        margin: 0 auto;\n        width: 400px;\n    }\n    .img-notfound{\n        width: 100%\n    }\n    @media screen and (max-width: 600px) {\n        .container{\n            margin: 0 auto;\n            width: 100%;\n        }\n    }\n</style>\n</head>\n \n<body> \n    <div class=\"container\">\n        <div class=\"mod-notfound\">\n            <img class=\"img-notfound\" src=\"./uploads/notfound.gif\">\n            <h3 style=\"line-height: 70px\">啊~哦~ 您要查看的页面不存在！</h3>\n            <p style=\"margin-bottom: 30px\">请检查您输入的网址是否正确</p>\n            <p style=\"font-size: 14px; line-height: 20px\">您可以回到 \n                <a href=\"/\">网站首页</a> 或<a href=\"javascript:;\" target=\"_blank\" onclick=\"window.history.go(-1)\">返回上一页</a> \n            </p>\n        </div>\n    </div>\n</body> \n</html>\n</html>","source":"404.html","raw":"<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"UTF-8\" http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no\">\n<title>404-对不起！您访问的页面不存在</title>\n<style type=\"text/css\">\n    *{\n        margin: 0;\n        padding: 0;\n    }\n    .container{\n        margin: 0 auto;\n        width: 400px;\n    }\n    .img-notfound{\n        width: 100%\n    }\n    @media screen and (max-width: 600px) {\n        .container{\n            margin: 0 auto;\n            width: 100%;\n        }\n    }\n</style>\n</head>\n \n<body> \n    <div class=\"container\">\n        <div class=\"mod-notfound\">\n            <img class=\"img-notfound\" src=\"./uploads/notfound.gif\">\n            <h3 style=\"line-height: 70px\">啊~哦~ 您要查看的页面不存在！</h3>\n            <p style=\"margin-bottom: 30px\">请检查您输入的网址是否正确</p>\n            <p style=\"font-size: 14px; line-height: 20px\">您可以回到 \n                <a href=\"/\">网站首页</a> 或<a href=\"javascript:;\" target=\"_blank\" onclick=\"window.history.go(-1)\">返回上一页</a> \n            </p>\n        </div>\n    </div>\n</body> \n</html>\n</html>","date":"2019-05-15T08:32:59.782Z","updated":"2019-05-15T08:32:59.782Z","path":"404.html","title":"","comments":1,"layout":"page","_id":"cjvoywmyu0000hwux8d5m36ug","content":"<!DOCTYPE html>\n<html>\n<head><meta name=\"generator\" content=\"Hexo 3.8.0\">\n<meta charset=\"UTF-8\" http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no\">\n<title>404-对不起！您访问的页面不存在</title>\n<style type=\"text/css\">\n    *{\n        margin: 0;\n        padding: 0;\n    }\n    .container{\n        margin: 0 auto;\n        width: 400px;\n    }\n    .img-notfound{\n        width: 100%\n    }\n    @media screen and (max-width: 600px) {\n        .container{\n            margin: 0 auto;\n            width: 100%;\n        }\n    }\n</style>\n</head>\n \n<body> \n    <div class=\"container\">\n        <div class=\"mod-notfound\">\n            <img class=\"img-notfound\" src=\"./uploads/notfound.gif\">\n            <h3 style=\"line-height: 70px\">啊~哦~ 您要查看的页面不存在！</h3>\n            <p style=\"margin-bottom: 30px\">请检查您输入的网址是否正确</p>\n            <p style=\"font-size: 14px; line-height: 20px\">您可以回到 \n                <a href=\"/\">网站首页</a> 或<a href=\"javascript:;\" target=\"_blank\" onclick=\"window.history.go(-1)\">返回上一页</a> \n            </p>\n        </div>\n    </div>\n</body> \n</html>\n","site":{"data":{}},"excerpt":"","more":"<!DOCTYPE html>\n<html>\n<head><meta name=\"generator\" content=\"Hexo 3.8.0\">\n<meta charset=\"UTF-8\" http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no\">\n<title>404-对不起！您访问的页面不存在</title>\n<style type=\"text/css\">\n    *{\n        margin: 0;\n        padding: 0;\n    }\n    .container{\n        margin: 0 auto;\n        width: 400px;\n    }\n    .img-notfound{\n        width: 100%\n    }\n    @media screen and (max-width: 600px) {\n        .container{\n            margin: 0 auto;\n            width: 100%;\n        }\n    }\n</style>\n</head>\n \n<body> \n    <div class=\"container\">\n        <div class=\"mod-notfound\">\n            <img class=\"img-notfound\" src=\"./uploads/notfound.gif\">\n            <h3 style=\"line-height: 70px\">啊~哦~ 您要查看的页面不存在！</h3>\n            <p style=\"margin-bottom: 30px\">请检查您输入的网址是否正确</p>\n            <p style=\"font-size: 14px; line-height: 20px\">您可以回到 \n                <a href=\"/\">网站首页</a> 或<a href=\"javascript:;\" target=\"_blank\" onclick=\"window.history.go(-1)\">返回上一页</a> \n            </p>\n        </div>\n    </div>\n</body> \n</html>\n"},{"title":"archives","date":"2019-02-18T14:04:42.000Z","_content":"","source":"archives/index.md","raw":"---\ntitle: archives\ndate: 2019-02-18 22:04:42\n---\n","updated":"2019-05-11T03:50:45.012Z","path":"archives/index.html","comments":1,"layout":"page","_id":"cjvoywn0q0002hwuxrj1dtzds","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"关于","date":"2019-02-18T14:03:57.000Z","_content":"## 建立此博客的初衷\n\n自己在工作以及学习过程中难免会遇到一些困难，或者会发现一些对于工作、对于自己技术有帮助的技术点，希望能够把解决困难的方法，遇到好的技术形成一篇篇博客，需要的时候能够打开来看看，希望对自己的技术成长有帮助，也希望能够帮助他人。\n\n## 关于作者\n\n本人自2015年就开始从事web前端开发工作了，虽然没有能在腾讯、阿里、百度等等大厂工作过，但是自己的技术成长也挺快，熟练使用vue，jquery，bootstrap，element-ui等框架，自己参与过商城网站的前端开发、各种类型的后台管理系统前端的开发以及移动端的web（包括app内的h5），微信h5以及小程序前端。对于后端不敢说精通，但是使用过nodejs搭建过一款记账小程序(“账目随身记”)的后台以及使用nodejs搭建过公司官网的后台。学习后端并不是想往后端方向发展，而是更好地与后端工程师进行合作，更好地把前端工作做好。","source":"about/index.md","raw":"---\ntitle: 关于\ndate: 2019-02-18 22:03:57\n---\n## 建立此博客的初衷\n\n自己在工作以及学习过程中难免会遇到一些困难，或者会发现一些对于工作、对于自己技术有帮助的技术点，希望能够把解决困难的方法，遇到好的技术形成一篇篇博客，需要的时候能够打开来看看，希望对自己的技术成长有帮助，也希望能够帮助他人。\n\n## 关于作者\n\n本人自2015年就开始从事web前端开发工作了，虽然没有能在腾讯、阿里、百度等等大厂工作过，但是自己的技术成长也挺快，熟练使用vue，jquery，bootstrap，element-ui等框架，自己参与过商城网站的前端开发、各种类型的后台管理系统前端的开发以及移动端的web（包括app内的h5），微信h5以及小程序前端。对于后端不敢说精通，但是使用过nodejs搭建过一款记账小程序(“账目随身记”)的后台以及使用nodejs搭建过公司官网的后台。学习后端并不是想往后端方向发展，而是更好地与后端工程师进行合作，更好地把前端工作做好。","updated":"2019-05-11T03:50:45.009Z","path":"about/index.html","comments":1,"layout":"page","_id":"cjvoywn0s0004hwuxsjenbe0e","content":"<h2 id=\"建立此博客的初衷\"><a href=\"#建立此博客的初衷\" class=\"headerlink\" title=\"建立此博客的初衷\"></a>建立此博客的初衷</h2><p>自己在工作以及学习过程中难免会遇到一些困难，或者会发现一些对于工作、对于自己技术有帮助的技术点，希望能够把解决困难的方法，遇到好的技术形成一篇篇博客，需要的时候能够打开来看看，希望对自己的技术成长有帮助，也希望能够帮助他人。</p>\n<h2 id=\"关于作者\"><a href=\"#关于作者\" class=\"headerlink\" title=\"关于作者\"></a>关于作者</h2><p>本人自2015年就开始从事web前端开发工作了，虽然没有能在腾讯、阿里、百度等等大厂工作过，但是自己的技术成长也挺快，熟练使用vue，jquery，bootstrap，element-ui等框架，自己参与过商城网站的前端开发、各种类型的后台管理系统前端的开发以及移动端的web（包括app内的h5），微信h5以及小程序前端。对于后端不敢说精通，但是使用过nodejs搭建过一款记账小程序(“账目随身记”)的后台以及使用nodejs搭建过公司官网的后台。学习后端并不是想往后端方向发展，而是更好地与后端工程师进行合作，更好地把前端工作做好。</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"建立此博客的初衷\"><a href=\"#建立此博客的初衷\" class=\"headerlink\" title=\"建立此博客的初衷\"></a>建立此博客的初衷</h2><p>自己在工作以及学习过程中难免会遇到一些困难，或者会发现一些对于工作、对于自己技术有帮助的技术点，希望能够把解决困难的方法，遇到好的技术形成一篇篇博客，需要的时候能够打开来看看，希望对自己的技术成长有帮助，也希望能够帮助他人。</p>\n<h2 id=\"关于作者\"><a href=\"#关于作者\" class=\"headerlink\" title=\"关于作者\"></a>关于作者</h2><p>本人自2015年就开始从事web前端开发工作了，虽然没有能在腾讯、阿里、百度等等大厂工作过，但是自己的技术成长也挺快，熟练使用vue，jquery，bootstrap，element-ui等框架，自己参与过商城网站的前端开发、各种类型的后台管理系统前端的开发以及移动端的web（包括app内的h5），微信h5以及小程序前端。对于后端不敢说精通，但是使用过nodejs搭建过一款记账小程序(“账目随身记”)的后台以及使用nodejs搭建过公司官网的后台。学习后端并不是想往后端方向发展，而是更好地与后端工程师进行合作，更好地把前端工作做好。</p>\n"},{"title":"分类","date":"2019-02-18T14:04:24.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2019-02-18 22:04:24\ntype: \"categories\"\n---\n","updated":"2019-05-11T03:50:45.016Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cjvoywn0w0008hwux4yc2t4c7","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"标签","date":"2019-02-18T14:03:13.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2019-02-18 22:03:13\ntype: \"tags\"\n---\n","updated":"2019-05-11T03:50:45.030Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cjvoywn89001mhwux11y018je","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"[\"1\", \"2\", \"3\"].map(parseInt)报错问题解决办法","abbrlink":"1428c068","date":"2019-03-30T03:41:08.000Z","_content":"\n第一次使用 `[\"1\", \"2\", \"3\"].map(parseInt)`时，以为会得到[1,2,3]这个结果，结果很不幸得到的是[1,NaN,NaN]，为什么会这样呢，其实是因为map函数传递的是三个参数`value,index,arry`,而parseInt函数传递的是`value,radix`，`radix`不传时默认使用10，表示十进制，但是如果radix在2-36之外会返回NaN。\n好了，既然已经知道了原因，那么应该怎么修改，才能得到正确的结果呢，\n很简单，把map和parseIntDe完整参数写出来就可以了`[\"1\", \"2\", \"3\"].map((value,index,array)=>parseInt(value,10));` 给parseInt指定10进制，用es5的写法则是\n```\n[\"1\", \"2\", \"3\"].map(function(value,index,array){\n\treturn parseInt(value,10)\n});  //返回 [1,2,3]\n```","source":"_posts/1-2-3-map-parseInt-报错问解决办法.md","raw":"---\ntitle: '[\"1\", \"2\", \"3\"].map(parseInt)报错问题解决办法'\ntags: js\ncategories: 前端\nabbrlink: 1428c068\ndate: 2019-03-30 11:41:08\n---\n\n第一次使用 `[\"1\", \"2\", \"3\"].map(parseInt)`时，以为会得到[1,2,3]这个结果，结果很不幸得到的是[1,NaN,NaN]，为什么会这样呢，其实是因为map函数传递的是三个参数`value,index,arry`,而parseInt函数传递的是`value,radix`，`radix`不传时默认使用10，表示十进制，但是如果radix在2-36之外会返回NaN。\n好了，既然已经知道了原因，那么应该怎么修改，才能得到正确的结果呢，\n很简单，把map和parseIntDe完整参数写出来就可以了`[\"1\", \"2\", \"3\"].map((value,index,array)=>parseInt(value,10));` 给parseInt指定10进制，用es5的写法则是\n```\n[\"1\", \"2\", \"3\"].map(function(value,index,array){\n\treturn parseInt(value,10)\n});  //返回 [1,2,3]\n```","slug":"1-2-3-map-parseInt-报错问解决办法","published":1,"updated":"2019-05-11T03:50:44.934Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvoywn0k0001hwuxhe8l6f9y","content":"<p>第一次使用 <code>[&quot;1&quot;, &quot;2&quot;, &quot;3&quot;].map(parseInt)</code>时，以为会得到[1,2,3]这个结果，结果很不幸得到的是[1,NaN,NaN]，为什么会这样呢，其实是因为map函数传递的是三个参数<code>value,index,arry</code>,而parseInt函数传递的是<code>value,radix</code>，<code>radix</code>不传时默认使用10，表示十进制，但是如果radix在2-36之外会返回NaN。<br>好了，既然已经知道了原因，那么应该怎么修改，才能得到正确的结果呢，<br>很简单，把map和parseIntDe完整参数写出来就可以了<code>[&quot;1&quot;, &quot;2&quot;, &quot;3&quot;].map((value,index,array)=&gt;parseInt(value,10));</code> 给parseInt指定10进制，用es5的写法则是<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"string\">\"1\"</span>, <span class=\"string\">\"2\"</span>, <span class=\"string\">\"3\"</span>].map(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">value,index,array</span>)</span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"built_in\">parseInt</span>(value,<span class=\"number\">10</span>)</span><br><span class=\"line\">&#125;);  <span class=\"comment\">//返回 [1,2,3]</span></span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>第一次使用 <code>[&quot;1&quot;, &quot;2&quot;, &quot;3&quot;].map(parseInt)</code>时，以为会得到[1,2,3]这个结果，结果很不幸得到的是[1,NaN,NaN]，为什么会这样呢，其实是因为map函数传递的是三个参数<code>value,index,arry</code>,而parseInt函数传递的是<code>value,radix</code>，<code>radix</code>不传时默认使用10，表示十进制，但是如果radix在2-36之外会返回NaN。<br>好了，既然已经知道了原因，那么应该怎么修改，才能得到正确的结果呢，<br>很简单，把map和parseIntDe完整参数写出来就可以了<code>[&quot;1&quot;, &quot;2&quot;, &quot;3&quot;].map((value,index,array)=&gt;parseInt(value,10));</code> 给parseInt指定10进制，用es5的写法则是<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"string\">\"1\"</span>, <span class=\"string\">\"2\"</span>, <span class=\"string\">\"3\"</span>].map(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">value,index,array</span>)</span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"built_in\">parseInt</span>(value,<span class=\"number\">10</span>)</span><br><span class=\"line\">&#125;);  <span class=\"comment\">//返回 [1,2,3]</span></span><br></pre></td></tr></table></figure></p>\n"},{"title":"element-ui 上传组件函数自定义参数传递","abbrlink":"845b95cc","date":"2019-05-07T12:09:05.000Z","_content":"\n有时候在表格中需要在每行中有上传需求时，需要定位到是哪一行上传的图片，然后才能组合数组发送到后端，这个时候默认的参数就无法满足我们的需求了，我们需要根据当前行的index来一一对应当前行的文件上传。比如要实现下面的效果：\n![](3.png)\n要实现参数的自定义，我们需要在vue模板中修改函数调用的方式，通过类似：`((val)=>{func(val)})`的方式来调用相应的函数。\n![](1.png)\n以及在文件编辑时要注意修改:file-list为表格中的字段，才能一一对应上\n![](2.png)","source":"_posts/element-ui-上传组件函数自定义参数传递.md","raw":"---\ntitle: element-ui 上传组件函数自定义参数传递\ntags:\n  - element-ui\n  - vue\ncategories: 前端\nabbrlink: 845b95cc\ndate: 2019-05-07 20:09:05\n---\n\n有时候在表格中需要在每行中有上传需求时，需要定位到是哪一行上传的图片，然后才能组合数组发送到后端，这个时候默认的参数就无法满足我们的需求了，我们需要根据当前行的index来一一对应当前行的文件上传。比如要实现下面的效果：\n![](3.png)\n要实现参数的自定义，我们需要在vue模板中修改函数调用的方式，通过类似：`((val)=>{func(val)})`的方式来调用相应的函数。\n![](1.png)\n以及在文件编辑时要注意修改:file-list为表格中的字段，才能一一对应上\n![](2.png)","slug":"element-ui-上传组件函数自定义参数传递","published":1,"updated":"2019-05-11T03:50:44.937Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvoywn0r0003hwuxgpk6u4qd","content":"<p>有时候在表格中需要在每行中有上传需求时，需要定位到是哪一行上传的图片，然后才能组合数组发送到后端，这个时候默认的参数就无法满足我们的需求了，我们需要根据当前行的index来一一对应当前行的文件上传。比如要实现下面的效果：<br><img src=\"3.png\" alt=\"\"><br>要实现参数的自定义，我们需要在vue模板中修改函数调用的方式，通过类似：<code>((val)=&gt;{func(val)})</code>的方式来调用相应的函数。<br><img src=\"1.png\" alt=\"\"><br>以及在文件编辑时要注意修改:file-list为表格中的字段，才能一一对应上<br><img src=\"2.png\" alt=\"\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p>有时候在表格中需要在每行中有上传需求时，需要定位到是哪一行上传的图片，然后才能组合数组发送到后端，这个时候默认的参数就无法满足我们的需求了，我们需要根据当前行的index来一一对应当前行的文件上传。比如要实现下面的效果：<br><img src=\"3.png\" alt=\"\"><br>要实现参数的自定义，我们需要在vue模板中修改函数调用的方式，通过类似：<code>((val)=&gt;{func(val)})</code>的方式来调用相应的函数。<br><img src=\"1.png\" alt=\"\"><br>以及在文件编辑时要注意修改:file-list为表格中的字段，才能一一对应上<br><img src=\"2.png\" alt=\"\"></p>\n"},{"title":"element-ui 表格中的form的input动态验证规则","abbrlink":"3156ccd5","date":"2019-04-27T13:23:46.000Z","_content":"### 表格中的input需要做某些校验，比如，“本次报销金额”要小于“未报销金额”，这就有点麻烦了，我们都知道，element的form的验证规则rules都是在初始化的时候就定好了的，比如时间验证：\n```\ndate2: [\n    { type: 'date', required: true, message: '请选择时间', trigger: 'change' }\n],\n```\n而我们项目中的是这样的:\n![](4.png) 又不想自定义指令来做，还是看下element能不能做吧，于是就开始看文档，发现只能用自定义rules，但是自定义指令，写死的规则也不符合要求啊，因为表格的数据都是不固定的，\n首先我们把表格的数据源字段移到我们的form中\n![](1.png)\n![](2.png)\n![](3.png)\n然后自定义规则：\n![](5.png)\n这里需要用到一些技巧，比如在模板中，\n```\n:prop=\"`inputTaxTable.${scope.$index}.thisApplyMoney`\"\n```\n在需要校验的列中，`inputTaxTable.${scope.$index}.thisApplyMoney` 查找当前行的数据源，\n\n以及查找“未报销金额”这行的数据来跟当前金额进行对比的时候，保证找到的当前行的数据。\n```\n //field字段中包含了该行表格的index\n    let field=rule.field;//规则名称\n    let _fieldArr=[];\n    _fieldArr=field.split('.');\n    let _index=_fieldArr[1];//得到表格的第n行\n\n    if(Number.parseFloat(value)>Number.parseFloat(this.ruleForm.inputTaxTable[_index].notApplyMoney)){\n        return callback(new Error('不可大于未报销金额'));\n    }else{\n        callback()  //这里一定要这样返回，否则validate函数只会执行一次\n    }\n    \n}\n```\n\n\n","source":"_posts/element-ui-表格中的form的input动态验证规则.md","raw":"---\ntitle: element-ui 表格中的form的input动态验证规则\ntags:\n  - element-ui\n  - vue\ncategories: 前端\nabbrlink: 3156ccd5\ndate: 2019-04-27 21:23:46\n---\n### 表格中的input需要做某些校验，比如，“本次报销金额”要小于“未报销金额”，这就有点麻烦了，我们都知道，element的form的验证规则rules都是在初始化的时候就定好了的，比如时间验证：\n```\ndate2: [\n    { type: 'date', required: true, message: '请选择时间', trigger: 'change' }\n],\n```\n而我们项目中的是这样的:\n![](4.png) 又不想自定义指令来做，还是看下element能不能做吧，于是就开始看文档，发现只能用自定义rules，但是自定义指令，写死的规则也不符合要求啊，因为表格的数据都是不固定的，\n首先我们把表格的数据源字段移到我们的form中\n![](1.png)\n![](2.png)\n![](3.png)\n然后自定义规则：\n![](5.png)\n这里需要用到一些技巧，比如在模板中，\n```\n:prop=\"`inputTaxTable.${scope.$index}.thisApplyMoney`\"\n```\n在需要校验的列中，`inputTaxTable.${scope.$index}.thisApplyMoney` 查找当前行的数据源，\n\n以及查找“未报销金额”这行的数据来跟当前金额进行对比的时候，保证找到的当前行的数据。\n```\n //field字段中包含了该行表格的index\n    let field=rule.field;//规则名称\n    let _fieldArr=[];\n    _fieldArr=field.split('.');\n    let _index=_fieldArr[1];//得到表格的第n行\n\n    if(Number.parseFloat(value)>Number.parseFloat(this.ruleForm.inputTaxTable[_index].notApplyMoney)){\n        return callback(new Error('不可大于未报销金额'));\n    }else{\n        callback()  //这里一定要这样返回，否则validate函数只会执行一次\n    }\n    \n}\n```\n\n\n","slug":"element-ui-表格中的form的input动态验证规则","published":1,"updated":"2019-05-11T06:47:42.445Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvoywn0v0007hwuxlp7yk2t5","content":"<h3 id=\"表格中的input需要做某些校验，比如，“本次报销金额”要小于“未报销金额”，这就有点麻烦了，我们都知道，element的form的验证规则rules都是在初始化的时候就定好了的，比如时间验证：\"><a href=\"#表格中的input需要做某些校验，比如，“本次报销金额”要小于“未报销金额”，这就有点麻烦了，我们都知道，element的form的验证规则rules都是在初始化的时候就定好了的，比如时间验证：\" class=\"headerlink\" title=\"表格中的input需要做某些校验，比如，“本次报销金额”要小于“未报销金额”，这就有点麻烦了，我们都知道，element的form的验证规则rules都是在初始化的时候就定好了的，比如时间验证：\"></a>表格中的input需要做某些校验，比如，“本次报销金额”要小于“未报销金额”，这就有点麻烦了，我们都知道，element的form的验证规则rules都是在初始化的时候就定好了的，比如时间验证：</h3><figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">date2:</span> [</span><br><span class=\"line\">    &#123; <span class=\"string\">type:</span> <span class=\"string\">'date'</span>, <span class=\"string\">required:</span> <span class=\"literal\">true</span>, <span class=\"string\">message:</span> <span class=\"string\">'请选择时间'</span>, <span class=\"string\">trigger:</span> <span class=\"string\">'change'</span> &#125;</span><br><span class=\"line\">],</span><br></pre></td></tr></table></figure>\n<p>而我们项目中的是这样的:<br><img src=\"4.png\" alt=\"\"> 又不想自定义指令来做，还是看下element能不能做吧，于是就开始看文档，发现只能用自定义rules，但是自定义指令，写死的规则也不符合要求啊，因为表格的数据都是不固定的，<br>首先我们把表格的数据源字段移到我们的form中<br><img src=\"1.png\" alt=\"\"><br><img src=\"2.png\" alt=\"\"><br><img src=\"3.png\" alt=\"\"><br>然后自定义规则：<br><img src=\"5.png\" alt=\"\"><br>这里需要用到一些技巧，比如在模板中，<br><figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:prop=<span class=\"string\">\"`inputTaxTable.<span class=\"subst\">$&#123;scope.$index&#125;</span>.thisApplyMoney`\"</span></span><br></pre></td></tr></table></figure></p>\n<p>在需要校验的列中，<code>inputTaxTable.${scope.$index}.thisApplyMoney</code> 查找当前行的数据源，</p>\n<p>以及查找“未报销金额”这行的数据来跟当前金额进行对比的时候，保证找到的当前行的数据。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"comment\">//field字段中包含了该行表格的index</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> field=rule.field;<span class=\"comment\">//规则名称</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> _fieldArr=[];</span><br><span class=\"line\">    _fieldArr=field.split(<span class=\"string\">'.'</span>);</span><br><span class=\"line\">    <span class=\"keyword\">let</span> _index=_fieldArr[<span class=\"number\">1</span>];<span class=\"comment\">//得到表格的第n行</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"built_in\">Number</span>.parseFloat(value)&gt;<span class=\"built_in\">Number</span>.parseFloat(<span class=\"keyword\">this</span>.ruleForm.inputTaxTable[_index].notApplyMoney))&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> callback(<span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'不可大于未报销金额'</span>));</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        callback()  <span class=\"comment\">//这里一定要这样返回，否则validate函数只会执行一次</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"表格中的input需要做某些校验，比如，“本次报销金额”要小于“未报销金额”，这就有点麻烦了，我们都知道，element的form的验证规则rules都是在初始化的时候就定好了的，比如时间验证：\"><a href=\"#表格中的input需要做某些校验，比如，“本次报销金额”要小于“未报销金额”，这就有点麻烦了，我们都知道，element的form的验证规则rules都是在初始化的时候就定好了的，比如时间验证：\" class=\"headerlink\" title=\"表格中的input需要做某些校验，比如，“本次报销金额”要小于“未报销金额”，这就有点麻烦了，我们都知道，element的form的验证规则rules都是在初始化的时候就定好了的，比如时间验证：\"></a>表格中的input需要做某些校验，比如，“本次报销金额”要小于“未报销金额”，这就有点麻烦了，我们都知道，element的form的验证规则rules都是在初始化的时候就定好了的，比如时间验证：</h3><figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">date2:</span> [</span><br><span class=\"line\">    &#123; <span class=\"string\">type:</span> <span class=\"string\">'date'</span>, <span class=\"string\">required:</span> <span class=\"literal\">true</span>, <span class=\"string\">message:</span> <span class=\"string\">'请选择时间'</span>, <span class=\"string\">trigger:</span> <span class=\"string\">'change'</span> &#125;</span><br><span class=\"line\">],</span><br></pre></td></tr></table></figure>\n<p>而我们项目中的是这样的:<br><img src=\"4.png\" alt=\"\"> 又不想自定义指令来做，还是看下element能不能做吧，于是就开始看文档，发现只能用自定义rules，但是自定义指令，写死的规则也不符合要求啊，因为表格的数据都是不固定的，<br>首先我们把表格的数据源字段移到我们的form中<br><img src=\"1.png\" alt=\"\"><br><img src=\"2.png\" alt=\"\"><br><img src=\"3.png\" alt=\"\"><br>然后自定义规则：<br><img src=\"5.png\" alt=\"\"><br>这里需要用到一些技巧，比如在模板中，<br><figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:prop=<span class=\"string\">\"`inputTaxTable.<span class=\"subst\">$&#123;scope.$index&#125;</span>.thisApplyMoney`\"</span></span><br></pre></td></tr></table></figure></p>\n<p>在需要校验的列中，<code>inputTaxTable.${scope.$index}.thisApplyMoney</code> 查找当前行的数据源，</p>\n<p>以及查找“未报销金额”这行的数据来跟当前金额进行对比的时候，保证找到的当前行的数据。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"comment\">//field字段中包含了该行表格的index</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> field=rule.field;<span class=\"comment\">//规则名称</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> _fieldArr=[];</span><br><span class=\"line\">    _fieldArr=field.split(<span class=\"string\">'.'</span>);</span><br><span class=\"line\">    <span class=\"keyword\">let</span> _index=_fieldArr[<span class=\"number\">1</span>];<span class=\"comment\">//得到表格的第n行</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"built_in\">Number</span>.parseFloat(value)&gt;<span class=\"built_in\">Number</span>.parseFloat(<span class=\"keyword\">this</span>.ruleForm.inputTaxTable[_index].notApplyMoney))&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> callback(<span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'不可大于未报销金额'</span>));</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        callback()  <span class=\"comment\">//这里一定要这样返回，否则validate函数只会执行一次</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n"},{"title":"js判断一个变量是对象还是数组的实用方法记录","abbrlink":"367b716d","date":"2019-03-14T02:54:51.000Z","_content":"在实际开发中，经常需要检测一个变量的类型，是字符串、数字、布尔还是对象、数组？还是null、undefined？ 对于字符串和数字、布尔这种基本类型，用typeof()来检测就足够了，但是typeof用在数组和对象、null之间就不灵了。\n![](1.jpg)\n由图中可以看出，变量为null，数组，对象的abc使用typeof检测出来的都是object，没有办法进一步区分。\n\n### 使用constructor检测\n![](2.jpg)\n\n```\n    var arr=[1,2];\n    var obj={};\n    console.log(arr.constructor === Array) //true\n    console.log(obj.constructor === Array) //false\n    \n```\n### 使用instanceof \n```\n    var arr=[1,2];\n    var obj={};\n    console.log(arr instanceof Array); //true\n\tconsole.log(obj instanceof Array); //false\n\n```\nconstructor和instanceof 在iframe下使用时会失效，每个iframe都有一套环境，都有一个window，不共享原型链。\n\n\n<font color=\"red\">下面的代码取自网络</font>\n```\n    var iframe = document.createElement('iframe'); //创建iframe\n    document.body.appendChild(iframe); //添加到body中\n    xArray = window.frames[window.frames.length-1].Array;\n    var arr = new xArray(1,2,3); // 声明数组[1,2,3]\n    alert(arr instanceof Array); // false\n    alert(arr.constructor === Array); // false \n\n```\n为什么会出现这样的情况呢？原因就是：在当前窗口引入框架，其实就是引入了window对象，当我们在遍历iframe框架里的变量时使用arr instanceof Array 或者arr.constructor === Array，要注意这个Array是当前window对象的Array，而不是构造出arr的iframe里的window，所以会返回false。\n\n### 使用toString方法\n\n```\n    var arr=[1,2];\n    var obj={};\n    console.log(Object.prototype.toString.call(arr)); // \"[object Array]\"\n\tconsole.log(Object.prototype.toString.call(obj)); // \"[object Object]\"\n```\n\n### 使用Array.isArray() \nECMAScript5将Array.isArray()正式引入JavaScript，目的就是准确地检测一个值是否为数组。IE9+、 Firefox 4+、Safari 5+、Opera 10.5+和 Chrome都实现了这个方法。但是在IE8之前的版本是不支持的。\n\n<font color=\"red\">综合上述方法，自己封装一个函数</font>\n```\n    var arr = [];\n    var arr2 = {};\n    function isArrayFn(value){\n        if (typeof Array.isArray === \"function\") {\n            //先检测是否有isArray方法\n            return Array.isArray(value);\n        }else{\n            //不支持isArray方法，则使用toString方法\n            return Object.prototype.toString.call(value) === \"[object Array]\";\n            //如果是对象则是\"[object Object]\"\n        }\n    }\n    console.log(isArrayFn(arr)); // true\n    console.log(isArrayFn(arr2)); // false\n\n```\n","source":"_posts/js判断一个变量是对象还是数组的实用方法记录.md","raw":"---\ntitle: js判断一个变量是对象还是数组的实用方法记录\ntags: js\ncategories: 前端\nabbrlink: 367b716d\ndate: 2019-03-14 10:54:51\n---\n在实际开发中，经常需要检测一个变量的类型，是字符串、数字、布尔还是对象、数组？还是null、undefined？ 对于字符串和数字、布尔这种基本类型，用typeof()来检测就足够了，但是typeof用在数组和对象、null之间就不灵了。\n![](1.jpg)\n由图中可以看出，变量为null，数组，对象的abc使用typeof检测出来的都是object，没有办法进一步区分。\n\n### 使用constructor检测\n![](2.jpg)\n\n```\n    var arr=[1,2];\n    var obj={};\n    console.log(arr.constructor === Array) //true\n    console.log(obj.constructor === Array) //false\n    \n```\n### 使用instanceof \n```\n    var arr=[1,2];\n    var obj={};\n    console.log(arr instanceof Array); //true\n\tconsole.log(obj instanceof Array); //false\n\n```\nconstructor和instanceof 在iframe下使用时会失效，每个iframe都有一套环境，都有一个window，不共享原型链。\n\n\n<font color=\"red\">下面的代码取自网络</font>\n```\n    var iframe = document.createElement('iframe'); //创建iframe\n    document.body.appendChild(iframe); //添加到body中\n    xArray = window.frames[window.frames.length-1].Array;\n    var arr = new xArray(1,2,3); // 声明数组[1,2,3]\n    alert(arr instanceof Array); // false\n    alert(arr.constructor === Array); // false \n\n```\n为什么会出现这样的情况呢？原因就是：在当前窗口引入框架，其实就是引入了window对象，当我们在遍历iframe框架里的变量时使用arr instanceof Array 或者arr.constructor === Array，要注意这个Array是当前window对象的Array，而不是构造出arr的iframe里的window，所以会返回false。\n\n### 使用toString方法\n\n```\n    var arr=[1,2];\n    var obj={};\n    console.log(Object.prototype.toString.call(arr)); // \"[object Array]\"\n\tconsole.log(Object.prototype.toString.call(obj)); // \"[object Object]\"\n```\n\n### 使用Array.isArray() \nECMAScript5将Array.isArray()正式引入JavaScript，目的就是准确地检测一个值是否为数组。IE9+、 Firefox 4+、Safari 5+、Opera 10.5+和 Chrome都实现了这个方法。但是在IE8之前的版本是不支持的。\n\n<font color=\"red\">综合上述方法，自己封装一个函数</font>\n```\n    var arr = [];\n    var arr2 = {};\n    function isArrayFn(value){\n        if (typeof Array.isArray === \"function\") {\n            //先检测是否有isArray方法\n            return Array.isArray(value);\n        }else{\n            //不支持isArray方法，则使用toString方法\n            return Object.prototype.toString.call(value) === \"[object Array]\";\n            //如果是对象则是\"[object Object]\"\n        }\n    }\n    console.log(isArrayFn(arr)); // true\n    console.log(isArrayFn(arr2)); // false\n\n```\n","slug":"js判断一个变量是对象还是数组的实用方法记录","published":1,"updated":"2019-05-11T03:50:44.966Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvoywn0x0009hwuxzxbit601","content":"<p>在实际开发中，经常需要检测一个变量的类型，是字符串、数字、布尔还是对象、数组？还是null、undefined？ 对于字符串和数字、布尔这种基本类型，用typeof()来检测就足够了，但是typeof用在数组和对象、null之间就不灵了。<br><img src=\"1.jpg\" alt=\"\"><br>由图中可以看出，变量为null，数组，对象的abc使用typeof检测出来的都是object，没有办法进一步区分。</p>\n<h3 id=\"使用constructor检测\"><a href=\"#使用constructor检测\" class=\"headerlink\" title=\"使用constructor检测\"></a>使用constructor检测</h3><p><img src=\"2.jpg\" alt=\"\"></p>\n<figure class=\"highlight delphi\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr=[<span class=\"number\">1</span>,<span class=\"number\">2</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj=<span class=\"comment\">&#123;&#125;</span>;</span><br><span class=\"line\">console.log(arr.<span class=\"keyword\">constructor</span> === <span class=\"keyword\">Array</span>) <span class=\"comment\">//true</span></span><br><span class=\"line\">console.log(obj.<span class=\"keyword\">constructor</span> === <span class=\"keyword\">Array</span>) <span class=\"comment\">//false</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"使用instanceof\"><a href=\"#使用instanceof\" class=\"headerlink\" title=\"使用instanceof\"></a>使用instanceof</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   <span class=\"keyword\">var</span> arr=[<span class=\"number\">1</span>,<span class=\"number\">2</span>];</span><br><span class=\"line\">   <span class=\"keyword\">var</span> obj=&#123;&#125;;</span><br><span class=\"line\">   <span class=\"built_in\">console</span>.log(arr <span class=\"keyword\">instanceof</span> <span class=\"built_in\">Array</span>); <span class=\"comment\">//true</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(obj <span class=\"keyword\">instanceof</span> <span class=\"built_in\">Array</span>); <span class=\"comment\">//false</span></span><br></pre></td></tr></table></figure>\n<p>constructor和instanceof 在iframe下使用时会失效，每个iframe都有一套环境，都有一个window，不共享原型链。</p>\n<p><font color=\"red\">下面的代码取自网络</font><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> iframe = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'iframe'</span>); <span class=\"comment\">//创建iframe</span></span><br><span class=\"line\"><span class=\"built_in\">document</span>.body.appendChild(iframe); <span class=\"comment\">//添加到body中</span></span><br><span class=\"line\">xArray = <span class=\"built_in\">window</span>.frames[<span class=\"built_in\">window</span>.frames.length<span class=\"number\">-1</span>].Array;</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr = <span class=\"keyword\">new</span> xArray(<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>); <span class=\"comment\">// 声明数组[1,2,3]</span></span><br><span class=\"line\">alert(arr <span class=\"keyword\">instanceof</span> <span class=\"built_in\">Array</span>); <span class=\"comment\">// false</span></span><br><span class=\"line\">alert(arr.constructor === <span class=\"built_in\">Array</span>); <span class=\"comment\">// false</span></span><br></pre></td></tr></table></figure></p>\n<p>为什么会出现这样的情况呢？原因就是：在当前窗口引入框架，其实就是引入了window对象，当我们在遍历iframe框架里的变量时使用arr instanceof Array 或者arr.constructor === Array，要注意这个Array是当前window对象的Array，而不是构造出arr的iframe里的window，所以会返回false。</p>\n<h3 id=\"使用toString方法\"><a href=\"#使用toString方法\" class=\"headerlink\" title=\"使用toString方法\"></a>使用toString方法</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   <span class=\"keyword\">var</span> arr=[<span class=\"number\">1</span>,<span class=\"number\">2</span>];</span><br><span class=\"line\">   <span class=\"keyword\">var</span> obj=&#123;&#125;;</span><br><span class=\"line\">   <span class=\"built_in\">console</span>.log(<span class=\"built_in\">Object</span>.prototype.toString.call(arr)); <span class=\"comment\">// \"[object Array]\"</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">Object</span>.prototype.toString.call(obj)); <span class=\"comment\">// \"[object Object]\"</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"使用Array-isArray\"><a href=\"#使用Array-isArray\" class=\"headerlink\" title=\"使用Array.isArray()\"></a>使用Array.isArray()</h3><p>ECMAScript5将Array.isArray()正式引入JavaScript，目的就是准确地检测一个值是否为数组。IE9+、 Firefox 4+、Safari 5+、Opera 10.5+和 Chrome都实现了这个方法。但是在IE8之前的版本是不支持的。</p>\n<p><font color=\"red\">综合上述方法，自己封装一个函数</font><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [];</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr2 = &#123;&#125;;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">isArrayFn</span>(<span class=\"params\">value</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> <span class=\"built_in\">Array</span>.isArray === <span class=\"string\">\"function\"</span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">//先检测是否有isArray方法</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"built_in\">Array</span>.isArray(value);</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//不支持isArray方法，则使用toString方法</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"built_in\">Object</span>.prototype.toString.call(value) === <span class=\"string\">\"[object Array]\"</span>;</span><br><span class=\"line\">        <span class=\"comment\">//如果是对象则是\"[object Object]\"</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(isArrayFn(arr)); <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(isArrayFn(arr2)); <span class=\"comment\">// false</span></span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>在实际开发中，经常需要检测一个变量的类型，是字符串、数字、布尔还是对象、数组？还是null、undefined？ 对于字符串和数字、布尔这种基本类型，用typeof()来检测就足够了，但是typeof用在数组和对象、null之间就不灵了。<br><img src=\"1.jpg\" alt=\"\"><br>由图中可以看出，变量为null，数组，对象的abc使用typeof检测出来的都是object，没有办法进一步区分。</p>\n<h3 id=\"使用constructor检测\"><a href=\"#使用constructor检测\" class=\"headerlink\" title=\"使用constructor检测\"></a>使用constructor检测</h3><p><img src=\"2.jpg\" alt=\"\"></p>\n<figure class=\"highlight delphi\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr=[<span class=\"number\">1</span>,<span class=\"number\">2</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj=<span class=\"comment\">&#123;&#125;</span>;</span><br><span class=\"line\">console.log(arr.<span class=\"keyword\">constructor</span> === <span class=\"keyword\">Array</span>) <span class=\"comment\">//true</span></span><br><span class=\"line\">console.log(obj.<span class=\"keyword\">constructor</span> === <span class=\"keyword\">Array</span>) <span class=\"comment\">//false</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"使用instanceof\"><a href=\"#使用instanceof\" class=\"headerlink\" title=\"使用instanceof\"></a>使用instanceof</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   <span class=\"keyword\">var</span> arr=[<span class=\"number\">1</span>,<span class=\"number\">2</span>];</span><br><span class=\"line\">   <span class=\"keyword\">var</span> obj=&#123;&#125;;</span><br><span class=\"line\">   <span class=\"built_in\">console</span>.log(arr <span class=\"keyword\">instanceof</span> <span class=\"built_in\">Array</span>); <span class=\"comment\">//true</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(obj <span class=\"keyword\">instanceof</span> <span class=\"built_in\">Array</span>); <span class=\"comment\">//false</span></span><br></pre></td></tr></table></figure>\n<p>constructor和instanceof 在iframe下使用时会失效，每个iframe都有一套环境，都有一个window，不共享原型链。</p>\n<p><font color=\"red\">下面的代码取自网络</font><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> iframe = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'iframe'</span>); <span class=\"comment\">//创建iframe</span></span><br><span class=\"line\"><span class=\"built_in\">document</span>.body.appendChild(iframe); <span class=\"comment\">//添加到body中</span></span><br><span class=\"line\">xArray = <span class=\"built_in\">window</span>.frames[<span class=\"built_in\">window</span>.frames.length<span class=\"number\">-1</span>].Array;</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr = <span class=\"keyword\">new</span> xArray(<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>); <span class=\"comment\">// 声明数组[1,2,3]</span></span><br><span class=\"line\">alert(arr <span class=\"keyword\">instanceof</span> <span class=\"built_in\">Array</span>); <span class=\"comment\">// false</span></span><br><span class=\"line\">alert(arr.constructor === <span class=\"built_in\">Array</span>); <span class=\"comment\">// false</span></span><br></pre></td></tr></table></figure></p>\n<p>为什么会出现这样的情况呢？原因就是：在当前窗口引入框架，其实就是引入了window对象，当我们在遍历iframe框架里的变量时使用arr instanceof Array 或者arr.constructor === Array，要注意这个Array是当前window对象的Array，而不是构造出arr的iframe里的window，所以会返回false。</p>\n<h3 id=\"使用toString方法\"><a href=\"#使用toString方法\" class=\"headerlink\" title=\"使用toString方法\"></a>使用toString方法</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   <span class=\"keyword\">var</span> arr=[<span class=\"number\">1</span>,<span class=\"number\">2</span>];</span><br><span class=\"line\">   <span class=\"keyword\">var</span> obj=&#123;&#125;;</span><br><span class=\"line\">   <span class=\"built_in\">console</span>.log(<span class=\"built_in\">Object</span>.prototype.toString.call(arr)); <span class=\"comment\">// \"[object Array]\"</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">Object</span>.prototype.toString.call(obj)); <span class=\"comment\">// \"[object Object]\"</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"使用Array-isArray\"><a href=\"#使用Array-isArray\" class=\"headerlink\" title=\"使用Array.isArray()\"></a>使用Array.isArray()</h3><p>ECMAScript5将Array.isArray()正式引入JavaScript，目的就是准确地检测一个值是否为数组。IE9+、 Firefox 4+、Safari 5+、Opera 10.5+和 Chrome都实现了这个方法。但是在IE8之前的版本是不支持的。</p>\n<p><font color=\"red\">综合上述方法，自己封装一个函数</font><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [];</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr2 = &#123;&#125;;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">isArrayFn</span>(<span class=\"params\">value</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> <span class=\"built_in\">Array</span>.isArray === <span class=\"string\">\"function\"</span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">//先检测是否有isArray方法</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"built_in\">Array</span>.isArray(value);</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//不支持isArray方法，则使用toString方法</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"built_in\">Object</span>.prototype.toString.call(value) === <span class=\"string\">\"[object Array]\"</span>;</span><br><span class=\"line\">        <span class=\"comment\">//如果是对象则是\"[object Object]\"</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(isArrayFn(arr)); <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(isArrayFn(arr2)); <span class=\"comment\">// false</span></span><br></pre></td></tr></table></figure></p>\n"},{"title":"ubantu apt-get install方式安装mysql","abbrlink":13666,"date":"2019-05-15T06:41:02.000Z","_content":"\n# 在ubantu上安装mysql并不难，主要是记录下安装数据库时居然不像windows那样选择安装位置，设置用户和密码等\n\n1. `sudo apt-get install mysql-server` 安装mysql核心服务\n2. `sudo apt-get install mysql-server` 安装mysql客户端\n\n安装完成后我们需要去mysql目录查看用户名和密码\n`sudo vim /etc/mysql/debain.cnf`\n```\n[client]\nhost     = localhost\nuser     = debian-sys-maint\npassword = wrMqzOiffsyheEe1\nsocket   = /var/run/mysqld/mysqld.sock\n[mysql_upgrade]\nhost     = localhost\nuser     = debian-sys-maint\npassword = wrMqzOiffsyheEe1\nsocket   = /var/run/mysqld/mysqld.sock\n\n```\n我们用debian-sys-maint用户来登陆\n`mysql -u debian-sys-maint -p`\n输入密码：`wrMqzOiffsyheEe1`\n然后修改密码：\n```\nupdate mysql.user set authentication_string=PASSWORD('root'), plugin='mysql_native_password' where user='root';\n```\n<font color=\"red\">\n注意，authentication_string是密码 ，plugin是验证方式，这两个一定要同时改。从mysql5.7开始root的默认验证方式是auth_socket\n</font>\n可以输入 ` select user, plugin from mysql.user;` 查看到以下内容：\n```\n+------------------+-----------------------+\n| user             | plugin                |\n+------------------+-----------------------+\n| root             | auth_socket           |\n| mysql.session    | mysql_native_password |\n| mysql.sys        | mysql_native_password |\n| debian-sys-maint | mysql_native_password |\n+------------------+-----------------------+\n4 rows in set (0.02 sec)\n\n```\n修改后的：\n```\n+------------------+-----------------------+\n| user             | plugin                |\n+------------------+-----------------------+\n| root             | mysql_native_password |\n| mysql.session    | mysql_native_password |\n| mysql.sys        | mysql_native_password |\n| debian-sys-maint | mysql_native_password |\n+------------------+-----------------------+\n4 rows in set (0.02 sec)\n```\nmysql_native_password这种系统root用户登录时才可以登录数据库的root用户。所以需要把auth_socket改为mysql_native_password，才可以不受系统用户限制。\n\n然后`exit;`推出mysql。`sudo service mysql restart` 重启mysql服务\n\n","source":"_posts/ubantu-apt-get-install方式安装mysql.md","raw":"---\ntitle: ubantu apt-get install方式安装mysql\nabbrlink: 13666\ndate: 2019-05-15 14:41:02\ntags: linux\ncategories: linux\n---\n\n# 在ubantu上安装mysql并不难，主要是记录下安装数据库时居然不像windows那样选择安装位置，设置用户和密码等\n\n1. `sudo apt-get install mysql-server` 安装mysql核心服务\n2. `sudo apt-get install mysql-server` 安装mysql客户端\n\n安装完成后我们需要去mysql目录查看用户名和密码\n`sudo vim /etc/mysql/debain.cnf`\n```\n[client]\nhost     = localhost\nuser     = debian-sys-maint\npassword = wrMqzOiffsyheEe1\nsocket   = /var/run/mysqld/mysqld.sock\n[mysql_upgrade]\nhost     = localhost\nuser     = debian-sys-maint\npassword = wrMqzOiffsyheEe1\nsocket   = /var/run/mysqld/mysqld.sock\n\n```\n我们用debian-sys-maint用户来登陆\n`mysql -u debian-sys-maint -p`\n输入密码：`wrMqzOiffsyheEe1`\n然后修改密码：\n```\nupdate mysql.user set authentication_string=PASSWORD('root'), plugin='mysql_native_password' where user='root';\n```\n<font color=\"red\">\n注意，authentication_string是密码 ，plugin是验证方式，这两个一定要同时改。从mysql5.7开始root的默认验证方式是auth_socket\n</font>\n可以输入 ` select user, plugin from mysql.user;` 查看到以下内容：\n```\n+------------------+-----------------------+\n| user             | plugin                |\n+------------------+-----------------------+\n| root             | auth_socket           |\n| mysql.session    | mysql_native_password |\n| mysql.sys        | mysql_native_password |\n| debian-sys-maint | mysql_native_password |\n+------------------+-----------------------+\n4 rows in set (0.02 sec)\n\n```\n修改后的：\n```\n+------------------+-----------------------+\n| user             | plugin                |\n+------------------+-----------------------+\n| root             | mysql_native_password |\n| mysql.session    | mysql_native_password |\n| mysql.sys        | mysql_native_password |\n| debian-sys-maint | mysql_native_password |\n+------------------+-----------------------+\n4 rows in set (0.02 sec)\n```\nmysql_native_password这种系统root用户登录时才可以登录数据库的root用户。所以需要把auth_socket改为mysql_native_password，才可以不受系统用户限制。\n\n然后`exit;`推出mysql。`sudo service mysql restart` 重启mysql服务\n\n","slug":"ubantu-apt-get-install方式安装mysql","published":1,"updated":"2019-05-15T07:33:01.903Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvoywn0y000ahwuxv3mngwhw","content":"<h1 id=\"在ubantu上安装mysql并不难，主要是记录下安装数据库时居然不像windows那样选择安装位置，设置用户和密码等\"><a href=\"#在ubantu上安装mysql并不难，主要是记录下安装数据库时居然不像windows那样选择安装位置，设置用户和密码等\" class=\"headerlink\" title=\"在ubantu上安装mysql并不难，主要是记录下安装数据库时居然不像windows那样选择安装位置，设置用户和密码等\"></a>在ubantu上安装mysql并不难，主要是记录下安装数据库时居然不像windows那样选择安装位置，设置用户和密码等</h1><ol>\n<li><code>sudo apt-get install mysql-server</code> 安装mysql核心服务</li>\n<li><code>sudo apt-get install mysql-server</code> 安装mysql客户端</li>\n</ol>\n<p>安装完成后我们需要去mysql目录查看用户名和密码<br><code>sudo vim /etc/mysql/debain.cnf</code><br><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[client]</span><br><span class=\"line\">host     = localhost</span><br><span class=\"line\">user     = debian-sys-maint</span><br><span class=\"line\">password = wrMqzOiffsyheEe1</span><br><span class=\"line\">socket   = /var/run/mysqld/mysqld.sock</span><br><span class=\"line\">[mysql_upgrade]</span><br><span class=\"line\">host     = localhost</span><br><span class=\"line\">user     = debian-sys-maint</span><br><span class=\"line\">password = wrMqzOiffsyheEe1</span><br><span class=\"line\">socket   = /var/run/mysqld/mysqld.sock</span><br></pre></td></tr></table></figure></p>\n<p>我们用debian-sys-maint用户来登陆<br><code>mysql -u debian-sys-maint -p</code><br>输入密码：<code>wrMqzOiffsyheEe1</code><br>然后修改密码：<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">update</span> mysql.user <span class=\"keyword\">set</span> authentication_string=<span class=\"keyword\">PASSWORD</span>(<span class=\"string\">'root'</span>), <span class=\"keyword\">plugin</span>=<span class=\"string\">'mysql_native_password'</span> <span class=\"keyword\">where</span> <span class=\"keyword\">user</span>=<span class=\"string\">'root'</span>;</span><br></pre></td></tr></table></figure></p>\n<p><font color=\"red\"><br>注意，authentication_string是密码 ，plugin是验证方式，这两个一定要同时改。从mysql5.7开始root的默认验证方式是auth_socket<br></font><br>可以输入 <code>select user, plugin from mysql.user;</code> 查看到以下内容：<br><figure class=\"highlight gherkin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">+------------------+-----------------------+</span><br><span class=\"line\">|<span class=\"string\"> user             </span>|<span class=\"string\"> plugin                </span>|</span><br><span class=\"line\">+------------------+-----------------------+</span><br><span class=\"line\">|<span class=\"string\"> root             </span>|<span class=\"string\"> auth_socket           </span>|</span><br><span class=\"line\">|<span class=\"string\"> mysql.session    </span>|<span class=\"string\"> mysql_native_password </span>|</span><br><span class=\"line\">|<span class=\"string\"> mysql.sys        </span>|<span class=\"string\"> mysql_native_password </span>|</span><br><span class=\"line\">|<span class=\"string\"> debian-sys-maint </span>|<span class=\"string\"> mysql_native_password </span>|</span><br><span class=\"line\">+------------------+-----------------------+</span><br><span class=\"line\">4 rows in set (0.02 sec)</span><br></pre></td></tr></table></figure></p>\n<p>修改后的：<br><figure class=\"highlight asciidoc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"code\">+------------------+</span>-----------------------+</span><br><span class=\"line\">| user             | plugin                |</span><br><span class=\"line\"><span class=\"code\">+------------------+</span>-----------------------+</span><br><span class=\"line\">| root             | mysql<span class=\"emphasis\">_native_</span>password |</span><br><span class=\"line\">| mysql.session    | mysql<span class=\"emphasis\">_native_</span>password |</span><br><span class=\"line\">| mysql.sys        | mysql<span class=\"emphasis\">_native_</span>password |</span><br><span class=\"line\">| debian-sys-maint | mysql<span class=\"emphasis\">_native_</span>password |</span><br><span class=\"line\"><span class=\"code\">+------------------+</span>-----------------------+</span><br><span class=\"line\">4 rows in set (0.02 sec)</span><br></pre></td></tr></table></figure></p>\n<p>mysql_native_password这种系统root用户登录时才可以登录数据库的root用户。所以需要把auth_socket改为mysql_native_password，才可以不受系统用户限制。</p>\n<p>然后<code>exit;</code>推出mysql。<code>sudo service mysql restart</code> 重启mysql服务</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"在ubantu上安装mysql并不难，主要是记录下安装数据库时居然不像windows那样选择安装位置，设置用户和密码等\"><a href=\"#在ubantu上安装mysql并不难，主要是记录下安装数据库时居然不像windows那样选择安装位置，设置用户和密码等\" class=\"headerlink\" title=\"在ubantu上安装mysql并不难，主要是记录下安装数据库时居然不像windows那样选择安装位置，设置用户和密码等\"></a>在ubantu上安装mysql并不难，主要是记录下安装数据库时居然不像windows那样选择安装位置，设置用户和密码等</h1><ol>\n<li><code>sudo apt-get install mysql-server</code> 安装mysql核心服务</li>\n<li><code>sudo apt-get install mysql-server</code> 安装mysql客户端</li>\n</ol>\n<p>安装完成后我们需要去mysql目录查看用户名和密码<br><code>sudo vim /etc/mysql/debain.cnf</code><br><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[client]</span><br><span class=\"line\">host     = localhost</span><br><span class=\"line\">user     = debian-sys-maint</span><br><span class=\"line\">password = wrMqzOiffsyheEe1</span><br><span class=\"line\">socket   = /var/run/mysqld/mysqld.sock</span><br><span class=\"line\">[mysql_upgrade]</span><br><span class=\"line\">host     = localhost</span><br><span class=\"line\">user     = debian-sys-maint</span><br><span class=\"line\">password = wrMqzOiffsyheEe1</span><br><span class=\"line\">socket   = /var/run/mysqld/mysqld.sock</span><br></pre></td></tr></table></figure></p>\n<p>我们用debian-sys-maint用户来登陆<br><code>mysql -u debian-sys-maint -p</code><br>输入密码：<code>wrMqzOiffsyheEe1</code><br>然后修改密码：<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">update</span> mysql.user <span class=\"keyword\">set</span> authentication_string=<span class=\"keyword\">PASSWORD</span>(<span class=\"string\">'root'</span>), <span class=\"keyword\">plugin</span>=<span class=\"string\">'mysql_native_password'</span> <span class=\"keyword\">where</span> <span class=\"keyword\">user</span>=<span class=\"string\">'root'</span>;</span><br></pre></td></tr></table></figure></p>\n<p><font color=\"red\"><br>注意，authentication_string是密码 ，plugin是验证方式，这两个一定要同时改。从mysql5.7开始root的默认验证方式是auth_socket<br></font><br>可以输入 <code>select user, plugin from mysql.user;</code> 查看到以下内容：<br><figure class=\"highlight gherkin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">+------------------+-----------------------+</span><br><span class=\"line\">|<span class=\"string\"> user             </span>|<span class=\"string\"> plugin                </span>|</span><br><span class=\"line\">+------------------+-----------------------+</span><br><span class=\"line\">|<span class=\"string\"> root             </span>|<span class=\"string\"> auth_socket           </span>|</span><br><span class=\"line\">|<span class=\"string\"> mysql.session    </span>|<span class=\"string\"> mysql_native_password </span>|</span><br><span class=\"line\">|<span class=\"string\"> mysql.sys        </span>|<span class=\"string\"> mysql_native_password </span>|</span><br><span class=\"line\">|<span class=\"string\"> debian-sys-maint </span>|<span class=\"string\"> mysql_native_password </span>|</span><br><span class=\"line\">+------------------+-----------------------+</span><br><span class=\"line\">4 rows in set (0.02 sec)</span><br></pre></td></tr></table></figure></p>\n<p>修改后的：<br><figure class=\"highlight asciidoc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"code\">+------------------+</span>-----------------------+</span><br><span class=\"line\">| user             | plugin                |</span><br><span class=\"line\"><span class=\"code\">+------------------+</span>-----------------------+</span><br><span class=\"line\">| root             | mysql<span class=\"emphasis\">_native_</span>password |</span><br><span class=\"line\">| mysql.session    | mysql<span class=\"emphasis\">_native_</span>password |</span><br><span class=\"line\">| mysql.sys        | mysql<span class=\"emphasis\">_native_</span>password |</span><br><span class=\"line\">| debian-sys-maint | mysql<span class=\"emphasis\">_native_</span>password |</span><br><span class=\"line\"><span class=\"code\">+------------------+</span>-----------------------+</span><br><span class=\"line\">4 rows in set (0.02 sec)</span><br></pre></td></tr></table></figure></p>\n<p>mysql_native_password这种系统root用户登录时才可以登录数据库的root用户。所以需要把auth_socket改为mysql_native_password，才可以不受系统用户限制。</p>\n<p>然后<code>exit;</code>推出mysql。<code>sudo service mysql restart</code> 重启mysql服务</p>\n"},{"title":"怎么样在别的电脑同步更新发表hexo博客？","abbrlink":"301aa86","date":"2019-04-24T14:12:23.000Z","_content":"在git上放两个分支，一个master分支，用来存放hexo 生成public代码的（发布），另一个分支随便取名字吧比如hexo，就是放整个hexo源码的，到时候在别的电脑直接克隆hexo代码，然后写文章，发布，然后同步hexo分支代码。就可以了，很简单。\n<font color=\"red\">注意：如果主题文件是从git克隆下来的，比如next主题，再提交之前先把next下的.git和.github文件夹删掉。如果之前没有删掉，发现next无法提交到github。此时要删掉你博客目录下的.git目录价下的index.lock文件</font>\n然后：\n```\n git rm --cached themes/next/\n git add themes/next/\n ```\n 如果一次不行，尝试多几次。\n 这个时候就可以提交到github了","source":"_posts/怎么样在别的电脑同步更新发表hexo博客？.md","raw":"---\ntitle: 怎么样在别的电脑同步更新发表hexo博客？\ntags: 技术\ncategories: 技术\nabbrlink: 301aa86\ndate: 2019-04-24 22:12:23\n---\n在git上放两个分支，一个master分支，用来存放hexo 生成public代码的（发布），另一个分支随便取名字吧比如hexo，就是放整个hexo源码的，到时候在别的电脑直接克隆hexo代码，然后写文章，发布，然后同步hexo分支代码。就可以了，很简单。\n<font color=\"red\">注意：如果主题文件是从git克隆下来的，比如next主题，再提交之前先把next下的.git和.github文件夹删掉。如果之前没有删掉，发现next无法提交到github。此时要删掉你博客目录下的.git目录价下的index.lock文件</font>\n然后：\n```\n git rm --cached themes/next/\n git add themes/next/\n ```\n 如果一次不行，尝试多几次。\n 这个时候就可以提交到github了","slug":"怎么样在别的电脑同步更新发表hexo博客？","published":1,"updated":"2019-05-11T03:50:44.988Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvoywn14000ehwux1fynmqec","content":"<p>在git上放两个分支，一个master分支，用来存放hexo 生成public代码的（发布），另一个分支随便取名字吧比如hexo，就是放整个hexo源码的，到时候在别的电脑直接克隆hexo代码，然后写文章，发布，然后同步hexo分支代码。就可以了，很简单。</p>\n<p><font color=\"red\">注意：如果主题文件是从git克隆下来的，比如next主题，再提交之前先把next下的.git和.github文件夹删掉。如果之前没有删掉，发现next无法提交到github。此时要删掉你博客目录下的.git目录价下的index.lock文件</font><br>然后：<br><figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git rm --cached themes/<span class=\"keyword\">next</span>/</span><br><span class=\"line\">git <span class=\"built_in\">add</span> themes/<span class=\"keyword\">next</span>/</span><br></pre></td></tr></table></figure></p>\n<p> 如果一次不行，尝试多几次。<br> 这个时候就可以提交到github了</p>\n","site":{"data":{}},"excerpt":"","more":"<p>在git上放两个分支，一个master分支，用来存放hexo 生成public代码的（发布），另一个分支随便取名字吧比如hexo，就是放整个hexo源码的，到时候在别的电脑直接克隆hexo代码，然后写文章，发布，然后同步hexo分支代码。就可以了，很简单。</p>\n<p><font color=\"red\">注意：如果主题文件是从git克隆下来的，比如next主题，再提交之前先把next下的.git和.github文件夹删掉。如果之前没有删掉，发现next无法提交到github。此时要删掉你博客目录下的.git目录价下的index.lock文件</font><br>然后：<br><figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git rm --cached themes/<span class=\"keyword\">next</span>/</span><br><span class=\"line\">git <span class=\"built_in\">add</span> themes/<span class=\"keyword\">next</span>/</span><br></pre></td></tr></table></figure></p>\n<p> 如果一次不行，尝试多几次。<br> 这个时候就可以提交到github了</p>\n"},{"title":"实现一个简单的深拷贝","abbrlink":"25ca6631","date":"2019-03-30T11:42:44.000Z","_content":"\n在js中经常需要用到变量的拷贝，比如`var a=1;var b=a;` 这个时候修改b的值，a不会改变`b=2;console.log(a); //1`,但是需要注意，这种方式拷贝属于浅拷贝，只局限在简单类型的拷贝：string、number、boolean、null、undefiend。如果你用这种方式拷贝一个数组或者对象，那么就得注意了，\n```\nvar a=[1,2,3]; \nvar b=a;\nb[0]=66;\nconsole.log(a); //[66,2,3];\n```\n可以看到，b的值变了，a也变了，所以对于数组和对象不能用这种浅拷贝，因为拷贝的只是引用地址，实际上还是同一个，不过在有一种情况下，修改复制后的变量，被复制的变量不会跟着改变，那就是复制后，给复制变量重新定义值得时候，原来的变量不会受影响，因为此时已经给复制后的变量重新分配指针了，如下面所示：\n```\nvar arr = [1,2,3,4];\nvar arr_copy = arr ;\narr_copy = [1,2,3,4,5];\n\nconsole.log(arr); //[1,2,3,4]\nconsole.log(arr_copy);//[1,2,3,4,5]\n\nvar obj = {\n    name:'张三',\n    age:20\n};\nvar obj_copy = obj ;\nobj_copy = {\n    name:'李四',\n    age:20\n};\nconsole.log(obj.name);//张三\nconsole.log(obj_copy.name);//李四\n\n```\n\n### 使用递归进行深拷贝。\n```\nvar car = {\n    name : '宝马',\n    color:'红色',\n}\n//判断是数组还是对象\nfunction getType(obj){\n    if(Object.prototype.toString.call(obj)=='[object Object]'){\n        return 'Object';\n    }else if(Object.prototype.toString.call(obj)=='[object Array]'){\n        return 'Array';\n    }else{\n        return 'nomal';\n    }\n}\n\nfunction deepCopy(obj) {\n    if (getType(obj)=='nomal') {\n        return obj ;  //如果是基本类型则直接返回\n    }else{\n        var newObj = getType(obj)=='Object'?{}:[];\n        for(var key in obj){\n            if(obj.hasOwnProperty(key)){\n                newObj[key] = deepCopy(obj[key]); //递归\n            }\n        }\n    }\n    return newObj;\n}\nvar newCar = deepCopy(car) ;\nnewInfo.name = '奔驰';\nconsole.log(newCar); //{name:'奔驰',color:'红色'}\nconsole.log(car);//{name:'宝马',color:'红色'}\n```\n这里用到.hasOwnProperty是为了避免在有继承时拷贝到继承自对象中的值（也就是a继承b时,使用.hasOwnProperty就是为了只拷贝a中的变量，过滤继承自b中的变量）","source":"_posts/实现一个简单的深拷贝.md","raw":"---\ntitle: 实现一个简单的深拷贝\ntags: js\ncategories: 前端\nabbrlink: 25ca6631\ndate: 2019-03-30 19:42:44\n---\n\n在js中经常需要用到变量的拷贝，比如`var a=1;var b=a;` 这个时候修改b的值，a不会改变`b=2;console.log(a); //1`,但是需要注意，这种方式拷贝属于浅拷贝，只局限在简单类型的拷贝：string、number、boolean、null、undefiend。如果你用这种方式拷贝一个数组或者对象，那么就得注意了，\n```\nvar a=[1,2,3]; \nvar b=a;\nb[0]=66;\nconsole.log(a); //[66,2,3];\n```\n可以看到，b的值变了，a也变了，所以对于数组和对象不能用这种浅拷贝，因为拷贝的只是引用地址，实际上还是同一个，不过在有一种情况下，修改复制后的变量，被复制的变量不会跟着改变，那就是复制后，给复制变量重新定义值得时候，原来的变量不会受影响，因为此时已经给复制后的变量重新分配指针了，如下面所示：\n```\nvar arr = [1,2,3,4];\nvar arr_copy = arr ;\narr_copy = [1,2,3,4,5];\n\nconsole.log(arr); //[1,2,3,4]\nconsole.log(arr_copy);//[1,2,3,4,5]\n\nvar obj = {\n    name:'张三',\n    age:20\n};\nvar obj_copy = obj ;\nobj_copy = {\n    name:'李四',\n    age:20\n};\nconsole.log(obj.name);//张三\nconsole.log(obj_copy.name);//李四\n\n```\n\n### 使用递归进行深拷贝。\n```\nvar car = {\n    name : '宝马',\n    color:'红色',\n}\n//判断是数组还是对象\nfunction getType(obj){\n    if(Object.prototype.toString.call(obj)=='[object Object]'){\n        return 'Object';\n    }else if(Object.prototype.toString.call(obj)=='[object Array]'){\n        return 'Array';\n    }else{\n        return 'nomal';\n    }\n}\n\nfunction deepCopy(obj) {\n    if (getType(obj)=='nomal') {\n        return obj ;  //如果是基本类型则直接返回\n    }else{\n        var newObj = getType(obj)=='Object'?{}:[];\n        for(var key in obj){\n            if(obj.hasOwnProperty(key)){\n                newObj[key] = deepCopy(obj[key]); //递归\n            }\n        }\n    }\n    return newObj;\n}\nvar newCar = deepCopy(car) ;\nnewInfo.name = '奔驰';\nconsole.log(newCar); //{name:'奔驰',color:'红色'}\nconsole.log(car);//{name:'宝马',color:'红色'}\n```\n这里用到.hasOwnProperty是为了避免在有继承时拷贝到继承自对象中的值（也就是a继承b时,使用.hasOwnProperty就是为了只拷贝a中的变量，过滤继承自b中的变量）","slug":"实现一个简单的深拷贝","published":1,"updated":"2019-05-11T03:50:44.986Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvoywn18000ghwuxxf0rlk2g","content":"<p>在js中经常需要用到变量的拷贝，比如<code>var a=1;var b=a;</code> 这个时候修改b的值，a不会改变<code>b=2;console.log(a); //1</code>,但是需要注意，这种方式拷贝属于浅拷贝，只局限在简单类型的拷贝：string、number、boolean、null、undefiend。如果你用这种方式拷贝一个数组或者对象，那么就得注意了，<br><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var a=[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>]; </span><br><span class=\"line\">var b=a;</span><br><span class=\"line\">b[<span class=\"number\">0</span>]=<span class=\"number\">66</span>;</span><br><span class=\"line\">console.log(a); <span class=\"comment\">//[66,2,3];</span></span><br></pre></td></tr></table></figure></p>\n<p>可以看到，b的值变了，a也变了，所以对于数组和对象不能用这种浅拷贝，因为拷贝的只是引用地址，实际上还是同一个，不过在有一种情况下，修改复制后的变量，被复制的变量不会跟着改变，那就是复制后，给复制变量重新定义值得时候，原来的变量不会受影响，因为此时已经给复制后的变量重新分配指针了，如下面所示：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr_copy = arr ;</span><br><span class=\"line\">arr_copy = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr); <span class=\"comment\">//[1,2,3,4]</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr_copy);<span class=\"comment\">//[1,2,3,4,5]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">    name:<span class=\"string\">'张三'</span>,</span><br><span class=\"line\">    age:<span class=\"number\">20</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj_copy = obj ;</span><br><span class=\"line\">obj_copy = &#123;</span><br><span class=\"line\">    name:<span class=\"string\">'李四'</span>,</span><br><span class=\"line\">    age:<span class=\"number\">20</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(obj.name);<span class=\"comment\">//张三</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(obj_copy.name);<span class=\"comment\">//李四</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"使用递归进行深拷贝。\"><a href=\"#使用递归进行深拷贝。\" class=\"headerlink\" title=\"使用递归进行深拷贝。\"></a>使用递归进行深拷贝。</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> car = &#123;</span><br><span class=\"line\">    name : <span class=\"string\">'宝马'</span>,</span><br><span class=\"line\">    color:<span class=\"string\">'红色'</span>,</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//判断是数组还是对象</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getType</span>(<span class=\"params\">obj</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"built_in\">Object</span>.prototype.toString.call(obj)==<span class=\"string\">'[object Object]'</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">'Object'</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(<span class=\"built_in\">Object</span>.prototype.toString.call(obj)==<span class=\"string\">'[object Array]'</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">'Array'</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">'nomal'</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">deepCopy</span>(<span class=\"params\">obj</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (getType(obj)==<span class=\"string\">'nomal'</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> obj ;  <span class=\"comment\">//如果是基本类型则直接返回</span></span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> newObj = getType(obj)==<span class=\"string\">'Object'</span>?&#123;&#125;:[];</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> key <span class=\"keyword\">in</span> obj)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(obj.hasOwnProperty(key))&#123;</span><br><span class=\"line\">                newObj[key] = deepCopy(obj[key]); <span class=\"comment\">//递归</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> newObj;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> newCar = deepCopy(car) ;</span><br><span class=\"line\">newInfo.name = <span class=\"string\">'奔驰'</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(newCar); <span class=\"comment\">//&#123;name:'奔驰',color:'红色'&#125;</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(car);<span class=\"comment\">//&#123;name:'宝马',color:'红色'&#125;</span></span><br></pre></td></tr></table></figure>\n<p>这里用到.hasOwnProperty是为了避免在有继承时拷贝到继承自对象中的值（也就是a继承b时,使用.hasOwnProperty就是为了只拷贝a中的变量，过滤继承自b中的变量）</p>\n","site":{"data":{}},"excerpt":"","more":"<p>在js中经常需要用到变量的拷贝，比如<code>var a=1;var b=a;</code> 这个时候修改b的值，a不会改变<code>b=2;console.log(a); //1</code>,但是需要注意，这种方式拷贝属于浅拷贝，只局限在简单类型的拷贝：string、number、boolean、null、undefiend。如果你用这种方式拷贝一个数组或者对象，那么就得注意了，<br><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var a=[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>]; </span><br><span class=\"line\">var b=a;</span><br><span class=\"line\">b[<span class=\"number\">0</span>]=<span class=\"number\">66</span>;</span><br><span class=\"line\">console.log(a); <span class=\"comment\">//[66,2,3];</span></span><br></pre></td></tr></table></figure></p>\n<p>可以看到，b的值变了，a也变了，所以对于数组和对象不能用这种浅拷贝，因为拷贝的只是引用地址，实际上还是同一个，不过在有一种情况下，修改复制后的变量，被复制的变量不会跟着改变，那就是复制后，给复制变量重新定义值得时候，原来的变量不会受影响，因为此时已经给复制后的变量重新分配指针了，如下面所示：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr_copy = arr ;</span><br><span class=\"line\">arr_copy = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr); <span class=\"comment\">//[1,2,3,4]</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr_copy);<span class=\"comment\">//[1,2,3,4,5]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">    name:<span class=\"string\">'张三'</span>,</span><br><span class=\"line\">    age:<span class=\"number\">20</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj_copy = obj ;</span><br><span class=\"line\">obj_copy = &#123;</span><br><span class=\"line\">    name:<span class=\"string\">'李四'</span>,</span><br><span class=\"line\">    age:<span class=\"number\">20</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(obj.name);<span class=\"comment\">//张三</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(obj_copy.name);<span class=\"comment\">//李四</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"使用递归进行深拷贝。\"><a href=\"#使用递归进行深拷贝。\" class=\"headerlink\" title=\"使用递归进行深拷贝。\"></a>使用递归进行深拷贝。</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> car = &#123;</span><br><span class=\"line\">    name : <span class=\"string\">'宝马'</span>,</span><br><span class=\"line\">    color:<span class=\"string\">'红色'</span>,</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//判断是数组还是对象</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getType</span>(<span class=\"params\">obj</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"built_in\">Object</span>.prototype.toString.call(obj)==<span class=\"string\">'[object Object]'</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">'Object'</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(<span class=\"built_in\">Object</span>.prototype.toString.call(obj)==<span class=\"string\">'[object Array]'</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">'Array'</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">'nomal'</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">deepCopy</span>(<span class=\"params\">obj</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (getType(obj)==<span class=\"string\">'nomal'</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> obj ;  <span class=\"comment\">//如果是基本类型则直接返回</span></span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> newObj = getType(obj)==<span class=\"string\">'Object'</span>?&#123;&#125;:[];</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> key <span class=\"keyword\">in</span> obj)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(obj.hasOwnProperty(key))&#123;</span><br><span class=\"line\">                newObj[key] = deepCopy(obj[key]); <span class=\"comment\">//递归</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> newObj;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> newCar = deepCopy(car) ;</span><br><span class=\"line\">newInfo.name = <span class=\"string\">'奔驰'</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(newCar); <span class=\"comment\">//&#123;name:'奔驰',color:'红色'&#125;</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(car);<span class=\"comment\">//&#123;name:'宝马',color:'红色'&#125;</span></span><br></pre></td></tr></table></figure>\n<p>这里用到.hasOwnProperty是为了避免在有继承时拷贝到继承自对象中的值（也就是a继承b时,使用.hasOwnProperty就是为了只拷贝a中的变量，过滤继承自b中的变量）</p>\n"},{"title":"用hexo+github搭建个人博客","abbrlink":"4443dac6","date":"2019-02-27T07:33:57.000Z","_content":"## 用hexo+github page快速搭建个人静态博客\n\n### 1.hexo环境搭建\n\n首先需要电脑安装好了nodejs（具体安装步骤略过），还需要有github账号。打开cmd命令行，全局安装hexo ``npm install -g hexo-cli`` 可以使用 ``hexo v`` 来检查是否安装成功。\n接下来使用hexo cli来创建项目：使用``hexo init`` 就会在当前文件夹下创建了项目，当然也可以使用``hexo init 文件夹名称`` 来创建文件夹的同时创建项目。接着运行 ``npm install``安装依赖，注意，安装hexo的文件夹需要是空文件夹。\n\n### 2.hexo的基本使用及常见的命令\n\n``hexo s`` 使用这个命令可以在本地跑起来，可以看到cmd窗口提示项目运行在 ``http://localhost:4000``，打开浏览器输入提示的地址即可访问了，不过可以看到，默认的主题有点丑，我们可以换一个，在这里我们换next这个简洁的主题。我们可以直接百度搜索hexo next主题官网或者去hexo官网找next主题都可以，我们找到next的github，克隆下来，放到博客项目的themes目录下，接下来打开根目录的配置文件_config.yml文件找到 theme，把默认的该为next，然后命令行``hexo clean && hexo s``刷新页面即可成功替换主题了。\n快速创建文章命令为 ``hexo new \"文章名字\"``  执行完这个命令后就会在sources下的_posts目录下创建名称为 刚刚创建的同名md文件，可以用编辑器直接打开编辑了。\n#### 这里需要注意：在next主题的配置文件下添加了菜单后，点击了提示找不到页面，不要慌，是因为默认只生产home和Archive页面，需要自己创建相应的页面，比如about页面 ``hexo new page \"about\"`` 这时 source里面多了个目录about，里面有个index.md，就可以正常访问了，内容就在那个index.md里添加\n\n### 与github对接\n\n在github上新建一个名为xxx.github.io 的仓库，然后在hexo的_config.yml中的\n\n``` \ndeploy: \n  type: git \n  repository: git@github.com:hongyu2016/hongyu2016.github.io.git \n  branch: master\n```\n填写相应的git地址，然后需要把本地项目与git仓库相关联起来，需要使用ssh来连接，git ssh连接请参考 [配置git ssh](https://www.cnblogs.com/superGG1990/p/6844952.html) 。在本地仓库与远程仓库连接的过程中可能会出现分支不匹配等错误，需要具体问题然后再进行针对性解决。本地仓库与远程仓库关联上后就可以在本地进行发布了，``hexo d``为发布命令，会将项目发布到github page，发布成功后，会在本地生成的静态文件推送到到github，其他文件是不会推送的，这个时候会把原本在github上的readme文件删除，不要慌，在resoures下新建readme文件再次发布就好了，注意：千万不要使用github的git push发布，这样发布是没有效果的，github会在每次push时发编译失败的邮件给你，因为github page只支持静态文件，所以只能使用``hexo d``命令，另外在发布前最好先``hexo clean && hexo g``先清除和重新生成静态文件发发布。发布成功后，输入xxx.github.io就可以正常访问博客了。\n\n## 结语：搭建hexo博客还是比较简单的，个人觉得在推送到github的过程中比较麻烦，容易出各种问题，这个地方需要注意。","source":"_posts/用hexo-github搭建个人博客.md","raw":"---\ntitle: 用hexo+github搭建个人博客\ntags: 技术\ncategories: 技术\nabbrlink: 4443dac6\ndate: 2019-02-27 15:33:57\n---\n## 用hexo+github page快速搭建个人静态博客\n\n### 1.hexo环境搭建\n\n首先需要电脑安装好了nodejs（具体安装步骤略过），还需要有github账号。打开cmd命令行，全局安装hexo ``npm install -g hexo-cli`` 可以使用 ``hexo v`` 来检查是否安装成功。\n接下来使用hexo cli来创建项目：使用``hexo init`` 就会在当前文件夹下创建了项目，当然也可以使用``hexo init 文件夹名称`` 来创建文件夹的同时创建项目。接着运行 ``npm install``安装依赖，注意，安装hexo的文件夹需要是空文件夹。\n\n### 2.hexo的基本使用及常见的命令\n\n``hexo s`` 使用这个命令可以在本地跑起来，可以看到cmd窗口提示项目运行在 ``http://localhost:4000``，打开浏览器输入提示的地址即可访问了，不过可以看到，默认的主题有点丑，我们可以换一个，在这里我们换next这个简洁的主题。我们可以直接百度搜索hexo next主题官网或者去hexo官网找next主题都可以，我们找到next的github，克隆下来，放到博客项目的themes目录下，接下来打开根目录的配置文件_config.yml文件找到 theme，把默认的该为next，然后命令行``hexo clean && hexo s``刷新页面即可成功替换主题了。\n快速创建文章命令为 ``hexo new \"文章名字\"``  执行完这个命令后就会在sources下的_posts目录下创建名称为 刚刚创建的同名md文件，可以用编辑器直接打开编辑了。\n#### 这里需要注意：在next主题的配置文件下添加了菜单后，点击了提示找不到页面，不要慌，是因为默认只生产home和Archive页面，需要自己创建相应的页面，比如about页面 ``hexo new page \"about\"`` 这时 source里面多了个目录about，里面有个index.md，就可以正常访问了，内容就在那个index.md里添加\n\n### 与github对接\n\n在github上新建一个名为xxx.github.io 的仓库，然后在hexo的_config.yml中的\n\n``` \ndeploy: \n  type: git \n  repository: git@github.com:hongyu2016/hongyu2016.github.io.git \n  branch: master\n```\n填写相应的git地址，然后需要把本地项目与git仓库相关联起来，需要使用ssh来连接，git ssh连接请参考 [配置git ssh](https://www.cnblogs.com/superGG1990/p/6844952.html) 。在本地仓库与远程仓库连接的过程中可能会出现分支不匹配等错误，需要具体问题然后再进行针对性解决。本地仓库与远程仓库关联上后就可以在本地进行发布了，``hexo d``为发布命令，会将项目发布到github page，发布成功后，会在本地生成的静态文件推送到到github，其他文件是不会推送的，这个时候会把原本在github上的readme文件删除，不要慌，在resoures下新建readme文件再次发布就好了，注意：千万不要使用github的git push发布，这样发布是没有效果的，github会在每次push时发编译失败的邮件给你，因为github page只支持静态文件，所以只能使用``hexo d``命令，另外在发布前最好先``hexo clean && hexo g``先清除和重新生成静态文件发发布。发布成功后，输入xxx.github.io就可以正常访问博客了。\n\n## 结语：搭建hexo博客还是比较简单的，个人觉得在推送到github的过程中比较麻烦，容易出各种问题，这个地方需要注意。","slug":"用hexo-github搭建个人博客","published":1,"updated":"2019-05-11T03:50:44.991Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvoywn1b000khwuxraeacc2z","content":"<h2 id=\"用hexo-github-page快速搭建个人静态博客\"><a href=\"#用hexo-github-page快速搭建个人静态博客\" class=\"headerlink\" title=\"用hexo+github page快速搭建个人静态博客\"></a>用hexo+github page快速搭建个人静态博客</h2><h3 id=\"1-hexo环境搭建\"><a href=\"#1-hexo环境搭建\" class=\"headerlink\" title=\"1.hexo环境搭建\"></a>1.hexo环境搭建</h3><p>首先需要电脑安装好了nodejs（具体安装步骤略过），还需要有github账号。打开cmd命令行，全局安装hexo <code>npm install -g hexo-cli</code> 可以使用 <code>hexo v</code> 来检查是否安装成功。<br>接下来使用hexo cli来创建项目：使用<code>hexo init</code> 就会在当前文件夹下创建了项目，当然也可以使用<code>hexo init 文件夹名称</code> 来创建文件夹的同时创建项目。接着运行 <code>npm install</code>安装依赖，注意，安装hexo的文件夹需要是空文件夹。</p>\n<h3 id=\"2-hexo的基本使用及常见的命令\"><a href=\"#2-hexo的基本使用及常见的命令\" class=\"headerlink\" title=\"2.hexo的基本使用及常见的命令\"></a>2.hexo的基本使用及常见的命令</h3><p><code>hexo s</code> 使用这个命令可以在本地跑起来，可以看到cmd窗口提示项目运行在 <code>http://localhost:4000</code>，打开浏览器输入提示的地址即可访问了，不过可以看到，默认的主题有点丑，我们可以换一个，在这里我们换next这个简洁的主题。我们可以直接百度搜索hexo next主题官网或者去hexo官网找next主题都可以，我们找到next的github，克隆下来，放到博客项目的themes目录下，接下来打开根目录的配置文件_config.yml文件找到 theme，把默认的该为next，然后命令行<code>hexo clean &amp;&amp; hexo s</code>刷新页面即可成功替换主题了。<br>快速创建文章命令为 <code>hexo new &quot;文章名字&quot;</code>  执行完这个命令后就会在sources下的_posts目录下创建名称为 刚刚创建的同名md文件，可以用编辑器直接打开编辑了。</p>\n<h4 id=\"这里需要注意：在next主题的配置文件下添加了菜单后，点击了提示找不到页面，不要慌，是因为默认只生产home和Archive页面，需要自己创建相应的页面，比如about页面-hexo-new-page-quot-about-quot-这时-source里面多了个目录about，里面有个index-md，就可以正常访问了，内容就在那个index-md里添加\"><a href=\"#这里需要注意：在next主题的配置文件下添加了菜单后，点击了提示找不到页面，不要慌，是因为默认只生产home和Archive页面，需要自己创建相应的页面，比如about页面-hexo-new-page-quot-about-quot-这时-source里面多了个目录about，里面有个index-md，就可以正常访问了，内容就在那个index-md里添加\" class=\"headerlink\" title=\"这里需要注意：在next主题的配置文件下添加了菜单后，点击了提示找不到页面，不要慌，是因为默认只生产home和Archive页面，需要自己创建相应的页面，比如about页面 hexo new page &quot;about&quot; 这时 source里面多了个目录about，里面有个index.md，就可以正常访问了，内容就在那个index.md里添加\"></a>这里需要注意：在next主题的配置文件下添加了菜单后，点击了提示找不到页面，不要慌，是因为默认只生产home和Archive页面，需要自己创建相应的页面，比如about页面 <code>hexo new page &quot;about&quot;</code> 这时 source里面多了个目录about，里面有个index.md，就可以正常访问了，内容就在那个index.md里添加</h4><h3 id=\"与github对接\"><a href=\"#与github对接\" class=\"headerlink\" title=\"与github对接\"></a>与github对接</h3><p>在github上新建一个名为xxx.github.io 的仓库，然后在hexo的_config.yml中的</p>\n<figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">deploy</span>: </span><br><span class=\"line\">  <span class=\"attribute\">type</span>: git </span><br><span class=\"line\">  <span class=\"attribute\">repository</span>: git<span class=\"variable\">@github</span>.<span class=\"attribute\">com</span>:hongyu2016/hongyu2016.github.io.git </span><br><span class=\"line\">  <span class=\"attribute\">branch</span>: master</span><br></pre></td></tr></table></figure>\n<p>填写相应的git地址，然后需要把本地项目与git仓库相关联起来，需要使用ssh来连接，git ssh连接请参考 <a href=\"https://www.cnblogs.com/superGG1990/p/6844952.html\" target=\"_blank\" rel=\"noopener\">配置git ssh</a> 。在本地仓库与远程仓库连接的过程中可能会出现分支不匹配等错误，需要具体问题然后再进行针对性解决。本地仓库与远程仓库关联上后就可以在本地进行发布了，<code>hexo d</code>为发布命令，会将项目发布到github page，发布成功后，会在本地生成的静态文件推送到到github，其他文件是不会推送的，这个时候会把原本在github上的readme文件删除，不要慌，在resoures下新建readme文件再次发布就好了，注意：千万不要使用github的git push发布，这样发布是没有效果的，github会在每次push时发编译失败的邮件给你，因为github page只支持静态文件，所以只能使用<code>hexo d</code>命令，另外在发布前最好先<code>hexo clean &amp;&amp; hexo g</code>先清除和重新生成静态文件发发布。发布成功后，输入xxx.github.io就可以正常访问博客了。</p>\n<h2 id=\"结语：搭建hexo博客还是比较简单的，个人觉得在推送到github的过程中比较麻烦，容易出各种问题，这个地方需要注意。\"><a href=\"#结语：搭建hexo博客还是比较简单的，个人觉得在推送到github的过程中比较麻烦，容易出各种问题，这个地方需要注意。\" class=\"headerlink\" title=\"结语：搭建hexo博客还是比较简单的，个人觉得在推送到github的过程中比较麻烦，容易出各种问题，这个地方需要注意。\"></a>结语：搭建hexo博客还是比较简单的，个人觉得在推送到github的过程中比较麻烦，容易出各种问题，这个地方需要注意。</h2>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"用hexo-github-page快速搭建个人静态博客\"><a href=\"#用hexo-github-page快速搭建个人静态博客\" class=\"headerlink\" title=\"用hexo+github page快速搭建个人静态博客\"></a>用hexo+github page快速搭建个人静态博客</h2><h3 id=\"1-hexo环境搭建\"><a href=\"#1-hexo环境搭建\" class=\"headerlink\" title=\"1.hexo环境搭建\"></a>1.hexo环境搭建</h3><p>首先需要电脑安装好了nodejs（具体安装步骤略过），还需要有github账号。打开cmd命令行，全局安装hexo <code>npm install -g hexo-cli</code> 可以使用 <code>hexo v</code> 来检查是否安装成功。<br>接下来使用hexo cli来创建项目：使用<code>hexo init</code> 就会在当前文件夹下创建了项目，当然也可以使用<code>hexo init 文件夹名称</code> 来创建文件夹的同时创建项目。接着运行 <code>npm install</code>安装依赖，注意，安装hexo的文件夹需要是空文件夹。</p>\n<h3 id=\"2-hexo的基本使用及常见的命令\"><a href=\"#2-hexo的基本使用及常见的命令\" class=\"headerlink\" title=\"2.hexo的基本使用及常见的命令\"></a>2.hexo的基本使用及常见的命令</h3><p><code>hexo s</code> 使用这个命令可以在本地跑起来，可以看到cmd窗口提示项目运行在 <code>http://localhost:4000</code>，打开浏览器输入提示的地址即可访问了，不过可以看到，默认的主题有点丑，我们可以换一个，在这里我们换next这个简洁的主题。我们可以直接百度搜索hexo next主题官网或者去hexo官网找next主题都可以，我们找到next的github，克隆下来，放到博客项目的themes目录下，接下来打开根目录的配置文件_config.yml文件找到 theme，把默认的该为next，然后命令行<code>hexo clean &amp;&amp; hexo s</code>刷新页面即可成功替换主题了。<br>快速创建文章命令为 <code>hexo new &quot;文章名字&quot;</code>  执行完这个命令后就会在sources下的_posts目录下创建名称为 刚刚创建的同名md文件，可以用编辑器直接打开编辑了。</p>\n<h4 id=\"这里需要注意：在next主题的配置文件下添加了菜单后，点击了提示找不到页面，不要慌，是因为默认只生产home和Archive页面，需要自己创建相应的页面，比如about页面-hexo-new-page-quot-about-quot-这时-source里面多了个目录about，里面有个index-md，就可以正常访问了，内容就在那个index-md里添加\"><a href=\"#这里需要注意：在next主题的配置文件下添加了菜单后，点击了提示找不到页面，不要慌，是因为默认只生产home和Archive页面，需要自己创建相应的页面，比如about页面-hexo-new-page-quot-about-quot-这时-source里面多了个目录about，里面有个index-md，就可以正常访问了，内容就在那个index-md里添加\" class=\"headerlink\" title=\"这里需要注意：在next主题的配置文件下添加了菜单后，点击了提示找不到页面，不要慌，是因为默认只生产home和Archive页面，需要自己创建相应的页面，比如about页面 hexo new page &quot;about&quot; 这时 source里面多了个目录about，里面有个index.md，就可以正常访问了，内容就在那个index.md里添加\"></a>这里需要注意：在next主题的配置文件下添加了菜单后，点击了提示找不到页面，不要慌，是因为默认只生产home和Archive页面，需要自己创建相应的页面，比如about页面 <code>hexo new page &quot;about&quot;</code> 这时 source里面多了个目录about，里面有个index.md，就可以正常访问了，内容就在那个index.md里添加</h4><h3 id=\"与github对接\"><a href=\"#与github对接\" class=\"headerlink\" title=\"与github对接\"></a>与github对接</h3><p>在github上新建一个名为xxx.github.io 的仓库，然后在hexo的_config.yml中的</p>\n<figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">deploy</span>: </span><br><span class=\"line\">  <span class=\"attribute\">type</span>: git </span><br><span class=\"line\">  <span class=\"attribute\">repository</span>: git<span class=\"variable\">@github</span>.<span class=\"attribute\">com</span>:hongyu2016/hongyu2016.github.io.git </span><br><span class=\"line\">  <span class=\"attribute\">branch</span>: master</span><br></pre></td></tr></table></figure>\n<p>填写相应的git地址，然后需要把本地项目与git仓库相关联起来，需要使用ssh来连接，git ssh连接请参考 <a href=\"https://www.cnblogs.com/superGG1990/p/6844952.html\" target=\"_blank\" rel=\"noopener\">配置git ssh</a> 。在本地仓库与远程仓库连接的过程中可能会出现分支不匹配等错误，需要具体问题然后再进行针对性解决。本地仓库与远程仓库关联上后就可以在本地进行发布了，<code>hexo d</code>为发布命令，会将项目发布到github page，发布成功后，会在本地生成的静态文件推送到到github，其他文件是不会推送的，这个时候会把原本在github上的readme文件删除，不要慌，在resoures下新建readme文件再次发布就好了，注意：千万不要使用github的git push发布，这样发布是没有效果的，github会在每次push时发编译失败的邮件给你，因为github page只支持静态文件，所以只能使用<code>hexo d</code>命令，另外在发布前最好先<code>hexo clean &amp;&amp; hexo g</code>先清除和重新生成静态文件发发布。发布成功后，输入xxx.github.io就可以正常访问博客了。</p>\n<h2 id=\"结语：搭建hexo博客还是比较简单的，个人觉得在推送到github的过程中比较麻烦，容易出各种问题，这个地方需要注意。\"><a href=\"#结语：搭建hexo博客还是比较简单的，个人觉得在推送到github的过程中比较麻烦，容易出各种问题，这个地方需要注意。\" class=\"headerlink\" title=\"结语：搭建hexo博客还是比较简单的，个人觉得在推送到github的过程中比较麻烦，容易出各种问题，这个地方需要注意。\"></a>结语：搭建hexo博客还是比较简单的，个人觉得在推送到github的过程中比较麻烦，容易出各种问题，这个地方需要注意。</h2>"},{"title":"记录element-ui 二次封装table时formatter的使用问题","abbrlink":"7f247ba3","date":"2019-04-24T14:11:01.000Z","_content":"\n### 二次封装element table表格中遇到的问题记录\n我们都知道element-ui 的table 中表格行的通过prop指定显示数据源中的字段，我们在进行二次封装时，如果数据都是很简单的字符串或者数字之类的，那就可以直接使用prop就行了，不需要做特殊的操作，但是如果是数组，那就得进行特殊的处理了。\n我们知道element 对于表格行还提供了一个格式化的函数：formatter，常规的用法没有什么好说的了，格式化显示货币，时间等，这里要说的是当字段是数组的时候，而且要在当前列显示html元素的时候就有点蛋疼了，如果是不需要html元素，直接循环数组就行。\n下面是element table的formatter的常规用法（来自element官网）：\n```\n<template>\n  <el-table\n    :data=\"tableData\"\n    style=\"width: 100%\"\n    :default-sort = \"{prop: 'date', order: 'descending'}\"\n    >\n    <el-table-column\n      prop=\"date\"\n      label=\"日期\"\n      sortable\n      width=\"180\">\n    </el-table-column>\n    <el-table-column\n      prop=\"name\"\n      label=\"姓名\"\n      sortable\n      width=\"180\">\n    </el-table-column>\n    <el-table-column\n      prop=\"address\"\n      label=\"地址\"\n      :formatter=\"formatter\">\n    </el-table-column>\n  </el-table>\n</template>\n\n<script>\n  export default {\n    data() {\n      return {\n        tableData: [{\n          date: '2016-05-02',\n          name: '王小虎',\n          address: '上海市普陀区金沙江路 1518 弄'\n        }, {\n          date: '2016-05-04',\n          name: '王小虎',\n          address: '上海市普陀区金沙江路 1517 弄'\n        }, {\n          date: '2016-05-01',\n          name: '王小虎',\n          address: '上海市普陀区金沙江路 1519 弄'\n        }, {\n          date: '2016-05-03',\n          name: '王小虎',\n          address: '上海市普陀区金沙江路 1516 弄'\n        }]\n      }\n    },\n    methods: {\n      formatter(row, column) {\n        return row.address;\n      }\n    }\n  }\n</script>\n\n```\n下面来说下我们项目的需求\n![](1.png)\n如果不是二次封装也很容易解决，可以用template，但是我们这里说的是二次封装，这里只能用formatter函数了，父组件在调用时需要提供类似这样的数据：\n```\ntablelable:[\n    {lable:'表格行1',prop:'prop_1'},\n    {lable:'时间',prop:'time'},\n    {lable:'附件',prop:'files',\n    formatter:(row,column,cellvalue,index)={\n            //在这里进行格式化输出\n        }\n    },\n]\n// 这里提供的数据源\ntableData:[\n    {prop_1:'***',time:'2015-20-2',files:[name:'12.jpg',url:'']},\n    {prop_1:'***',time:'2015-20-2',files:[name:'12.jpg',url:'']}\n]\n```\n下面贴出图片吧\n![](2.png)\n![](3.png)\n这里的formatter必须要返回一个对象才能渲染出html，如果是返回一个字符串是没有用的，会原样输出字符串，比如'<a heref=\"\">12.jpg</a>' 他不会渲染出可点击的a  而是把一整个当成字符串输出，没有渲染。<font color=\"red\">还有一个需要注意的地方就是在这里返回的对象中的元素的属性要采用原生的写法，比如class要写成className，还有变量等也需要注意写法</font>。好了，记录下，以后再遇到就懂得处理了。\n","source":"_posts/记录element-ui-二次封装table时formatter的使用问题.md","raw":"---\ntitle: 记录element-ui 二次封装table时formatter的使用问题\ntags:\n  - element-ui\n  - vue\ncategories: 前端\nabbrlink: 7f247ba3\ndate: 2019-04-24 22:11:01\n---\n\n### 二次封装element table表格中遇到的问题记录\n我们都知道element-ui 的table 中表格行的通过prop指定显示数据源中的字段，我们在进行二次封装时，如果数据都是很简单的字符串或者数字之类的，那就可以直接使用prop就行了，不需要做特殊的操作，但是如果是数组，那就得进行特殊的处理了。\n我们知道element 对于表格行还提供了一个格式化的函数：formatter，常规的用法没有什么好说的了，格式化显示货币，时间等，这里要说的是当字段是数组的时候，而且要在当前列显示html元素的时候就有点蛋疼了，如果是不需要html元素，直接循环数组就行。\n下面是element table的formatter的常规用法（来自element官网）：\n```\n<template>\n  <el-table\n    :data=\"tableData\"\n    style=\"width: 100%\"\n    :default-sort = \"{prop: 'date', order: 'descending'}\"\n    >\n    <el-table-column\n      prop=\"date\"\n      label=\"日期\"\n      sortable\n      width=\"180\">\n    </el-table-column>\n    <el-table-column\n      prop=\"name\"\n      label=\"姓名\"\n      sortable\n      width=\"180\">\n    </el-table-column>\n    <el-table-column\n      prop=\"address\"\n      label=\"地址\"\n      :formatter=\"formatter\">\n    </el-table-column>\n  </el-table>\n</template>\n\n<script>\n  export default {\n    data() {\n      return {\n        tableData: [{\n          date: '2016-05-02',\n          name: '王小虎',\n          address: '上海市普陀区金沙江路 1518 弄'\n        }, {\n          date: '2016-05-04',\n          name: '王小虎',\n          address: '上海市普陀区金沙江路 1517 弄'\n        }, {\n          date: '2016-05-01',\n          name: '王小虎',\n          address: '上海市普陀区金沙江路 1519 弄'\n        }, {\n          date: '2016-05-03',\n          name: '王小虎',\n          address: '上海市普陀区金沙江路 1516 弄'\n        }]\n      }\n    },\n    methods: {\n      formatter(row, column) {\n        return row.address;\n      }\n    }\n  }\n</script>\n\n```\n下面来说下我们项目的需求\n![](1.png)\n如果不是二次封装也很容易解决，可以用template，但是我们这里说的是二次封装，这里只能用formatter函数了，父组件在调用时需要提供类似这样的数据：\n```\ntablelable:[\n    {lable:'表格行1',prop:'prop_1'},\n    {lable:'时间',prop:'time'},\n    {lable:'附件',prop:'files',\n    formatter:(row,column,cellvalue,index)={\n            //在这里进行格式化输出\n        }\n    },\n]\n// 这里提供的数据源\ntableData:[\n    {prop_1:'***',time:'2015-20-2',files:[name:'12.jpg',url:'']},\n    {prop_1:'***',time:'2015-20-2',files:[name:'12.jpg',url:'']}\n]\n```\n下面贴出图片吧\n![](2.png)\n![](3.png)\n这里的formatter必须要返回一个对象才能渲染出html，如果是返回一个字符串是没有用的，会原样输出字符串，比如'<a heref=\"\">12.jpg</a>' 他不会渲染出可点击的a  而是把一整个当成字符串输出，没有渲染。<font color=\"red\">还有一个需要注意的地方就是在这里返回的对象中的元素的属性要采用原生的写法，比如class要写成className，还有变量等也需要注意写法</font>。好了，记录下，以后再遇到就懂得处理了。\n","slug":"记录element-ui-二次封装table时formatter的使用问题","published":1,"updated":"2019-05-11T03:50:44.993Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvoywn1d000nhwuxkea4y6wu","content":"<h3 id=\"二次封装element-table表格中遇到的问题记录\"><a href=\"#二次封装element-table表格中遇到的问题记录\" class=\"headerlink\" title=\"二次封装element table表格中遇到的问题记录\"></a>二次封装element table表格中遇到的问题记录</h3><p>我们都知道element-ui 的table 中表格行的通过prop指定显示数据源中的字段，我们在进行二次封装时，如果数据都是很简单的字符串或者数字之类的，那就可以直接使用prop就行了，不需要做特殊的操作，但是如果是数组，那就得进行特殊的处理了。<br>我们知道element 对于表格行还提供了一个格式化的函数：formatter，常规的用法没有什么好说的了，格式化显示货币，时间等，这里要说的是当字段是数组的时候，而且要在当前列显示html元素的时候就有点蛋疼了，如果是不需要html元素，直接循环数组就行。<br>下面是element table的formatter的常规用法（来自element官网）：<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">el-table</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">:data</span>=<span class=\"string\">\"tableData\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">style</span>=<span class=\"string\">\"width: 100%\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">:default-sort</span> = <span class=\"string\">\"&#123;prop: 'date', order: 'descending'&#125;\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    &gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-table-column</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">prop</span>=<span class=\"string\">\"date\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">label</span>=<span class=\"string\">\"日期\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">sortable</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">width</span>=<span class=\"string\">\"180\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">el-table-column</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-table-column</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">prop</span>=<span class=\"string\">\"name\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">label</span>=<span class=\"string\">\"姓名\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">sortable</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">width</span>=<span class=\"string\">\"180\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">el-table-column</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-table-column</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">prop</span>=<span class=\"string\">\"address\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">label</span>=<span class=\"string\">\"地址\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">:formatter</span>=<span class=\"string\">\"formatter\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">el-table-column</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">el-table</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\">  <span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">    data() &#123;</span></span><br><span class=\"line\"><span class=\"actionscript\">      <span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">        tableData: [&#123;</span></span><br><span class=\"line\"><span class=\"actionscript\">          date: <span class=\"string\">'2016-05-02'</span>,</span></span><br><span class=\"line\"><span class=\"actionscript\">          name: <span class=\"string\">'王小虎'</span>,</span></span><br><span class=\"line\"><span class=\"actionscript\">          address: <span class=\"string\">'上海市普陀区金沙江路 1518 弄'</span></span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;, &#123;</span></span><br><span class=\"line\"><span class=\"actionscript\">          date: <span class=\"string\">'2016-05-04'</span>,</span></span><br><span class=\"line\"><span class=\"actionscript\">          name: <span class=\"string\">'王小虎'</span>,</span></span><br><span class=\"line\"><span class=\"actionscript\">          address: <span class=\"string\">'上海市普陀区金沙江路 1517 弄'</span></span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;, &#123;</span></span><br><span class=\"line\"><span class=\"actionscript\">          date: <span class=\"string\">'2016-05-01'</span>,</span></span><br><span class=\"line\"><span class=\"actionscript\">          name: <span class=\"string\">'王小虎'</span>,</span></span><br><span class=\"line\"><span class=\"actionscript\">          address: <span class=\"string\">'上海市普陀区金沙江路 1519 弄'</span></span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;, &#123;</span></span><br><span class=\"line\"><span class=\"actionscript\">          date: <span class=\"string\">'2016-05-03'</span>,</span></span><br><span class=\"line\"><span class=\"actionscript\">          name: <span class=\"string\">'王小虎'</span>,</span></span><br><span class=\"line\"><span class=\"actionscript\">          address: <span class=\"string\">'上海市普陀区金沙江路 1516 弄'</span></span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;]</span></span><br><span class=\"line\"><span class=\"undefined\">      &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;,</span></span><br><span class=\"line\"><span class=\"undefined\">    methods: &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">      formatter(row, column) &#123;</span></span><br><span class=\"line\"><span class=\"actionscript\">        <span class=\"keyword\">return</span> row.address;</span></span><br><span class=\"line\"><span class=\"undefined\">      &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">  &#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>下面来说下我们项目的需求<br><img src=\"1.png\" alt=\"\"><br>如果不是二次封装也很容易解决，可以用template，但是我们这里说的是二次封装，这里只能用formatter函数了，父组件在调用时需要提供类似这样的数据：<br><figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">tablelable:</span>[</span><br><span class=\"line\">    &#123;<span class=\"string\">lable:</span><span class=\"string\">'表格行1'</span>,<span class=\"string\">prop:</span><span class=\"string\">'prop_1'</span>&#125;,</span><br><span class=\"line\">    &#123;<span class=\"string\">lable:</span><span class=\"string\">'时间'</span>,<span class=\"string\">prop:</span><span class=\"string\">'time'</span>&#125;,</span><br><span class=\"line\">    &#123;<span class=\"string\">lable:</span><span class=\"string\">'附件'</span>,<span class=\"string\">prop:</span><span class=\"string\">'files'</span>,</span><br><span class=\"line\"><span class=\"symbol\">    formatter:</span>(row,column,cellvalue,index)=&#123;</span><br><span class=\"line\">            <span class=\"comment\">//在这里进行格式化输出</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">]</span><br><span class=\"line\"><span class=\"comment\">// 这里提供的数据源</span></span><br><span class=\"line\"><span class=\"string\">tableData:</span>[</span><br><span class=\"line\">    &#123;<span class=\"string\">prop_1:</span><span class=\"string\">'***'</span>,<span class=\"string\">time:</span><span class=\"string\">'2015-20-2'</span>,<span class=\"string\">files:</span>[<span class=\"string\">name:</span><span class=\"string\">'12.jpg'</span>,<span class=\"string\">url:</span><span class=\"string\">''</span>]&#125;,</span><br><span class=\"line\">    &#123;<span class=\"string\">prop_1:</span><span class=\"string\">'***'</span>,<span class=\"string\">time:</span><span class=\"string\">'2015-20-2'</span>,<span class=\"string\">files:</span>[<span class=\"string\">name:</span><span class=\"string\">'12.jpg'</span>,<span class=\"string\">url:</span><span class=\"string\">''</span>]&#125;</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure></p>\n<p>下面贴出图片吧<br><img src=\"2.png\" alt=\"\"><br><img src=\"3.png\" alt=\"\"><br>这里的formatter必须要返回一个对象才能渲染出html，如果是返回一个字符串是没有用的，会原样输出字符串，比如’<a heref=\"\">12.jpg</a>‘ 他不会渲染出可点击的a  而是把一整个当成字符串输出，没有渲染。<font color=\"red\">还有一个需要注意的地方就是在这里返回的对象中的元素的属性要采用原生的写法，比如class要写成className，还有变量等也需要注意写法</font>。好了，记录下，以后再遇到就懂得处理了。</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"二次封装element-table表格中遇到的问题记录\"><a href=\"#二次封装element-table表格中遇到的问题记录\" class=\"headerlink\" title=\"二次封装element table表格中遇到的问题记录\"></a>二次封装element table表格中遇到的问题记录</h3><p>我们都知道element-ui 的table 中表格行的通过prop指定显示数据源中的字段，我们在进行二次封装时，如果数据都是很简单的字符串或者数字之类的，那就可以直接使用prop就行了，不需要做特殊的操作，但是如果是数组，那就得进行特殊的处理了。<br>我们知道element 对于表格行还提供了一个格式化的函数：formatter，常规的用法没有什么好说的了，格式化显示货币，时间等，这里要说的是当字段是数组的时候，而且要在当前列显示html元素的时候就有点蛋疼了，如果是不需要html元素，直接循环数组就行。<br>下面是element table的formatter的常规用法（来自element官网）：<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">el-table</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">:data</span>=<span class=\"string\">\"tableData\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">style</span>=<span class=\"string\">\"width: 100%\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">:default-sort</span> = <span class=\"string\">\"&#123;prop: 'date', order: 'descending'&#125;\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    &gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-table-column</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">prop</span>=<span class=\"string\">\"date\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">label</span>=<span class=\"string\">\"日期\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">sortable</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">width</span>=<span class=\"string\">\"180\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">el-table-column</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-table-column</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">prop</span>=<span class=\"string\">\"name\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">label</span>=<span class=\"string\">\"姓名\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">sortable</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">width</span>=<span class=\"string\">\"180\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">el-table-column</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-table-column</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">prop</span>=<span class=\"string\">\"address\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">label</span>=<span class=\"string\">\"地址\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">:formatter</span>=<span class=\"string\">\"formatter\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">el-table-column</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">el-table</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\">  <span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">    data() &#123;</span></span><br><span class=\"line\"><span class=\"actionscript\">      <span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">        tableData: [&#123;</span></span><br><span class=\"line\"><span class=\"actionscript\">          date: <span class=\"string\">'2016-05-02'</span>,</span></span><br><span class=\"line\"><span class=\"actionscript\">          name: <span class=\"string\">'王小虎'</span>,</span></span><br><span class=\"line\"><span class=\"actionscript\">          address: <span class=\"string\">'上海市普陀区金沙江路 1518 弄'</span></span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;, &#123;</span></span><br><span class=\"line\"><span class=\"actionscript\">          date: <span class=\"string\">'2016-05-04'</span>,</span></span><br><span class=\"line\"><span class=\"actionscript\">          name: <span class=\"string\">'王小虎'</span>,</span></span><br><span class=\"line\"><span class=\"actionscript\">          address: <span class=\"string\">'上海市普陀区金沙江路 1517 弄'</span></span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;, &#123;</span></span><br><span class=\"line\"><span class=\"actionscript\">          date: <span class=\"string\">'2016-05-01'</span>,</span></span><br><span class=\"line\"><span class=\"actionscript\">          name: <span class=\"string\">'王小虎'</span>,</span></span><br><span class=\"line\"><span class=\"actionscript\">          address: <span class=\"string\">'上海市普陀区金沙江路 1519 弄'</span></span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;, &#123;</span></span><br><span class=\"line\"><span class=\"actionscript\">          date: <span class=\"string\">'2016-05-03'</span>,</span></span><br><span class=\"line\"><span class=\"actionscript\">          name: <span class=\"string\">'王小虎'</span>,</span></span><br><span class=\"line\"><span class=\"actionscript\">          address: <span class=\"string\">'上海市普陀区金沙江路 1516 弄'</span></span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;]</span></span><br><span class=\"line\"><span class=\"undefined\">      &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;,</span></span><br><span class=\"line\"><span class=\"undefined\">    methods: &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">      formatter(row, column) &#123;</span></span><br><span class=\"line\"><span class=\"actionscript\">        <span class=\"keyword\">return</span> row.address;</span></span><br><span class=\"line\"><span class=\"undefined\">      &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">  &#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>下面来说下我们项目的需求<br><img src=\"1.png\" alt=\"\"><br>如果不是二次封装也很容易解决，可以用template，但是我们这里说的是二次封装，这里只能用formatter函数了，父组件在调用时需要提供类似这样的数据：<br><figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">tablelable:</span>[</span><br><span class=\"line\">    &#123;<span class=\"string\">lable:</span><span class=\"string\">'表格行1'</span>,<span class=\"string\">prop:</span><span class=\"string\">'prop_1'</span>&#125;,</span><br><span class=\"line\">    &#123;<span class=\"string\">lable:</span><span class=\"string\">'时间'</span>,<span class=\"string\">prop:</span><span class=\"string\">'time'</span>&#125;,</span><br><span class=\"line\">    &#123;<span class=\"string\">lable:</span><span class=\"string\">'附件'</span>,<span class=\"string\">prop:</span><span class=\"string\">'files'</span>,</span><br><span class=\"line\"><span class=\"symbol\">    formatter:</span>(row,column,cellvalue,index)=&#123;</span><br><span class=\"line\">            <span class=\"comment\">//在这里进行格式化输出</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">]</span><br><span class=\"line\"><span class=\"comment\">// 这里提供的数据源</span></span><br><span class=\"line\"><span class=\"string\">tableData:</span>[</span><br><span class=\"line\">    &#123;<span class=\"string\">prop_1:</span><span class=\"string\">'***'</span>,<span class=\"string\">time:</span><span class=\"string\">'2015-20-2'</span>,<span class=\"string\">files:</span>[<span class=\"string\">name:</span><span class=\"string\">'12.jpg'</span>,<span class=\"string\">url:</span><span class=\"string\">''</span>]&#125;,</span><br><span class=\"line\">    &#123;<span class=\"string\">prop_1:</span><span class=\"string\">'***'</span>,<span class=\"string\">time:</span><span class=\"string\">'2015-20-2'</span>,<span class=\"string\">files:</span>[<span class=\"string\">name:</span><span class=\"string\">'12.jpg'</span>,<span class=\"string\">url:</span><span class=\"string\">''</span>]&#125;</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure></p>\n<p>下面贴出图片吧<br><img src=\"2.png\" alt=\"\"><br><img src=\"3.png\" alt=\"\"><br>这里的formatter必须要返回一个对象才能渲染出html，如果是返回一个字符串是没有用的，会原样输出字符串，比如’<a heref=\"\">12.jpg</a>‘ 他不会渲染出可点击的a  而是把一整个当成字符串输出，没有渲染。<font color=\"red\">还有一个需要注意的地方就是在这里返回的对象中的元素的属性要采用原生的写法，比如class要写成className，还有变量等也需要注意写法</font>。好了，记录下，以后再遇到就懂得处理了。</p>\n"},{"title":"解决npm install安装任何包都报错的问题","abbrlink":60785,"date":"2019-05-13T10:21:10.000Z","_content":"在ubantu18系统上，之前不知道哪里设置错了，结果用nodejs的npm install任何一个包都报错，报错信息如下：\n```\nnpm ERR! code ENOTFOUND\nnpm ERR! errno ENOTFOUND\nnpm ERR! network request to http://registry.cnpmjs.org/cnpm failed, reason: getaddrinfo ENOTFOUND registry.cnpmjs.org registry.cnpmjs.org:80\nnpm ERR! network This is a problem related to network connectivity.\nnpm ERR! network In most cases you are behind a proxy or have bad network settings.\nnpm ERR! network \nnpm ERR! network If you are behind a proxy, please make sure that the\nnpm ERR! network 'proxy' config is set properly.  See: 'npm help config'\n\nnpm ERR! A complete log of this run can be found in:\nnpm ERR!     /home/liu/.npm/_logs/2019-05-13T12_45_42_040Z-debug.log\n\n```\n按照字面意思，应该是代理出了点问题，由于对npm的设置不是很了解，没办法，百度查查别人的解决办法吧。然后就真查到了，\n```\nnpm config set registry http://registry.cnpmjs.org\n```\n如果提示要sudo那就加上sudo就行了。\n验证一下 ： npm info underscore 如果有返回underscore的相应信息就表示成功了。\n以上内容参考网址：[http://www.cnblogs.com/nurdun/p/6824480.html](http://www.cnblogs.com/nurdun/p/6824480.html) \n","source":"_posts/解决npm-install安装任何包都报错的问题.md","raw":"---\ntitle: 解决npm install安装任何包都报错的问题\ntags: nodejs\ncategories: 前端\nabbrlink: 60785\ndate: 2019-05-13 18:21:10\n---\n在ubantu18系统上，之前不知道哪里设置错了，结果用nodejs的npm install任何一个包都报错，报错信息如下：\n```\nnpm ERR! code ENOTFOUND\nnpm ERR! errno ENOTFOUND\nnpm ERR! network request to http://registry.cnpmjs.org/cnpm failed, reason: getaddrinfo ENOTFOUND registry.cnpmjs.org registry.cnpmjs.org:80\nnpm ERR! network This is a problem related to network connectivity.\nnpm ERR! network In most cases you are behind a proxy or have bad network settings.\nnpm ERR! network \nnpm ERR! network If you are behind a proxy, please make sure that the\nnpm ERR! network 'proxy' config is set properly.  See: 'npm help config'\n\nnpm ERR! A complete log of this run can be found in:\nnpm ERR!     /home/liu/.npm/_logs/2019-05-13T12_45_42_040Z-debug.log\n\n```\n按照字面意思，应该是代理出了点问题，由于对npm的设置不是很了解，没办法，百度查查别人的解决办法吧。然后就真查到了，\n```\nnpm config set registry http://registry.cnpmjs.org\n```\n如果提示要sudo那就加上sudo就行了。\n验证一下 ： npm info underscore 如果有返回underscore的相应信息就表示成功了。\n以上内容参考网址：[http://www.cnblogs.com/nurdun/p/6824480.html](http://www.cnblogs.com/nurdun/p/6824480.html) \n","slug":"解决npm-install安装任何包都报错的问题","published":1,"updated":"2019-05-15T07:33:01.903Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvoywn1f000rhwuxkku2877i","content":"<p>在ubantu18系统上，之前不知道哪里设置错了，结果用nodejs的npm install任何一个包都报错，报错信息如下：<br><figure class=\"highlight coffeescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">npm</span> ERR! code ENOTFOUND</span><br><span class=\"line\"><span class=\"built_in\">npm</span> ERR! errno ENOTFOUND</span><br><span class=\"line\"><span class=\"built_in\">npm</span> ERR! network request to http:<span class=\"regexp\">//</span>registry.cnpmjs.org/cnpm failed, reason: getaddrinfo ENOTFOUND registry.cnpmjs.org registry.cnpmjs.org:<span class=\"number\">80</span></span><br><span class=\"line\"><span class=\"built_in\">npm</span> ERR! network This <span class=\"keyword\">is</span> a problem related to network connectivity.</span><br><span class=\"line\"><span class=\"built_in\">npm</span> ERR! network In most cases you are behind a proxy <span class=\"keyword\">or</span> have bad network settings.</span><br><span class=\"line\"><span class=\"built_in\">npm</span> ERR! network </span><br><span class=\"line\"><span class=\"built_in\">npm</span> ERR! network If you are behind a proxy, please make sure that the</span><br><span class=\"line\"><span class=\"built_in\">npm</span> ERR! network <span class=\"string\">'proxy'</span> config <span class=\"keyword\">is</span> set properly.  See: <span class=\"string\">'npm help config'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">npm</span> ERR! A complete log <span class=\"keyword\">of</span> <span class=\"keyword\">this</span> run can be found in:</span><br><span class=\"line\"><span class=\"built_in\">npm</span> ERR!     <span class=\"regexp\">/home/liu/</span>.<span class=\"built_in\">npm</span>/_logs/<span class=\"number\">2019</span><span class=\"number\">-05</span><span class=\"number\">-13</span>T12_45_42_040Z-debug.log</span><br></pre></td></tr></table></figure></p>\n<p>按照字面意思，应该是代理出了点问题，由于对npm的设置不是很了解，没办法，百度查查别人的解决办法吧。然后就真查到了，<br><figure class=\"highlight tcl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm config <span class=\"keyword\">set</span> <span class=\"keyword\">registry</span> <span class=\"keyword\">http</span>://<span class=\"keyword\">registry</span>.cnpmjs.org</span><br></pre></td></tr></table></figure></p>\n<p>如果提示要sudo那就加上sudo就行了。<br>验证一下 ： npm info underscore 如果有返回underscore的相应信息就表示成功了。<br>以上内容参考网址：<a href=\"http://www.cnblogs.com/nurdun/p/6824480.html\" target=\"_blank\" rel=\"noopener\">http://www.cnblogs.com/nurdun/p/6824480.html</a> </p>\n","site":{"data":{}},"excerpt":"","more":"<p>在ubantu18系统上，之前不知道哪里设置错了，结果用nodejs的npm install任何一个包都报错，报错信息如下：<br><figure class=\"highlight coffeescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">npm</span> ERR! code ENOTFOUND</span><br><span class=\"line\"><span class=\"built_in\">npm</span> ERR! errno ENOTFOUND</span><br><span class=\"line\"><span class=\"built_in\">npm</span> ERR! network request to http:<span class=\"regexp\">//</span>registry.cnpmjs.org/cnpm failed, reason: getaddrinfo ENOTFOUND registry.cnpmjs.org registry.cnpmjs.org:<span class=\"number\">80</span></span><br><span class=\"line\"><span class=\"built_in\">npm</span> ERR! network This <span class=\"keyword\">is</span> a problem related to network connectivity.</span><br><span class=\"line\"><span class=\"built_in\">npm</span> ERR! network In most cases you are behind a proxy <span class=\"keyword\">or</span> have bad network settings.</span><br><span class=\"line\"><span class=\"built_in\">npm</span> ERR! network </span><br><span class=\"line\"><span class=\"built_in\">npm</span> ERR! network If you are behind a proxy, please make sure that the</span><br><span class=\"line\"><span class=\"built_in\">npm</span> ERR! network <span class=\"string\">'proxy'</span> config <span class=\"keyword\">is</span> set properly.  See: <span class=\"string\">'npm help config'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">npm</span> ERR! A complete log <span class=\"keyword\">of</span> <span class=\"keyword\">this</span> run can be found in:</span><br><span class=\"line\"><span class=\"built_in\">npm</span> ERR!     <span class=\"regexp\">/home/liu/</span>.<span class=\"built_in\">npm</span>/_logs/<span class=\"number\">2019</span><span class=\"number\">-05</span><span class=\"number\">-13</span>T12_45_42_040Z-debug.log</span><br></pre></td></tr></table></figure></p>\n<p>按照字面意思，应该是代理出了点问题，由于对npm的设置不是很了解，没办法，百度查查别人的解决办法吧。然后就真查到了，<br><figure class=\"highlight tcl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm config <span class=\"keyword\">set</span> <span class=\"keyword\">registry</span> <span class=\"keyword\">http</span>://<span class=\"keyword\">registry</span>.cnpmjs.org</span><br></pre></td></tr></table></figure></p>\n<p>如果提示要sudo那就加上sudo就行了。<br>验证一下 ： npm info underscore 如果有返回underscore的相应信息就表示成功了。<br>以上内容参考网址：<a href=\"http://www.cnblogs.com/nurdun/p/6824480.html\" target=\"_blank\" rel=\"noopener\">http://www.cnblogs.com/nurdun/p/6824480.html</a> </p>\n"},{"title":"部署在github page的hexo博客绑定二级域名","abbrlink":"a7642960","date":"2019-02-26T11:45:45.000Z","_content":"## 前提：已经有了域名（这里以阿里云为例）以及能成功访问的github page（这里以hexo部署的博客为例）。\n### 1.增加域名解析：\n\n![](/images/2019-2-26.png)\n这里需要注意，记录类型需要选择CNAME，主机记录为除www和@外的字符，因为我要用blog作为二级域名，所以写blog。解析线路选默认就好了，一开始我选境外，结果不行。记录值为``` ***.github.io ```(即你的github page地址)。到这里解析设置完成了。\n\n### 2.增加域名解析：\n\n在GitHub博客仓库的根目录中新建文件CNAME （没有后缀），里面填写 ``` blog.iyuge.cn ``` 注意，因为hexo在部署至github时会重新删除github的文件，所以我们必须在本地的source目录下新建CNAME文件，然后``` hexo clean && hexo g && hexo d github ```上就有CNAME文件了\n\n### 结语：至此，给github page绑定二级域名就完成了，很简单，但是需要注意的是第一次有可能不成功需要重试几次，每次可能需要等一段时间才会生效！","source":"_posts/部署在github-page的hexo博客绑定二级域名.md","raw":"---\ntitle: 部署在github page的hexo博客绑定二级域名\ntags: 技术\ncategories: 技术\nabbrlink: a7642960\ndate: 2019-02-26 19:45:45\n---\n## 前提：已经有了域名（这里以阿里云为例）以及能成功访问的github page（这里以hexo部署的博客为例）。\n### 1.增加域名解析：\n\n![](/images/2019-2-26.png)\n这里需要注意，记录类型需要选择CNAME，主机记录为除www和@外的字符，因为我要用blog作为二级域名，所以写blog。解析线路选默认就好了，一开始我选境外，结果不行。记录值为``` ***.github.io ```(即你的github page地址)。到这里解析设置完成了。\n\n### 2.增加域名解析：\n\n在GitHub博客仓库的根目录中新建文件CNAME （没有后缀），里面填写 ``` blog.iyuge.cn ``` 注意，因为hexo在部署至github时会重新删除github的文件，所以我们必须在本地的source目录下新建CNAME文件，然后``` hexo clean && hexo g && hexo d github ```上就有CNAME文件了\n\n### 结语：至此，给github page绑定二级域名就完成了，很简单，但是需要注意的是第一次有可能不成功需要重试几次，每次可能需要等一段时间才会生效！","slug":"部署在github-page的hexo博客绑定二级域名","published":1,"updated":"2019-05-11T03:50:45.005Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvoywn1h000uhwux41e7sbv6","content":"<h2 id=\"前提：已经有了域名（这里以阿里云为例）以及能成功访问的github-page（这里以hexo部署的博客为例）。\"><a href=\"#前提：已经有了域名（这里以阿里云为例）以及能成功访问的github-page（这里以hexo部署的博客为例）。\" class=\"headerlink\" title=\"前提：已经有了域名（这里以阿里云为例）以及能成功访问的github page（这里以hexo部署的博客为例）。\"></a>前提：已经有了域名（这里以阿里云为例）以及能成功访问的github page（这里以hexo部署的博客为例）。</h2><h3 id=\"1-增加域名解析：\"><a href=\"#1-增加域名解析：\" class=\"headerlink\" title=\"1.增加域名解析：\"></a>1.增加域名解析：</h3><p><img src=\"/images/2019-2-26.png\" alt=\"\"><br>这里需要注意，记录类型需要选择CNAME，主机记录为除www和@外的字符，因为我要用blog作为二级域名，所以写blog。解析线路选默认就好了，一开始我选境外，结果不行。记录值为<code>***.github.io</code>(即你的github page地址)。到这里解析设置完成了。</p>\n<h3 id=\"2-增加域名解析：\"><a href=\"#2-增加域名解析：\" class=\"headerlink\" title=\"2.增加域名解析：\"></a>2.增加域名解析：</h3><p>在GitHub博客仓库的根目录中新建文件CNAME （没有后缀），里面填写 <code>blog.iyuge.cn</code> 注意，因为hexo在部署至github时会重新删除github的文件，所以我们必须在本地的source目录下新建CNAME文件，然后<code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo d github</code>上就有CNAME文件了</p>\n<h3 id=\"结语：至此，给github-page绑定二级域名就完成了，很简单，但是需要注意的是第一次有可能不成功需要重试几次，每次可能需要等一段时间才会生效！\"><a href=\"#结语：至此，给github-page绑定二级域名就完成了，很简单，但是需要注意的是第一次有可能不成功需要重试几次，每次可能需要等一段时间才会生效！\" class=\"headerlink\" title=\"结语：至此，给github page绑定二级域名就完成了，很简单，但是需要注意的是第一次有可能不成功需要重试几次，每次可能需要等一段时间才会生效！\"></a>结语：至此，给github page绑定二级域名就完成了，很简单，但是需要注意的是第一次有可能不成功需要重试几次，每次可能需要等一段时间才会生效！</h3>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"前提：已经有了域名（这里以阿里云为例）以及能成功访问的github-page（这里以hexo部署的博客为例）。\"><a href=\"#前提：已经有了域名（这里以阿里云为例）以及能成功访问的github-page（这里以hexo部署的博客为例）。\" class=\"headerlink\" title=\"前提：已经有了域名（这里以阿里云为例）以及能成功访问的github page（这里以hexo部署的博客为例）。\"></a>前提：已经有了域名（这里以阿里云为例）以及能成功访问的github page（这里以hexo部署的博客为例）。</h2><h3 id=\"1-增加域名解析：\"><a href=\"#1-增加域名解析：\" class=\"headerlink\" title=\"1.增加域名解析：\"></a>1.增加域名解析：</h3><p><img src=\"/images/2019-2-26.png\" alt=\"\"><br>这里需要注意，记录类型需要选择CNAME，主机记录为除www和@外的字符，因为我要用blog作为二级域名，所以写blog。解析线路选默认就好了，一开始我选境外，结果不行。记录值为<code>***.github.io</code>(即你的github page地址)。到这里解析设置完成了。</p>\n<h3 id=\"2-增加域名解析：\"><a href=\"#2-增加域名解析：\" class=\"headerlink\" title=\"2.增加域名解析：\"></a>2.增加域名解析：</h3><p>在GitHub博客仓库的根目录中新建文件CNAME （没有后缀），里面填写 <code>blog.iyuge.cn</code> 注意，因为hexo在部署至github时会重新删除github的文件，所以我们必须在本地的source目录下新建CNAME文件，然后<code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo d github</code>上就有CNAME文件了</p>\n<h3 id=\"结语：至此，给github-page绑定二级域名就完成了，很简单，但是需要注意的是第一次有可能不成功需要重试几次，每次可能需要等一段时间才会生效！\"><a href=\"#结语：至此，给github-page绑定二级域名就完成了，很简单，但是需要注意的是第一次有可能不成功需要重试几次，每次可能需要等一段时间才会生效！\" class=\"headerlink\" title=\"结语：至此，给github page绑定二级域名就完成了，很简单，但是需要注意的是第一次有可能不成功需要重试几次，每次可能需要等一段时间才会生效！\"></a>结语：至此，给github page绑定二级域名就完成了，很简单，但是需要注意的是第一次有可能不成功需要重试几次，每次可能需要等一段时间才会生效！</h3>"},{"title":"webpack4从头构建一个简单的vue2项目","abbrlink":"b38ec8f3","date":"2019-04-20T08:22:45.000Z","_content":"\n### 前言\nvue早就有成熟的vue-cli工具了，现在是vue-cli 3.0了，但是觉得很有必要自己去实现一下，有助于自己技术的提高，也能更好地去了解webpack。本人是webpack菜鸟，有些资料是网上学习整理过来的。\n\n### 1.新建目录文件夹\n第一步当然是新建工程目录了，具体怎么建就随便了，比如我建立webpackVue这个目录\n### 2.新建package.json文件\npackage.json是nodejs项目必需的配置文件。使用`npm init`,按照提示一步步填写项目名称，作者等信息\n### 3.webpack配置\n新建build文件夹\nbuild目录下新建webpack.base.conf.js,webpack.dev.conf.js,webpack.prod.conf.js文件，webpack.base.conf.js是公共基础配置，webpack.dev.conf.js是生产环境配置文件，webpack.prod.conf.js是生产环境配置。\n创建一个src目录，用来存放我们的项目源文件，然后创建main.js文件，创建一个index.html\n```\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>webpack4搭建vue</title>\n</head>\n<body>\n    <div id=\"app\"></div>\n</body>\n</html>\n```\n![](1.jpg) 目录结构是这样的\n\n下载webpack webpack-dev-server webpack-cli (这里webpack是局部安装)\n`npm i webpack webpack-dev-server webpack-cli -D`\n打开webpack.base.config.js，逐步添加配置\n```\nvar path = require('path');\nvar webpack = require('webpack');\nmodule.exports ={\n    //入口文件\n    entry:{\n        main: path.resolve(__dirname, '../src/main.js')\n    },\n    //输出目录\n    output:{\n        path: path.resolve(__dirname, '../dist'),\n        filename: '[name].[hash].js'\n    },\n    module:{\n        rules:[]\n    },\n    plugins:[\n        new webpack.HashedModuleIdsPlugin(), // 解决vender后面的hash每次都改变\n    ],\n    resolve:{\n\n    }\n}\n```\n### 4.配置loader\n配置babel编译代码：下载babel-loader，babel-core，babel-preset-dev。\n`npm i babel-loader babel-core babel-preset-env -D`\n\nbabel-preset-env 帮助我们配置 babel。我们只需要告诉它我们要兼容的情况（目标运行环境），它就会自动把代码转换为兼容对应环境的代码。\nbabel-core是作为babel的核心存在，babel的核心api都在这个模块里面\n这里有个注意的地方，就是babel的版本的问题，运行的时候根据提示安装合适的版本就好了，这里不记得是babel的哪个工具需要7的版本了。\n在webpack.base.conf.js文件中增加babel配置\n```\nrules:[\n    {\n        test: /\\.js$/, //匹配.js结尾的文件\n        use: ['babel-loader'],\n        exclude:/node_modules/ //排除node_modules里面的js\n    },\n]\n```\n新建.babelrc文件，.babelrc是babel全局配置文件\n```\n{\n    \"presets\":[\n        [\"env\",{\n            \"targets\": {    \n                \"browsers\": [\"> 1%\", \"last 2 versions\", \"not ie <=8\"],\n                //\"chrome\": 52,\n                //\"browsers\": [\"last 2 versions\", \"safari 7\"]\n            },       \n            \"modules\": false\n        }]\n    ]\n}\n```\n#### 下载file-loader\n`npm i file-loader -D`\n继续追加配置\n```\nrules:[\n    {\n        test: /\\.(jpg|png|svg|gif)$/,\n        use:['file-loader']\n    },\n    {\n        test:/\\.(woff|woff2|eot|ttf|otf)$/\n    },\n]\n```\n#### 下载css-loader，vue-style-loader，sass-loader， node-sass，less，less-loader并配置css，scss，sass,less\n`npm i css-loader vue-style-loader sass-loader node-sass less-loader less -D`\n```\nrules:[\n    {\n        test:/\\.(sa|sc|c)ss$/,\n        use:[\n            {\n                loader: 'vue-style-loader'\n            },\n            'css-loader',\n            'sass-loader'\n        ]\n    },\n    {\n        test:/\\.less$/,\n        use:[\n            {\n                loader: 'vue-style-loader'\n            },\n            'css-loader',\n            'sass-loader'\n        ]\n    },\n]\n```\n### 5.处理html文件\n下载html-webpack-plugin\n`npm i html-webpack-plugin -D`\n```\nvar HtmlWebpackPlugin = require('html-webpack-plugin'); //在base配置文件头部引入\nnew HtmlWebpackPlugin({\n    template: path.resolve(__dirname, '../index.html')\n}),\n```\n### 6.解析模块的配置和配置别名\n```\nresolve: {\n    // 能够使用户在引入模块时不带扩展\n    extensions: ['.js', '.json', '.vue', 'css'],\n    //别名\n    alias: {\n        'vue$':'vue/dist/vue.esm.js',\n        '@': path.resolve(__dirname, '../src')\n    }\n    \n}\n```\n### 7.配置webpack.dev.conf.js文件\n下载 webpack-merge，用于合并配置\n`npm i webpack-merge -D`\n```\nvar merge = require('webpack-merge');\nvar baseConfig = require('./webpack.base.conf');\nvar path = require('path');\nvar webpack = require('webpack');\nmodule.exports = merge(baseConfig, {\n    devtool: 'inline-source-map', // 压缩方式\n    mode: 'development',\n    devServer: {\n        hot: true, // 热更新\n        open: true, // 自动打开页面\n        contentBase: path.resolve(__dirname, '../src'), // 告诉服务从哪提供内容\n    },\n    plugins: [\n        new webpack.HotModuleReplacementPlugin(), //开启热更新\n    ]\n})\n```\n### 8.配置webpack.prod.conf.js\n```\nvar merge = require('webpack-merge');\nvar baseConfig = require('./webpack.base.conf');\nvar path = require('path');\nvar webpack = require('webpack');\nmodule.exports = merge(baseConfig, {\n    devtool: 'source-map', // 压缩方式\n    mode: 'production',\n    plugins: [\n\n    ]\n})\n```\n### 9.配置vue-loader\n首先要下载vue，以及vue相关的模块\n`npm i vue vue-loader vue-template-compiler -D`\n继续完善webpack.base.cond.js\n```\nvar VueLoaderPlugin=require('vue-loader/lib/plugin');\n//省略部分代码...\nrules:[\n    {\n        test: /\\.vue$/,\n        use: ['vue-loader'],\n        exclude: /node_modules/\n    },\n]\n//省略部分代码...\nplugins:[\n    new VueLoaderPlugin(), // 它的职责是将你定义过的其它规则复制并应用到 .vue 文件里相应语言的块\n]\n```\n在src目录新建app.vue文件和main.js文件\n```\n//app.vue\n<template>\n    <div>{{str}}</div>\n</template>\n<script>\n  export default {\n    name: 'App',\n    data () {\n      return {\n        str: '欢迎来到自定义webpack4+vue构建'\n      }\n    }\n  }\n</script>\n<style lang=\"scss\">\n  div {\n    color: red;\n  }\n</style>\n```\n```\n//main.js\nimport Vue from 'vue'\nimport App from './App'\n\nnew Vue({\n    el: \"#app\",\n    render: (h) => h(App)\n})\n```\n### 10.配置命令\n\n打开package.json文件，并配置开发和打包命令\n```\n// 省略代码。。。\n\"scripts\": {\n  \"dev\": \"webpack-dev-server  --progress --config build/webpack.dev.conf.js\",\n   \"build\": \"webpack --config build/webpack.prod.conf.js\"\n  }\n\n```\n`npm run dev` 就可以启动项目了\n![](2.jpg)\n\n## 继续优化...\n\n### 11. 区分环境引入不同地址\n\n新建config文件夹并新建dev.env.js和prod.env.js\n```\n//dev.env.js 开发环境配置\n'use strict'\n\nmodule.exports = {\n    NODE_ENV: \"development\",\n    BASE_API: \"http://1456\",\n}\n```\n\n```\n//prod.env.js 生产环境配置\n'use strict'\n\nmodule.exports = {\n    NODE_ENV: \"production\",    BASE_API: \"http://123.com\",\n}\n\n```\n### 12.优化webpack配置\n解决更改文件打包时dist文件没有清除，再次打包。\n下载clean-webpack-plugin，并配置webpack.prod.conf.js文件\n`npm i clean-webpack-plugin -D`\n\n```\n//webpack.prod.conf.js\n// 引入clean-webpack-plugin\nvar CleanWebpackPlugin = require('clean-webpack-plugin');\n// 省略代码。。。。\nplugins: [\n    new CleanWebPackPlugin();\n]\n\n```\n根据不同环境提取css\n下载mini-css-extract-plugin，并配置webpack.prod.conf.js文件\n`npm i mini-css-extract-plugin -D`\n```\n//webpack.prod.conf.js\nconst MiniCssExtractPlugin = require('mini-css-extract-plugin');\nmodule: {\n    rules: [\n        {\n            test: /\\.(c|sc|sa)ss$/,\n            use: [\n                {\n                loader: MiniCssExtractPlugin.loader,\n                },\n                'css-loader',\n                'sass-loader'\n            ]\n        },\n        {\n        test: /\\.less$/,\n        use: [\n            {\n            loader: MiniCssExtractPlugin.loader,\n            },\n            'css-loader',\n            'less-loader'\n            ]\n        }\n    ]\n},\nplugins: [\n    new MiniCssExtractPlugin({\n        filename: '[name].[hash].css'\n    })\n]\n\n```\n<font color=\"red\">webpack.base.conf.js中删除使用vue-style-loader的代码，并在webpack.dev.conf.js中定义</font>\n\n```\nmodule: {\n    rules: [\n      {\n        test: /\\.(c|sc|sa)ss$/,\n        use: [\n          {\n            loader: 'vue-style-loader',\n          },\n          'css-loader',\n          'sass-loader'\n        ]\n      },\n      {\n        test: /\\.less$/,\n        use: [\n          {\n            loader: 'vue-style-loader',\n          },\n          'css-loader',\n          'less-loader'\n         ]\n      }\n    ]\n  },\n//以上这段webpack.base.conf.js中的代码移到webpack.dev.conf.js中\n```\n[这个配置vue-loader中有提到](https://link.juejin.im?target=https%3A%2F%2Fvue-loader.vuejs.org%2Fzh%2Fguide%2Fextract-css.html%23webpack-4)\n\n#### 第三方库单独打包 \n把依赖的第三方库抽取出来单独打包，加快打包进度\n下载autodll-webpack-plugin\n`npm i autodll-webpack-plugin -D`\n\n在webpack.base.conf.js中配置\n```\n//webpack.base.conf.js\n//省略部分代码\nvar AutodllWebpackpackPlugin = require('autodll-webpack-plugin');\nplugins: [\n    new AutodllWebpackpackPlugin ({\n        inject: true,\n        debugger: true,\n        filename: '[name].js',\n        path: './dll',\n        entry: {\n            vendor: ['vue']\n        }\n    })\n]\n\n```\ntips: inject 为 true，插件会自动把打包出来的第三方库文件插入到 HTML。filename 是打包后文件的名称。path 是打包后的路径。entry 是入口，vendor 是你指定的名称，数组内容就是要打包的第三方库的名称，不要写全路径，Webpack 会自动去 node_modules 中找到的。\n#### 提取公共代码\n在 webpack.base.conf.js的 plugins 属性中添加如下插件对象\n`new webpack.optimize.SplitChunksPlugin()`\n#### 打包时压缩js和css\n下载optimize-css-assets-webpack-plugin和uglifyjs-webpack-plugin\n\n`npm i uglifyjs-webpack-plugin uglifyjs-webpack-plugin optimize-css-assets-webpack-plugin -D`\n\n在webpack.prod.conf.js中分别引入optimize-css-assets-webpack-plugin和uglifyjs-webpack-plugin并增加optimization\n```\n//webpack.prod.conf.js\nvar OptimizeCSSAssetsPlugin = require(\"optimize-css-assets-webpack-plugin\");\nvar UglifyJsPlugin = require(\"uglifyjs-webpack-plugin\");\n// 省略部分代码\noptimization: {\n        minimizer: [\n        // 压缩JS\n        new UglifyJsPlugin({\n        uglifyOptions: {\n            compress: {\n            warnings: false, // 去除警告\n            drop_debugger: true, // 去除debugger\n            drop_console: true // 去除console.log\n            },\n        },\n        cache: true, // 开启缓存\n        parallel: true, // 平行压缩\n        sourceMap: false // set to true if you want JS source maps\n        }),\n        // 压缩css\n        new OptimizeCSSAssetsPlugin({})\n    ]\n},\n\n```\n#### css自动加前缀\n下载postcss-loader 和autoprefixer\n`npm i postcss-loader autoprefixer -D`\n分别在webpack.dev.conf.js和webpack.prod.conf.js的use中添加postcss-loader\n在module中的rules中的use中追加：\n```\nuse: [\n    'postcss-loader'\n]\n```\n在项目下增加postcss.config.js\n```\n// 配置cssz加前缀\nmodule.exports = {\n  plugins: [\n    require('autoprefixer')\n  ]\n}\n```\n差不多就这样了,对了，还有一点就是打包出来的html里面引用`/dll/vendor.js`需要手动改成`./dll/vendor.js`这个下次也要优化下，我记得vue-cli 2版本中有一个地方是可以配置的","source":"_posts/webpack4从头构建一个简单的vue2项目.md","raw":"---\ntitle: webpack4从头构建一个简单的vue2项目\ntags:\n  - nodejs\n  - webpack\n  - vue\ncategories: 前端\nabbrlink: b38ec8f3\ndate: 2019-04-20 16:22:45\n---\n\n### 前言\nvue早就有成熟的vue-cli工具了，现在是vue-cli 3.0了，但是觉得很有必要自己去实现一下，有助于自己技术的提高，也能更好地去了解webpack。本人是webpack菜鸟，有些资料是网上学习整理过来的。\n\n### 1.新建目录文件夹\n第一步当然是新建工程目录了，具体怎么建就随便了，比如我建立webpackVue这个目录\n### 2.新建package.json文件\npackage.json是nodejs项目必需的配置文件。使用`npm init`,按照提示一步步填写项目名称，作者等信息\n### 3.webpack配置\n新建build文件夹\nbuild目录下新建webpack.base.conf.js,webpack.dev.conf.js,webpack.prod.conf.js文件，webpack.base.conf.js是公共基础配置，webpack.dev.conf.js是生产环境配置文件，webpack.prod.conf.js是生产环境配置。\n创建一个src目录，用来存放我们的项目源文件，然后创建main.js文件，创建一个index.html\n```\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>webpack4搭建vue</title>\n</head>\n<body>\n    <div id=\"app\"></div>\n</body>\n</html>\n```\n![](1.jpg) 目录结构是这样的\n\n下载webpack webpack-dev-server webpack-cli (这里webpack是局部安装)\n`npm i webpack webpack-dev-server webpack-cli -D`\n打开webpack.base.config.js，逐步添加配置\n```\nvar path = require('path');\nvar webpack = require('webpack');\nmodule.exports ={\n    //入口文件\n    entry:{\n        main: path.resolve(__dirname, '../src/main.js')\n    },\n    //输出目录\n    output:{\n        path: path.resolve(__dirname, '../dist'),\n        filename: '[name].[hash].js'\n    },\n    module:{\n        rules:[]\n    },\n    plugins:[\n        new webpack.HashedModuleIdsPlugin(), // 解决vender后面的hash每次都改变\n    ],\n    resolve:{\n\n    }\n}\n```\n### 4.配置loader\n配置babel编译代码：下载babel-loader，babel-core，babel-preset-dev。\n`npm i babel-loader babel-core babel-preset-env -D`\n\nbabel-preset-env 帮助我们配置 babel。我们只需要告诉它我们要兼容的情况（目标运行环境），它就会自动把代码转换为兼容对应环境的代码。\nbabel-core是作为babel的核心存在，babel的核心api都在这个模块里面\n这里有个注意的地方，就是babel的版本的问题，运行的时候根据提示安装合适的版本就好了，这里不记得是babel的哪个工具需要7的版本了。\n在webpack.base.conf.js文件中增加babel配置\n```\nrules:[\n    {\n        test: /\\.js$/, //匹配.js结尾的文件\n        use: ['babel-loader'],\n        exclude:/node_modules/ //排除node_modules里面的js\n    },\n]\n```\n新建.babelrc文件，.babelrc是babel全局配置文件\n```\n{\n    \"presets\":[\n        [\"env\",{\n            \"targets\": {    \n                \"browsers\": [\"> 1%\", \"last 2 versions\", \"not ie <=8\"],\n                //\"chrome\": 52,\n                //\"browsers\": [\"last 2 versions\", \"safari 7\"]\n            },       \n            \"modules\": false\n        }]\n    ]\n}\n```\n#### 下载file-loader\n`npm i file-loader -D`\n继续追加配置\n```\nrules:[\n    {\n        test: /\\.(jpg|png|svg|gif)$/,\n        use:['file-loader']\n    },\n    {\n        test:/\\.(woff|woff2|eot|ttf|otf)$/\n    },\n]\n```\n#### 下载css-loader，vue-style-loader，sass-loader， node-sass，less，less-loader并配置css，scss，sass,less\n`npm i css-loader vue-style-loader sass-loader node-sass less-loader less -D`\n```\nrules:[\n    {\n        test:/\\.(sa|sc|c)ss$/,\n        use:[\n            {\n                loader: 'vue-style-loader'\n            },\n            'css-loader',\n            'sass-loader'\n        ]\n    },\n    {\n        test:/\\.less$/,\n        use:[\n            {\n                loader: 'vue-style-loader'\n            },\n            'css-loader',\n            'sass-loader'\n        ]\n    },\n]\n```\n### 5.处理html文件\n下载html-webpack-plugin\n`npm i html-webpack-plugin -D`\n```\nvar HtmlWebpackPlugin = require('html-webpack-plugin'); //在base配置文件头部引入\nnew HtmlWebpackPlugin({\n    template: path.resolve(__dirname, '../index.html')\n}),\n```\n### 6.解析模块的配置和配置别名\n```\nresolve: {\n    // 能够使用户在引入模块时不带扩展\n    extensions: ['.js', '.json', '.vue', 'css'],\n    //别名\n    alias: {\n        'vue$':'vue/dist/vue.esm.js',\n        '@': path.resolve(__dirname, '../src')\n    }\n    \n}\n```\n### 7.配置webpack.dev.conf.js文件\n下载 webpack-merge，用于合并配置\n`npm i webpack-merge -D`\n```\nvar merge = require('webpack-merge');\nvar baseConfig = require('./webpack.base.conf');\nvar path = require('path');\nvar webpack = require('webpack');\nmodule.exports = merge(baseConfig, {\n    devtool: 'inline-source-map', // 压缩方式\n    mode: 'development',\n    devServer: {\n        hot: true, // 热更新\n        open: true, // 自动打开页面\n        contentBase: path.resolve(__dirname, '../src'), // 告诉服务从哪提供内容\n    },\n    plugins: [\n        new webpack.HotModuleReplacementPlugin(), //开启热更新\n    ]\n})\n```\n### 8.配置webpack.prod.conf.js\n```\nvar merge = require('webpack-merge');\nvar baseConfig = require('./webpack.base.conf');\nvar path = require('path');\nvar webpack = require('webpack');\nmodule.exports = merge(baseConfig, {\n    devtool: 'source-map', // 压缩方式\n    mode: 'production',\n    plugins: [\n\n    ]\n})\n```\n### 9.配置vue-loader\n首先要下载vue，以及vue相关的模块\n`npm i vue vue-loader vue-template-compiler -D`\n继续完善webpack.base.cond.js\n```\nvar VueLoaderPlugin=require('vue-loader/lib/plugin');\n//省略部分代码...\nrules:[\n    {\n        test: /\\.vue$/,\n        use: ['vue-loader'],\n        exclude: /node_modules/\n    },\n]\n//省略部分代码...\nplugins:[\n    new VueLoaderPlugin(), // 它的职责是将你定义过的其它规则复制并应用到 .vue 文件里相应语言的块\n]\n```\n在src目录新建app.vue文件和main.js文件\n```\n//app.vue\n<template>\n    <div>{{str}}</div>\n</template>\n<script>\n  export default {\n    name: 'App',\n    data () {\n      return {\n        str: '欢迎来到自定义webpack4+vue构建'\n      }\n    }\n  }\n</script>\n<style lang=\"scss\">\n  div {\n    color: red;\n  }\n</style>\n```\n```\n//main.js\nimport Vue from 'vue'\nimport App from './App'\n\nnew Vue({\n    el: \"#app\",\n    render: (h) => h(App)\n})\n```\n### 10.配置命令\n\n打开package.json文件，并配置开发和打包命令\n```\n// 省略代码。。。\n\"scripts\": {\n  \"dev\": \"webpack-dev-server  --progress --config build/webpack.dev.conf.js\",\n   \"build\": \"webpack --config build/webpack.prod.conf.js\"\n  }\n\n```\n`npm run dev` 就可以启动项目了\n![](2.jpg)\n\n## 继续优化...\n\n### 11. 区分环境引入不同地址\n\n新建config文件夹并新建dev.env.js和prod.env.js\n```\n//dev.env.js 开发环境配置\n'use strict'\n\nmodule.exports = {\n    NODE_ENV: \"development\",\n    BASE_API: \"http://1456\",\n}\n```\n\n```\n//prod.env.js 生产环境配置\n'use strict'\n\nmodule.exports = {\n    NODE_ENV: \"production\",    BASE_API: \"http://123.com\",\n}\n\n```\n### 12.优化webpack配置\n解决更改文件打包时dist文件没有清除，再次打包。\n下载clean-webpack-plugin，并配置webpack.prod.conf.js文件\n`npm i clean-webpack-plugin -D`\n\n```\n//webpack.prod.conf.js\n// 引入clean-webpack-plugin\nvar CleanWebpackPlugin = require('clean-webpack-plugin');\n// 省略代码。。。。\nplugins: [\n    new CleanWebPackPlugin();\n]\n\n```\n根据不同环境提取css\n下载mini-css-extract-plugin，并配置webpack.prod.conf.js文件\n`npm i mini-css-extract-plugin -D`\n```\n//webpack.prod.conf.js\nconst MiniCssExtractPlugin = require('mini-css-extract-plugin');\nmodule: {\n    rules: [\n        {\n            test: /\\.(c|sc|sa)ss$/,\n            use: [\n                {\n                loader: MiniCssExtractPlugin.loader,\n                },\n                'css-loader',\n                'sass-loader'\n            ]\n        },\n        {\n        test: /\\.less$/,\n        use: [\n            {\n            loader: MiniCssExtractPlugin.loader,\n            },\n            'css-loader',\n            'less-loader'\n            ]\n        }\n    ]\n},\nplugins: [\n    new MiniCssExtractPlugin({\n        filename: '[name].[hash].css'\n    })\n]\n\n```\n<font color=\"red\">webpack.base.conf.js中删除使用vue-style-loader的代码，并在webpack.dev.conf.js中定义</font>\n\n```\nmodule: {\n    rules: [\n      {\n        test: /\\.(c|sc|sa)ss$/,\n        use: [\n          {\n            loader: 'vue-style-loader',\n          },\n          'css-loader',\n          'sass-loader'\n        ]\n      },\n      {\n        test: /\\.less$/,\n        use: [\n          {\n            loader: 'vue-style-loader',\n          },\n          'css-loader',\n          'less-loader'\n         ]\n      }\n    ]\n  },\n//以上这段webpack.base.conf.js中的代码移到webpack.dev.conf.js中\n```\n[这个配置vue-loader中有提到](https://link.juejin.im?target=https%3A%2F%2Fvue-loader.vuejs.org%2Fzh%2Fguide%2Fextract-css.html%23webpack-4)\n\n#### 第三方库单独打包 \n把依赖的第三方库抽取出来单独打包，加快打包进度\n下载autodll-webpack-plugin\n`npm i autodll-webpack-plugin -D`\n\n在webpack.base.conf.js中配置\n```\n//webpack.base.conf.js\n//省略部分代码\nvar AutodllWebpackpackPlugin = require('autodll-webpack-plugin');\nplugins: [\n    new AutodllWebpackpackPlugin ({\n        inject: true,\n        debugger: true,\n        filename: '[name].js',\n        path: './dll',\n        entry: {\n            vendor: ['vue']\n        }\n    })\n]\n\n```\ntips: inject 为 true，插件会自动把打包出来的第三方库文件插入到 HTML。filename 是打包后文件的名称。path 是打包后的路径。entry 是入口，vendor 是你指定的名称，数组内容就是要打包的第三方库的名称，不要写全路径，Webpack 会自动去 node_modules 中找到的。\n#### 提取公共代码\n在 webpack.base.conf.js的 plugins 属性中添加如下插件对象\n`new webpack.optimize.SplitChunksPlugin()`\n#### 打包时压缩js和css\n下载optimize-css-assets-webpack-plugin和uglifyjs-webpack-plugin\n\n`npm i uglifyjs-webpack-plugin uglifyjs-webpack-plugin optimize-css-assets-webpack-plugin -D`\n\n在webpack.prod.conf.js中分别引入optimize-css-assets-webpack-plugin和uglifyjs-webpack-plugin并增加optimization\n```\n//webpack.prod.conf.js\nvar OptimizeCSSAssetsPlugin = require(\"optimize-css-assets-webpack-plugin\");\nvar UglifyJsPlugin = require(\"uglifyjs-webpack-plugin\");\n// 省略部分代码\noptimization: {\n        minimizer: [\n        // 压缩JS\n        new UglifyJsPlugin({\n        uglifyOptions: {\n            compress: {\n            warnings: false, // 去除警告\n            drop_debugger: true, // 去除debugger\n            drop_console: true // 去除console.log\n            },\n        },\n        cache: true, // 开启缓存\n        parallel: true, // 平行压缩\n        sourceMap: false // set to true if you want JS source maps\n        }),\n        // 压缩css\n        new OptimizeCSSAssetsPlugin({})\n    ]\n},\n\n```\n#### css自动加前缀\n下载postcss-loader 和autoprefixer\n`npm i postcss-loader autoprefixer -D`\n分别在webpack.dev.conf.js和webpack.prod.conf.js的use中添加postcss-loader\n在module中的rules中的use中追加：\n```\nuse: [\n    'postcss-loader'\n]\n```\n在项目下增加postcss.config.js\n```\n// 配置cssz加前缀\nmodule.exports = {\n  plugins: [\n    require('autoprefixer')\n  ]\n}\n```\n差不多就这样了,对了，还有一点就是打包出来的html里面引用`/dll/vendor.js`需要手动改成`./dll/vendor.js`这个下次也要优化下，我记得vue-cli 2版本中有一个地方是可以配置的","slug":"webpack4从头构建一个简单的vue2项目","published":1,"updated":"2019-05-11T03:50:44.976Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvoywn84001lhwuxtcte7ung","content":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>vue早就有成熟的vue-cli工具了，现在是vue-cli 3.0了，但是觉得很有必要自己去实现一下，有助于自己技术的提高，也能更好地去了解webpack。本人是webpack菜鸟，有些资料是网上学习整理过来的。</p>\n<h3 id=\"1-新建目录文件夹\"><a href=\"#1-新建目录文件夹\" class=\"headerlink\" title=\"1.新建目录文件夹\"></a>1.新建目录文件夹</h3><p>第一步当然是新建工程目录了，具体怎么建就随便了，比如我建立webpackVue这个目录</p>\n<h3 id=\"2-新建package-json文件\"><a href=\"#2-新建package-json文件\" class=\"headerlink\" title=\"2.新建package.json文件\"></a>2.新建package.json文件</h3><p>package.json是nodejs项目必需的配置文件。使用<code>npm init</code>,按照提示一步步填写项目名称，作者等信息</p>\n<h3 id=\"3-webpack配置\"><a href=\"#3-webpack配置\" class=\"headerlink\" title=\"3.webpack配置\"></a>3.webpack配置</h3><p>新建build文件夹<br>build目录下新建webpack.base.conf.js,webpack.dev.conf.js,webpack.prod.conf.js文件，webpack.base.conf.js是公共基础配置，webpack.dev.conf.js是生产环境配置文件，webpack.prod.conf.js是生产环境配置。<br>创建一个src目录，用来存放我们的项目源文件，然后创建main.js文件，创建一个index.html<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width, initial-scale=1.0\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"X-UA-Compatible\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"ie=edge\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>webpack4搭建vue<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p><img src=\"1.jpg\" alt=\"\"> 目录结构是这样的</p>\n<p>下载webpack webpack-dev-server webpack-cli (这里webpack是局部安装)<br><code>npm i webpack webpack-dev-server webpack-cli -D</code><br>打开webpack.base.config.js，逐步添加配置<br><figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> webpack = <span class=\"built_in\">require</span>(<span class=\"string\">'webpack'</span>);</span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports =&#123;</span><br><span class=\"line\">    <span class=\"comment\">//入口文件</span></span><br><span class=\"line\">    entry:&#123;</span><br><span class=\"line\">        main: path.resolve(__dirname, <span class=\"string\">'../src/main.js'</span>)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">//输出目录</span></span><br><span class=\"line\">    output:&#123;</span><br><span class=\"line\">        path: path.resolve(__dirname, <span class=\"string\">'../dist'</span>),</span><br><span class=\"line\">        filename: <span class=\"string\">'[name].[hash].js'</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"keyword\">module</span>:&#123;</span><br><span class=\"line\">        rules:[]</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    plugins:[</span><br><span class=\"line\">        <span class=\"keyword\">new</span> webpack.HashedModuleIdsPlugin(), <span class=\"comment\">// 解决vender后面的hash每次都改变</span></span><br><span class=\"line\">    ],</span><br><span class=\"line\">    resolve:&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"4-配置loader\"><a href=\"#4-配置loader\" class=\"headerlink\" title=\"4.配置loader\"></a>4.配置loader</h3><p>配置babel编译代码：下载babel-loader，babel-core，babel-preset-dev。<br><code>npm i babel-loader babel-core babel-preset-env -D</code></p>\n<p>babel-preset-env 帮助我们配置 babel。我们只需要告诉它我们要兼容的情况（目标运行环境），它就会自动把代码转换为兼容对应环境的代码。<br>babel-core是作为babel的核心存在，babel的核心api都在这个模块里面<br>这里有个注意的地方，就是babel的版本的问题，运行的时候根据提示安装合适的版本就好了，这里不记得是babel的哪个工具需要7的版本了。<br>在webpack.base.conf.js文件中增加babel配置<br><figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rules:[</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        test: <span class=\"regexp\">/\\.js$/</span>, <span class=\"comment\">//匹配.js结尾的文件</span></span><br><span class=\"line\">        use: [<span class=\"string\">'babel-loader'</span>],</span><br><span class=\"line\">        <span class=\"keyword\">exclude</span>:<span class=\"regexp\">/node_modules/</span> <span class=\"comment\">//排除node_modules里面的js</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure></p>\n<p>新建.babelrc文件，.babelrc是babel全局配置文件<br><figure class=\"highlight clojure\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"string\">\"presets\"</span>:[</span><br><span class=\"line\">        [<span class=\"string\">\"env\"</span>,&#123;</span><br><span class=\"line\">            <span class=\"string\">\"targets\"</span>: &#123;    </span><br><span class=\"line\">                <span class=\"string\">\"browsers\"</span>: [<span class=\"string\">\"&gt; 1%\"</span>, <span class=\"string\">\"last 2 versions\"</span>, <span class=\"string\">\"not ie &lt;=8\"</span>],</span><br><span class=\"line\">                //<span class=\"string\">\"chrome\"</span>: <span class=\"number\">52</span>,</span><br><span class=\"line\">                //<span class=\"string\">\"browsers\"</span>: [<span class=\"string\">\"last 2 versions\"</span>, <span class=\"string\">\"safari 7\"</span>]</span><br><span class=\"line\">            &#125;,       </span><br><span class=\"line\">            <span class=\"string\">\"modules\"</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">        &#125;]</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"下载file-loader\"><a href=\"#下载file-loader\" class=\"headerlink\" title=\"下载file-loader\"></a>下载file-loader</h4><p><code>npm i file-loader -D</code><br>继续追加配置<br><figure class=\"highlight coq\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rules:[</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        test: /\\.(jpg|<span class=\"type\">png</span>|<span class=\"type\">svg</span>|<span class=\"type\">gif</span>)$/,</span><br><span class=\"line\">        use:['file-loader']</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        test:/\\.(woff|<span class=\"type\">woff2</span>|<span class=\"type\">eot</span>|<span class=\"type\">ttf</span>|<span class=\"type\">otf</span>)$/</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"下载css-loader，vue-style-loader，sass-loader，-node-sass，less，less-loader并配置css，scss，sass-less\"><a href=\"#下载css-loader，vue-style-loader，sass-loader，-node-sass，less，less-loader并配置css，scss，sass-less\" class=\"headerlink\" title=\"下载css-loader，vue-style-loader，sass-loader， node-sass，less，less-loader并配置css，scss，sass,less\"></a>下载css-loader，vue-style-loader，sass-loader， node-sass，less，less-loader并配置css，scss，sass,less</h4><p><code>npm i css-loader vue-style-loader sass-loader node-sass less-loader less -D</code><br><figure class=\"highlight sml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rules:[</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        test:/\\.(sa|sc|c)ss$/,</span><br><span class=\"line\">        use:[</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                loader: <span class=\"symbol\">'vue</span>-style-loader'</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            <span class=\"symbol\">'css</span>-loader',</span><br><span class=\"line\">            <span class=\"symbol\">'sass</span>-loader'</span><br><span class=\"line\">        ]</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        test:/\\.less$/,</span><br><span class=\"line\">        use:[</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                loader: <span class=\"symbol\">'vue</span>-style-loader'</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            <span class=\"symbol\">'css</span>-loader',</span><br><span class=\"line\">            <span class=\"symbol\">'sass</span>-loader'</span><br><span class=\"line\">        ]</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"5-处理html文件\"><a href=\"#5-处理html文件\" class=\"headerlink\" title=\"5.处理html文件\"></a>5.处理html文件</h3><p>下载html-webpack-plugin<br><code>npm i html-webpack-plugin -D</code><br><figure class=\"highlight haxe\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> HtmlWebpackPlugin = require(<span class=\"string\">'html-webpack-plugin'</span>); <span class=\"comment\">//在base配置文件头部引入</span></span><br><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"type\">HtmlWebpackPlugin</span>(&#123;</span><br><span class=\"line\">    template: <span class=\"type\">path</span>.resolve(__dirname, <span class=\"string\">'../index.html'</span>)</span><br><span class=\"line\">&#125;),</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"6-解析模块的配置和配置别名\"><a href=\"#6-解析模块的配置和配置别名\" class=\"headerlink\" title=\"6.解析模块的配置和配置别名\"></a>6.解析模块的配置和配置别名</h3><figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">resolve</span>: &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 能够使用户在引入模块时不带扩展</span></span><br><span class=\"line\">    <span class=\"attribute\">extensions</span>: [<span class=\"string\">'.js'</span>, <span class=\"string\">'.json'</span>, <span class=\"string\">'.vue'</span>, <span class=\"string\">'css'</span>],</span><br><span class=\"line\">    <span class=\"comment\">//别名</span></span><br><span class=\"line\">    <span class=\"attribute\">alias</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">'vue$'</span>:<span class=\"string\">'vue/dist/vue.esm.js'</span>,</span><br><span class=\"line\">        <span class=\"string\">'@'</span>: path.resolve(__dirname, <span class=\"string\">'../src'</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"7-配置webpack-dev-conf-js文件\"><a href=\"#7-配置webpack-dev-conf-js文件\" class=\"headerlink\" title=\"7.配置webpack.dev.conf.js文件\"></a>7.配置webpack.dev.conf.js文件</h3><p>下载 webpack-merge，用于合并配置<br><code>npm i webpack-merge -D</code><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> merge = <span class=\"built_in\">require</span>(<span class=\"string\">'webpack-merge'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> baseConfig = <span class=\"built_in\">require</span>(<span class=\"string\">'./webpack.base.conf'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> webpack = <span class=\"built_in\">require</span>(<span class=\"string\">'webpack'</span>);</span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = merge(baseConfig, &#123;</span><br><span class=\"line\">    devtool: <span class=\"string\">'inline-source-map'</span>, <span class=\"comment\">// 压缩方式</span></span><br><span class=\"line\">    mode: <span class=\"string\">'development'</span>,</span><br><span class=\"line\">    devServer: &#123;</span><br><span class=\"line\">        hot: <span class=\"literal\">true</span>, <span class=\"comment\">// 热更新</span></span><br><span class=\"line\">        open: <span class=\"literal\">true</span>, <span class=\"comment\">// 自动打开页面</span></span><br><span class=\"line\">        contentBase: path.resolve(__dirname, <span class=\"string\">'../src'</span>), <span class=\"comment\">// 告诉服务从哪提供内容</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    plugins: [</span><br><span class=\"line\">        <span class=\"keyword\">new</span> webpack.HotModuleReplacementPlugin(), <span class=\"comment\">//开启热更新</span></span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"8-配置webpack-prod-conf-js\"><a href=\"#8-配置webpack-prod-conf-js\" class=\"headerlink\" title=\"8.配置webpack.prod.conf.js\"></a>8.配置webpack.prod.conf.js</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> merge = <span class=\"built_in\">require</span>(<span class=\"string\">'webpack-merge'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> baseConfig = <span class=\"built_in\">require</span>(<span class=\"string\">'./webpack.base.conf'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> webpack = <span class=\"built_in\">require</span>(<span class=\"string\">'webpack'</span>);</span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = merge(baseConfig, &#123;</span><br><span class=\"line\">    devtool: <span class=\"string\">'source-map'</span>, <span class=\"comment\">// 压缩方式</span></span><br><span class=\"line\">    mode: <span class=\"string\">'production'</span>,</span><br><span class=\"line\">    plugins: [</span><br><span class=\"line\"></span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h3 id=\"9-配置vue-loader\"><a href=\"#9-配置vue-loader\" class=\"headerlink\" title=\"9.配置vue-loader\"></a>9.配置vue-loader</h3><p>首先要下载vue，以及vue相关的模块<br><code>npm i vue vue-loader vue-template-compiler -D</code><br>继续完善webpack.base.cond.js<br><figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var VueLoaderPlugin=require(<span class=\"string\">'vue-loader/lib/plugin'</span>);</span><br><span class=\"line\"><span class=\"comment\">//省略部分代码...</span></span><br><span class=\"line\"><span class=\"string\">rules:</span>[</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\"><span class=\"symbol\">        test:</span> <span class=\"regexp\">/\\.vue$/</span>,</span><br><span class=\"line\"><span class=\"symbol\">        use:</span> [<span class=\"string\">'vue-loader'</span>],</span><br><span class=\"line\"><span class=\"symbol\">        exclude:</span> <span class=\"regexp\">/node_modules/</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">]</span><br><span class=\"line\"><span class=\"comment\">//省略部分代码...</span></span><br><span class=\"line\"><span class=\"string\">plugins:</span>[</span><br><span class=\"line\">    <span class=\"keyword\">new</span> VueLoaderPlugin(), <span class=\"comment\">// 它的职责是将你定义过的其它规则复制并应用到 .vue 文件里相应语言的块</span></span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure></p>\n<p>在src目录新建app.vue文件和main.js文件<br><figure class=\"highlight django\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"xml\">//app.vue</span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><span class=\"template-variable\">&#123;&#123;str&#125;&#125;</span><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\"></span></span></span><br><span class=\"line\"><span class=\"xml\">  export default &#123;</span></span><br><span class=\"line\"><span class=\"xml\">    name: 'App',</span></span><br><span class=\"line\"><span class=\"xml\">    data () &#123;</span></span><br><span class=\"line\"><span class=\"xml\">      return &#123;</span></span><br><span class=\"line\"><span class=\"xml\">        str: '欢迎来到自定义webpack4+vue构建'</span></span><br><span class=\"line\"><span class=\"xml\">      &#125;</span></span><br><span class=\"line\"><span class=\"xml\">    &#125;</span></span><br><span class=\"line\"><span class=\"xml\">  &#125;</span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"scss\"</span>&gt;</span><span class=\"undefined\"></span></span></span><br><span class=\"line\"><span class=\"xml\">  div &#123;</span></span><br><span class=\"line\"><span class=\"xml\">    color: red;</span></span><br><span class=\"line\"><span class=\"xml\">  &#125;</span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight coffeescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"regexp\">//m</span>ain.js</span><br><span class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> App <span class=\"keyword\">from</span> <span class=\"string\">'./App'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">    el: <span class=\"string\">\"#app\"</span>,</span><br><span class=\"line\">    render: <span class=\"function\"><span class=\"params\">(h)</span> =&gt;</span> h(App)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h3 id=\"10-配置命令\"><a href=\"#10-配置命令\" class=\"headerlink\" title=\"10.配置命令\"></a>10.配置命令</h3><p>打开package.json文件，并配置开发和打包命令<br><figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 省略代码。。。</span></span><br><span class=\"line\"><span class=\"string\">\"scripts\"</span>: &#123;</span><br><span class=\"line\">  <span class=\"string\">\"dev\"</span>: <span class=\"string\">\"webpack-dev-server  --progress --config build/webpack.dev.conf.js\"</span>,</span><br><span class=\"line\">   <span class=\"string\">\"build\"</span>: <span class=\"string\">\"webpack --config build/webpack.prod.conf.js\"</span></span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure></p>\n<p><code>npm run dev</code> 就可以启动项目了<br><img src=\"2.jpg\" alt=\"\"></p>\n<h2 id=\"继续优化…\"><a href=\"#继续优化…\" class=\"headerlink\" title=\"继续优化…\"></a>继续优化…</h2><h3 id=\"11-区分环境引入不同地址\"><a href=\"#11-区分环境引入不同地址\" class=\"headerlink\" title=\"11. 区分环境引入不同地址\"></a>11. 区分环境引入不同地址</h3><p>新建config文件夹并新建dev.env.js和prod.env.js<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//dev.env.js 开发环境配置</span></span><br><span class=\"line\"><span class=\"meta\">'use strict'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">    NODE_ENV: <span class=\"string\">\"development\"</span>,</span><br><span class=\"line\">    BASE_API: <span class=\"string\">\"http://1456\"</span>,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//prod.env.js 生产环境配置</span></span><br><span class=\"line\"><span class=\"meta\">'use strict'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">    NODE_ENV: <span class=\"string\">\"production\"</span>,    <span class=\"attr\">BASE_API</span>: <span class=\"string\">\"http://123.com\"</span>,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"12-优化webpack配置\"><a href=\"#12-优化webpack配置\" class=\"headerlink\" title=\"12.优化webpack配置\"></a>12.优化webpack配置</h3><p>解决更改文件打包时dist文件没有清除，再次打包。<br>下载clean-webpack-plugin，并配置webpack.prod.conf.js文件<br><code>npm i clean-webpack-plugin -D</code></p>\n<figure class=\"highlight haxe\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//webpack.prod.conf.js</span></span><br><span class=\"line\"><span class=\"comment\">// 引入clean-webpack-plugin</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> CleanWebpackPlugin = require(<span class=\"string\">'clean-webpack-plugin'</span>);</span><br><span class=\"line\"><span class=\"comment\">// 省略代码。。。。</span></span><br><span class=\"line\">plugins: <span class=\"type\"></span>[</span><br><span class=\"line\">    <span class=\"keyword\">new</span> <span class=\"type\">CleanWebPackPlugin</span>();</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<p>根据不同环境提取css<br>下载mini-css-extract-plugin，并配置webpack.prod.conf.js文件<br><code>npm i mini-css-extract-plugin -D</code><br><figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//webpack.prod.conf.js</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> MiniCssExtractPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">'mini-css-extract-plugin'</span>);</span><br><span class=\"line\"><span class=\"keyword\">module</span>: &#123;</span><br><span class=\"line\">    rules: [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            test: <span class=\"regexp\">/\\.(c|sc|sa)ss$/</span>,</span><br><span class=\"line\">            use: [</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                loader: MiniCssExtractPlugin.loader,</span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">                <span class=\"string\">'css-loader'</span>,</span><br><span class=\"line\">                <span class=\"string\">'sass-loader'</span></span><br><span class=\"line\">            ]</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">        test: <span class=\"regexp\">/\\.less$/</span>,</span><br><span class=\"line\">        use: [</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">            loader: MiniCssExtractPlugin.loader,</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            <span class=\"string\">'css-loader'</span>,</span><br><span class=\"line\">            <span class=\"string\">'less-loader'</span></span><br><span class=\"line\">            ]</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">plugins: [</span><br><span class=\"line\">    <span class=\"keyword\">new</span> MiniCssExtractPlugin(&#123;</span><br><span class=\"line\">        filename: <span class=\"string\">'[name].[hash].css'</span></span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure></p>\n<font color=\"red\">webpack.base.conf.js中删除使用vue-style-loader的代码，并在webpack.dev.conf.js中定义</font>\n\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">module</span>: &#123;</span></span><br><span class=\"line\">    <span class=\"symbol\">rules:</span> [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"symbol\">test:</span> /\\.(c<span class=\"params\">|sc|</span>sa)ss$/,</span><br><span class=\"line\">        <span class=\"symbol\">use:</span> [</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            <span class=\"symbol\">loader:</span> <span class=\"string\">'vue-style-loader'</span>,</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          <span class=\"string\">'css-loader'</span>,</span><br><span class=\"line\">          <span class=\"string\">'sass-loader'</span></span><br><span class=\"line\">        ]</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"symbol\">test:</span> /\\.less$/,</span><br><span class=\"line\">        <span class=\"symbol\">use:</span> [</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            <span class=\"symbol\">loader:</span> <span class=\"string\">'vue-style-loader'</span>,</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          <span class=\"string\">'css-loader'</span>,</span><br><span class=\"line\">          <span class=\"string\">'less-loader'</span></span><br><span class=\"line\">         ]</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">/<span class=\"regexp\">/以上这段webpack.base.conf.js中的代码移到webpack.dev.conf.js中</span></span><br></pre></td></tr></table></figure>\n<p><a href=\"https://link.juejin.im?target=https%3A%2F%2Fvue-loader.vuejs.org%2Fzh%2Fguide%2Fextract-css.html%23webpack-4\" target=\"_blank\" rel=\"noopener\">这个配置vue-loader中有提到</a></p>\n<h4 id=\"第三方库单独打包\"><a href=\"#第三方库单独打包\" class=\"headerlink\" title=\"第三方库单独打包\"></a>第三方库单独打包</h4><p>把依赖的第三方库抽取出来单独打包，加快打包进度<br>下载autodll-webpack-plugin<br><code>npm i autodll-webpack-plugin -D</code></p>\n<p>在webpack.base.conf.js中配置<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//webpack.base.conf.js</span></span><br><span class=\"line\"><span class=\"comment\">//省略部分代码</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> AutodllWebpackpackPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">'autodll-webpack-plugin'</span>);</span><br><span class=\"line\">plugins: [</span><br><span class=\"line\">    <span class=\"keyword\">new</span> AutodllWebpackpackPlugin (&#123;</span><br><span class=\"line\">        inject: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"keyword\">debugger</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        filename: <span class=\"string\">'[name].js'</span>,</span><br><span class=\"line\">        path: <span class=\"string\">'./dll'</span>,</span><br><span class=\"line\">        entry: &#123;</span><br><span class=\"line\">            vendor: [<span class=\"string\">'vue'</span>]</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure></p>\n<p>tips: inject 为 true，插件会自动把打包出来的第三方库文件插入到 HTML。filename 是打包后文件的名称。path 是打包后的路径。entry 是入口，vendor 是你指定的名称，数组内容就是要打包的第三方库的名称，不要写全路径，Webpack 会自动去 node_modules 中找到的。</p>\n<h4 id=\"提取公共代码\"><a href=\"#提取公共代码\" class=\"headerlink\" title=\"提取公共代码\"></a>提取公共代码</h4><p>在 webpack.base.conf.js的 plugins 属性中添加如下插件对象<br><code>new webpack.optimize.SplitChunksPlugin()</code></p>\n<h4 id=\"打包时压缩js和css\"><a href=\"#打包时压缩js和css\" class=\"headerlink\" title=\"打包时压缩js和css\"></a>打包时压缩js和css</h4><p>下载optimize-css-assets-webpack-plugin和uglifyjs-webpack-plugin</p>\n<p><code>npm i uglifyjs-webpack-plugin uglifyjs-webpack-plugin optimize-css-assets-webpack-plugin -D</code></p>\n<p>在webpack.prod.conf.js中分别引入optimize-css-assets-webpack-plugin和uglifyjs-webpack-plugin并增加optimization<br><figure class=\"highlight lasso\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//webpack.prod.conf.js</span></span><br><span class=\"line\"><span class=\"built_in\">var</span> OptimizeCSSAssetsPlugin = <span class=\"keyword\">require</span>(<span class=\"string\">\"optimize-css-assets-webpack-plugin\"</span>);</span><br><span class=\"line\"><span class=\"built_in\">var</span> UglifyJsPlugin = <span class=\"keyword\">require</span>(<span class=\"string\">\"uglifyjs-webpack-plugin\"</span>);</span><br><span class=\"line\"><span class=\"comment\">// 省略部分代码</span></span><br><span class=\"line\">optimization: &#123;</span><br><span class=\"line\">        minimizer: <span class=\"meta\">[</span></span><br><span class=\"line\">        <span class=\"comment\">// 压缩JS</span></span><br><span class=\"line\">        <span class=\"literal\">new</span> UglifyJsPlugin(&#123;</span><br><span class=\"line\">        uglifyOptions: &#123;</span><br><span class=\"line\">            compress: &#123;</span><br><span class=\"line\">            warnings: <span class=\"literal\">false</span>, <span class=\"comment\">// 去除警告</span></span><br><span class=\"line\">            drop_debugger: <span class=\"literal\">true</span>, <span class=\"comment\">// 去除debugger</span></span><br><span class=\"line\">            drop_console: <span class=\"literal\">true</span> <span class=\"comment\">// 去除console.log</span></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"keyword\">cache</span>: <span class=\"literal\">true</span>, <span class=\"comment\">// 开启缓存</span></span><br><span class=\"line\">        parallel: <span class=\"literal\">true</span>, <span class=\"comment\">// 平行压缩</span></span><br><span class=\"line\">        sourceMap: <span class=\"literal\">false</span> <span class=\"comment\">// set to true if you want JS source maps</span></span><br><span class=\"line\">        &#125;),</span><br><span class=\"line\">        <span class=\"comment\">// 压缩css</span></span><br><span class=\"line\">        <span class=\"literal\">new</span> OptimizeCSSAssetsPlugin(&#123;&#125;)</span><br><span class=\"line\">    <span class=\"meta\">]</span></span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"css自动加前缀\"><a href=\"#css自动加前缀\" class=\"headerlink\" title=\"css自动加前缀\"></a>css自动加前缀</h4><p>下载postcss-loader 和autoprefixer<br><code>npm i postcss-loader autoprefixer -D</code><br>分别在webpack.dev.conf.js和webpack.prod.conf.js的use中添加postcss-loader<br>在module中的rules中的use中追加：<br><figure class=\"highlight actionscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">use</span>: [</span><br><span class=\"line\">    <span class=\"string\">'postcss-loader'</span></span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure></p>\n<p>在项目下增加postcss.config.js<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 配置cssz加前缀</span></span><br><span class=\"line\"><span class=\"keyword\">module</span>.<span class=\"keyword\">exports</span> = &#123;</span><br><span class=\"line\">  plugins: [</span><br><span class=\"line\">    require(<span class=\"string\">'autoprefixer'</span>)</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>差不多就这样了,对了，还有一点就是打包出来的html里面引用<code>/dll/vendor.js</code>需要手动改成<code>./dll/vendor.js</code>这个下次也要优化下，我记得vue-cli 2版本中有一个地方是可以配置的</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>vue早就有成熟的vue-cli工具了，现在是vue-cli 3.0了，但是觉得很有必要自己去实现一下，有助于自己技术的提高，也能更好地去了解webpack。本人是webpack菜鸟，有些资料是网上学习整理过来的。</p>\n<h3 id=\"1-新建目录文件夹\"><a href=\"#1-新建目录文件夹\" class=\"headerlink\" title=\"1.新建目录文件夹\"></a>1.新建目录文件夹</h3><p>第一步当然是新建工程目录了，具体怎么建就随便了，比如我建立webpackVue这个目录</p>\n<h3 id=\"2-新建package-json文件\"><a href=\"#2-新建package-json文件\" class=\"headerlink\" title=\"2.新建package.json文件\"></a>2.新建package.json文件</h3><p>package.json是nodejs项目必需的配置文件。使用<code>npm init</code>,按照提示一步步填写项目名称，作者等信息</p>\n<h3 id=\"3-webpack配置\"><a href=\"#3-webpack配置\" class=\"headerlink\" title=\"3.webpack配置\"></a>3.webpack配置</h3><p>新建build文件夹<br>build目录下新建webpack.base.conf.js,webpack.dev.conf.js,webpack.prod.conf.js文件，webpack.base.conf.js是公共基础配置，webpack.dev.conf.js是生产环境配置文件，webpack.prod.conf.js是生产环境配置。<br>创建一个src目录，用来存放我们的项目源文件，然后创建main.js文件，创建一个index.html<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width, initial-scale=1.0\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"X-UA-Compatible\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"ie=edge\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>webpack4搭建vue<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p><img src=\"1.jpg\" alt=\"\"> 目录结构是这样的</p>\n<p>下载webpack webpack-dev-server webpack-cli (这里webpack是局部安装)<br><code>npm i webpack webpack-dev-server webpack-cli -D</code><br>打开webpack.base.config.js，逐步添加配置<br><figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> webpack = <span class=\"built_in\">require</span>(<span class=\"string\">'webpack'</span>);</span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports =&#123;</span><br><span class=\"line\">    <span class=\"comment\">//入口文件</span></span><br><span class=\"line\">    entry:&#123;</span><br><span class=\"line\">        main: path.resolve(__dirname, <span class=\"string\">'../src/main.js'</span>)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">//输出目录</span></span><br><span class=\"line\">    output:&#123;</span><br><span class=\"line\">        path: path.resolve(__dirname, <span class=\"string\">'../dist'</span>),</span><br><span class=\"line\">        filename: <span class=\"string\">'[name].[hash].js'</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"keyword\">module</span>:&#123;</span><br><span class=\"line\">        rules:[]</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    plugins:[</span><br><span class=\"line\">        <span class=\"keyword\">new</span> webpack.HashedModuleIdsPlugin(), <span class=\"comment\">// 解决vender后面的hash每次都改变</span></span><br><span class=\"line\">    ],</span><br><span class=\"line\">    resolve:&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"4-配置loader\"><a href=\"#4-配置loader\" class=\"headerlink\" title=\"4.配置loader\"></a>4.配置loader</h3><p>配置babel编译代码：下载babel-loader，babel-core，babel-preset-dev。<br><code>npm i babel-loader babel-core babel-preset-env -D</code></p>\n<p>babel-preset-env 帮助我们配置 babel。我们只需要告诉它我们要兼容的情况（目标运行环境），它就会自动把代码转换为兼容对应环境的代码。<br>babel-core是作为babel的核心存在，babel的核心api都在这个模块里面<br>这里有个注意的地方，就是babel的版本的问题，运行的时候根据提示安装合适的版本就好了，这里不记得是babel的哪个工具需要7的版本了。<br>在webpack.base.conf.js文件中增加babel配置<br><figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rules:[</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        test: <span class=\"regexp\">/\\.js$/</span>, <span class=\"comment\">//匹配.js结尾的文件</span></span><br><span class=\"line\">        use: [<span class=\"string\">'babel-loader'</span>],</span><br><span class=\"line\">        <span class=\"keyword\">exclude</span>:<span class=\"regexp\">/node_modules/</span> <span class=\"comment\">//排除node_modules里面的js</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure></p>\n<p>新建.babelrc文件，.babelrc是babel全局配置文件<br><figure class=\"highlight clojure\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"string\">\"presets\"</span>:[</span><br><span class=\"line\">        [<span class=\"string\">\"env\"</span>,&#123;</span><br><span class=\"line\">            <span class=\"string\">\"targets\"</span>: &#123;    </span><br><span class=\"line\">                <span class=\"string\">\"browsers\"</span>: [<span class=\"string\">\"&gt; 1%\"</span>, <span class=\"string\">\"last 2 versions\"</span>, <span class=\"string\">\"not ie &lt;=8\"</span>],</span><br><span class=\"line\">                //<span class=\"string\">\"chrome\"</span>: <span class=\"number\">52</span>,</span><br><span class=\"line\">                //<span class=\"string\">\"browsers\"</span>: [<span class=\"string\">\"last 2 versions\"</span>, <span class=\"string\">\"safari 7\"</span>]</span><br><span class=\"line\">            &#125;,       </span><br><span class=\"line\">            <span class=\"string\">\"modules\"</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">        &#125;]</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"下载file-loader\"><a href=\"#下载file-loader\" class=\"headerlink\" title=\"下载file-loader\"></a>下载file-loader</h4><p><code>npm i file-loader -D</code><br>继续追加配置<br><figure class=\"highlight coq\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rules:[</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        test: /\\.(jpg|<span class=\"type\">png</span>|<span class=\"type\">svg</span>|<span class=\"type\">gif</span>)$/,</span><br><span class=\"line\">        use:['file-loader']</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        test:/\\.(woff|<span class=\"type\">woff2</span>|<span class=\"type\">eot</span>|<span class=\"type\">ttf</span>|<span class=\"type\">otf</span>)$/</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"下载css-loader，vue-style-loader，sass-loader，-node-sass，less，less-loader并配置css，scss，sass-less\"><a href=\"#下载css-loader，vue-style-loader，sass-loader，-node-sass，less，less-loader并配置css，scss，sass-less\" class=\"headerlink\" title=\"下载css-loader，vue-style-loader，sass-loader， node-sass，less，less-loader并配置css，scss，sass,less\"></a>下载css-loader，vue-style-loader，sass-loader， node-sass，less，less-loader并配置css，scss，sass,less</h4><p><code>npm i css-loader vue-style-loader sass-loader node-sass less-loader less -D</code><br><figure class=\"highlight sml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rules:[</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        test:/\\.(sa|sc|c)ss$/,</span><br><span class=\"line\">        use:[</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                loader: <span class=\"symbol\">'vue</span>-style-loader'</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            <span class=\"symbol\">'css</span>-loader',</span><br><span class=\"line\">            <span class=\"symbol\">'sass</span>-loader'</span><br><span class=\"line\">        ]</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        test:/\\.less$/,</span><br><span class=\"line\">        use:[</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                loader: <span class=\"symbol\">'vue</span>-style-loader'</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            <span class=\"symbol\">'css</span>-loader',</span><br><span class=\"line\">            <span class=\"symbol\">'sass</span>-loader'</span><br><span class=\"line\">        ]</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"5-处理html文件\"><a href=\"#5-处理html文件\" class=\"headerlink\" title=\"5.处理html文件\"></a>5.处理html文件</h3><p>下载html-webpack-plugin<br><code>npm i html-webpack-plugin -D</code><br><figure class=\"highlight haxe\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> HtmlWebpackPlugin = require(<span class=\"string\">'html-webpack-plugin'</span>); <span class=\"comment\">//在base配置文件头部引入</span></span><br><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"type\">HtmlWebpackPlugin</span>(&#123;</span><br><span class=\"line\">    template: <span class=\"type\">path</span>.resolve(__dirname, <span class=\"string\">'../index.html'</span>)</span><br><span class=\"line\">&#125;),</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"6-解析模块的配置和配置别名\"><a href=\"#6-解析模块的配置和配置别名\" class=\"headerlink\" title=\"6.解析模块的配置和配置别名\"></a>6.解析模块的配置和配置别名</h3><figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">resolve</span>: &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 能够使用户在引入模块时不带扩展</span></span><br><span class=\"line\">    <span class=\"attribute\">extensions</span>: [<span class=\"string\">'.js'</span>, <span class=\"string\">'.json'</span>, <span class=\"string\">'.vue'</span>, <span class=\"string\">'css'</span>],</span><br><span class=\"line\">    <span class=\"comment\">//别名</span></span><br><span class=\"line\">    <span class=\"attribute\">alias</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">'vue$'</span>:<span class=\"string\">'vue/dist/vue.esm.js'</span>,</span><br><span class=\"line\">        <span class=\"string\">'@'</span>: path.resolve(__dirname, <span class=\"string\">'../src'</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"7-配置webpack-dev-conf-js文件\"><a href=\"#7-配置webpack-dev-conf-js文件\" class=\"headerlink\" title=\"7.配置webpack.dev.conf.js文件\"></a>7.配置webpack.dev.conf.js文件</h3><p>下载 webpack-merge，用于合并配置<br><code>npm i webpack-merge -D</code><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> merge = <span class=\"built_in\">require</span>(<span class=\"string\">'webpack-merge'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> baseConfig = <span class=\"built_in\">require</span>(<span class=\"string\">'./webpack.base.conf'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> webpack = <span class=\"built_in\">require</span>(<span class=\"string\">'webpack'</span>);</span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = merge(baseConfig, &#123;</span><br><span class=\"line\">    devtool: <span class=\"string\">'inline-source-map'</span>, <span class=\"comment\">// 压缩方式</span></span><br><span class=\"line\">    mode: <span class=\"string\">'development'</span>,</span><br><span class=\"line\">    devServer: &#123;</span><br><span class=\"line\">        hot: <span class=\"literal\">true</span>, <span class=\"comment\">// 热更新</span></span><br><span class=\"line\">        open: <span class=\"literal\">true</span>, <span class=\"comment\">// 自动打开页面</span></span><br><span class=\"line\">        contentBase: path.resolve(__dirname, <span class=\"string\">'../src'</span>), <span class=\"comment\">// 告诉服务从哪提供内容</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    plugins: [</span><br><span class=\"line\">        <span class=\"keyword\">new</span> webpack.HotModuleReplacementPlugin(), <span class=\"comment\">//开启热更新</span></span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"8-配置webpack-prod-conf-js\"><a href=\"#8-配置webpack-prod-conf-js\" class=\"headerlink\" title=\"8.配置webpack.prod.conf.js\"></a>8.配置webpack.prod.conf.js</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> merge = <span class=\"built_in\">require</span>(<span class=\"string\">'webpack-merge'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> baseConfig = <span class=\"built_in\">require</span>(<span class=\"string\">'./webpack.base.conf'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> webpack = <span class=\"built_in\">require</span>(<span class=\"string\">'webpack'</span>);</span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = merge(baseConfig, &#123;</span><br><span class=\"line\">    devtool: <span class=\"string\">'source-map'</span>, <span class=\"comment\">// 压缩方式</span></span><br><span class=\"line\">    mode: <span class=\"string\">'production'</span>,</span><br><span class=\"line\">    plugins: [</span><br><span class=\"line\"></span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h3 id=\"9-配置vue-loader\"><a href=\"#9-配置vue-loader\" class=\"headerlink\" title=\"9.配置vue-loader\"></a>9.配置vue-loader</h3><p>首先要下载vue，以及vue相关的模块<br><code>npm i vue vue-loader vue-template-compiler -D</code><br>继续完善webpack.base.cond.js<br><figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var VueLoaderPlugin=require(<span class=\"string\">'vue-loader/lib/plugin'</span>);</span><br><span class=\"line\"><span class=\"comment\">//省略部分代码...</span></span><br><span class=\"line\"><span class=\"string\">rules:</span>[</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\"><span class=\"symbol\">        test:</span> <span class=\"regexp\">/\\.vue$/</span>,</span><br><span class=\"line\"><span class=\"symbol\">        use:</span> [<span class=\"string\">'vue-loader'</span>],</span><br><span class=\"line\"><span class=\"symbol\">        exclude:</span> <span class=\"regexp\">/node_modules/</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">]</span><br><span class=\"line\"><span class=\"comment\">//省略部分代码...</span></span><br><span class=\"line\"><span class=\"string\">plugins:</span>[</span><br><span class=\"line\">    <span class=\"keyword\">new</span> VueLoaderPlugin(), <span class=\"comment\">// 它的职责是将你定义过的其它规则复制并应用到 .vue 文件里相应语言的块</span></span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure></p>\n<p>在src目录新建app.vue文件和main.js文件<br><figure class=\"highlight django\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"xml\">//app.vue</span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><span class=\"template-variable\">&#123;&#123;str&#125;&#125;</span><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\"></span></span></span><br><span class=\"line\"><span class=\"xml\">  export default &#123;</span></span><br><span class=\"line\"><span class=\"xml\">    name: 'App',</span></span><br><span class=\"line\"><span class=\"xml\">    data () &#123;</span></span><br><span class=\"line\"><span class=\"xml\">      return &#123;</span></span><br><span class=\"line\"><span class=\"xml\">        str: '欢迎来到自定义webpack4+vue构建'</span></span><br><span class=\"line\"><span class=\"xml\">      &#125;</span></span><br><span class=\"line\"><span class=\"xml\">    &#125;</span></span><br><span class=\"line\"><span class=\"xml\">  &#125;</span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"scss\"</span>&gt;</span><span class=\"undefined\"></span></span></span><br><span class=\"line\"><span class=\"xml\">  div &#123;</span></span><br><span class=\"line\"><span class=\"xml\">    color: red;</span></span><br><span class=\"line\"><span class=\"xml\">  &#125;</span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight coffeescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"regexp\">//m</span>ain.js</span><br><span class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> App <span class=\"keyword\">from</span> <span class=\"string\">'./App'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">    el: <span class=\"string\">\"#app\"</span>,</span><br><span class=\"line\">    render: <span class=\"function\"><span class=\"params\">(h)</span> =&gt;</span> h(App)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h3 id=\"10-配置命令\"><a href=\"#10-配置命令\" class=\"headerlink\" title=\"10.配置命令\"></a>10.配置命令</h3><p>打开package.json文件，并配置开发和打包命令<br><figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 省略代码。。。</span></span><br><span class=\"line\"><span class=\"string\">\"scripts\"</span>: &#123;</span><br><span class=\"line\">  <span class=\"string\">\"dev\"</span>: <span class=\"string\">\"webpack-dev-server  --progress --config build/webpack.dev.conf.js\"</span>,</span><br><span class=\"line\">   <span class=\"string\">\"build\"</span>: <span class=\"string\">\"webpack --config build/webpack.prod.conf.js\"</span></span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure></p>\n<p><code>npm run dev</code> 就可以启动项目了<br><img src=\"2.jpg\" alt=\"\"></p>\n<h2 id=\"继续优化…\"><a href=\"#继续优化…\" class=\"headerlink\" title=\"继续优化…\"></a>继续优化…</h2><h3 id=\"11-区分环境引入不同地址\"><a href=\"#11-区分环境引入不同地址\" class=\"headerlink\" title=\"11. 区分环境引入不同地址\"></a>11. 区分环境引入不同地址</h3><p>新建config文件夹并新建dev.env.js和prod.env.js<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//dev.env.js 开发环境配置</span></span><br><span class=\"line\"><span class=\"meta\">'use strict'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">    NODE_ENV: <span class=\"string\">\"development\"</span>,</span><br><span class=\"line\">    BASE_API: <span class=\"string\">\"http://1456\"</span>,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//prod.env.js 生产环境配置</span></span><br><span class=\"line\"><span class=\"meta\">'use strict'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">    NODE_ENV: <span class=\"string\">\"production\"</span>,    <span class=\"attr\">BASE_API</span>: <span class=\"string\">\"http://123.com\"</span>,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"12-优化webpack配置\"><a href=\"#12-优化webpack配置\" class=\"headerlink\" title=\"12.优化webpack配置\"></a>12.优化webpack配置</h3><p>解决更改文件打包时dist文件没有清除，再次打包。<br>下载clean-webpack-plugin，并配置webpack.prod.conf.js文件<br><code>npm i clean-webpack-plugin -D</code></p>\n<figure class=\"highlight haxe\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//webpack.prod.conf.js</span></span><br><span class=\"line\"><span class=\"comment\">// 引入clean-webpack-plugin</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> CleanWebpackPlugin = require(<span class=\"string\">'clean-webpack-plugin'</span>);</span><br><span class=\"line\"><span class=\"comment\">// 省略代码。。。。</span></span><br><span class=\"line\">plugins: <span class=\"type\"></span>[</span><br><span class=\"line\">    <span class=\"keyword\">new</span> <span class=\"type\">CleanWebPackPlugin</span>();</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<p>根据不同环境提取css<br>下载mini-css-extract-plugin，并配置webpack.prod.conf.js文件<br><code>npm i mini-css-extract-plugin -D</code><br><figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//webpack.prod.conf.js</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> MiniCssExtractPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">'mini-css-extract-plugin'</span>);</span><br><span class=\"line\"><span class=\"keyword\">module</span>: &#123;</span><br><span class=\"line\">    rules: [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            test: <span class=\"regexp\">/\\.(c|sc|sa)ss$/</span>,</span><br><span class=\"line\">            use: [</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                loader: MiniCssExtractPlugin.loader,</span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">                <span class=\"string\">'css-loader'</span>,</span><br><span class=\"line\">                <span class=\"string\">'sass-loader'</span></span><br><span class=\"line\">            ]</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">        test: <span class=\"regexp\">/\\.less$/</span>,</span><br><span class=\"line\">        use: [</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">            loader: MiniCssExtractPlugin.loader,</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            <span class=\"string\">'css-loader'</span>,</span><br><span class=\"line\">            <span class=\"string\">'less-loader'</span></span><br><span class=\"line\">            ]</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">plugins: [</span><br><span class=\"line\">    <span class=\"keyword\">new</span> MiniCssExtractPlugin(&#123;</span><br><span class=\"line\">        filename: <span class=\"string\">'[name].[hash].css'</span></span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure></p>\n<font color=\"red\">webpack.base.conf.js中删除使用vue-style-loader的代码，并在webpack.dev.conf.js中定义</font>\n\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">module</span>: &#123;</span></span><br><span class=\"line\">    <span class=\"symbol\">rules:</span> [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"symbol\">test:</span> /\\.(c<span class=\"params\">|sc|</span>sa)ss$/,</span><br><span class=\"line\">        <span class=\"symbol\">use:</span> [</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            <span class=\"symbol\">loader:</span> <span class=\"string\">'vue-style-loader'</span>,</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          <span class=\"string\">'css-loader'</span>,</span><br><span class=\"line\">          <span class=\"string\">'sass-loader'</span></span><br><span class=\"line\">        ]</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"symbol\">test:</span> /\\.less$/,</span><br><span class=\"line\">        <span class=\"symbol\">use:</span> [</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            <span class=\"symbol\">loader:</span> <span class=\"string\">'vue-style-loader'</span>,</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          <span class=\"string\">'css-loader'</span>,</span><br><span class=\"line\">          <span class=\"string\">'less-loader'</span></span><br><span class=\"line\">         ]</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">/<span class=\"regexp\">/以上这段webpack.base.conf.js中的代码移到webpack.dev.conf.js中</span></span><br></pre></td></tr></table></figure>\n<p><a href=\"https://link.juejin.im?target=https%3A%2F%2Fvue-loader.vuejs.org%2Fzh%2Fguide%2Fextract-css.html%23webpack-4\" target=\"_blank\" rel=\"noopener\">这个配置vue-loader中有提到</a></p>\n<h4 id=\"第三方库单独打包\"><a href=\"#第三方库单独打包\" class=\"headerlink\" title=\"第三方库单独打包\"></a>第三方库单独打包</h4><p>把依赖的第三方库抽取出来单独打包，加快打包进度<br>下载autodll-webpack-plugin<br><code>npm i autodll-webpack-plugin -D</code></p>\n<p>在webpack.base.conf.js中配置<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//webpack.base.conf.js</span></span><br><span class=\"line\"><span class=\"comment\">//省略部分代码</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> AutodllWebpackpackPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">'autodll-webpack-plugin'</span>);</span><br><span class=\"line\">plugins: [</span><br><span class=\"line\">    <span class=\"keyword\">new</span> AutodllWebpackpackPlugin (&#123;</span><br><span class=\"line\">        inject: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"keyword\">debugger</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        filename: <span class=\"string\">'[name].js'</span>,</span><br><span class=\"line\">        path: <span class=\"string\">'./dll'</span>,</span><br><span class=\"line\">        entry: &#123;</span><br><span class=\"line\">            vendor: [<span class=\"string\">'vue'</span>]</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure></p>\n<p>tips: inject 为 true，插件会自动把打包出来的第三方库文件插入到 HTML。filename 是打包后文件的名称。path 是打包后的路径。entry 是入口，vendor 是你指定的名称，数组内容就是要打包的第三方库的名称，不要写全路径，Webpack 会自动去 node_modules 中找到的。</p>\n<h4 id=\"提取公共代码\"><a href=\"#提取公共代码\" class=\"headerlink\" title=\"提取公共代码\"></a>提取公共代码</h4><p>在 webpack.base.conf.js的 plugins 属性中添加如下插件对象<br><code>new webpack.optimize.SplitChunksPlugin()</code></p>\n<h4 id=\"打包时压缩js和css\"><a href=\"#打包时压缩js和css\" class=\"headerlink\" title=\"打包时压缩js和css\"></a>打包时压缩js和css</h4><p>下载optimize-css-assets-webpack-plugin和uglifyjs-webpack-plugin</p>\n<p><code>npm i uglifyjs-webpack-plugin uglifyjs-webpack-plugin optimize-css-assets-webpack-plugin -D</code></p>\n<p>在webpack.prod.conf.js中分别引入optimize-css-assets-webpack-plugin和uglifyjs-webpack-plugin并增加optimization<br><figure class=\"highlight lasso\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//webpack.prod.conf.js</span></span><br><span class=\"line\"><span class=\"built_in\">var</span> OptimizeCSSAssetsPlugin = <span class=\"keyword\">require</span>(<span class=\"string\">\"optimize-css-assets-webpack-plugin\"</span>);</span><br><span class=\"line\"><span class=\"built_in\">var</span> UglifyJsPlugin = <span class=\"keyword\">require</span>(<span class=\"string\">\"uglifyjs-webpack-plugin\"</span>);</span><br><span class=\"line\"><span class=\"comment\">// 省略部分代码</span></span><br><span class=\"line\">optimization: &#123;</span><br><span class=\"line\">        minimizer: <span class=\"meta\">[</span></span><br><span class=\"line\">        <span class=\"comment\">// 压缩JS</span></span><br><span class=\"line\">        <span class=\"literal\">new</span> UglifyJsPlugin(&#123;</span><br><span class=\"line\">        uglifyOptions: &#123;</span><br><span class=\"line\">            compress: &#123;</span><br><span class=\"line\">            warnings: <span class=\"literal\">false</span>, <span class=\"comment\">// 去除警告</span></span><br><span class=\"line\">            drop_debugger: <span class=\"literal\">true</span>, <span class=\"comment\">// 去除debugger</span></span><br><span class=\"line\">            drop_console: <span class=\"literal\">true</span> <span class=\"comment\">// 去除console.log</span></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"keyword\">cache</span>: <span class=\"literal\">true</span>, <span class=\"comment\">// 开启缓存</span></span><br><span class=\"line\">        parallel: <span class=\"literal\">true</span>, <span class=\"comment\">// 平行压缩</span></span><br><span class=\"line\">        sourceMap: <span class=\"literal\">false</span> <span class=\"comment\">// set to true if you want JS source maps</span></span><br><span class=\"line\">        &#125;),</span><br><span class=\"line\">        <span class=\"comment\">// 压缩css</span></span><br><span class=\"line\">        <span class=\"literal\">new</span> OptimizeCSSAssetsPlugin(&#123;&#125;)</span><br><span class=\"line\">    <span class=\"meta\">]</span></span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"css自动加前缀\"><a href=\"#css自动加前缀\" class=\"headerlink\" title=\"css自动加前缀\"></a>css自动加前缀</h4><p>下载postcss-loader 和autoprefixer<br><code>npm i postcss-loader autoprefixer -D</code><br>分别在webpack.dev.conf.js和webpack.prod.conf.js的use中添加postcss-loader<br>在module中的rules中的use中追加：<br><figure class=\"highlight actionscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">use</span>: [</span><br><span class=\"line\">    <span class=\"string\">'postcss-loader'</span></span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure></p>\n<p>在项目下增加postcss.config.js<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 配置cssz加前缀</span></span><br><span class=\"line\"><span class=\"keyword\">module</span>.<span class=\"keyword\">exports</span> = &#123;</span><br><span class=\"line\">  plugins: [</span><br><span class=\"line\">    require(<span class=\"string\">'autoprefixer'</span>)</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>差不多就这样了,对了，还有一点就是打包出来的html里面引用<code>/dll/vendor.js</code>需要手动改成<code>./dll/vendor.js</code>这个下次也要优化下，我记得vue-cli 2版本中有一个地方是可以配置的</p>\n"}],"PostAsset":[{"_id":"source/_posts/js判断一个变量是对象还是数组的实用方法记录/1.jpg","post":"cjvoywn0x0009hwuxzxbit601","slug":"1.jpg","modified":1,"renderable":1},{"_id":"source/_posts/js判断一个变量是对象还是数组的实用方法记录/2.jpg","post":"cjvoywn0x0009hwuxzxbit601","slug":"2.jpg","modified":1,"renderable":1},{"_id":"source/_posts/element-ui-上传组件函数自定义参数传递/1.png","post":"cjvoywn0r0003hwuxgpk6u4qd","slug":"1.png","modified":1,"renderable":1},{"_id":"source/_posts/element-ui-上传组件函数自定义参数传递/2.png","post":"cjvoywn0r0003hwuxgpk6u4qd","slug":"2.png","modified":1,"renderable":1},{"_id":"source/_posts/element-ui-上传组件函数自定义参数传递/3.png","post":"cjvoywn0r0003hwuxgpk6u4qd","slug":"3.png","modified":1,"renderable":1},{"_id":"source/_posts/记录element-ui-二次封装table时formatter的使用问题/1.png","post":"cjvoywn1d000nhwuxkea4y6wu","slug":"1.png","modified":1,"renderable":1},{"_id":"source/_posts/记录element-ui-二次封装table时formatter的使用问题/2.png","post":"cjvoywn1d000nhwuxkea4y6wu","slug":"2.png","modified":1,"renderable":1},{"_id":"source/_posts/记录element-ui-二次封装table时formatter的使用问题/3.png","post":"cjvoywn1d000nhwuxkea4y6wu","slug":"3.png","modified":1,"renderable":1},{"_id":"source/_posts/element-ui-表格中的form的input动态验证规则/1.png","post":"cjvoywn0v0007hwuxlp7yk2t5","slug":"1.png","modified":1,"renderable":1},{"_id":"source/_posts/element-ui-表格中的form的input动态验证规则/2.png","post":"cjvoywn0v0007hwuxlp7yk2t5","slug":"2.png","modified":1,"renderable":1},{"_id":"source/_posts/element-ui-表格中的form的input动态验证规则/3.png","post":"cjvoywn0v0007hwuxlp7yk2t5","slug":"3.png","modified":1,"renderable":1},{"_id":"source/_posts/element-ui-表格中的form的input动态验证规则/4.png","post":"cjvoywn0v0007hwuxlp7yk2t5","slug":"4.png","modified":1,"renderable":1},{"_id":"source/_posts/element-ui-表格中的form的input动态验证规则/5.png","post":"cjvoywn0v0007hwuxlp7yk2t5","slug":"5.png","modified":1,"renderable":1},{"_id":"source/_posts/webpack4从头构建一个简单的vue2项目/1.png","post":"cjvoywn84001lhwuxtcte7ung","slug":"1.png","modified":1,"renderable":1},{"_id":"source/_posts/webpack4从头构建一个简单的vue2项目/2.png","post":"cjvoywn84001lhwuxtcte7ung","slug":"2.png","modified":1,"renderable":1}],"PostCategory":[{"post_id":"cjvoywn0x0009hwuxzxbit601","category_id":"cjvoywn0t0005hwuxui4wbnrw","_id":"cjvoywn19000hhwuxpyl99sxt"},{"post_id":"cjvoywn0k0001hwuxhe8l6f9y","category_id":"cjvoywn0t0005hwuxui4wbnrw","_id":"cjvoywn1c000lhwuxj2hdyp6q"},{"post_id":"cjvoywn0r0003hwuxgpk6u4qd","category_id":"cjvoywn0t0005hwuxui4wbnrw","_id":"cjvoywn1e000phwuxqrxawbgb"},{"post_id":"cjvoywn18000ghwuxxf0rlk2g","category_id":"cjvoywn0t0005hwuxui4wbnrw","_id":"cjvoywn1g000shwux0v9okdqg"},{"post_id":"cjvoywn0v0007hwuxlp7yk2t5","category_id":"cjvoywn0t0005hwuxui4wbnrw","_id":"cjvoywn1i000vhwuxuckonuss"},{"post_id":"cjvoywn1d000nhwuxkea4y6wu","category_id":"cjvoywn0t0005hwuxui4wbnrw","_id":"cjvoywn1l000zhwux926dtxx1"},{"post_id":"cjvoywn1f000rhwuxkku2877i","category_id":"cjvoywn0t0005hwuxui4wbnrw","_id":"cjvoywn1m0011hwuxjjdave3h"},{"post_id":"cjvoywn0y000ahwuxv3mngwhw","category_id":"cjvoywn1e000ohwuxhp1yi2hp","_id":"cjvoywn1n0015hwuxyq7lxf76"},{"post_id":"cjvoywn14000ehwux1fynmqec","category_id":"cjvoywn1i000whwuxo6khhx7h","_id":"cjvoywn1o0019hwuxodyov49l"},{"post_id":"cjvoywn1b000khwuxraeacc2z","category_id":"cjvoywn1i000whwuxo6khhx7h","_id":"cjvoywn1p001chwuxhr7lvxv3"},{"post_id":"cjvoywn1h000uhwux41e7sbv6","category_id":"cjvoywn1i000whwuxo6khhx7h","_id":"cjvoywn1q001fhwux8ql12w3s"},{"post_id":"cjvoywn84001lhwuxtcte7ung","category_id":"cjvoywn0t0005hwuxui4wbnrw","_id":"cjvoywn8g001ohwuxnucmm61a"}],"PostTag":[{"post_id":"cjvoywn0x0009hwuxzxbit601","tag_id":"cjvoywn0v0006hwuxrx2lt8b7","_id":"cjvoywn13000dhwuxzzk2unyn"},{"post_id":"cjvoywn0k0001hwuxhe8l6f9y","tag_id":"cjvoywn0v0006hwuxrx2lt8b7","_id":"cjvoywn18000fhwuxmoqrkib7"},{"post_id":"cjvoywn18000ghwuxxf0rlk2g","tag_id":"cjvoywn0v0006hwuxrx2lt8b7","_id":"cjvoywn1d000mhwuxek1cm6u6"},{"post_id":"cjvoywn0r0003hwuxgpk6u4qd","tag_id":"cjvoywn11000chwuxa8ybcyni","_id":"cjvoywn1g000thwuxotp0au9l"},{"post_id":"cjvoywn0r0003hwuxgpk6u4qd","tag_id":"cjvoywn1a000jhwuxlccm9v3f","_id":"cjvoywn1j000xhwuxylq971em"},{"post_id":"cjvoywn1d000nhwuxkea4y6wu","tag_id":"cjvoywn11000chwuxa8ybcyni","_id":"cjvoywn1m0010hwuxns3srw10"},{"post_id":"cjvoywn1d000nhwuxkea4y6wu","tag_id":"cjvoywn1a000jhwuxlccm9v3f","_id":"cjvoywn1m0012hwuxlbrstyt0"},{"post_id":"cjvoywn0v0007hwuxlp7yk2t5","tag_id":"cjvoywn11000chwuxa8ybcyni","_id":"cjvoywn1n0016hwuxmajuwml3"},{"post_id":"cjvoywn0v0007hwuxlp7yk2t5","tag_id":"cjvoywn1a000jhwuxlccm9v3f","_id":"cjvoywn1n0017hwuxc4vo3ik9"},{"post_id":"cjvoywn0y000ahwuxv3mngwhw","tag_id":"cjvoywn1m0014hwux7qedw23y","_id":"cjvoywn1p001bhwux7j83xhpj"},{"post_id":"cjvoywn14000ehwux1fynmqec","tag_id":"cjvoywn1o001ahwuxez2k8d1p","_id":"cjvoywn1q001ehwuxnsjqp4qg"},{"post_id":"cjvoywn1b000khwuxraeacc2z","tag_id":"cjvoywn1o001ahwuxez2k8d1p","_id":"cjvoywn1q001hhwux3iqkj7xg"},{"post_id":"cjvoywn1f000rhwuxkku2877i","tag_id":"cjvoywn1q001ghwuxcgpzt83n","_id":"cjvoywn1r001jhwux904bhakj"},{"post_id":"cjvoywn1h000uhwux41e7sbv6","tag_id":"cjvoywn1o001ahwuxez2k8d1p","_id":"cjvoywn1r001khwuxxj3ml228"},{"post_id":"cjvoywn84001lhwuxtcte7ung","tag_id":"cjvoywn1q001ghwuxcgpzt83n","_id":"cjvoywn8h001phwuxxz79qygp"},{"post_id":"cjvoywn84001lhwuxtcte7ung","tag_id":"cjvoywn8g001nhwuxbxa3884j","_id":"cjvoywn8h001qhwuxciyi4uj2"},{"post_id":"cjvoywn84001lhwuxtcte7ung","tag_id":"cjvoywn1a000jhwuxlccm9v3f","_id":"cjvoywn8i001rhwux6q13utyo"}],"Tag":[{"name":"js","_id":"cjvoywn0v0006hwuxrx2lt8b7"},{"name":"element-ui","_id":"cjvoywn11000chwuxa8ybcyni"},{"name":"vue","_id":"cjvoywn1a000jhwuxlccm9v3f"},{"name":"linux","_id":"cjvoywn1m0014hwux7qedw23y"},{"name":"技术","_id":"cjvoywn1o001ahwuxez2k8d1p"},{"name":"nodejs","_id":"cjvoywn1q001ghwuxcgpzt83n"},{"name":"webpack","_id":"cjvoywn8g001nhwuxbxa3884j"}]}}