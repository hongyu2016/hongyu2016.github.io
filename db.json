{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"source/README.md","path":"README.md","modified":0,"renderable":0},{"_id":"source/robots.txt","path":"robots.txt","modified":0,"renderable":0},{"_id":"source/images/2019-2-26.png","path":"images/2019-2-26.png","modified":0,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/js/algolia-search.js","path":"js/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/bookmark.js","path":"js/bookmark.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/local-search.js","path":"js/local-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/motion.js","path":"js/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/next-boot.js","path":"js/next-boot.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/anime.min.js","path":"lib/anime.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/schemes/muse.js","path":"js/schemes/muse.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/schemes/pisces.js","path":"js/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/all.min.css","path":"lib/font-awesome/css/all.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-brands-400.woff2","path":"lib/font-awesome/webfonts/fa-brands-400.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-regular-400.woff2","path":"lib/font-awesome/webfonts/fa-regular-400.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-solid-900.woff2","path":"lib/font-awesome/webfonts/fa-solid-900.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.png","path":"images/avatar.png","modified":1,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"109833a1caf13cc5305f1c288b98e4f77c19df4a","modified":1588233505396},{"_id":"source/README.md","hash":"77b0d98e16ba11d1ef35936e1d3bb865a842912c","modified":1588233505396},{"_id":"source/robots.txt","hash":"a7593476994d284c7265a8de84793557f7b42a51","modified":1588233505404},{"_id":"source/404/404.html","hash":"7c85bc76e7f5b3b0334a13613c4ed7995212623e","modified":1588233505396},{"_id":"source/_posts/1-2-3-map-parseInt-报错问解决办法.md","hash":"57f457592bdafbf58aaf4ea6e2d2803b33c8593f","modified":1597208254498},{"_id":"source/_posts/element-ui-上传组件函数自定义参数传递.md","hash":"3a8dff2d05a8874bf0e80b206e11a5b58a82e966","modified":1597208121641},{"_id":"source/_posts/element-ui-表格中的form的input动态验证规则.md","hash":"5547bf063623a2c7f22fdb6ec79f7a873c90cd42","modified":1597208105713},{"_id":"source/_posts/js判断一个变量是对象还是数组的实用方法记录.md","hash":"5b78615fbe56efa7b597c44e95fbc956b795a94a","modified":1597208129145},{"_id":"source/_posts/webpack4从头构建一个简单的vue2项目.md","hash":"d2d4667acc94f98d1a95a8b7131ee80c3851d2e2","modified":1597208152521},{"_id":"source/_posts/ubantu-apt-get-install方式安装mysql.md","hash":"26035cb3d8fe233d5a98359fde5dd3fe2e6e7790","modified":1597208136317},{"_id":"source/_posts/windows下使用nexus搭建私有仓库并使用vue-cli-3-搭建组件库.md","hash":"67009f6b8116a5b8f3965f029a179c40c30f725a","modified":1597208241546},{"_id":"source/_posts/一个奇葩的表格统计需求.md","hash":"8e6113ac4d07bd2cc07d0005fd41bd1a5142b86f","modified":1597208367759},{"_id":"source/_posts/在-create-react-app-中使用Ant-Design中的坑.md","hash":"a86d9cb3bd0d2d4883a61606b89dd6d8e2ff16f1","modified":1597208087229},{"_id":"source/_posts/在重启阿里云ubantu后nginx、mysql、pm2等的重启.md","hash":"faace5bb70277e3a59375021a64f491e71f80896","modified":1597208093265},{"_id":"source/_posts/实现一个简单的深拷贝.md","hash":"cc14fc1e8791382dbec4ec798e76979c8f6b2f5d","modified":1597208048841},{"_id":"source/_posts/怎么样在别的电脑同步更新发表hexo博客？.md","hash":"e906acbec23e23ae7604c7e8d405a65515309ef4","modified":1597208099637},{"_id":"source/_posts/用Xshell登录阿里云服务器.md","hash":"9b99a00696d7f779d6f82c9fbdc385dcd7924f29","modified":1597208373807},{"_id":"source/_posts/用hexo-github搭建个人博客.md","hash":"4a13606e240f87637fed672aa5beeb33076b5b67","modified":1597208370899},{"_id":"source/_posts/解决npm-install安装任何包都报错的问题.md","hash":"466226ed1a1401935722f3ca79860f2e550042d1","modified":1597208043700},{"_id":"source/_posts/记录element-ui-二次封装table时formatter的使用问题.md","hash":"8e18267ae36225f92112e4cb6fd330cc5ed022df","modified":1597208440868},{"_id":"source/_posts/运行yarn-eject-后-yarn-start-报错.md","hash":"40f1f27715eeb959f9d7a9e1c4cde72b97dcfba8","modified":1597208006440},{"_id":"source/_posts/部署在github-page的hexo博客绑定二级域名.md","hash":"3cf8f55514085e4ef380ce1102df306f29fa8c34","modified":1597208025768},{"_id":"source/about/index.md","hash":"3afa92c5b5a9eba79280391c829eed6ab87a36dd","modified":1588233505404},{"_id":"source/archives/index.md","hash":"b4fa267fc5848ea8311aa9104faa0c9fcfe26ddf","modified":1588233505404},{"_id":"source/categories/index.md","hash":"400225648ece83791339fd036ced172f2ec39bc3","modified":1588233505404},{"_id":"source/images/2019-2-26.png","hash":"8f24528dfcc0382abcd8fe829c34ad7501827c46","modified":1588233505404},{"_id":"source/tags/index.md","hash":"77f0641e5989c61b5360063f826369bc7d27acdd","modified":1588233505404},{"_id":"source/_posts/element-ui-上传组件函数自定义参数传递/1.png","hash":"ead49f0f3a675a1a0df47a2d8bf6ffaa2ad41550","modified":1588233505396},{"_id":"source/_posts/element-ui-上传组件函数自定义参数传递/2.png","hash":"e796281bac9aadf1cf2d35abed8bb11b194883fe","modified":1588233505396},{"_id":"source/_posts/element-ui-上传组件函数自定义参数传递/3.png","hash":"b75fe1970b5278c5f1d4f5001bb55e9c053fff52","modified":1588233505396},{"_id":"source/_posts/element-ui-表格中的form的input动态验证规则/1.png","hash":"10264588102714359a980206c040c9ddb7cea605","modified":1588233505396},{"_id":"source/_posts/element-ui-表格中的form的input动态验证规则/2.png","hash":"191416348a4434089560929f5e2b547f2af24ac6","modified":1588233505396},{"_id":"source/_posts/element-ui-表格中的form的input动态验证规则/3.png","hash":"86ec7353f6c193a4ac6eb7d770656cf24dbb8524","modified":1588233505396},{"_id":"source/_posts/element-ui-表格中的form的input动态验证规则/4.png","hash":"94d20fcae17886203ecc58e493d72f22dd181656","modified":1588233505396},{"_id":"source/_posts/element-ui-表格中的form的input动态验证规则/5.png","hash":"6408623a332923fdd073c3a3d01d4b51801a5f28","modified":1588233505396},{"_id":"source/_posts/js判断一个变量是对象还是数组的实用方法记录/1.jpg","hash":"fbee0ee26b8db424d8925521f8b055ddef18d6fd","modified":1588233505396},{"_id":"source/_posts/js判断一个变量是对象还是数组的实用方法记录/2.jpg","hash":"6398dc248ae2a9353582e519c092755498c00e06","modified":1588233505396},{"_id":"source/_posts/webpack4从头构建一个简单的vue2项目/1.png","hash":"28803ad48576d6031fc620df00df92edd8a5c734","modified":1588233505396},{"_id":"source/_posts/webpack4从头构建一个简单的vue2项目/2.png","hash":"de756293494f1fa6b4ae40745a94b8ad6283626c","modified":1588233505396},{"_id":"source/_posts/windows下使用nexus搭建私有仓库并使用vue-cli-3-搭建组件库/5.png","hash":"3bc26eb6ffe01b4e0dcc1f49010fabd7e4926b0f","modified":1588233505400},{"_id":"source/_posts/windows下使用nexus搭建私有仓库并使用vue-cli-3-搭建组件库/8.png","hash":"01fb060c882bf14fe637dcf42ca3d8f6679bb714","modified":1588233505400},{"_id":"source/_posts/一个奇葩的表格统计需求/1.jpg","hash":"fc04a6cc872c75700ecd6309e9e53d1554fe2144","modified":1588233505400},{"_id":"source/_posts/一个奇葩的表格统计需求/2.jpg","hash":"ce92e8d091db7c19c8dab1d66729fb3c4da46acc","modified":1588233505400},{"_id":"source/_posts/一个奇葩的表格统计需求/3.jpg","hash":"6400106d296b6b7b8f23ea43eb577a67f67285f6","modified":1588233505404},{"_id":"source/_posts/一个奇葩的表格统计需求/4.jpg","hash":"ed6a9f4361a1b8ebc3241b58a854b776a464f023","modified":1588233505404},{"_id":"source/_posts/一个奇葩的表格统计需求/5.jpg","hash":"865b0520708a7083a5fdfa9361ee9618980d1046","modified":1588233505404},{"_id":"source/_posts/在重启阿里云ubantu后nginx、mysql、pm2等的重启/1.png","hash":"c4d1d5125b4342b9f8d4e53bbdc6566503b7720a","modified":1588233505404},{"_id":"source/_posts/在重启阿里云ubantu后nginx、mysql、pm2等的重启/2.png","hash":"66c168b48969d70bcecbad6c19912c469d9e0371","modified":1588233505404},{"_id":"source/_posts/在重启阿里云ubantu后nginx、mysql、pm2等的重启/3.png","hash":"48e6e7149dbb223027a3bfcb2154398fb5e43b3d","modified":1588233505404},{"_id":"source/_posts/用Xshell登录阿里云服务器/1.jpg","hash":"254327df897d4e2794f3e6a43e9a7a7723878e8e","modified":1588233505404},{"_id":"source/_posts/用Xshell登录阿里云服务器/2.jpg","hash":"4c38193b9449eae96842fade756be47374426fb9","modified":1588233505404},{"_id":"source/_posts/记录element-ui-二次封装table时formatter的使用问题/1.png","hash":"ea2de96dfa875f22ae64a5aed7c64d02eed58889","modified":1588233505404},{"_id":"source/_posts/记录element-ui-二次封装table时formatter的使用问题/2.png","hash":"dcac407692b787cbf57033c800fbea954e716ea0","modified":1588233505404},{"_id":"source/_posts/记录element-ui-二次封装table时formatter的使用问题/3.png","hash":"e3cda13ef4ae41ef6d02c790714f190f7f53eeb4","modified":1588233505404},{"_id":"source/_posts/windows下使用nexus搭建私有仓库并使用vue-cli-3-搭建组件库/1.png","hash":"a2fcee8cbf0721c4570f35de3d1d1f80d917f518","modified":1588233505400},{"_id":"source/_posts/windows下使用nexus搭建私有仓库并使用vue-cli-3-搭建组件库/2.png","hash":"a480d8818d822a6c51dde17499df0a6c64cfe047","modified":1588233505400},{"_id":"source/_posts/windows下使用nexus搭建私有仓库并使用vue-cli-3-搭建组件库/3.png","hash":"3a7461c78e868e285c9fd4d8a7119f25cc822cfe","modified":1588233505400},{"_id":"source/_posts/windows下使用nexus搭建私有仓库并使用vue-cli-3-搭建组件库/4.png","hash":"639b4a65f4fb9149c89c5e989613c99d9af9a8a2","modified":1588233505400},{"_id":"source/_posts/windows下使用nexus搭建私有仓库并使用vue-cli-3-搭建组件库/6.png","hash":"8919bf9a4cf99efcfbd6768f2fefb5c43ba58083","modified":1588233505400},{"_id":"source/_posts/windows下使用nexus搭建私有仓库并使用vue-cli-3-搭建组件库/7.png","hash":"db86d672a7e1476aaa7f9fe033287f97114fc7f5","modified":1588233505400},{"_id":"themes/next/.editorconfig","hash":"8570735a8d8d034a3a175afd1dd40b39140b3e6a","modified":1596424932000},{"_id":"themes/next/.eslintrc.json","hash":"cc5f297f0322672fe3f684f823bc4659e4a54c41","modified":1596424932000},{"_id":"themes/next/.gitattributes","hash":"a54f902957d49356376b59287b894b1a3d7a003f","modified":1596424932000},{"_id":"themes/next/.gitignore","hash":"56f3470755c20311ddd30d421b377697a6e5e68b","modified":1596424932000},{"_id":"themes/next/.stylintrc","hash":"2cf4d637b56d8eb423f59656a11f6403aa90f550","modified":1596424932000},{"_id":"themes/next/.travis.yml","hash":"ecca3b919a5b15886e3eca58aa84aafc395590da","modified":1596424932000},{"_id":"themes/next/LICENSE.md","hash":"18144d8ed58c75af66cb419d54f3f63374cd5c5b","modified":1596424932000},{"_id":"themes/next/README.md","hash":"9b4b7d66aca47f9c65d6321b14eef48d95c4dff1","modified":1596424932000},{"_id":"themes/next/_config.yml","hash":"bcfc74ac6be3eb1aee7be2ce52435e0e333803f4","modified":1597210042171},{"_id":"themes/next/crowdin.yml","hash":"e026078448c77dcdd9ef50256bb6635a8f83dca6","modified":1596424932000},{"_id":"themes/next/gulpfile.js","hash":"1b4fc262b89948937b9e3794de812a7c1f2f3592","modified":1596424932000},{"_id":"themes/next/package.json","hash":"62fad6de02adbbba9fb096cbe2dcc15fe25f2435","modified":1596424932000},{"_id":"themes/next/.github/CODE_OF_CONDUCT.md","hash":"aa4cb7aff595ca628cb58160ee1eee117989ec4e","modified":1596424932000},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"e554931b98f251fd49ff1d2443006d9ea2c20461","modified":1596424932000},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"1a435c20ae8fa183d49bbf96ac956f7c6c25c8af","modified":1596424932000},{"_id":"themes/next/.github/config.yml","hash":"1d3f4e8794986817c0fead095c74f756d45f91ed","modified":1596424932000},{"_id":"themes/next/.github/issue-close-app.yml","hash":"7cba457eec47dbfcfd4086acd1c69eaafca2f0cd","modified":1596424932000},{"_id":"themes/next/.github/issue_label_bot.yaml","hash":"fca600ddef6f80c5e61aeed21722d191e5606e5b","modified":1596424932000},{"_id":"themes/next/.github/lock.yml","hash":"61173b9522ebac13db2c544e138808295624f7fd","modified":1596424932000},{"_id":"themes/next/.github/mergeable.yml","hash":"0ee56e23bbc71e1e76427d2bd255a9879bd36e22","modified":1596424932000},{"_id":"themes/next/.github/release-drafter.yml","hash":"3cc10ce75ecc03a5ce86b00363e2a17eb65d15ea","modified":1596424932000},{"_id":"themes/next/.github/stale.yml","hash":"fdf82de9284f8bc8e0b0712b4cc1cb081a94de59","modified":1596424932000},{"_id":"themes/next/.github/support.yml","hash":"d75db6ffa7b4ca3b865a925f9de9aef3fc51925c","modified":1596424932000},{"_id":"themes/next/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1596424932000},{"_id":"themes/next/docs/ALGOLIA-SEARCH.md","hash":"c7a994b9542040317d8f99affa1405c143a94a38","modified":1596424932000},{"_id":"themes/next/docs/AUTHORS.md","hash":"10135a2f78ac40e9f46b3add3e360c025400752f","modified":1596424932000},{"_id":"themes/next/docs/DATA-FILES.md","hash":"cddbdc91ee9e65c37a50bec12194f93d36161616","modified":1596424932000},{"_id":"themes/next/docs/INSTALLATION.md","hash":"af88bcce035780aaa061261ed9d0d6c697678618","modified":1596424932000},{"_id":"themes/next/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"94dc3404ccb0e5f663af2aa883c1af1d6eae553d","modified":1596424932000},{"_id":"themes/next/docs/LICENSE.txt","hash":"368bf2c29d70f27d8726dd914f1b3211cae4bbab","modified":1596424932000},{"_id":"themes/next/docs/MATH.md","hash":"d645b025ec7fb9fbf799b9bb76af33b9f5b9ed93","modified":1596424932000},{"_id":"themes/next/docs/UPDATE-FROM-5.1.X.md","hash":"8b6e4b2c9cfcb969833092bdeaed78534082e3e6","modified":1596424932000},{"_id":"themes/next/languages/ar.yml","hash":"9815e84e53d750c8bcbd9193c2d44d8d910e3444","modified":1596424932000},{"_id":"themes/next/languages/de.yml","hash":"74c59f2744217003b717b59d96e275b54635abf5","modified":1596424932000},{"_id":"themes/next/languages/default.yml","hash":"45bc5118828bdc72dcaa25282cd367c8622758cb","modified":1596424932000},{"_id":"themes/next/languages/en.yml","hash":"45bc5118828bdc72dcaa25282cd367c8622758cb","modified":1596424932000},{"_id":"themes/next/languages/es.yml","hash":"c64cf05f356096f1464b4b1439da3c6c9b941062","modified":1596424932000},{"_id":"themes/next/languages/fa.yml","hash":"3676b32fda37e122f3c1a655085a1868fb6ad66b","modified":1596424932000},{"_id":"themes/next/languages/fr.yml","hash":"752bf309f46a2cd43890b82300b342d7218d625f","modified":1596424932000},{"_id":"themes/next/languages/hu.yml","hash":"b1ebb77a5fd101195b79f94de293bcf9001d996f","modified":1596424932000},{"_id":"themes/next/languages/id.yml","hash":"572ed855d47aafe26f58c73b1394530754881ec2","modified":1596424932000},{"_id":"themes/next/languages/it.yml","hash":"44759f779ce9c260b895532de1d209ad4bd144bf","modified":1596424932000},{"_id":"themes/next/languages/ja.yml","hash":"0cf0baa663d530f22ff380a051881216d6adcdd8","modified":1596424932000},{"_id":"themes/next/languages/ko.yml","hash":"0feea9e43cd399f3610b94d755a39fff1d371e97","modified":1596424932000},{"_id":"themes/next/languages/nl.yml","hash":"5af3473d9f22897204afabc08bb984b247493330","modified":1596424932000},{"_id":"themes/next/languages/pt-BR.yml","hash":"67555b1ba31a0242b12fc6ce3add28531160e35b","modified":1596424932000},{"_id":"themes/next/languages/pt.yml","hash":"718d131f42f214842337776e1eaddd1e9a584054","modified":1596424932000},{"_id":"themes/next/languages/ru.yml","hash":"e993d5ca072f7f6887e30fc0c19b4da791ca7a88","modified":1596424932000},{"_id":"themes/next/languages/tr.yml","hash":"fe793f4c2608e3f85f0b872fd0ac1fb93e6155e2","modified":1596424932000},{"_id":"themes/next/languages/uk.yml","hash":"3a6d635b1035423b22fc86d9455dba9003724de9","modified":1596424932000},{"_id":"themes/next/languages/vi.yml","hash":"93393b01df148dcbf0863f6eee8e404e2d94ef9e","modified":1596424932000},{"_id":"themes/next/languages/zh-CN.yml","hash":"a1f15571ee7e1e84e3cc0985c3ec4ba1a113f6f8","modified":1596424932000},{"_id":"themes/next/languages/zh-HK.yml","hash":"3789f94010f948e9f23e21235ef422a191753c65","modified":1596424932000},{"_id":"themes/next/languages/zh-TW.yml","hash":"8c09da7c4ec3fca2c6ee897b2eea260596a2baa1","modified":1596424932000},{"_id":"themes/next/layout/_layout.swig","hash":"6a6e92a4664cdb981890a27ac11fd057f44de1d5","modified":1596424932000},{"_id":"themes/next/layout/archive.swig","hash":"e4e31317a8df68f23156cfc49e9b1aa9a12ad2ed","modified":1596424932000},{"_id":"themes/next/layout/category.swig","hash":"1bde61cf4d2d171647311a0ac2c5c7933f6a53b0","modified":1596424932000},{"_id":"themes/next/layout/index.swig","hash":"7f403a18a68e6d662ae3e154b2c1d3bbe0801a23","modified":1596424932000},{"_id":"themes/next/layout/page.swig","hash":"db581bdeac5c75fabb0f17d7c5e746e47f2a9168","modified":1596424932000},{"_id":"themes/next/layout/post.swig","hash":"2f6d992ced7e067521fdce05ffe4fd75481f41c5","modified":1596424932000},{"_id":"themes/next/layout/tag.swig","hash":"0dfb653bd5de980426d55a0606d1ab122bd8c017","modified":1596424932000},{"_id":"themes/next/scripts/renderer.js","hash":"49a65df2028a1bc24814dc72fa50d52231ca4f05","modified":1596424932000},{"_id":"themes/next/.github/ISSUE_TEMPLATE/bug-report.md","hash":"c3e6b8196c983c40fd140bdeca012d03e6e86967","modified":1596424932000},{"_id":"themes/next/.github/ISSUE_TEMPLATE/feature-request.md","hash":"12d99fb8b62bd9e34d9672f306c9ae4ace7e053e","modified":1596424932000},{"_id":"themes/next/.github/ISSUE_TEMPLATE/other.md","hash":"d3efc0df0275c98440e69476f733097916a2d579","modified":1596424932000},{"_id":"themes/next/.github/ISSUE_TEMPLATE/question.md","hash":"53df7d537e26aaf062d70d86835c5fd8f81412f3","modified":1596424932000},{"_id":"themes/next/docs/ru/DATA-FILES.md","hash":"0bd2d696f62a997a11a7d84fec0130122234174e","modified":1596424932000},{"_id":"themes/next/docs/ru/INSTALLATION.md","hash":"9c4fe2873123bf9ceacab5c50d17d8a0f1baef27","modified":1596424932000},{"_id":"themes/next/docs/ru/README.md","hash":"85dd68ed1250897a8e4a444a53a68c1d49eb7e11","modified":1596424932000},{"_id":"themes/next/docs/ru/UPDATE-FROM-5.1.X.md","hash":"5237a368ab99123749d724b6c379415f2c142a96","modified":1596424932000},{"_id":"themes/next/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"34b88784ec120dfdc20fa82aadeb5f64ef614d14","modified":1596424932000},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"fb23b85db6f7d8279d73ae1f41631f92f64fc864","modified":1596424932000},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"d3f03be036b75dc71cf3c366cd75aee7c127c874","modified":1596424932000},{"_id":"themes/next/docs/zh-CN/DATA-FILES.md","hash":"ca1030efdfca5e20f9db2e7a428998e66a24c0d0","modified":1596424932000},{"_id":"themes/next/docs/zh-CN/INSTALLATION.md","hash":"579c7bd8341873fb8be4732476d412814f1a3df7","modified":1596424932000},{"_id":"themes/next/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"8b18f84503a361fc712b0fe4d4568e2f086ca97d","modified":1596424932000},{"_id":"themes/next/docs/zh-CN/MATH.md","hash":"b92585d251f1f9ebe401abb5d932cb920f9b8b10","modified":1596424932000},{"_id":"themes/next/docs/zh-CN/README.md","hash":"c038629ff8f3f24e8593c4c8ecf0bef3a35c750d","modified":1596424932000},{"_id":"themes/next/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"d9ce7331c1236bbe0a551d56cef2405e47e65325","modified":1596424932000},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"9c8dc0b8170679cdc1ee9ee8dbcbaebf3f42897b","modified":1596424932000},{"_id":"themes/next/layout/_macro/post.swig","hash":"090b5a9b6fca8e968178004cbd6cff205b7eba57","modified":1596424932000},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"71655ca21907e9061b6e8ac52d0d8fbf54d0062b","modified":1596424932000},{"_id":"themes/next/layout/_partials/comments.swig","hash":"db6ab5421b5f4b7cb32ac73ad0e053fdf065f83e","modified":1596424932000},{"_id":"themes/next/layout/_partials/footer.swig","hash":"e5a2bdf45fde7cea9cb03993f5a0fd960326ed5d","modified":1596424932000},{"_id":"themes/next/layout/_partials/languages.swig","hash":"ba9e272f1065b8f0e8848648caa7dea3f02c6be1","modified":1596424932000},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9876dbfc15713c7a47d4bcaa301f4757bd978269","modified":1596424932000},{"_id":"themes/next/layout/_partials/widgets.swig","hash":"83a40ce83dfd5cada417444fb2d6f5470aae6bb0","modified":1596424932000},{"_id":"themes/next/layout/_scripts/index.swig","hash":"cea942b450bcb0f352da78d76dc6d6f1d23d5029","modified":1596424932000},{"_id":"themes/next/layout/_scripts/noscript.swig","hash":"d1f2bfde6f1da51a2b35a7ab9e7e8eb6eefd1c6b","modified":1596424932000},{"_id":"themes/next/layout/_scripts/pjax.swig","hash":"4d2c93c66e069852bb0e3ea2e268d213d07bfa3f","modified":1596424932000},{"_id":"themes/next/layout/_scripts/three.swig","hash":"a4f42f2301866bd25a784a2281069d8b66836d0b","modified":1596424932000},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"ef38c213679e7b6d2a4116f56c9e55d678446069","modified":1596424932000},{"_id":"themes/next/layout/_third-party/baidu-push.swig","hash":"b782eb2e34c0c15440837040b5d65b093ab6ec04","modified":1596424932000},{"_id":"themes/next/layout/_third-party/index.swig","hash":"70c3c01dd181de81270c57f3d99b6d8f4c723404","modified":1596424932000},{"_id":"themes/next/layout/_third-party/quicklink.swig","hash":"311e5eceec9e949f1ea8d623b083cec0b8700ff2","modified":1596424932000},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"2731e262a6b88eaee2a3ca61e6a3583a7f594702","modified":1596424932000},{"_id":"themes/next/scripts/events/index.js","hash":"5743cde07f3d2aa11532a168a652e52ec28514fd","modified":1596424932000},{"_id":"themes/next/scripts/filters/default-injects.js","hash":"aec50ed57b9d5d3faf2db3c88374f107203617e0","modified":1596424932000},{"_id":"themes/next/scripts/filters/front-matter.js","hash":"703bdd142a671b4b67d3d9dfb4a19d1dd7e7e8f7","modified":1596424932000},{"_id":"themes/next/scripts/filters/locals.js","hash":"b193a936ee63451f09f8886343dcfdca577c0141","modified":1596424932000},{"_id":"themes/next/scripts/filters/minify.js","hash":"19985723b9f677ff775f3b17dcebf314819a76ac","modified":1596424932000},{"_id":"themes/next/scripts/filters/post.js","hash":"44ba9b1c0bdda57590b53141306bb90adf0678db","modified":1596424932000},{"_id":"themes/next/scripts/helpers/engine.js","hash":"bdb424c3cc0d145bd0c6015bb1d2443c8a9c6cda","modified":1596424932000},{"_id":"themes/next/scripts/helpers/font.js","hash":"40cf00e9f2b7aa6e5f33d412e03ed10304b15fd7","modified":1596424932000},{"_id":"themes/next/scripts/helpers/next-config.js","hash":"5e11f30ddb5093a88a687446617a46b048fa02e5","modified":1596424932000},{"_id":"themes/next/scripts/helpers/next-url.js","hash":"958e86b2bd24e4fdfcbf9ce73e998efe3491a71f","modified":1596424932000},{"_id":"themes/next/scripts/tags/button.js","hash":"8c6b45f36e324820c919a822674703769e6da32c","modified":1596424932000},{"_id":"themes/next/scripts/tags/caniuse.js","hash":"94e0bbc7999b359baa42fa3731bdcf89c79ae2b3","modified":1596424932000},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"f1826ade2d135e2f60e2d95cb035383685b3370c","modified":1596424932000},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"d902fd313e8d35c3cc36f237607c2a0536c9edf1","modified":1596424932000},{"_id":"themes/next/scripts/tags/label.js","hash":"fc5b267d903facb7a35001792db28b801cccb1f8","modified":1596424932000},{"_id":"themes/next/scripts/tags/mermaid.js","hash":"983c6c4adea86160ecc0ba2204bc312aa338121d","modified":1596424932000},{"_id":"themes/next/scripts/tags/note.js","hash":"0a02bb4c15aec41f6d5f1271cdb5c65889e265d9","modified":1596424932000},{"_id":"themes/next/scripts/tags/pdf.js","hash":"8c613b39e7bff735473e35244b5629d02ee20618","modified":1596424932000},{"_id":"themes/next/scripts/tags/tabs.js","hash":"93d8a734a3035c1d3f04933167b500517557ba3e","modified":1596424932000},{"_id":"themes/next/scripts/tags/video.js","hash":"e5ff4c44faee604dd3ea9db6b222828c4750c227","modified":1596424932000},{"_id":"themes/next/source/css/_colors.styl","hash":"a8442520f719d3d7a19811cb3b85bcfd4a596e1f","modified":1596424932000},{"_id":"themes/next/source/css/_mixins.styl","hash":"e31a557f8879c2f4d8d5567ee1800b3e03f91f6e","modified":1596424932000},{"_id":"themes/next/source/css/main.styl","hash":"a3a3bbb5a973052f0186b3523911cb2539ff7b88","modified":1596424932000},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1596424932000},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1596424932000},{"_id":"themes/next/source/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1596424932000},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1596424932000},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1596424932000},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1596424932000},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1596424932000},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1596424932000},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1596424932000},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1596424932000},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1596424932000},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1596424932000},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1596424932000},{"_id":"themes/next/source/js/algolia-search.js","hash":"498d233eb5c7af6940baf94c1a1c36fdf1dd2636","modified":1596424932000},{"_id":"themes/next/source/js/bookmark.js","hash":"9734ebcb9b83489686f5c2da67dc9e6157e988ad","modified":1596424932000},{"_id":"themes/next/source/js/local-search.js","hash":"35ccf100d8f9c0fd6bfbb7fa88c2a76c42a69110","modified":1596424932000},{"_id":"themes/next/source/js/motion.js","hash":"72df86f6dfa29cce22abeff9d814c9dddfcf13a9","modified":1596424932000},{"_id":"themes/next/source/js/next-boot.js","hash":"a1b0636423009d4a4e4cea97bcbf1842bfab582c","modified":1596424932000},{"_id":"themes/next/source/js/utils.js","hash":"730cca7f164eaf258661a61ff3f769851ff1e5da","modified":1596424932000},{"_id":"themes/next/source/lib/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1596424932000},{"_id":"themes/next/layout/_partials/head/head-unique.swig","hash":"000bad572d76ee95d9c0a78f9ccdc8d97cc7d4b4","modified":1596424932000},{"_id":"themes/next/layout/_partials/head/head.swig","hash":"810d544019e4a8651b756dd23e5592ee851eda71","modified":1596424932000},{"_id":"themes/next/layout/_partials/header/brand.swig","hash":"c70f8e71e026e878a4e9d5ab3bbbf9b0b23c240c","modified":1596424932000},{"_id":"themes/next/layout/_partials/header/index.swig","hash":"7dbe93b8297b746afb89700b4d29289556e85267","modified":1596424932000},{"_id":"themes/next/layout/_partials/header/menu-item.swig","hash":"9440d8a3a181698b80e1fa47f5104f4565d8cdf3","modified":1596424932000},{"_id":"themes/next/layout/_partials/header/menu.swig","hash":"d31f896680a6c2f2c3f5128b4d4dd46c87ce2130","modified":1596424932000},{"_id":"themes/next/layout/_partials/header/sub-menu.swig","hash":"ae2261bea836581918a1c2b0d1028a78718434e0","modified":1596424932000},{"_id":"themes/next/layout/_partials/page/breadcrumb.swig","hash":"c851717497ca64789f2176c9ecd1dedab237b752","modified":1596424932000},{"_id":"themes/next/layout/_partials/page/page-header.swig","hash":"9b7a66791d7822c52117fe167612265356512477","modified":1596424932000},{"_id":"themes/next/layout/_partials/post/post-copyright.swig","hash":"954ad71536b6eb08bd1f30ac6e2f5493b69d1c04","modified":1596424932000},{"_id":"themes/next/layout/_partials/post/post-followme.swig","hash":"ceba16b9bd3a0c5c8811af7e7e49d0f9dcb2f41e","modified":1596424932000},{"_id":"themes/next/layout/_partials/post/post-footer.swig","hash":"8f14f3f8a1b2998d5114cc56b680fb5c419a6b07","modified":1596424932000},{"_id":"themes/next/layout/_partials/post/post-related.swig","hash":"f79c44692451db26efce704813f7a8872b7e63a0","modified":1596424932000},{"_id":"themes/next/layout/_partials/post/post-reward.swig","hash":"2b1a73556595c37951e39574df5a3f20b2edeaef","modified":1596424932000},{"_id":"themes/next/layout/_partials/search/algolia-search.swig","hash":"48430bd03b8f19c9b8cdb2642005ed67d56c6e0b","modified":1596424932000},{"_id":"themes/next/layout/_partials/search/index.swig","hash":"2be50f9bfb1c56b85b3b6910a7df27f51143632c","modified":1596424932000},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"f48a6a8eba04eb962470ce76dd731e13074d4c45","modified":1596424932000},{"_id":"themes/next/layout/_partials/sidebar/site-overview.swig","hash":"c46849e0af8f8fb78baccd40d2af14df04a074af","modified":1596424932000},{"_id":"themes/next/layout/_scripts/pages/schedule.swig","hash":"077b5d66f6309f2e7dcf08645058ff2e03143e6c","modified":1596424932000},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"1c910fc066c06d5fbbe9f2b0c47447539e029af7","modified":1596424932000},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"7f14ef43d9e82bc1efc204c5adf0b1dbfc919a9f","modified":1596424932000},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"7f14ef43d9e82bc1efc204c5adf0b1dbfc919a9f","modified":1596424932000},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"1c910fc066c06d5fbbe9f2b0c47447539e029af7","modified":1596424932000},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"4790058691b7d36cf6d2d6b4e93795a7b8d608ad","modified":1596424932000},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"2fa2b51d56bfac6a1ea76d651c93b9c20b01c09b","modified":1596424932000},{"_id":"themes/next/layout/_third-party/analytics/growingio.swig","hash":"5adea065641e8c55994dd2328ddae53215604928","modified":1596424932000},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"1472cabb0181f60a6a0b7fec8899a4d03dfb2040","modified":1596424932000},{"_id":"themes/next/layout/_third-party/chat/chatra.swig","hash":"f910618292c63871ca2e6c6e66c491f344fa7b1f","modified":1596424932000},{"_id":"themes/next/layout/_third-party/chat/tidio.swig","hash":"cba0e6e0fad08568a9e74ba9a5bee5341cfc04c1","modified":1596424932000},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"f39a5bf3ce9ee9adad282501235e0c588e4356ec","modified":1596424932000},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"b14908644225d78c864cd0a9b60c52407de56183","modified":1596424932000},{"_id":"themes/next/layout/_third-party/comments/disqusjs.swig","hash":"82f5b6822aa5ec958aa987b101ef860494c6cf1f","modified":1596424932000},{"_id":"themes/next/layout/_third-party/comments/gitalk.swig","hash":"d6ceb70648555338a80ae5724b778c8c58d7060d","modified":1596424932000},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"f7a9eca599a682479e8ca863db59be7c9c7508c8","modified":1596424932000},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"be0a8eccf1f6dc21154af297fc79555343031277","modified":1596424932000},{"_id":"themes/next/layout/_third-party/math/index.swig","hash":"6c5976621efd5db5f7c4c6b4f11bc79d6554885f","modified":1596424932000},{"_id":"themes/next/layout/_third-party/math/katex.swig","hash":"4791c977a730f29c846efcf6c9c15131b9400ead","modified":1596424932000},{"_id":"themes/next/layout/_third-party/math/mathjax.swig","hash":"ecf751321e799f0fb3bf94d049e535130e2547aa","modified":1596424932000},{"_id":"themes/next/layout/_third-party/search/algolia-search.swig","hash":"d35a999d67f4c302f76fdf13744ceef3c6506481","modified":1596424932000},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"767b6c714c22588bcd26ba70b0fc19b6810cbacd","modified":1596424932000},{"_id":"themes/next/layout/_third-party/search/swiftype.swig","hash":"ba0dbc06b9d244073a1c681ff7a722dcbf920b51","modified":1596424932000},{"_id":"themes/next/layout/_third-party/statistics/busuanzi-counter.swig","hash":"4b1986e43d6abce13450d2b41a736dd6a5620a10","modified":1596424932000},{"_id":"themes/next/layout/_third-party/statistics/cnzz-analytics.swig","hash":"a17ace37876822327a2f9306a472974442c9005d","modified":1596424932000},{"_id":"themes/next/layout/_third-party/statistics/firestore.swig","hash":"b26ac2bfbe91dd88267f8b96aee6bb222b265b7a","modified":1596424932000},{"_id":"themes/next/layout/_third-party/statistics/index.swig","hash":"5f6a966c509680dbfa70433f9d658cee59c304d7","modified":1596424932000},{"_id":"themes/next/layout/_third-party/statistics/lean-analytics.swig","hash":"d56d5af427cdfecc33a0f62ee62c056b4e33d095","modified":1596424932000},{"_id":"themes/next/layout/_third-party/tags/mermaid.swig","hash":"f3c43664a071ff3c0b28bd7e59b5523446829576","modified":1596424932000},{"_id":"themes/next/layout/_third-party/tags/pdf.swig","hash":"d30b0e255a8092043bac46441243f943ed6fb09b","modified":1596424932000},{"_id":"themes/next/scripts/events/lib/config.js","hash":"d34c6040b13649714939f59be5175e137de65ede","modified":1596424932000},{"_id":"themes/next/scripts/events/lib/injects-point.js","hash":"6661c1c91c7cbdefc6a5e6a034b443b8811235a1","modified":1596424932000},{"_id":"themes/next/scripts/events/lib/injects.js","hash":"f233d8d0103ae7f9b861344aa65c1a3c1de8a845","modified":1596424932000},{"_id":"themes/next/scripts/filters/comment/changyan.js","hash":"a54708fd9309b4357c423a3730eb67f395344a5e","modified":1596424932000},{"_id":"themes/next/scripts/filters/comment/common.js","hash":"2486f3e0150c753e5f3af1a3665d074704b8ee2c","modified":1596424932000},{"_id":"themes/next/scripts/filters/comment/default-config.js","hash":"7f2d93af012c1e14b8596fecbfc7febb43d9b7f5","modified":1596424932000},{"_id":"themes/next/scripts/filters/comment/disqus.js","hash":"4c0c99c7e0f00849003dfce02a131104fb671137","modified":1596424932000},{"_id":"themes/next/scripts/filters/comment/disqusjs.js","hash":"7f8b92913d21070b489457fa5ed996d2a55f2c32","modified":1596424932000},{"_id":"themes/next/scripts/filters/comment/gitalk.js","hash":"e51dc3072c1ba0ea3008f09ecae8b46242ec6021","modified":1596424932000},{"_id":"themes/next/scripts/filters/comment/livere.js","hash":"d5fefc31fba4ab0188305b1af1feb61da49fdeb0","modified":1596424932000},{"_id":"themes/next/scripts/filters/comment/valine.js","hash":"6cbd85f9433c06bae22225ccf75ac55e04f2d106","modified":1596424932000},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"f4e694e5db81e57442c7e34505a416d818b3044a","modified":1596424932000},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"f70be8e229da7e1715c11dd0e975a2e71e453ac8","modified":1596424932000},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"62df49459d552bbf73841753da8011a1f5e875c8","modified":1596424932000},{"_id":"themes/next/source/js/schemes/pisces.js","hash":"0ac5ce155bc58c972fe21c4c447f85e6f8755c62","modified":1596424932000},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1596424932000},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1596424932000},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"ca5e70662dcfb261c25191cc5db5084dcf661c76","modified":1596424932000},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"a47725574e1bee3bc3b63b0ff2039cc982b17eff","modified":1596424932000},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"8e7b57a72e757cf95278239641726bb2d5b869d1","modified":1596424932000},{"_id":"themes/next/source/css/_common/components/reading-progress.styl","hash":"2e3bf7baf383c9073ec5e67f157d3cb3823c0957","modified":1596424932000},{"_id":"themes/next/source/css/_common/outline/mobile.styl","hash":"681d33e3bc85bdca407d93b134c089264837378c","modified":1596424932000},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"a1690e035b505d28bdef2b4424c13fc6312ab049","modified":1596424932000},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"0b2c4b78eead410020d7c4ded59c75592a648df8","modified":1596424932000},{"_id":"themes/next/source/css/_common/scaffolding/buttons.styl","hash":"a2e9e00962e43e98ec2614d6d248ef1773bb9b78","modified":1596424932000},{"_id":"themes/next/source/css/_common/scaffolding/comments.styl","hash":"b1f0fab7344a20ed6748b04065b141ad423cf4d9","modified":1596424932000},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"b56367ea676ea8e8783ea89cd4ab150c7da7a060","modified":1596424932000},{"_id":"themes/next/source/css/_common/scaffolding/pagination.styl","hash":"8f58570a1bbc34c4989a47a1b7d42a8030f38b06","modified":1596424932000},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"523fb7b653b87ae37fc91fc8813e4ffad87b0d7e","modified":1596424932000},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"18ce72d90459c9aa66910ac64eae115f2dde3767","modified":1596424932000},{"_id":"themes/next/source/css/_common/scaffolding/toggles.styl","hash":"179e33b8ac7f4d8a8e76736a7e4f965fe9ab8b42","modified":1596424932000},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"7785bd756e0c4acede3a47fec1ed7b55988385a5","modified":1596424932000},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"f6516d0f7d89dc7b6c6e143a5af54b926f585d82","modified":1596424932000},{"_id":"themes/next/source/css/_schemes/Mist/_layout.styl","hash":"bb7ace23345364eb14983e860a7172e1683a4c94","modified":1596424932000},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"7104b9cef90ca3b140d7a7afcf15540a250218fc","modified":1596424932000},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expand.styl","hash":"6136da4bbb7e70cec99f5c7ae8c7e74f5e7c261a","modified":1596424932000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"a717969829fa6ef88225095737df3f8ee86c286b","modified":1596424932000},{"_id":"themes/next/source/css/_schemes/Muse/_header.styl","hash":"f0131db6275ceaecae7e1a6a3798b8f89f6c850d","modified":1596424932000},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"4d1c17345d2d39ef7698f7acf82dfc0f59308c34","modified":1596424932000},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"93db5dafe9294542a6b5f647643cb9deaced8e06","modified":1596424932000},{"_id":"themes/next/source/css/_schemes/Muse/_sidebar.styl","hash":"2b2e7b5cea7783c9c8bb92655e26a67c266886f0","modified":1596424932000},{"_id":"themes/next/source/css/_schemes/Muse/_sub-menu.styl","hash":"c48ccd8d6651fe1a01faff8f01179456d39ba9b1","modified":1596424932000},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1596424932000},{"_id":"themes/next/source/css/_schemes/Pisces/_header.styl","hash":"e282df938bd029f391c466168d0e68389978f120","modified":1596424932000},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"70a4324b70501132855b5e59029acfc5d3da1ebd","modified":1596424932000},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"85da2f3006f4bef9a2199416ecfab4d288f848c4","modified":1596424932000},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"44f47c88c06d89d06f220f102649057118715828","modified":1596424932000},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"e740deadcfc4f29c5cb01e40f9df6277262ba4e3","modified":1596424932000},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1596424932000},{"_id":"themes/next/source/lib/font-awesome/css/all.min.css","hash":"0038dc97c79451578b7bd48af60ba62282b4082b","modified":1596424932000},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-regular-400.woff2","hash":"260bb01acd44d88dcb7f501a238ab968f86bef9e","modified":1596424932000},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"fafc96c86926b22afba8bb9418c05e6afbc05a57","modified":1596424932000},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"2bd0eb1512415325653b26d62a4463e6de83c5ac","modified":1596424932000},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"7504dbc5c70262b048143b2c37d2b5aa2809afa2","modified":1596424932000},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"e771dcb0b4673e063c0f3e2d73e7336ac05bcd57","modified":1596424932000},{"_id":"themes/next/source/css/_common/components/pages/tag-cloud.styl","hash":"d21d4ac1982c13d02f125a67c065412085a92ff2","modified":1596424932000},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"e75693f33dbc92afc55489438267869ae2f3db54","modified":1596424932000},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f49ca072b5a800f735e8f01fc3518f885951dd8e","modified":1596424932000},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"902569a9dea90548bec21a823dd3efd94ff7c133","modified":1596424932000},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"ded41fd9d20a5e8db66aaff7cc50f105f5ef2952","modified":1596424932000},{"_id":"themes/next/source/css/_common/components/post/post-followme.styl","hash":"1e4190c10c9e0c9ce92653b0dbcec21754b0b69d","modified":1596424932000},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"72d495a88f7d6515af425c12cbc67308a57d88ea","modified":1596424932000},{"_id":"themes/next/source/css/_common/components/post/post-header.styl","hash":"65cb6edb69e94e70e3291e9132408361148d41d5","modified":1596424932000},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"6a97bcfa635d637dc59005be3b931109e0d1ead5","modified":1596424932000},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"d114b2a531129e739a27ba6271cfe6857aa9a865","modified":1596424932000},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"f5c2788a78790aca1a2f37f7149d6058afb539e0","modified":1596424932000},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"99e12c9ce3d14d4837e3d3f12fc867ba9c565317","modified":1596424932000},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"5b5649b9749e3fd8b63aef22ceeece0a6e1df605","modified":1596424932000},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"a760ee83ba6216871a9f14c5e56dc9bd0d9e2103","modified":1596424932000},{"_id":"themes/next/source/css/_common/components/third-party/gitalk.styl","hash":"8a7fc03a568b95be8d3337195e38bc7ec5ba2b23","modified":1596424932000},{"_id":"themes/next/source/css/_common/components/third-party/math.styl","hash":"b49e9fbd3c182b8fc066b8c2caf248e3eb748619","modified":1596424932000},{"_id":"themes/next/source/css/_common/components/third-party/related-posts.styl","hash":"e2992846b39bf3857b5104675af02ba73e72eed5","modified":1596424932000},{"_id":"themes/next/source/css/_common/components/third-party/search.styl","hash":"9f0b93d109c9aec79450c8a0cf4a4eab717d674d","modified":1596424932000},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"9a878d0119785a2316f42aebcceaa05a120b9a7a","modified":1596424932000},{"_id":"themes/next/source/css/_common/outline/footer/footer.styl","hash":"454a4aebfabb4469b92a8cbb49f46c49ac9bf165","modified":1596424932000},{"_id":"themes/next/source/css/_common/outline/header/bookmark.styl","hash":"e2d606f1ac343e9be4f15dbbaf3464bc4df8bf81","modified":1596424932000},{"_id":"themes/next/source/css/_common/outline/header/github-banner.styl","hash":"e7a9fdb6478b8674b1cdf94de4f8052843fb71d9","modified":1596424932000},{"_id":"themes/next/source/css/_common/outline/header/header.styl","hash":"a793cfff86ad4af818faef04c18013077873f8f0","modified":1596424932000},{"_id":"themes/next/source/css/_common/outline/header/headerband.styl","hash":"0caf32492692ba8e854da43697a2ec8a41612194","modified":1596424932000},{"_id":"themes/next/source/css/_common/outline/header/menu.styl","hash":"5f432a6ed9ca80a413c68b00e93d4a411abf280a","modified":1596424932000},{"_id":"themes/next/source/css/_common/outline/header/site-meta.styl","hash":"45a239edca44acecf971d99b04f30a1aafbf6906","modified":1596424932000},{"_id":"themes/next/source/css/_common/outline/header/site-nav.styl","hash":"b2fc519828fe89a1f8f03ff7b809ad68cd46f3d7","modified":1596424932000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author-links.styl","hash":"2cb1876e9e0c9ac32160888af27b1178dbcb0616","modified":1596424932000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author.styl","hash":"fa0222197b5eee47e18ac864cdc6eac75678b8fe","modified":1596424932000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-blogroll.styl","hash":"44487d9ab290dc97871fa8dd4487016deb56e123","modified":1596424932000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-button.styl","hash":"1f0e7fbe80956f47087c2458ea880acf7a83078b","modified":1596424932000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-dimmer.styl","hash":"9b479c2f9a9bfed77885e5093b8245cc5d768ec7","modified":1596424932000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-nav.styl","hash":"a960a2dd587b15d3b3fe1b59525d6fa971c6a6ec","modified":1596424932000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toc.styl","hash":"a05a4031e799bc864a4536f9ef61fe643cd421af","modified":1596424932000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toggle.styl","hash":"b3220db827e1adbca7880c2bb23e78fa7cbe95cb","modified":1596424932000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar.styl","hash":"a9cd93c36bae5af9223e7804963096274e8a4f03","modified":1596424932000},{"_id":"themes/next/source/css/_common/outline/sidebar/site-state.styl","hash":"2a47f8a6bb589c2fb635e6c1e4a2563c7f63c407","modified":1596424932000},{"_id":"themes/next/source/css/_common/scaffolding/highlight/copy-code.styl","hash":"f71a3e86c05ea668b008cf05a81f67d92b6d65e4","modified":1596424932000},{"_id":"themes/next/source/css/_common/scaffolding/highlight/diff.styl","hash":"d3f73688bb7423e3ab0de1efdf6db46db5e34f80","modified":1596424932000},{"_id":"themes/next/source/css/_common/scaffolding/highlight/highlight.styl","hash":"35c871a809afa8306c8cde13651010e282548bc6","modified":1596424932000},{"_id":"themes/next/source/css/_common/scaffolding/highlight/theme.styl","hash":"3b3acc5caa0b95a2598bef4eeacb21bab21bea56","modified":1596424932000},{"_id":"themes/next/source/css/_common/scaffolding/tags/blockquote-center.styl","hash":"1d2778ca5aeeeafaa690dc2766b01b352ab76a02","modified":1596424932000},{"_id":"themes/next/source/css/_common/scaffolding/tags/group-pictures.styl","hash":"709d10f763e357e1472d6471f8be384ec9e2d983","modified":1596424932000},{"_id":"themes/next/source/css/_common/scaffolding/tags/label.styl","hash":"d7fce4b51b5f4b7c31d93a9edb6c6ce740aa0d6b","modified":1596424932000},{"_id":"themes/next/source/css/_common/scaffolding/tags/note.styl","hash":"e4d9a77ffe98e851c1202676940097ba28253313","modified":1596424932000},{"_id":"themes/next/source/css/_common/scaffolding/tags/pdf.styl","hash":"b49c64f8e9a6ca1c45c0ba98febf1974fdd03616","modified":1596424932000},{"_id":"themes/next/source/css/_common/scaffolding/tags/tabs.styl","hash":"f23670f1d8e749f3e83766d446790d8fd9620278","modified":1596424932000},{"_id":"themes/next/source/css/_common/scaffolding/tags/tags.styl","hash":"9e4c0653cfd3cc6908fa0d97581bcf80861fb1e7","modified":1596424932000},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"612ec843372dae709acb17112c1145a53450cc59","modified":1596424932000},{"_id":"themes/next/source/js/schemes/muse.js","hash":"1eb9b88103ddcf8827b1a7cbc56471a9c5592d53","modified":1596424932000},{"_id":"themes/next/source/css/_variables/base.styl","hash":"818508748b7a62e02035e87fe58e75b603ed56dc","modified":1596424932000},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-brands-400.woff2","hash":"509988477da79c146cb93fb728405f18e923c2de","modified":1596424932000},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-solid-900.woff2","hash":"75a88815c47a249eadb5f0edc1675957f860cca7","modified":1596424932000},{"_id":"public/baidusitemap.xml","hash":"c464fe1de49d61575e68ef8380a333583100ce6e","modified":1597210088522},{"_id":"public/search.xml","hash":"92198cd9f1e44470b88d350f2e981dbb391d0bee","modified":1597210088522},{"_id":"public/sitemap.xml","hash":"475aef41ac77a81fac6bd5efe216297eedb76677","modified":1597210088522},{"_id":"public/404.html","hash":"77d7e702b8859b376f8b4aa714a6aa26891e3dce","modified":1597210088522},{"_id":"public/about/index.html","hash":"71581128181eddbeb68586482a4d2a94d4d4095b","modified":1597210088522},{"_id":"public/archives/index.html","hash":"7f5c56b31fc7a2736d7ee868a58ef73a6ff0e0e9","modified":1597210088522},{"_id":"public/categories/index.html","hash":"92484a966996c89633ed88e96721c0f3aee3acbb","modified":1597210088522},{"_id":"public/tags/index.html","hash":"0bf4c9f7686260cd031ef96ac929a573cea4892f","modified":1597210088522},{"_id":"public/posts/e1691e31/index.html","hash":"a1ef1f5379f3a05ed924f654b513bc1461bab2dd","modified":1597210088522},{"_id":"public/posts/d86f9c95/index.html","hash":"b591768cf41ca0ea3a362fd6fa001cb498b22f00","modified":1597210088522},{"_id":"public/posts/845b95cc/index.html","hash":"0bfac0edef0c79f2982ce013888571b8da61b260","modified":1597210088522},{"_id":"public/posts/301aa86/index.html","hash":"9fdd2d9b366c7bb72008bf398cf698d1509301d0","modified":1597210088522},{"_id":"public/posts/1428c068/index.html","hash":"d60d5997bd9dbc0973f87e6a8b57d22e245fe40f","modified":1597210088522},{"_id":"public/archives/page/2/index.html","hash":"6a29ef3ff76969eb64bbec12cbe5b5bc45c5f24a","modified":1597210088522},{"_id":"public/archives/2019/index.html","hash":"25d41c91985abb9c8eaf086c2c0a9e551680f78f","modified":1597210088522},{"_id":"public/archives/2019/page/2/index.html","hash":"153ca651b37778fc6ad70d1598d80879f51a1a69","modified":1597210088522},{"_id":"public/archives/2019/02/index.html","hash":"56455161378e1f9a2e4e68f410f6c90c304cbe34","modified":1597210088522},{"_id":"public/archives/2019/03/index.html","hash":"40acf8f543067ac6dcdd124c3db4ad3735d2e740","modified":1597210088522},{"_id":"public/archives/2019/04/index.html","hash":"91ec027d71b029db2132e8b82866f582c11b14d6","modified":1597210088522},{"_id":"public/archives/2019/05/index.html","hash":"0aea31b3de95167c74efb3c2203ca757112d6ec1","modified":1597210088522},{"_id":"public/archives/2019/06/index.html","hash":"59792317bf3982715ae16ead6c4789687710d8fd","modified":1597210088522},{"_id":"public/archives/2019/07/index.html","hash":"a1ef82bb2329084c6a9e8fe4521cd7de127c7021","modified":1597210088522},{"_id":"public/archives/2019/08/index.html","hash":"38bd16342b767fe679751397223d7b3bccb8fa69","modified":1597210088522},{"_id":"public/archives/2020/index.html","hash":"9942b669e0bccb45ce434d53731b129a3355b419","modified":1597210088522},{"_id":"public/archives/2020/06/index.html","hash":"174b0a3ed93cfc1ae42be6b79b712b3f1a01ad85","modified":1597210088522},{"_id":"public/categories/前端/index.html","hash":"9bc5b5d471a4c20a56c0640419c741193b607f70","modified":1597210088522},{"_id":"public/categories/前端/page/2/index.html","hash":"03876752d638ad316bc869e27166f6ffeec0c391","modified":1597210088522},{"_id":"public/categories/linux/index.html","hash":"60c6257d24b016678c7b27fe0f463e58bce88720","modified":1597210088522},{"_id":"public/categories/vue/index.html","hash":"2881258a813fbc5e08d395a268d63df9c4c9a428","modified":1597210088522},{"_id":"public/categories/技术/index.html","hash":"bdfece3e1a423e0b3a946b5d7cd219f47166936f","modified":1597210088522},{"_id":"public/categories/vue/js/index.html","hash":"c9bc70848636ae195bef3ed9da3dff460d5bcfa8","modified":1597210088522},{"_id":"public/tags/js/index.html","hash":"ab6dcfc4cc3896e94ca62bfc6bd0624697f40843","modified":1597210088522},{"_id":"public/tags/element-ui/index.html","hash":"f3a1e6dfb15bc40dc06d4b3270353bf9bdb9b7dc","modified":1597210088522},{"_id":"public/tags/vue/index.html","hash":"d8200a8bf8f51a5ae8c9658c9537142995293452","modified":1597210088522},{"_id":"public/tags/nodejs/index.html","hash":"975d2cafd257e1f40cfa476f9a41518e1d083cd9","modified":1597210088522},{"_id":"public/tags/webpack/index.html","hash":"4b286fd60f7956922127b58dfc539470c78061b7","modified":1597210088522},{"_id":"public/tags/linux/index.html","hash":"0aa400aa0c19094fbcd6d77540a1d17ebc9fffb1","modified":1597210088522},{"_id":"public/tags/nexus/index.html","hash":"ee7804c0e9d095e22be1e68dafc799123ce7c102","modified":1597210088522},{"_id":"public/tags/react/index.html","hash":"4630b3e277d7be2f192b7a97372df6adb80c6949","modified":1597210088522},{"_id":"public/tags/技术/index.html","hash":"2e2874423cba22964987f1f75335363e82d468c7","modified":1597210088522},{"_id":"public/posts/204a2bf8/index.html","hash":"9ae3f5132692b5c2e3da3211b8e56a855a0f6b5c","modified":1597210088522},{"_id":"public/posts/73a5b140/index.html","hash":"3d50f2ed3698a87da115ea034ff896e30c65b9bc","modified":1597210088522},{"_id":"public/posts/c20fd3fa/index.html","hash":"38578ff66243c820f2a32b59f52d61587be8c302","modified":1597210088522},{"_id":"public/posts/507fa396/index.html","hash":"2a00fd0136b781ce85c6651fbc724e9da6f86809","modified":1597210088522},{"_id":"public/posts/13666/index.html","hash":"d384a82068b90416515cbbe9016f345dfa964bed","modified":1597210088522},{"_id":"public/posts/60785/index.html","hash":"caa8b71daaab47e23f1e510e0d50c2bcd2a147ce","modified":1597210088522},{"_id":"public/posts/3156ccd5/index.html","hash":"7628591cf70ef90d17b5bfa72011753d1e87318b","modified":1597210088522},{"_id":"public/posts/7f247ba3/index.html","hash":"f97d9d7ce67081a7edd5aff650021a1281062161","modified":1597210088522},{"_id":"public/posts/b38ec8f3/index.html","hash":"e6393fc182484108fd4e32809576f639954137c5","modified":1597210088522},{"_id":"public/posts/25ca6631/index.html","hash":"688a1b6c4037441c929c8a6da54bacd004c3adcc","modified":1597210088522},{"_id":"public/posts/367b716d/index.html","hash":"ca599b9d304ad27d8d08832667f8e8930172132c","modified":1597210088522},{"_id":"public/posts/4443dac6/index.html","hash":"8d9d03fb18443378480294cf740b8ef9a97d3a32","modified":1597210088522},{"_id":"public/posts/a7642960/index.html","hash":"ab50f767952388411a384d749287afa4d292d676","modified":1597210088522},{"_id":"public/index.html","hash":"1c5ab6e0d514b724c200f9023dcc4d7667175d10","modified":1597210088522},{"_id":"public/page/2/index.html","hash":"2b295895360121ede917efb7009c7bcf9595d0e7","modified":1597210088522},{"_id":"public/CNAME","hash":"109833a1caf13cc5305f1c288b98e4f77c19df4a","modified":1597210088522},{"_id":"public/README.md","hash":"77b0d98e16ba11d1ef35936e1d3bb865a842912c","modified":1597210088522},{"_id":"public/robots.txt","hash":"a7593476994d284c7265a8de84793557f7b42a51","modified":1597210088522},{"_id":"public/images/2019-2-26.png","hash":"8f24528dfcc0382abcd8fe829c34ad7501827c46","modified":1597210088522},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1597210088522},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1597210088522},{"_id":"public/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1597210088522},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1597210088522},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1597210088522},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1597210088522},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1597210088522},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1597210088522},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1597210088522},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1597210088522},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1597210088522},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1597210088522},{"_id":"public/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1597210088522},{"_id":"public/lib/font-awesome/webfonts/fa-regular-400.woff2","hash":"260bb01acd44d88dcb7f501a238ab968f86bef9e","modified":1597210088522},{"_id":"public/posts/845b95cc/1.png","hash":"ead49f0f3a675a1a0df47a2d8bf6ffaa2ad41550","modified":1597210088522},{"_id":"public/posts/845b95cc/3.png","hash":"b75fe1970b5278c5f1d4f5001bb55e9c053fff52","modified":1597210088522},{"_id":"public/posts/845b95cc/2.png","hash":"e796281bac9aadf1cf2d35abed8bb11b194883fe","modified":1597210088522},{"_id":"public/posts/3156ccd5/1.png","hash":"10264588102714359a980206c040c9ddb7cea605","modified":1597210088522},{"_id":"public/posts/3156ccd5/2.png","hash":"191416348a4434089560929f5e2b547f2af24ac6","modified":1597210088522},{"_id":"public/posts/3156ccd5/4.png","hash":"94d20fcae17886203ecc58e493d72f22dd181656","modified":1597210088522},{"_id":"public/posts/3156ccd5/3.png","hash":"86ec7353f6c193a4ac6eb7d770656cf24dbb8524","modified":1597210088522},{"_id":"public/posts/3156ccd5/5.png","hash":"6408623a332923fdd073c3a3d01d4b51801a5f28","modified":1597210088522},{"_id":"public/posts/367b716d/1.jpg","hash":"fbee0ee26b8db424d8925521f8b055ddef18d6fd","modified":1597210088522},{"_id":"public/posts/367b716d/2.jpg","hash":"6398dc248ae2a9353582e519c092755498c00e06","modified":1597210088522},{"_id":"public/posts/b38ec8f3/1.png","hash":"28803ad48576d6031fc620df00df92edd8a5c734","modified":1597210088522},{"_id":"public/posts/b38ec8f3/2.png","hash":"de756293494f1fa6b4ae40745a94b8ad6283626c","modified":1597210088522},{"_id":"public/posts/73a5b140/5.png","hash":"3bc26eb6ffe01b4e0dcc1f49010fabd7e4926b0f","modified":1597210088522},{"_id":"public/posts/73a5b140/8.png","hash":"01fb060c882bf14fe637dcf42ca3d8f6679bb714","modified":1597210088522},{"_id":"public/posts/507fa396/1.jpg","hash":"fc04a6cc872c75700ecd6309e9e53d1554fe2144","modified":1597210088522},{"_id":"public/posts/507fa396/2.jpg","hash":"ce92e8d091db7c19c8dab1d66729fb3c4da46acc","modified":1597210088522},{"_id":"public/posts/507fa396/3.jpg","hash":"6400106d296b6b7b8f23ea43eb577a67f67285f6","modified":1597210088522},{"_id":"public/posts/507fa396/4.jpg","hash":"ed6a9f4361a1b8ebc3241b58a854b776a464f023","modified":1597210088522},{"_id":"public/posts/507fa396/5.jpg","hash":"865b0520708a7083a5fdfa9361ee9618980d1046","modified":1597210088522},{"_id":"public/posts/c20fd3fa/1.png","hash":"c4d1d5125b4342b9f8d4e53bbdc6566503b7720a","modified":1597210088522},{"_id":"public/posts/c20fd3fa/2.png","hash":"66c168b48969d70bcecbad6c19912c469d9e0371","modified":1597210088522},{"_id":"public/posts/c20fd3fa/3.png","hash":"48e6e7149dbb223027a3bfcb2154398fb5e43b3d","modified":1597210088522},{"_id":"public/posts/d86f9c95/1.jpg","hash":"254327df897d4e2794f3e6a43e9a7a7723878e8e","modified":1597210088522},{"_id":"public/posts/d86f9c95/2.jpg","hash":"4c38193b9449eae96842fade756be47374426fb9","modified":1597210088522},{"_id":"public/posts/7f247ba3/1.png","hash":"ea2de96dfa875f22ae64a5aed7c64d02eed58889","modified":1597210088522},{"_id":"public/posts/7f247ba3/2.png","hash":"dcac407692b787cbf57033c800fbea954e716ea0","modified":1597210088522},{"_id":"public/posts/7f247ba3/3.png","hash":"e3cda13ef4ae41ef6d02c790714f190f7f53eeb4","modified":1597210088522},{"_id":"public/lib/font-awesome/webfonts/fa-brands-400.woff2","hash":"509988477da79c146cb93fb728405f18e923c2de","modified":1597210088522},{"_id":"public/lib/font-awesome/webfonts/fa-solid-900.woff2","hash":"75a88815c47a249eadb5f0edc1675957f860cca7","modified":1597210088522},{"_id":"public/posts/73a5b140/1.png","hash":"a2fcee8cbf0721c4570f35de3d1d1f80d917f518","modified":1597210088522},{"_id":"public/posts/73a5b140/2.png","hash":"a480d8818d822a6c51dde17499df0a6c64cfe047","modified":1597210088522},{"_id":"public/posts/73a5b140/3.png","hash":"3a7461c78e868e285c9fd4d8a7119f25cc822cfe","modified":1597210088522},{"_id":"public/posts/73a5b140/6.png","hash":"8919bf9a4cf99efcfbd6768f2fefb5c43ba58083","modified":1597210088522},{"_id":"public/posts/73a5b140/7.png","hash":"db86d672a7e1476aaa7f9fe033287f97114fc7f5","modified":1597210088522},{"_id":"public/posts/73a5b140/4.png","hash":"639b4a65f4fb9149c89c5e989613c99d9af9a8a2","modified":1597210088522},{"_id":"public/js/algolia-search.js","hash":"498d233eb5c7af6940baf94c1a1c36fdf1dd2636","modified":1597210088522},{"_id":"public/js/bookmark.js","hash":"9734ebcb9b83489686f5c2da67dc9e6157e988ad","modified":1597210088522},{"_id":"public/js/local-search.js","hash":"35ccf100d8f9c0fd6bfbb7fa88c2a76c42a69110","modified":1597210088522},{"_id":"public/js/motion.js","hash":"72df86f6dfa29cce22abeff9d814c9dddfcf13a9","modified":1597210088522},{"_id":"public/js/next-boot.js","hash":"a1b0636423009d4a4e4cea97bcbf1842bfab582c","modified":1597210088522},{"_id":"public/js/utils.js","hash":"730cca7f164eaf258661a61ff3f769851ff1e5da","modified":1597210088522},{"_id":"public/js/schemes/muse.js","hash":"1eb9b88103ddcf8827b1a7cbc56471a9c5592d53","modified":1597210088522},{"_id":"public/js/schemes/pisces.js","hash":"0ac5ce155bc58c972fe21c4c447f85e6f8755c62","modified":1597210088522},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1597210088522},{"_id":"public/css/main.css","hash":"bfb9ea4cf6177b064783c72170769a10715dcc25","modified":1597210088522},{"_id":"public/lib/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1597210088522},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1597210088522},{"_id":"public/lib/font-awesome/css/all.min.css","hash":"0038dc97c79451578b7bd48af60ba62282b4082b","modified":1597210088522},{"_id":"themes/next/source/images/avatar.png","hash":"b7cbde16b4bdd0328a6dbf0631148bbfbb58468b","modified":1588233505432},{"_id":"public/images/avatar.png","hash":"b7cbde16b4bdd0328a6dbf0631148bbfbb58468b","modified":1597210348451}],"Category":[{"name":"前端","_id":"ckdqxnc2s0004d7m0c05f9mwf"},{"name":"linux","_id":"ckdqxnc37000pd7m04w8z5h4y"},{"name":"vue","_id":"ckdqxnc3a000xd7m08w8a1kl5"},{"name":"技术","_id":"ckdqxnc3d0016d7m0a5tfa74d"},{"name":"js","parent":"ckdqxnc3a000xd7m08w8a1kl5","_id":"ckdqxnc3f001gd7m0a2oh3cqk"}],"Data":[],"Page":[{"title":"404-对不起！您访问的页面不存在","toc":false,"comments":0,"_content":"<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"UTF-8\" http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no\">\n<title>404-对不起！您访问的页面不存在</title>\n<style type=\"text/css\">\n    *{\n        margin: 0;\n        padding: 0;\n    }\n    .container{\n        margin: 0 auto;    \n    \ttext-align: center; \n    }\n    .img-notfound{\n        width: 400px\n    }\n    @media screen and (max-width: 600px) {\n        .container{\n            margin: 0 auto;\n            width: 100%;\n        }\n    }\n</style>\n</head>\n \n<body> \n    <div class=\"container\">\n        <div class=\"mod-notfound\">\n            <img class=\"img-notfound\" src=\"/uploads/notfound.gif\">\n            <h3 style=\"line-height: 70px\">啊~哦~ 您要查看的页面不存在！</h3>\n            <p style=\"margin-bottom: 30px\">请检查您输入的网址是否正确</p>\n            <p style=\"font-size: 14px; line-height: 20px\">您可以回到 \n                <a href=\"/\">网站首页</a> 或<a href=\"javascript:;\" target=\"_blank\" onclick=\"window.history.go(-1)\">返回上一页</a> \n            </p>\n        </div>\n    </div>\n</body> \n</html>\n</html>\n","source":"404/404.html","raw":"---\ntitle: 404-对不起！您访问的页面不存在\ntoc: false\ncomments: false\npermalink: /404\n---\n<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"UTF-8\" http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no\">\n<title>404-对不起！您访问的页面不存在</title>\n<style type=\"text/css\">\n    *{\n        margin: 0;\n        padding: 0;\n    }\n    .container{\n        margin: 0 auto;    \n    \ttext-align: center; \n    }\n    .img-notfound{\n        width: 400px\n    }\n    @media screen and (max-width: 600px) {\n        .container{\n            margin: 0 auto;\n            width: 100%;\n        }\n    }\n</style>\n</head>\n \n<body> \n    <div class=\"container\">\n        <div class=\"mod-notfound\">\n            <img class=\"img-notfound\" src=\"/uploads/notfound.gif\">\n            <h3 style=\"line-height: 70px\">啊~哦~ 您要查看的页面不存在！</h3>\n            <p style=\"margin-bottom: 30px\">请检查您输入的网址是否正确</p>\n            <p style=\"font-size: 14px; line-height: 20px\">您可以回到 \n                <a href=\"/\">网站首页</a> 或<a href=\"javascript:;\" target=\"_blank\" onclick=\"window.history.go(-1)\">返回上一页</a> \n            </p>\n        </div>\n    </div>\n</body> \n</html>\n</html>\n","date":"2020-04-30T07:58:25.396Z","updated":"2020-04-30T07:58:25.396Z","path":"/404.html","layout":"page","_id":"ckdqxnc2i0000d7m08dzfbytw","content":"<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"UTF-8\" http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no\">\n<title>404-对不起！您访问的页面不存在</title>\n<style type=\"text/css\">\n    *{\n        margin: 0;\n        padding: 0;\n    }\n    .container{\n        margin: 0 auto;    \n    \ttext-align: center; \n    }\n    .img-notfound{\n        width: 400px\n    }\n    @media screen and (max-width: 600px) {\n        .container{\n            margin: 0 auto;\n            width: 100%;\n        }\n    }\n</style>\n</head>\n \n<body> \n    <div class=\"container\">\n        <div class=\"mod-notfound\">\n            <img class=\"img-notfound\" src=\"/uploads/notfound.gif\">\n            <h3 style=\"line-height: 70px\">啊~哦~ 您要查看的页面不存在！</h3>\n            <p style=\"margin-bottom: 30px\">请检查您输入的网址是否正确</p>\n            <p style=\"font-size: 14px; line-height: 20px\">您可以回到 \n                <a href=\"/\">网站首页</a> 或<a href=\"javascript:;\" target=\"_blank\" onclick=\"window.history.go(-1)\">返回上一页</a> \n            </p>\n        </div>\n    </div>\n</body> \n</html>\n</html>\n","site":{"data":{}},"excerpt":"","more":"<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"UTF-8\" http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no\">\n<title>404-对不起！您访问的页面不存在</title>\n<style type=\"text/css\">\n    *{\n        margin: 0;\n        padding: 0;\n    }\n    .container{\n        margin: 0 auto;    \n    \ttext-align: center; \n    }\n    .img-notfound{\n        width: 400px\n    }\n    @media screen and (max-width: 600px) {\n        .container{\n            margin: 0 auto;\n            width: 100%;\n        }\n    }\n</style>\n</head>\n \n<body> \n    <div class=\"container\">\n        <div class=\"mod-notfound\">\n            <img class=\"img-notfound\" src=\"/uploads/notfound.gif\">\n            <h3 style=\"line-height: 70px\">啊~哦~ 您要查看的页面不存在！</h3>\n            <p style=\"margin-bottom: 30px\">请检查您输入的网址是否正确</p>\n            <p style=\"font-size: 14px; line-height: 20px\">您可以回到 \n                <a href=\"/\">网站首页</a> 或<a href=\"javascript:;\" target=\"_blank\" onclick=\"window.history.go(-1)\">返回上一页</a> \n            </p>\n        </div>\n    </div>\n</body> \n</html>\n</html>\n"},{"title":"关于","date":"2019-02-18T14:03:57.000Z","toc":false,"comments":0,"_content":"## 建立此博客的初衷\n\n自己在工作以及学习过程中难免会遇到一些困难，或者会发现一些对于工作、对于自己技术有帮助的技术点，希望能够把解决困难的方法，遇到好的技术形成一篇篇博客，需要的时候能够打开来看看，希望对自己的技术成长有帮助，也希望能够帮助他人。\n\n## 关于作者\n\n本人自2015年就开始从事web前端开发工作了，虽然没有能在腾讯、阿里、百度等等大厂工作过，但是自己的技术成长也挺快，熟练使用vue，jquery，bootstrap，element-ui等框架，自己参与过商城网站的前端开发、各种类型的后台管理系统前端的开发以及移动端的web（包括app内的h5），微信h5以及小程序前端。对于后端不敢说精通，但是使用过nodejs搭建过一款记账小程序(“账目随身记”)的后台以及使用nodejs搭建过公司官网的后台。学习后端并不是想往后端方向发展，而是更好地与后端工程师进行合作，更好地把前端工作做好。\n","source":"about/index.md","raw":"---\ntitle: 关于\ndate: 2019-02-18 22:03:57\ntoc: false\ncomments: false\n---\n## 建立此博客的初衷\n\n自己在工作以及学习过程中难免会遇到一些困难，或者会发现一些对于工作、对于自己技术有帮助的技术点，希望能够把解决困难的方法，遇到好的技术形成一篇篇博客，需要的时候能够打开来看看，希望对自己的技术成长有帮助，也希望能够帮助他人。\n\n## 关于作者\n\n本人自2015年就开始从事web前端开发工作了，虽然没有能在腾讯、阿里、百度等等大厂工作过，但是自己的技术成长也挺快，熟练使用vue，jquery，bootstrap，element-ui等框架，自己参与过商城网站的前端开发、各种类型的后台管理系统前端的开发以及移动端的web（包括app内的h5），微信h5以及小程序前端。对于后端不敢说精通，但是使用过nodejs搭建过一款记账小程序(“账目随身记”)的后台以及使用nodejs搭建过公司官网的后台。学习后端并不是想往后端方向发展，而是更好地与后端工程师进行合作，更好地把前端工作做好。\n","updated":"2020-04-30T07:58:25.404Z","path":"about/index.html","layout":"page","_id":"ckdqxnc2o0002d7m09xmydz3d","content":"<h2 id=\"建立此博客的初衷\"><a href=\"#建立此博客的初衷\" class=\"headerlink\" title=\"建立此博客的初衷\"></a>建立此博客的初衷</h2><p>自己在工作以及学习过程中难免会遇到一些困难，或者会发现一些对于工作、对于自己技术有帮助的技术点，希望能够把解决困难的方法，遇到好的技术形成一篇篇博客，需要的时候能够打开来看看，希望对自己的技术成长有帮助，也希望能够帮助他人。</p>\n<h2 id=\"关于作者\"><a href=\"#关于作者\" class=\"headerlink\" title=\"关于作者\"></a>关于作者</h2><p>本人自2015年就开始从事web前端开发工作了，虽然没有能在腾讯、阿里、百度等等大厂工作过，但是自己的技术成长也挺快，熟练使用vue，jquery，bootstrap，element-ui等框架，自己参与过商城网站的前端开发、各种类型的后台管理系统前端的开发以及移动端的web（包括app内的h5），微信h5以及小程序前端。对于后端不敢说精通，但是使用过nodejs搭建过一款记账小程序(“账目随身记”)的后台以及使用nodejs搭建过公司官网的后台。学习后端并不是想往后端方向发展，而是更好地与后端工程师进行合作，更好地把前端工作做好。</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"建立此博客的初衷\"><a href=\"#建立此博客的初衷\" class=\"headerlink\" title=\"建立此博客的初衷\"></a>建立此博客的初衷</h2><p>自己在工作以及学习过程中难免会遇到一些困难，或者会发现一些对于工作、对于自己技术有帮助的技术点，希望能够把解决困难的方法，遇到好的技术形成一篇篇博客，需要的时候能够打开来看看，希望对自己的技术成长有帮助，也希望能够帮助他人。</p>\n<h2 id=\"关于作者\"><a href=\"#关于作者\" class=\"headerlink\" title=\"关于作者\"></a>关于作者</h2><p>本人自2015年就开始从事web前端开发工作了，虽然没有能在腾讯、阿里、百度等等大厂工作过，但是自己的技术成长也挺快，熟练使用vue，jquery，bootstrap，element-ui等框架，自己参与过商城网站的前端开发、各种类型的后台管理系统前端的开发以及移动端的web（包括app内的h5），微信h5以及小程序前端。对于后端不敢说精通，但是使用过nodejs搭建过一款记账小程序(“账目随身记”)的后台以及使用nodejs搭建过公司官网的后台。学习后端并不是想往后端方向发展，而是更好地与后端工程师进行合作，更好地把前端工作做好。</p>\n"},{"title":"archives","date":"2019-02-18T14:04:42.000Z","toc":false,"comments":0,"_content":"","source":"archives/index.md","raw":"---\ntitle: archives\ndate: 2019-02-18 22:04:42\ntoc: false\ncomments: false\n---\n","updated":"2020-04-30T07:58:25.404Z","path":"archives/index.html","layout":"page","_id":"ckdqxnc2t0006d7m00bd30cmv","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"分类","date":"2019-02-18T14:04:24.000Z","type":"categories","toc":false,"comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2019-02-18 22:04:24\ntype: \"categories\"\ntoc: false\ncomments: false\n---\n","updated":"2020-04-30T07:58:25.404Z","path":"categories/index.html","layout":"page","_id":"ckdqxnc2w0008d7m0fv1244ah","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"标签","date":"2019-02-18T14:03:13.000Z","type":"tags","toc":false,"comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2019-02-18 22:03:13\ntype: \"tags\"\ntoc: false\ncomments: false\n---\n","updated":"2020-04-30T07:58:25.404Z","path":"tags/index.html","layout":"page","_id":"ckdqxnc2y000ad7m002gb2qeo","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"[\"1\", \"2\", \"3\"].map(parseInt)报错问题解决办法","abbrlink":"1428c068","date":"2019-03-30T03:41:08.000Z","_content":"\n第一次使用 `[\"1\", \"2\", \"3\"].map(parseInt)`时，以为会得到[1,2,3]这个结果，结果很不幸得到的是[1,NaN,NaN]，为什么会这样呢，其实是因为map函数传递的是三个参数`value,index,arry`,而parseInt函数传递的是`value,radix`，`radix`不传时默认使用10，表示十进制，但是如果radix在2-36之外会返回NaN。\n好了，既然已经知道了原因，那么应该怎么修改，才能得到正确的结果呢，\n<!-- more -->\n很简单，把map和parseIntDe完整参数写出来就可以了`[\"1\", \"2\", \"3\"].map((value,index,array)=>parseInt(value,10));` 给parseInt指定10进制，用es5的写法则是\n```\n[\"1\", \"2\", \"3\"].map(function(value,index,array){\n\treturn parseInt(value,10)\n});  //返回 [1,2,3]\n```","source":"_posts/1-2-3-map-parseInt-报错问解决办法.md","raw":"---\ntitle: '[\"1\", \"2\", \"3\"].map(parseInt)报错问题解决办法'\ntags: js\ncategories: 前端\nabbrlink: 1428c068\ndate: 2019-03-30 11:41:08\n---\n\n第一次使用 `[\"1\", \"2\", \"3\"].map(parseInt)`时，以为会得到[1,2,3]这个结果，结果很不幸得到的是[1,NaN,NaN]，为什么会这样呢，其实是因为map函数传递的是三个参数`value,index,arry`,而parseInt函数传递的是`value,radix`，`radix`不传时默认使用10，表示十进制，但是如果radix在2-36之外会返回NaN。\n好了，既然已经知道了原因，那么应该怎么修改，才能得到正确的结果呢，\n<!-- more -->\n很简单，把map和parseIntDe完整参数写出来就可以了`[\"1\", \"2\", \"3\"].map((value,index,array)=>parseInt(value,10));` 给parseInt指定10进制，用es5的写法则是\n```\n[\"1\", \"2\", \"3\"].map(function(value,index,array){\n\treturn parseInt(value,10)\n});  //返回 [1,2,3]\n```","slug":"1-2-3-map-parseInt-报错问解决办法","published":1,"updated":"2020-08-12T04:57:34.498Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdqxnc2l0001d7m07jz7e5yt","content":"<p>第一次使用 <code>[&quot;1&quot;, &quot;2&quot;, &quot;3&quot;].map(parseInt)</code>时，以为会得到[1,2,3]这个结果，结果很不幸得到的是[1,NaN,NaN]，为什么会这样呢，其实是因为map函数传递的是三个参数<code>value,index,arry</code>,而parseInt函数传递的是<code>value,radix</code>，<code>radix</code>不传时默认使用10，表示十进制，但是如果radix在2-36之外会返回NaN。<br>好了，既然已经知道了原因，那么应该怎么修改，才能得到正确的结果呢，</p>\n<a id=\"more\"></a>\n<p>很简单，把map和parseIntDe完整参数写出来就可以了<code>[&quot;1&quot;, &quot;2&quot;, &quot;3&quot;].map((value,index,array)=&gt;parseInt(value,10));</code> 给parseInt指定10进制，用es5的写法则是</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"string\">&quot;1&quot;</span>, <span class=\"string\">&quot;2&quot;</span>, <span class=\"string\">&quot;3&quot;</span>].map(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">value,index,array</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">parseInt</span>(value,<span class=\"number\">10</span>)</span><br><span class=\"line\">&#125;);  <span class=\"comment\">//返回 [1,2,3]</span></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<p>第一次使用 <code>[&quot;1&quot;, &quot;2&quot;, &quot;3&quot;].map(parseInt)</code>时，以为会得到[1,2,3]这个结果，结果很不幸得到的是[1,NaN,NaN]，为什么会这样呢，其实是因为map函数传递的是三个参数<code>value,index,arry</code>,而parseInt函数传递的是<code>value,radix</code>，<code>radix</code>不传时默认使用10，表示十进制，但是如果radix在2-36之外会返回NaN。<br>好了，既然已经知道了原因，那么应该怎么修改，才能得到正确的结果呢，</p>","more":"<p>很简单，把map和parseIntDe完整参数写出来就可以了<code>[&quot;1&quot;, &quot;2&quot;, &quot;3&quot;].map((value,index,array)=&gt;parseInt(value,10));</code> 给parseInt指定10进制，用es5的写法则是</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"string\">&quot;1&quot;</span>, <span class=\"string\">&quot;2&quot;</span>, <span class=\"string\">&quot;3&quot;</span>].map(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">value,index,array</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">parseInt</span>(value,<span class=\"number\">10</span>)</span><br><span class=\"line\">&#125;);  <span class=\"comment\">//返回 [1,2,3]</span></span><br></pre></td></tr></table></figure>"},{"title":"element-ui 上传组件函数自定义参数传递","abbrlink":"845b95cc","date":"2019-05-07T12:09:05.000Z","_content":"\n有时候在表格中需要在每行中有上传需求时，需要定位到是哪一行上传的图片，然后才能组合数组发送到后端，这个时候默认的参数就无法满足我们的需求了，我们需要根据当前行的index来一一对应当前行的文件上传。比如要实现下面的效果：\n<!-- more -->\n![](3.png)\n要实现参数的自定义，我们需要在vue模板中修改函数调用的方式，通过类似：`((val)=>{func(val)})`的方式来调用相应的函数。\n![](1.png)\n以及在文件编辑时要注意修改:file-list为表格中的字段，才能一一对应上\n![](2.png)\n","source":"_posts/element-ui-上传组件函数自定义参数传递.md","raw":"---\ntitle: element-ui 上传组件函数自定义参数传递\ntags:\n  - element-ui\n  - vue\ncategories: 前端\nabbrlink: 845b95cc\ndate: 2019-05-07 20:09:05\n---\n\n有时候在表格中需要在每行中有上传需求时，需要定位到是哪一行上传的图片，然后才能组合数组发送到后端，这个时候默认的参数就无法满足我们的需求了，我们需要根据当前行的index来一一对应当前行的文件上传。比如要实现下面的效果：\n<!-- more -->\n![](3.png)\n要实现参数的自定义，我们需要在vue模板中修改函数调用的方式，通过类似：`((val)=>{func(val)})`的方式来调用相应的函数。\n![](1.png)\n以及在文件编辑时要注意修改:file-list为表格中的字段，才能一一对应上\n![](2.png)\n","slug":"element-ui-上传组件函数自定义参数传递","published":1,"updated":"2020-08-12T04:55:21.641Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdqxnc2q0003d7m06eigadxa","content":"<p>有时候在表格中需要在每行中有上传需求时，需要定位到是哪一行上传的图片，然后才能组合数组发送到后端，这个时候默认的参数就无法满足我们的需求了，我们需要根据当前行的index来一一对应当前行的文件上传。比如要实现下面的效果：</p>\n<a id=\"more\"></a>\n<p><img src=\"3.png\"><br>要实现参数的自定义，我们需要在vue模板中修改函数调用的方式，通过类似：<code>((val)=&gt;&#123;func(val)&#125;)</code>的方式来调用相应的函数。<br><img src=\"1.png\"><br>以及在文件编辑时要注意修改:file-list为表格中的字段，才能一一对应上<br><img src=\"2.png\"></p>\n","site":{"data":{}},"excerpt":"<p>有时候在表格中需要在每行中有上传需求时，需要定位到是哪一行上传的图片，然后才能组合数组发送到后端，这个时候默认的参数就无法满足我们的需求了，我们需要根据当前行的index来一一对应当前行的文件上传。比如要实现下面的效果：</p>","more":"<p><img src=\"3.png\"><br>要实现参数的自定义，我们需要在vue模板中修改函数调用的方式，通过类似：<code>((val)=&gt;&#123;func(val)&#125;)</code>的方式来调用相应的函数。<br><img src=\"1.png\"><br>以及在文件编辑时要注意修改:file-list为表格中的字段，才能一一对应上<br><img src=\"2.png\"></p>"},{"title":"element-ui 表格中的form的input动态验证规则","abbrlink":"3156ccd5","date":"2019-04-27T13:23:46.000Z","_content":"### 表格中的input需要做某些校验，比如，“本次报销金额”要小于“未报销金额”，这就有点麻烦了，我们都知道，element的form的验证规则rules都是在初始化的时候就定好了的，比如时间验证：\n<!-- more -->\n```\ndate2: [\n    { type: 'date', required: true, message: '请选择时间', trigger: 'change' }\n],\n```\n而我们项目中的是这样的:\n![](4.png) 又不想自定义指令来做，还是看下element能不能做吧，于是就开始看文档，发现只能用自定义rules，但是自定义指令，写死的规则也不符合要求啊，因为表格的数据都是不固定的，\n首先我们把表格的数据源字段移到我们的form中\n![](1.png)\n![](2.png)\n![](3.png)\n然后自定义规则：\n![](5.png)\n这里需要用到一些技巧，比如在模板中，\n```\n:prop=\"`inputTaxTable.${scope.$index}.thisApplyMoney`\"\n```\n在需要校验的列中，`inputTaxTable.${scope.$index}.thisApplyMoney` 查找当前行的数据源，\n\n以及查找“未报销金额”这行的数据来跟当前金额进行对比的时候，保证找到的当前行的数据。\n```\n //field字段中包含了该行表格的index\n    let field=rule.field;//规则名称\n    let _fieldArr=[];\n    _fieldArr=field.split('.');\n    let _index=_fieldArr[1];//得到表格的第n行\n\n    if(Number.parseFloat(value)>Number.parseFloat(this.ruleForm.inputTaxTable[_index].notApplyMoney)){\n        return callback(new Error('不可大于未报销金额'));\n    }else{\n        callback()  //这里一定要这样返回，否则validate函数只会执行一次\n    }\n    \n}\n```\n\n\n","source":"_posts/element-ui-表格中的form的input动态验证规则.md","raw":"---\ntitle: element-ui 表格中的form的input动态验证规则\ntags:\n  - element-ui\n  - vue\ncategories: 前端\nabbrlink: 3156ccd5\ndate: 2019-04-27 21:23:46\n---\n### 表格中的input需要做某些校验，比如，“本次报销金额”要小于“未报销金额”，这就有点麻烦了，我们都知道，element的form的验证规则rules都是在初始化的时候就定好了的，比如时间验证：\n<!-- more -->\n```\ndate2: [\n    { type: 'date', required: true, message: '请选择时间', trigger: 'change' }\n],\n```\n而我们项目中的是这样的:\n![](4.png) 又不想自定义指令来做，还是看下element能不能做吧，于是就开始看文档，发现只能用自定义rules，但是自定义指令，写死的规则也不符合要求啊，因为表格的数据都是不固定的，\n首先我们把表格的数据源字段移到我们的form中\n![](1.png)\n![](2.png)\n![](3.png)\n然后自定义规则：\n![](5.png)\n这里需要用到一些技巧，比如在模板中，\n```\n:prop=\"`inputTaxTable.${scope.$index}.thisApplyMoney`\"\n```\n在需要校验的列中，`inputTaxTable.${scope.$index}.thisApplyMoney` 查找当前行的数据源，\n\n以及查找“未报销金额”这行的数据来跟当前金额进行对比的时候，保证找到的当前行的数据。\n```\n //field字段中包含了该行表格的index\n    let field=rule.field;//规则名称\n    let _fieldArr=[];\n    _fieldArr=field.split('.');\n    let _index=_fieldArr[1];//得到表格的第n行\n\n    if(Number.parseFloat(value)>Number.parseFloat(this.ruleForm.inputTaxTable[_index].notApplyMoney)){\n        return callback(new Error('不可大于未报销金额'));\n    }else{\n        callback()  //这里一定要这样返回，否则validate函数只会执行一次\n    }\n    \n}\n```\n\n\n","slug":"element-ui-表格中的form的input动态验证规则","published":1,"updated":"2020-08-12T04:55:05.713Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdqxnc2u0007d7m09ype70cj","content":"<h3 id=\"表格中的input需要做某些校验，比如，“本次报销金额”要小于“未报销金额”，这就有点麻烦了，我们都知道，element的form的验证规则rules都是在初始化的时候就定好了的，比如时间验证：\"><a href=\"#表格中的input需要做某些校验，比如，“本次报销金额”要小于“未报销金额”，这就有点麻烦了，我们都知道，element的form的验证规则rules都是在初始化的时候就定好了的，比如时间验证：\" class=\"headerlink\" title=\"表格中的input需要做某些校验，比如，“本次报销金额”要小于“未报销金额”，这就有点麻烦了，我们都知道，element的form的验证规则rules都是在初始化的时候就定好了的，比如时间验证：\"></a>表格中的input需要做某些校验，比如，“本次报销金额”要小于“未报销金额”，这就有点麻烦了，我们都知道，element的form的验证规则rules都是在初始化的时候就定好了的，比如时间验证：</h3><a id=\"more\"></a>\n<figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">date2:</span> [</span><br><span class=\"line\">    &#123; <span class=\"attr\">type:</span> <span class=\"string\">&#x27;date&#x27;</span>, <span class=\"attr\">required:</span> <span class=\"literal\">true</span>, <span class=\"attr\">message:</span> <span class=\"string\">&#x27;请选择时间&#x27;</span>, <span class=\"attr\">trigger:</span> <span class=\"string\">&#x27;change&#x27;</span> &#125;</span><br><span class=\"line\">],</span><br></pre></td></tr></table></figure>\n<p>而我们项目中的是这样的:<br><img src=\"4.png\"> 又不想自定义指令来做，还是看下element能不能做吧，于是就开始看文档，发现只能用自定义rules，但是自定义指令，写死的规则也不符合要求啊，因为表格的数据都是不固定的，<br>首先我们把表格的数据源字段移到我们的form中<br><img src=\"1.png\"><br><img src=\"2.png\"><br><img src=\"3.png\"><br>然后自定义规则：<br><img src=\"5.png\"><br>这里需要用到一些技巧，比如在模板中，</p>\n<figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:prop=<span class=\"string\">&quot;`inputTaxTable.<span class=\"subst\">$&#123;scope.$index&#125;</span>.thisApplyMoney`&quot;</span></span><br></pre></td></tr></table></figure>\n<p>在需要校验的列中，<code>inputTaxTable.$&#123;scope.$index&#125;.thisApplyMoney</code> 查找当前行的数据源，</p>\n<p>以及查找“未报销金额”这行的数据来跟当前金额进行对比的时候，保证找到的当前行的数据。</p>\n<figure class=\"highlight reasonml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"comment\">//field字段中包含了该行表格的index</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> field=rule.field;<span class=\"comment\">//规则名称</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> _fieldArr=<span class=\"literal\">[]</span>;</span><br><span class=\"line\">    _fieldArr=field.split(<span class=\"character\">&#x27;.&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">let</span> _index=_fieldArr<span class=\"literal\">[<span class=\"number\">1</span>]</span>;<span class=\"comment\">//得到表格的第n行</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">Number</span>.</span></span>parse<span class=\"constructor\">Float(<span class=\"params\">value</span>)</span>&gt;<span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">Number</span>.</span></span>parse<span class=\"constructor\">Float(<span class=\"params\">this</span>.<span class=\"params\">ruleForm</span>.<span class=\"params\">inputTaxTable</span>[<span class=\"params\">_index</span>].<span class=\"params\">notApplyMoney</span>)</span>)&#123;</span><br><span class=\"line\">        return callback(<span class=\"keyword\">new</span> <span class=\"constructor\">Error(&#x27;不可大于未报销金额&#x27;)</span>);</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        callback<span class=\"literal\">()</span>  <span class=\"comment\">//这里一定要这样返回，否则validate函数只会执行一次</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n","site":{"data":{}},"excerpt":"<h3 id=\"表格中的input需要做某些校验，比如，“本次报销金额”要小于“未报销金额”，这就有点麻烦了，我们都知道，element的form的验证规则rules都是在初始化的时候就定好了的，比如时间验证：\"><a href=\"#表格中的input需要做某些校验，比如，“本次报销金额”要小于“未报销金额”，这就有点麻烦了，我们都知道，element的form的验证规则rules都是在初始化的时候就定好了的，比如时间验证：\" class=\"headerlink\" title=\"表格中的input需要做某些校验，比如，“本次报销金额”要小于“未报销金额”，这就有点麻烦了，我们都知道，element的form的验证规则rules都是在初始化的时候就定好了的，比如时间验证：\"></a>表格中的input需要做某些校验，比如，“本次报销金额”要小于“未报销金额”，这就有点麻烦了，我们都知道，element的form的验证规则rules都是在初始化的时候就定好了的，比如时间验证：</h3>","more":"<figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">date2:</span> [</span><br><span class=\"line\">    &#123; <span class=\"attr\">type:</span> <span class=\"string\">&#x27;date&#x27;</span>, <span class=\"attr\">required:</span> <span class=\"literal\">true</span>, <span class=\"attr\">message:</span> <span class=\"string\">&#x27;请选择时间&#x27;</span>, <span class=\"attr\">trigger:</span> <span class=\"string\">&#x27;change&#x27;</span> &#125;</span><br><span class=\"line\">],</span><br></pre></td></tr></table></figure>\n<p>而我们项目中的是这样的:<br><img src=\"4.png\"> 又不想自定义指令来做，还是看下element能不能做吧，于是就开始看文档，发现只能用自定义rules，但是自定义指令，写死的规则也不符合要求啊，因为表格的数据都是不固定的，<br>首先我们把表格的数据源字段移到我们的form中<br><img src=\"1.png\"><br><img src=\"2.png\"><br><img src=\"3.png\"><br>然后自定义规则：<br><img src=\"5.png\"><br>这里需要用到一些技巧，比如在模板中，</p>\n<figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:prop=<span class=\"string\">&quot;`inputTaxTable.<span class=\"subst\">$&#123;scope.$index&#125;</span>.thisApplyMoney`&quot;</span></span><br></pre></td></tr></table></figure>\n<p>在需要校验的列中，<code>inputTaxTable.$&#123;scope.$index&#125;.thisApplyMoney</code> 查找当前行的数据源，</p>\n<p>以及查找“未报销金额”这行的数据来跟当前金额进行对比的时候，保证找到的当前行的数据。</p>\n<figure class=\"highlight reasonml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"comment\">//field字段中包含了该行表格的index</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> field=rule.field;<span class=\"comment\">//规则名称</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> _fieldArr=<span class=\"literal\">[]</span>;</span><br><span class=\"line\">    _fieldArr=field.split(<span class=\"character\">&#x27;.&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">let</span> _index=_fieldArr<span class=\"literal\">[<span class=\"number\">1</span>]</span>;<span class=\"comment\">//得到表格的第n行</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">Number</span>.</span></span>parse<span class=\"constructor\">Float(<span class=\"params\">value</span>)</span>&gt;<span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">Number</span>.</span></span>parse<span class=\"constructor\">Float(<span class=\"params\">this</span>.<span class=\"params\">ruleForm</span>.<span class=\"params\">inputTaxTable</span>[<span class=\"params\">_index</span>].<span class=\"params\">notApplyMoney</span>)</span>)&#123;</span><br><span class=\"line\">        return callback(<span class=\"keyword\">new</span> <span class=\"constructor\">Error(&#x27;不可大于未报销金额&#x27;)</span>);</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        callback<span class=\"literal\">()</span>  <span class=\"comment\">//这里一定要这样返回，否则validate函数只会执行一次</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"js判断一个变量是对象还是数组的实用方法记录","abbrlink":"367b716d","date":"2019-03-14T02:54:51.000Z","_content":"在实际开发中，经常需要检测一个变量的类型，是字符串、数字、布尔还是对象、数组？还是null、undefined？ 对于字符串和数字、布尔这种基本类型，用typeof()来检测就足够了，但是typeof用在数组和对象、null之间就不灵了。\n<!-- more -->\n![](1.jpg)\n由图中可以看出，变量为null，数组，对象的abc使用typeof检测出来的都是object，没有办法进一步区分。\n\n### 使用constructor检测\n![](2.jpg)\n\n```\n    var arr=[1,2];\n    var obj={};\n    console.log(arr.constructor === Array) //true\n    console.log(obj.constructor === Array) //false\n    \n```\n### 使用instanceof \n```\n    var arr=[1,2];\n    var obj={};\n    console.log(arr instanceof Array); //true\n\tconsole.log(obj instanceof Array); //false\n\n```\nconstructor和instanceof 在iframe下使用时会失效，每个iframe都有一套环境，都有一个window，不共享原型链。\n\n\n<font color=\"red\">下面的代码取自网络</font>\n```\n    var iframe = document.createElement('iframe'); //创建iframe\n    document.body.appendChild(iframe); //添加到body中\n    xArray = window.frames[window.frames.length-1].Array;\n    var arr = new xArray(1,2,3); // 声明数组[1,2,3]\n    alert(arr instanceof Array); // false\n    alert(arr.constructor === Array); // false \n\n```\n为什么会出现这样的情况呢？原因就是：在当前窗口引入框架，其实就是引入了window对象，当我们在遍历iframe框架里的变量时使用arr instanceof Array 或者arr.constructor === Array，要注意这个Array是当前window对象的Array，而不是构造出arr的iframe里的window，所以会返回false。\n\n### 使用toString方法\n\n```\n    var arr=[1,2];\n    var obj={};\n    console.log(Object.prototype.toString.call(arr)); // \"[object Array]\"\n\tconsole.log(Object.prototype.toString.call(obj)); // \"[object Object]\"\n```\n\n### 使用Array.isArray() \nECMAScript5将Array.isArray()正式引入JavaScript，目的就是准确地检测一个值是否为数组。IE9+、 Firefox 4+、Safari 5+、Opera 10.5+和 Chrome都实现了这个方法。但是在IE8之前的版本是不支持的。\n\n<font color=\"red\">综合上述方法，自己封装一个函数</font>\n```\n    var arr = [];\n    var arr2 = {};\n    function isArrayFn(value){\n        if (typeof Array.isArray === \"function\") {\n            //先检测是否有isArray方法\n            return Array.isArray(value);\n        }else{\n            //不支持isArray方法，则使用toString方法\n            return Object.prototype.toString.call(value) === \"[object Array]\";\n            //如果是对象则是\"[object Object]\"\n        }\n    }\n    console.log(isArrayFn(arr)); // true\n    console.log(isArrayFn(arr2)); // false\n\n```\n","source":"_posts/js判断一个变量是对象还是数组的实用方法记录.md","raw":"---\ntitle: js判断一个变量是对象还是数组的实用方法记录\ntags: js\ncategories: 前端\nabbrlink: 367b716d\ndate: 2019-03-14 10:54:51\n---\n在实际开发中，经常需要检测一个变量的类型，是字符串、数字、布尔还是对象、数组？还是null、undefined？ 对于字符串和数字、布尔这种基本类型，用typeof()来检测就足够了，但是typeof用在数组和对象、null之间就不灵了。\n<!-- more -->\n![](1.jpg)\n由图中可以看出，变量为null，数组，对象的abc使用typeof检测出来的都是object，没有办法进一步区分。\n\n### 使用constructor检测\n![](2.jpg)\n\n```\n    var arr=[1,2];\n    var obj={};\n    console.log(arr.constructor === Array) //true\n    console.log(obj.constructor === Array) //false\n    \n```\n### 使用instanceof \n```\n    var arr=[1,2];\n    var obj={};\n    console.log(arr instanceof Array); //true\n\tconsole.log(obj instanceof Array); //false\n\n```\nconstructor和instanceof 在iframe下使用时会失效，每个iframe都有一套环境，都有一个window，不共享原型链。\n\n\n<font color=\"red\">下面的代码取自网络</font>\n```\n    var iframe = document.createElement('iframe'); //创建iframe\n    document.body.appendChild(iframe); //添加到body中\n    xArray = window.frames[window.frames.length-1].Array;\n    var arr = new xArray(1,2,3); // 声明数组[1,2,3]\n    alert(arr instanceof Array); // false\n    alert(arr.constructor === Array); // false \n\n```\n为什么会出现这样的情况呢？原因就是：在当前窗口引入框架，其实就是引入了window对象，当我们在遍历iframe框架里的变量时使用arr instanceof Array 或者arr.constructor === Array，要注意这个Array是当前window对象的Array，而不是构造出arr的iframe里的window，所以会返回false。\n\n### 使用toString方法\n\n```\n    var arr=[1,2];\n    var obj={};\n    console.log(Object.prototype.toString.call(arr)); // \"[object Array]\"\n\tconsole.log(Object.prototype.toString.call(obj)); // \"[object Object]\"\n```\n\n### 使用Array.isArray() \nECMAScript5将Array.isArray()正式引入JavaScript，目的就是准确地检测一个值是否为数组。IE9+、 Firefox 4+、Safari 5+、Opera 10.5+和 Chrome都实现了这个方法。但是在IE8之前的版本是不支持的。\n\n<font color=\"red\">综合上述方法，自己封装一个函数</font>\n```\n    var arr = [];\n    var arr2 = {};\n    function isArrayFn(value){\n        if (typeof Array.isArray === \"function\") {\n            //先检测是否有isArray方法\n            return Array.isArray(value);\n        }else{\n            //不支持isArray方法，则使用toString方法\n            return Object.prototype.toString.call(value) === \"[object Array]\";\n            //如果是对象则是\"[object Object]\"\n        }\n    }\n    console.log(isArrayFn(arr)); // true\n    console.log(isArrayFn(arr2)); // false\n\n```\n","slug":"js判断一个变量是对象还是数组的实用方法记录","published":1,"updated":"2020-08-12T04:55:29.145Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdqxnc2x0009d7m0d9149m2f","content":"<p>在实际开发中，经常需要检测一个变量的类型，是字符串、数字、布尔还是对象、数组？还是null、undefined？ 对于字符串和数字、布尔这种基本类型，用typeof()来检测就足够了，但是typeof用在数组和对象、null之间就不灵了。</p>\n<a id=\"more\"></a>\n<p><img src=\"1.jpg\"><br>由图中可以看出，变量为null，数组，对象的abc使用typeof检测出来的都是object，没有办法进一步区分。</p>\n<h3 id=\"使用constructor检测\"><a href=\"#使用constructor检测\" class=\"headerlink\" title=\"使用constructor检测\"></a>使用constructor检测</h3><p><img src=\"2.jpg\"></p>\n<figure class=\"highlight delphi\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr=[<span class=\"number\">1</span>,<span class=\"number\">2</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj=<span class=\"comment\">&#123;&#125;</span>;</span><br><span class=\"line\">console.log(arr.<span class=\"keyword\">constructor</span> === <span class=\"keyword\">Array</span>) <span class=\"comment\">//true</span></span><br><span class=\"line\">console.log(obj.<span class=\"keyword\">constructor</span> === <span class=\"keyword\">Array</span>) <span class=\"comment\">//false</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"使用instanceof\"><a href=\"#使用instanceof\" class=\"headerlink\" title=\"使用instanceof\"></a>使用instanceof</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   <span class=\"keyword\">var</span> arr=[<span class=\"number\">1</span>,<span class=\"number\">2</span>];</span><br><span class=\"line\">   <span class=\"keyword\">var</span> obj=&#123;&#125;;</span><br><span class=\"line\">   <span class=\"built_in\">console</span>.log(arr <span class=\"keyword\">instanceof</span> <span class=\"built_in\">Array</span>); <span class=\"comment\">//true</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(obj <span class=\"keyword\">instanceof</span> <span class=\"built_in\">Array</span>); <span class=\"comment\">//false</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>constructor和instanceof 在iframe下使用时会失效，每个iframe都有一套环境，都有一个window，不共享原型链。</p>\n<p><font color=\"red\">下面的代码取自网络</font></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> iframe = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">&#x27;iframe&#x27;</span>); <span class=\"comment\">//创建iframe</span></span><br><span class=\"line\"><span class=\"built_in\">document</span>.body.appendChild(iframe); <span class=\"comment\">//添加到body中</span></span><br><span class=\"line\">xArray = <span class=\"built_in\">window</span>.frames[<span class=\"built_in\">window</span>.frames.length<span class=\"number\">-1</span>].Array;</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr = <span class=\"keyword\">new</span> xArray(<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>); <span class=\"comment\">// 声明数组[1,2,3]</span></span><br><span class=\"line\">alert(arr <span class=\"keyword\">instanceof</span> <span class=\"built_in\">Array</span>); <span class=\"comment\">// false</span></span><br><span class=\"line\">alert(arr.constructor === <span class=\"built_in\">Array</span>); <span class=\"comment\">// false </span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>为什么会出现这样的情况呢？原因就是：在当前窗口引入框架，其实就是引入了window对象，当我们在遍历iframe框架里的变量时使用arr instanceof Array 或者arr.constructor === Array，要注意这个Array是当前window对象的Array，而不是构造出arr的iframe里的window，所以会返回false。</p>\n<h3 id=\"使用toString方法\"><a href=\"#使用toString方法\" class=\"headerlink\" title=\"使用toString方法\"></a>使用toString方法</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   <span class=\"keyword\">var</span> arr=[<span class=\"number\">1</span>,<span class=\"number\">2</span>];</span><br><span class=\"line\">   <span class=\"keyword\">var</span> obj=&#123;&#125;;</span><br><span class=\"line\">   <span class=\"built_in\">console</span>.log(<span class=\"built_in\">Object</span>.prototype.toString.call(arr)); <span class=\"comment\">// &quot;[object Array]&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">Object</span>.prototype.toString.call(obj)); <span class=\"comment\">// &quot;[object Object]&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"使用Array-isArray\"><a href=\"#使用Array-isArray\" class=\"headerlink\" title=\"使用Array.isArray()\"></a>使用Array.isArray()</h3><p>ECMAScript5将Array.isArray()正式引入JavaScript，目的就是准确地检测一个值是否为数组。IE9+、 Firefox 4+、Safari 5+、Opera 10.5+和 Chrome都实现了这个方法。但是在IE8之前的版本是不支持的。</p>\n<p><font color=\"red\">综合上述方法，自己封装一个函数</font></p>\n<figure class=\"highlight reasonml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var arr = <span class=\"literal\">[]</span>;</span><br><span class=\"line\">var arr2 = &#123;&#125;;</span><br><span class=\"line\"><span class=\"keyword\">function</span> is<span class=\"constructor\">ArrayFn(<span class=\"params\">value</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (typeof <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">Array</span>.</span></span>isArray<span class=\"operator\"> === </span><span class=\"string\">&quot;function&quot;</span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">//先检测是否有isArray方法</span></span><br><span class=\"line\">        return <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">Array</span>.</span></span>is<span class=\"constructor\">Array(<span class=\"params\">value</span>)</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//不支持isArray方法，则使用toString方法</span></span><br><span class=\"line\">        return <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">Object</span>.</span></span>prototype.toString.call(value)<span class=\"operator\"> === </span><span class=\"string\">&quot;[object Array]&quot;</span>;</span><br><span class=\"line\">        <span class=\"comment\">//如果是对象则是&quot;[object Object]&quot;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">console.log(is<span class=\"constructor\">ArrayFn(<span class=\"params\">arr</span>)</span>); <span class=\"comment\">// true</span></span><br><span class=\"line\">console.log(is<span class=\"constructor\">ArrayFn(<span class=\"params\">arr2</span>)</span>); <span class=\"comment\">// false</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<p>在实际开发中，经常需要检测一个变量的类型，是字符串、数字、布尔还是对象、数组？还是null、undefined？ 对于字符串和数字、布尔这种基本类型，用typeof()来检测就足够了，但是typeof用在数组和对象、null之间就不灵了。</p>","more":"<p><img src=\"1.jpg\"><br>由图中可以看出，变量为null，数组，对象的abc使用typeof检测出来的都是object，没有办法进一步区分。</p>\n<h3 id=\"使用constructor检测\"><a href=\"#使用constructor检测\" class=\"headerlink\" title=\"使用constructor检测\"></a>使用constructor检测</h3><p><img src=\"2.jpg\"></p>\n<figure class=\"highlight delphi\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr=[<span class=\"number\">1</span>,<span class=\"number\">2</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj=<span class=\"comment\">&#123;&#125;</span>;</span><br><span class=\"line\">console.log(arr.<span class=\"keyword\">constructor</span> === <span class=\"keyword\">Array</span>) <span class=\"comment\">//true</span></span><br><span class=\"line\">console.log(obj.<span class=\"keyword\">constructor</span> === <span class=\"keyword\">Array</span>) <span class=\"comment\">//false</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"使用instanceof\"><a href=\"#使用instanceof\" class=\"headerlink\" title=\"使用instanceof\"></a>使用instanceof</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   <span class=\"keyword\">var</span> arr=[<span class=\"number\">1</span>,<span class=\"number\">2</span>];</span><br><span class=\"line\">   <span class=\"keyword\">var</span> obj=&#123;&#125;;</span><br><span class=\"line\">   <span class=\"built_in\">console</span>.log(arr <span class=\"keyword\">instanceof</span> <span class=\"built_in\">Array</span>); <span class=\"comment\">//true</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(obj <span class=\"keyword\">instanceof</span> <span class=\"built_in\">Array</span>); <span class=\"comment\">//false</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>constructor和instanceof 在iframe下使用时会失效，每个iframe都有一套环境，都有一个window，不共享原型链。</p>\n<p><font color=\"red\">下面的代码取自网络</font></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> iframe = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">&#x27;iframe&#x27;</span>); <span class=\"comment\">//创建iframe</span></span><br><span class=\"line\"><span class=\"built_in\">document</span>.body.appendChild(iframe); <span class=\"comment\">//添加到body中</span></span><br><span class=\"line\">xArray = <span class=\"built_in\">window</span>.frames[<span class=\"built_in\">window</span>.frames.length<span class=\"number\">-1</span>].Array;</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr = <span class=\"keyword\">new</span> xArray(<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>); <span class=\"comment\">// 声明数组[1,2,3]</span></span><br><span class=\"line\">alert(arr <span class=\"keyword\">instanceof</span> <span class=\"built_in\">Array</span>); <span class=\"comment\">// false</span></span><br><span class=\"line\">alert(arr.constructor === <span class=\"built_in\">Array</span>); <span class=\"comment\">// false </span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>为什么会出现这样的情况呢？原因就是：在当前窗口引入框架，其实就是引入了window对象，当我们在遍历iframe框架里的变量时使用arr instanceof Array 或者arr.constructor === Array，要注意这个Array是当前window对象的Array，而不是构造出arr的iframe里的window，所以会返回false。</p>\n<h3 id=\"使用toString方法\"><a href=\"#使用toString方法\" class=\"headerlink\" title=\"使用toString方法\"></a>使用toString方法</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   <span class=\"keyword\">var</span> arr=[<span class=\"number\">1</span>,<span class=\"number\">2</span>];</span><br><span class=\"line\">   <span class=\"keyword\">var</span> obj=&#123;&#125;;</span><br><span class=\"line\">   <span class=\"built_in\">console</span>.log(<span class=\"built_in\">Object</span>.prototype.toString.call(arr)); <span class=\"comment\">// &quot;[object Array]&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">Object</span>.prototype.toString.call(obj)); <span class=\"comment\">// &quot;[object Object]&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"使用Array-isArray\"><a href=\"#使用Array-isArray\" class=\"headerlink\" title=\"使用Array.isArray()\"></a>使用Array.isArray()</h3><p>ECMAScript5将Array.isArray()正式引入JavaScript，目的就是准确地检测一个值是否为数组。IE9+、 Firefox 4+、Safari 5+、Opera 10.5+和 Chrome都实现了这个方法。但是在IE8之前的版本是不支持的。</p>\n<p><font color=\"red\">综合上述方法，自己封装一个函数</font></p>\n<figure class=\"highlight reasonml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var arr = <span class=\"literal\">[]</span>;</span><br><span class=\"line\">var arr2 = &#123;&#125;;</span><br><span class=\"line\"><span class=\"keyword\">function</span> is<span class=\"constructor\">ArrayFn(<span class=\"params\">value</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (typeof <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">Array</span>.</span></span>isArray<span class=\"operator\"> === </span><span class=\"string\">&quot;function&quot;</span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">//先检测是否有isArray方法</span></span><br><span class=\"line\">        return <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">Array</span>.</span></span>is<span class=\"constructor\">Array(<span class=\"params\">value</span>)</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//不支持isArray方法，则使用toString方法</span></span><br><span class=\"line\">        return <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">Object</span>.</span></span>prototype.toString.call(value)<span class=\"operator\"> === </span><span class=\"string\">&quot;[object Array]&quot;</span>;</span><br><span class=\"line\">        <span class=\"comment\">//如果是对象则是&quot;[object Object]&quot;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">console.log(is<span class=\"constructor\">ArrayFn(<span class=\"params\">arr</span>)</span>); <span class=\"comment\">// true</span></span><br><span class=\"line\">console.log(is<span class=\"constructor\">ArrayFn(<span class=\"params\">arr2</span>)</span>); <span class=\"comment\">// false</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>"},{"title":"webpack4从头构建一个简单的vue2项目","abbrlink":"b38ec8f3","date":"2019-04-20T08:22:45.000Z","_content":"\n### 前言\nvue早就有成熟的vue-cli工具了，现在是vue-cli 3.0了，但是觉得很有必要自己去实现一下，有助于自己技术的提高，也能更好地去了解webpack。本人是webpack菜鸟，有些资料是网上学习整理过来的。\n<!-- more -->\n\n### 1.新建目录文件夹\n第一步当然是新建工程目录了，具体怎么建就随便了，比如我建立webpackVue这个目录\n### 2.新建package.json文件\npackage.json是nodejs项目必需的配置文件。使用`npm init`,按照提示一步步填写项目名称，作者等信息\n### 3.webpack配置\n新建build文件夹\nbuild目录下新建webpack.base.conf.js,webpack.dev.conf.js,webpack.prod.conf.js文件，webpack.base.conf.js是公共基础配置，webpack.dev.conf.js是生产环境配置文件，webpack.prod.conf.js是生产环境配置。\n创建一个src目录，用来存放我们的项目源文件，然后创建main.js文件，创建一个index.html\n```\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>webpack4搭建vue</title>\n</head>\n<body>\n    <div id=\"app\"></div>\n</body>\n</html>\n```\n![](1.jpg) 目录结构是这样的\n\n下载webpack webpack-dev-server webpack-cli (这里webpack是局部安装)\n`npm i webpack webpack-dev-server webpack-cli -D`\n打开webpack.base.config.js，逐步添加配置\n```\nvar path = require('path');\nvar webpack = require('webpack');\nmodule.exports ={\n    //入口文件\n    entry:{\n        main: path.resolve(__dirname, '../src/main.js')\n    },\n    //输出目录\n    output:{\n        path: path.resolve(__dirname, '../dist'),\n        filename: '[name].[hash].js'\n    },\n    module:{\n        rules:[]\n    },\n    plugins:[\n        new webpack.HashedModuleIdsPlugin(), // 解决vender后面的hash每次都改变\n    ],\n    resolve:{\n\n    }\n}\n```\n### 4.配置loader\n配置babel编译代码：下载babel-loader，babel-core，babel-preset-dev。\n`npm i babel-loader babel-core babel-preset-env -D`\n\nbabel-preset-env 帮助我们配置 babel。我们只需要告诉它我们要兼容的情况（目标运行环境），它就会自动把代码转换为兼容对应环境的代码。\nbabel-core是作为babel的核心存在，babel的核心api都在这个模块里面\n这里有个注意的地方，就是babel的版本的问题，运行的时候根据提示安装合适的版本就好了，这里不记得是babel的哪个工具需要7的版本了。\n在webpack.base.conf.js文件中增加babel配置\n```\nrules:[\n    {\n        test: /\\.js$/, //匹配.js结尾的文件\n        use: ['babel-loader'],\n        exclude:/node_modules/ //排除node_modules里面的js\n    },\n]\n```\n新建.babelrc文件，.babelrc是babel全局配置文件\n```\n{\n    \"presets\":[\n        [\"env\",{\n            \"targets\": {    \n                \"browsers\": [\"> 1%\", \"last 2 versions\", \"not ie <=8\"],\n                //\"chrome\": 52,\n                //\"browsers\": [\"last 2 versions\", \"safari 7\"]\n            },       \n            \"modules\": false\n        }]\n    ]\n}\n```\n#### 下载file-loader\n`npm i file-loader -D`\n继续追加配置\n```\nrules:[\n    {\n        test: /\\.(jpg|png|svg|gif)$/,\n        use:['file-loader']\n    },\n    {\n        test:/\\.(woff|woff2|eot|ttf|otf)$/\n    },\n]\n```\n#### 下载css-loader，vue-style-loader，sass-loader， node-sass，less，less-loader并配置css，scss，sass,less\n`npm i css-loader vue-style-loader sass-loader node-sass less-loader less -D`\n```\nrules:[\n    {\n        test:/\\.(sa|sc|c)ss$/,\n        use:[\n            {\n                loader: 'vue-style-loader'\n            },\n            'css-loader',\n            'sass-loader'\n        ]\n    },\n    {\n        test:/\\.less$/,\n        use:[\n            {\n                loader: 'vue-style-loader'\n            },\n            'css-loader',\n            'sass-loader'\n        ]\n    },\n]\n```\n### 5.处理html文件\n下载html-webpack-plugin\n`npm i html-webpack-plugin -D`\n```\nvar HtmlWebpackPlugin = require('html-webpack-plugin'); //在base配置文件头部引入\nnew HtmlWebpackPlugin({\n    template: path.resolve(__dirname, '../index.html')\n}),\n```\n### 6.解析模块的配置和配置别名\n```\nresolve: {\n    // 能够使用户在引入模块时不带扩展\n    extensions: ['.js', '.json', '.vue', 'css'],\n    //别名\n    alias: {\n        'vue$':'vue/dist/vue.esm.js',\n        '@': path.resolve(__dirname, '../src')\n    }\n    \n}\n```\n### 7.配置webpack.dev.conf.js文件\n下载 webpack-merge，用于合并配置\n`npm i webpack-merge -D`\n```\nvar merge = require('webpack-merge');\nvar baseConfig = require('./webpack.base.conf');\nvar path = require('path');\nvar webpack = require('webpack');\nmodule.exports = merge(baseConfig, {\n    devtool: 'inline-source-map', // 压缩方式\n    mode: 'development',\n    devServer: {\n        hot: true, // 热更新\n        open: true, // 自动打开页面\n        contentBase: path.resolve(__dirname, '../src'), // 告诉服务从哪提供内容\n    },\n    plugins: [\n        new webpack.HotModuleReplacementPlugin(), //开启热更新\n    ]\n})\n```\n### 8.配置webpack.prod.conf.js\n```\nvar merge = require('webpack-merge');\nvar baseConfig = require('./webpack.base.conf');\nvar path = require('path');\nvar webpack = require('webpack');\nmodule.exports = merge(baseConfig, {\n    devtool: 'source-map', // 压缩方式\n    mode: 'production',\n    plugins: [\n\n    ]\n})\n```\n### 9.配置vue-loader\n首先要下载vue，以及vue相关的模块\n`npm i vue vue-loader vue-template-compiler -D`\n继续完善webpack.base.cond.js\n```\nvar VueLoaderPlugin=require('vue-loader/lib/plugin');\n//省略部分代码...\nrules:[\n    {\n        test: /\\.vue$/,\n        use: ['vue-loader'],\n        exclude: /node_modules/\n    },\n]\n//省略部分代码...\nplugins:[\n    new VueLoaderPlugin(), // 它的职责是将你定义过的其它规则复制并应用到 .vue 文件里相应语言的块\n]\n```\n在src目录新建app.vue文件和main.js文件\n```\n//app.vue\n<template>\n    <div>{{str}}</div>\n</template>\n<script>\n  export default {\n    name: 'App',\n    data () {\n      return {\n        str: '欢迎来到自定义webpack4+vue构建'\n      }\n    }\n  }\n</script>\n<style lang=\"scss\">\n  div {\n    color: red;\n  }\n</style>\n```\n```\n//main.js\nimport Vue from 'vue'\nimport App from './App'\n\nnew Vue({\n    el: \"#app\",\n    render: (h) => h(App)\n})\n```\n### 10.配置命令\n\n打开package.json文件，并配置开发和打包命令\n```\n// 省略代码。。。\n\"scripts\": {\n  \"dev\": \"webpack-dev-server  --progress --config build/webpack.dev.conf.js\",\n   \"build\": \"webpack --config build/webpack.prod.conf.js\"\n  }\n\n```\n`npm run dev` 就可以启动项目了\n![](2.png)\n\n## 继续优化...\n\n### 11. 区分环境引入不同地址\n\n新建config文件夹并新建dev.env.js和prod.env.js\n```\n//dev.env.js 开发环境配置\n'use strict'\n\nmodule.exports = {\n    NODE_ENV: \"development\",\n    BASE_API: \"http://1456\",\n}\n```\n\n```\n//prod.env.js 生产环境配置\n'use strict'\n\nmodule.exports = {\n    NODE_ENV: \"production\",    BASE_API: \"http://123.com\",\n}\n\n```\n### 12.优化webpack配置\n解决更改文件打包时dist文件没有清除，再次打包。\n下载clean-webpack-plugin，并配置webpack.prod.conf.js文件\n`npm i clean-webpack-plugin -D`\n\n```\n//webpack.prod.conf.js\n// 引入clean-webpack-plugin\nvar CleanWebpackPlugin = require('clean-webpack-plugin');\n// 省略代码。。。。\nplugins: [\n    new CleanWebPackPlugin();\n]\n\n```\n根据不同环境提取css\n下载mini-css-extract-plugin，并配置webpack.prod.conf.js文件\n`npm i mini-css-extract-plugin -D`\n```\n//webpack.prod.conf.js\nconst MiniCssExtractPlugin = require('mini-css-extract-plugin');\nmodule: {\n    rules: [\n        {\n            test: /\\.(c|sc|sa)ss$/,\n            use: [\n                {\n                loader: MiniCssExtractPlugin.loader,\n                },\n                'css-loader',\n                'sass-loader'\n            ]\n        },\n        {\n        test: /\\.less$/,\n        use: [\n            {\n            loader: MiniCssExtractPlugin.loader,\n            },\n            'css-loader',\n            'less-loader'\n            ]\n        }\n    ]\n},\nplugins: [\n    new MiniCssExtractPlugin({\n        filename: '[name].[hash].css'\n    })\n]\n\n```\n<font color=\"red\">webpack.base.conf.js中删除使用vue-style-loader的代码，并在webpack.dev.conf.js中定义</font>\n\n```\nmodule: {\n    rules: [\n      {\n        test: /\\.(c|sc|sa)ss$/,\n        use: [\n          {\n            loader: 'vue-style-loader',\n          },\n          'css-loader',\n          'sass-loader'\n        ]\n      },\n      {\n        test: /\\.less$/,\n        use: [\n          {\n            loader: 'vue-style-loader',\n          },\n          'css-loader',\n          'less-loader'\n         ]\n      }\n    ]\n  },\n//以上这段webpack.base.conf.js中的代码移到webpack.dev.conf.js中\n```\n[这个配置vue-loader中有提到](https://link.juejin.im?target=https%3A%2F%2Fvue-loader.vuejs.org%2Fzh%2Fguide%2Fextract-css.html%23webpack-4)\n\n#### 第三方库单独打包 \n把依赖的第三方库抽取出来单独打包，加快打包进度\n下载autodll-webpack-plugin\n`npm i autodll-webpack-plugin -D`\n\n在webpack.base.conf.js中配置\n```\n//webpack.base.conf.js\n//省略部分代码\nvar AutodllWebpackpackPlugin = require('autodll-webpack-plugin');\nplugins: [\n    new AutodllWebpackpackPlugin ({\n        inject: true,\n        debugger: true,\n        filename: '[name].js',\n        path: './dll',\n        entry: {\n            vendor: ['vue']\n        }\n    })\n]\n\n```\ntips: inject 为 true，插件会自动把打包出来的第三方库文件插入到 HTML。filename 是打包后文件的名称。path 是打包后的路径。entry 是入口，vendor 是你指定的名称，数组内容就是要打包的第三方库的名称，不要写全路径，Webpack 会自动去 node_modules 中找到的。\n#### 提取公共代码\n在 webpack.base.conf.js的 plugins 属性中添加如下插件对象\n`new webpack.optimize.SplitChunksPlugin()`\n#### 打包时压缩js和css\n下载optimize-css-assets-webpack-plugin和uglifyjs-webpack-plugin\n\n`npm i uglifyjs-webpack-plugin uglifyjs-webpack-plugin optimize-css-assets-webpack-plugin -D`\n\n在webpack.prod.conf.js中分别引入optimize-css-assets-webpack-plugin和uglifyjs-webpack-plugin并增加optimization\n```\n//webpack.prod.conf.js\nvar OptimizeCSSAssetsPlugin = require(\"optimize-css-assets-webpack-plugin\");\nvar UglifyJsPlugin = require(\"uglifyjs-webpack-plugin\");\n// 省略部分代码\noptimization: {\n        minimizer: [\n        // 压缩JS\n        new UglifyJsPlugin({\n        uglifyOptions: {\n            compress: {\n            warnings: false, // 去除警告\n            drop_debugger: true, // 去除debugger\n            drop_console: true // 去除console.log\n            },\n        },\n        cache: true, // 开启缓存\n        parallel: true, // 平行压缩\n        sourceMap: false // set to true if you want JS source maps\n        }),\n        // 压缩css\n        new OptimizeCSSAssetsPlugin({})\n    ]\n},\n\n```\n#### css自动加前缀\n下载postcss-loader 和autoprefixer\n`npm i postcss-loader autoprefixer -D`\n分别在webpack.dev.conf.js和webpack.prod.conf.js的use中添加postcss-loader\n在module中的rules中的use中追加：\n```\nuse: [\n    'postcss-loader'\n]\n```\n在项目下增加postcss.config.js\n```\n// 配置cssz加前缀\nmodule.exports = {\n  plugins: [\n    require('autoprefixer')\n  ]\n}\n```\n差不多就这样了,对了，还有一点就是打包出来的html里面引用`/dll/vendor.js`需要手动改成`./dll/vendor.js`这个下次也要优化下，我记得vue-cli 2版本中有一个地方是可以配置的","source":"_posts/webpack4从头构建一个简单的vue2项目.md","raw":"---\ntitle: webpack4从头构建一个简单的vue2项目\ntags:\n  - nodejs\n  - webpack\n  - vue\ncategories: 前端\nabbrlink: b38ec8f3\ndate: 2019-04-20 16:22:45\n---\n\n### 前言\nvue早就有成熟的vue-cli工具了，现在是vue-cli 3.0了，但是觉得很有必要自己去实现一下，有助于自己技术的提高，也能更好地去了解webpack。本人是webpack菜鸟，有些资料是网上学习整理过来的。\n<!-- more -->\n\n### 1.新建目录文件夹\n第一步当然是新建工程目录了，具体怎么建就随便了，比如我建立webpackVue这个目录\n### 2.新建package.json文件\npackage.json是nodejs项目必需的配置文件。使用`npm init`,按照提示一步步填写项目名称，作者等信息\n### 3.webpack配置\n新建build文件夹\nbuild目录下新建webpack.base.conf.js,webpack.dev.conf.js,webpack.prod.conf.js文件，webpack.base.conf.js是公共基础配置，webpack.dev.conf.js是生产环境配置文件，webpack.prod.conf.js是生产环境配置。\n创建一个src目录，用来存放我们的项目源文件，然后创建main.js文件，创建一个index.html\n```\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>webpack4搭建vue</title>\n</head>\n<body>\n    <div id=\"app\"></div>\n</body>\n</html>\n```\n![](1.jpg) 目录结构是这样的\n\n下载webpack webpack-dev-server webpack-cli (这里webpack是局部安装)\n`npm i webpack webpack-dev-server webpack-cli -D`\n打开webpack.base.config.js，逐步添加配置\n```\nvar path = require('path');\nvar webpack = require('webpack');\nmodule.exports ={\n    //入口文件\n    entry:{\n        main: path.resolve(__dirname, '../src/main.js')\n    },\n    //输出目录\n    output:{\n        path: path.resolve(__dirname, '../dist'),\n        filename: '[name].[hash].js'\n    },\n    module:{\n        rules:[]\n    },\n    plugins:[\n        new webpack.HashedModuleIdsPlugin(), // 解决vender后面的hash每次都改变\n    ],\n    resolve:{\n\n    }\n}\n```\n### 4.配置loader\n配置babel编译代码：下载babel-loader，babel-core，babel-preset-dev。\n`npm i babel-loader babel-core babel-preset-env -D`\n\nbabel-preset-env 帮助我们配置 babel。我们只需要告诉它我们要兼容的情况（目标运行环境），它就会自动把代码转换为兼容对应环境的代码。\nbabel-core是作为babel的核心存在，babel的核心api都在这个模块里面\n这里有个注意的地方，就是babel的版本的问题，运行的时候根据提示安装合适的版本就好了，这里不记得是babel的哪个工具需要7的版本了。\n在webpack.base.conf.js文件中增加babel配置\n```\nrules:[\n    {\n        test: /\\.js$/, //匹配.js结尾的文件\n        use: ['babel-loader'],\n        exclude:/node_modules/ //排除node_modules里面的js\n    },\n]\n```\n新建.babelrc文件，.babelrc是babel全局配置文件\n```\n{\n    \"presets\":[\n        [\"env\",{\n            \"targets\": {    \n                \"browsers\": [\"> 1%\", \"last 2 versions\", \"not ie <=8\"],\n                //\"chrome\": 52,\n                //\"browsers\": [\"last 2 versions\", \"safari 7\"]\n            },       \n            \"modules\": false\n        }]\n    ]\n}\n```\n#### 下载file-loader\n`npm i file-loader -D`\n继续追加配置\n```\nrules:[\n    {\n        test: /\\.(jpg|png|svg|gif)$/,\n        use:['file-loader']\n    },\n    {\n        test:/\\.(woff|woff2|eot|ttf|otf)$/\n    },\n]\n```\n#### 下载css-loader，vue-style-loader，sass-loader， node-sass，less，less-loader并配置css，scss，sass,less\n`npm i css-loader vue-style-loader sass-loader node-sass less-loader less -D`\n```\nrules:[\n    {\n        test:/\\.(sa|sc|c)ss$/,\n        use:[\n            {\n                loader: 'vue-style-loader'\n            },\n            'css-loader',\n            'sass-loader'\n        ]\n    },\n    {\n        test:/\\.less$/,\n        use:[\n            {\n                loader: 'vue-style-loader'\n            },\n            'css-loader',\n            'sass-loader'\n        ]\n    },\n]\n```\n### 5.处理html文件\n下载html-webpack-plugin\n`npm i html-webpack-plugin -D`\n```\nvar HtmlWebpackPlugin = require('html-webpack-plugin'); //在base配置文件头部引入\nnew HtmlWebpackPlugin({\n    template: path.resolve(__dirname, '../index.html')\n}),\n```\n### 6.解析模块的配置和配置别名\n```\nresolve: {\n    // 能够使用户在引入模块时不带扩展\n    extensions: ['.js', '.json', '.vue', 'css'],\n    //别名\n    alias: {\n        'vue$':'vue/dist/vue.esm.js',\n        '@': path.resolve(__dirname, '../src')\n    }\n    \n}\n```\n### 7.配置webpack.dev.conf.js文件\n下载 webpack-merge，用于合并配置\n`npm i webpack-merge -D`\n```\nvar merge = require('webpack-merge');\nvar baseConfig = require('./webpack.base.conf');\nvar path = require('path');\nvar webpack = require('webpack');\nmodule.exports = merge(baseConfig, {\n    devtool: 'inline-source-map', // 压缩方式\n    mode: 'development',\n    devServer: {\n        hot: true, // 热更新\n        open: true, // 自动打开页面\n        contentBase: path.resolve(__dirname, '../src'), // 告诉服务从哪提供内容\n    },\n    plugins: [\n        new webpack.HotModuleReplacementPlugin(), //开启热更新\n    ]\n})\n```\n### 8.配置webpack.prod.conf.js\n```\nvar merge = require('webpack-merge');\nvar baseConfig = require('./webpack.base.conf');\nvar path = require('path');\nvar webpack = require('webpack');\nmodule.exports = merge(baseConfig, {\n    devtool: 'source-map', // 压缩方式\n    mode: 'production',\n    plugins: [\n\n    ]\n})\n```\n### 9.配置vue-loader\n首先要下载vue，以及vue相关的模块\n`npm i vue vue-loader vue-template-compiler -D`\n继续完善webpack.base.cond.js\n```\nvar VueLoaderPlugin=require('vue-loader/lib/plugin');\n//省略部分代码...\nrules:[\n    {\n        test: /\\.vue$/,\n        use: ['vue-loader'],\n        exclude: /node_modules/\n    },\n]\n//省略部分代码...\nplugins:[\n    new VueLoaderPlugin(), // 它的职责是将你定义过的其它规则复制并应用到 .vue 文件里相应语言的块\n]\n```\n在src目录新建app.vue文件和main.js文件\n```\n//app.vue\n<template>\n    <div>{{str}}</div>\n</template>\n<script>\n  export default {\n    name: 'App',\n    data () {\n      return {\n        str: '欢迎来到自定义webpack4+vue构建'\n      }\n    }\n  }\n</script>\n<style lang=\"scss\">\n  div {\n    color: red;\n  }\n</style>\n```\n```\n//main.js\nimport Vue from 'vue'\nimport App from './App'\n\nnew Vue({\n    el: \"#app\",\n    render: (h) => h(App)\n})\n```\n### 10.配置命令\n\n打开package.json文件，并配置开发和打包命令\n```\n// 省略代码。。。\n\"scripts\": {\n  \"dev\": \"webpack-dev-server  --progress --config build/webpack.dev.conf.js\",\n   \"build\": \"webpack --config build/webpack.prod.conf.js\"\n  }\n\n```\n`npm run dev` 就可以启动项目了\n![](2.png)\n\n## 继续优化...\n\n### 11. 区分环境引入不同地址\n\n新建config文件夹并新建dev.env.js和prod.env.js\n```\n//dev.env.js 开发环境配置\n'use strict'\n\nmodule.exports = {\n    NODE_ENV: \"development\",\n    BASE_API: \"http://1456\",\n}\n```\n\n```\n//prod.env.js 生产环境配置\n'use strict'\n\nmodule.exports = {\n    NODE_ENV: \"production\",    BASE_API: \"http://123.com\",\n}\n\n```\n### 12.优化webpack配置\n解决更改文件打包时dist文件没有清除，再次打包。\n下载clean-webpack-plugin，并配置webpack.prod.conf.js文件\n`npm i clean-webpack-plugin -D`\n\n```\n//webpack.prod.conf.js\n// 引入clean-webpack-plugin\nvar CleanWebpackPlugin = require('clean-webpack-plugin');\n// 省略代码。。。。\nplugins: [\n    new CleanWebPackPlugin();\n]\n\n```\n根据不同环境提取css\n下载mini-css-extract-plugin，并配置webpack.prod.conf.js文件\n`npm i mini-css-extract-plugin -D`\n```\n//webpack.prod.conf.js\nconst MiniCssExtractPlugin = require('mini-css-extract-plugin');\nmodule: {\n    rules: [\n        {\n            test: /\\.(c|sc|sa)ss$/,\n            use: [\n                {\n                loader: MiniCssExtractPlugin.loader,\n                },\n                'css-loader',\n                'sass-loader'\n            ]\n        },\n        {\n        test: /\\.less$/,\n        use: [\n            {\n            loader: MiniCssExtractPlugin.loader,\n            },\n            'css-loader',\n            'less-loader'\n            ]\n        }\n    ]\n},\nplugins: [\n    new MiniCssExtractPlugin({\n        filename: '[name].[hash].css'\n    })\n]\n\n```\n<font color=\"red\">webpack.base.conf.js中删除使用vue-style-loader的代码，并在webpack.dev.conf.js中定义</font>\n\n```\nmodule: {\n    rules: [\n      {\n        test: /\\.(c|sc|sa)ss$/,\n        use: [\n          {\n            loader: 'vue-style-loader',\n          },\n          'css-loader',\n          'sass-loader'\n        ]\n      },\n      {\n        test: /\\.less$/,\n        use: [\n          {\n            loader: 'vue-style-loader',\n          },\n          'css-loader',\n          'less-loader'\n         ]\n      }\n    ]\n  },\n//以上这段webpack.base.conf.js中的代码移到webpack.dev.conf.js中\n```\n[这个配置vue-loader中有提到](https://link.juejin.im?target=https%3A%2F%2Fvue-loader.vuejs.org%2Fzh%2Fguide%2Fextract-css.html%23webpack-4)\n\n#### 第三方库单独打包 \n把依赖的第三方库抽取出来单独打包，加快打包进度\n下载autodll-webpack-plugin\n`npm i autodll-webpack-plugin -D`\n\n在webpack.base.conf.js中配置\n```\n//webpack.base.conf.js\n//省略部分代码\nvar AutodllWebpackpackPlugin = require('autodll-webpack-plugin');\nplugins: [\n    new AutodllWebpackpackPlugin ({\n        inject: true,\n        debugger: true,\n        filename: '[name].js',\n        path: './dll',\n        entry: {\n            vendor: ['vue']\n        }\n    })\n]\n\n```\ntips: inject 为 true，插件会自动把打包出来的第三方库文件插入到 HTML。filename 是打包后文件的名称。path 是打包后的路径。entry 是入口，vendor 是你指定的名称，数组内容就是要打包的第三方库的名称，不要写全路径，Webpack 会自动去 node_modules 中找到的。\n#### 提取公共代码\n在 webpack.base.conf.js的 plugins 属性中添加如下插件对象\n`new webpack.optimize.SplitChunksPlugin()`\n#### 打包时压缩js和css\n下载optimize-css-assets-webpack-plugin和uglifyjs-webpack-plugin\n\n`npm i uglifyjs-webpack-plugin uglifyjs-webpack-plugin optimize-css-assets-webpack-plugin -D`\n\n在webpack.prod.conf.js中分别引入optimize-css-assets-webpack-plugin和uglifyjs-webpack-plugin并增加optimization\n```\n//webpack.prod.conf.js\nvar OptimizeCSSAssetsPlugin = require(\"optimize-css-assets-webpack-plugin\");\nvar UglifyJsPlugin = require(\"uglifyjs-webpack-plugin\");\n// 省略部分代码\noptimization: {\n        minimizer: [\n        // 压缩JS\n        new UglifyJsPlugin({\n        uglifyOptions: {\n            compress: {\n            warnings: false, // 去除警告\n            drop_debugger: true, // 去除debugger\n            drop_console: true // 去除console.log\n            },\n        },\n        cache: true, // 开启缓存\n        parallel: true, // 平行压缩\n        sourceMap: false // set to true if you want JS source maps\n        }),\n        // 压缩css\n        new OptimizeCSSAssetsPlugin({})\n    ]\n},\n\n```\n#### css自动加前缀\n下载postcss-loader 和autoprefixer\n`npm i postcss-loader autoprefixer -D`\n分别在webpack.dev.conf.js和webpack.prod.conf.js的use中添加postcss-loader\n在module中的rules中的use中追加：\n```\nuse: [\n    'postcss-loader'\n]\n```\n在项目下增加postcss.config.js\n```\n// 配置cssz加前缀\nmodule.exports = {\n  plugins: [\n    require('autoprefixer')\n  ]\n}\n```\n差不多就这样了,对了，还有一点就是打包出来的html里面引用`/dll/vendor.js`需要手动改成`./dll/vendor.js`这个下次也要优化下，我记得vue-cli 2版本中有一个地方是可以配置的","slug":"webpack4从头构建一个简单的vue2项目","published":1,"updated":"2020-08-12T04:55:52.521Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdqxnc2y000bd7m0cu4ebqhd","content":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>vue早就有成熟的vue-cli工具了，现在是vue-cli 3.0了，但是觉得很有必要自己去实现一下，有助于自己技术的提高，也能更好地去了解webpack。本人是webpack菜鸟，有些资料是网上学习整理过来的。</p>\n<a id=\"more\"></a>\n\n<h3 id=\"1-新建目录文件夹\"><a href=\"#1-新建目录文件夹\" class=\"headerlink\" title=\"1.新建目录文件夹\"></a>1.新建目录文件夹</h3><p>第一步当然是新建工程目录了，具体怎么建就随便了，比如我建立webpackVue这个目录</p>\n<h3 id=\"2-新建package-json文件\"><a href=\"#2-新建package-json文件\" class=\"headerlink\" title=\"2.新建package.json文件\"></a>2.新建package.json文件</h3><p>package.json是nodejs项目必需的配置文件。使用<code>npm init</code>,按照提示一步步填写项目名称，作者等信息</p>\n<h3 id=\"3-webpack配置\"><a href=\"#3-webpack配置\" class=\"headerlink\" title=\"3.webpack配置\"></a>3.webpack配置</h3><p>新建build文件夹<br>build目录下新建webpack.base.conf.js,webpack.dev.conf.js,webpack.prod.conf.js文件，webpack.base.conf.js是公共基础配置，webpack.dev.conf.js是生产环境配置文件，webpack.prod.conf.js是生产环境配置。<br>创建一个src目录，用来存放我们的项目源文件，然后创建main.js文件，创建一个index.html</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>webpack4搭建vue<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;app&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"1.jpg\"> 目录结构是这样的</p>\n<p>下载webpack webpack-dev-server webpack-cli (这里webpack是局部安装)<br><code>npm i webpack webpack-dev-server webpack-cli -D</code><br>打开webpack.base.config.js，逐步添加配置</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;path&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> webpack = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;webpack&#x27;</span>);</span><br><span class=\"line\"><span class=\"built_in\">module</span>.<span class=\"built_in\">exports</span> =&#123;</span><br><span class=\"line\">    <span class=\"comment\">//入口文件</span></span><br><span class=\"line\">    entry:&#123;</span><br><span class=\"line\">        main: path.resolve(__dirname, <span class=\"string\">&#x27;../src/main.js&#x27;</span>)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">//输出目录</span></span><br><span class=\"line\">    output:&#123;</span><br><span class=\"line\">        path: path.resolve(__dirname, <span class=\"string\">&#x27;../dist&#x27;</span>),</span><br><span class=\"line\">        filename: <span class=\"string\">&#x27;[name].[hash].js&#x27;</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"keyword\">module</span>:&#123;</span><br><span class=\"line\">        rules:[]</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    plugins:[</span><br><span class=\"line\">        <span class=\"keyword\">new</span> webpack.HashedModuleIdsPlugin(), <span class=\"comment\">// 解决vender后面的hash每次都改变</span></span><br><span class=\"line\">    ],</span><br><span class=\"line\">    resolve:&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-配置loader\"><a href=\"#4-配置loader\" class=\"headerlink\" title=\"4.配置loader\"></a>4.配置loader</h3><p>配置babel编译代码：下载babel-loader，babel-core，babel-preset-dev。<br><code>npm i babel-loader babel-core babel-preset-env -D</code></p>\n<p>babel-preset-env 帮助我们配置 babel。我们只需要告诉它我们要兼容的情况（目标运行环境），它就会自动把代码转换为兼容对应环境的代码。<br>babel-core是作为babel的核心存在，babel的核心api都在这个模块里面<br>这里有个注意的地方，就是babel的版本的问题，运行的时候根据提示安装合适的版本就好了，这里不记得是babel的哪个工具需要7的版本了。<br>在webpack.base.conf.js文件中增加babel配置</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rules:[</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        test: <span class=\"regexp\">/\\.js$/</span>, <span class=\"regexp\">//</span>匹配.js结尾的文件</span><br><span class=\"line\">        use: [<span class=\"string\">&#x27;babel-loader&#x27;</span>],</span><br><span class=\"line\">        exclude:<span class=\"regexp\">/node_modules/</span> <span class=\"regexp\">//</span>排除node_modules里面的js</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<p>新建.babelrc文件，.babelrc是babel全局配置文件</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">&quot;presets&quot;</span>:[</span><br><span class=\"line\">        [<span class=\"string\">&quot;env&quot;</span>,&#123;</span><br><span class=\"line\">            <span class=\"attr\">&quot;targets&quot;</span>: &#123;    </span><br><span class=\"line\">                <span class=\"attr\">&quot;browsers&quot;</span>: [<span class=\"string\">&quot;&gt; 1%&quot;</span>, <span class=\"string\">&quot;last 2 versions&quot;</span>, <span class=\"string\">&quot;not ie &lt;=8&quot;</span>],</span><br><span class=\"line\">                <span class=\"comment\">//&quot;chrome&quot;: 52,</span></span><br><span class=\"line\">                <span class=\"comment\">//&quot;browsers&quot;: [&quot;last 2 versions&quot;, &quot;safari 7&quot;]</span></span><br><span class=\"line\">            &#125;,       </span><br><span class=\"line\">            <span class=\"attr\">&quot;modules&quot;</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">        &#125;]</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"下载file-loader\"><a href=\"#下载file-loader\" class=\"headerlink\" title=\"下载file-loader\"></a>下载file-loader</h4><p><code>npm i file-loader -D</code><br>继续追加配置</p>\n<figure class=\"highlight coq\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rules:[</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        test: /\\.(jpg|<span class=\"type\">png</span>|<span class=\"type\">svg</span>|<span class=\"type\">gif</span>)$/,</span><br><span class=\"line\">        use:[&#x27;file-loader&#x27;]</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        test:/\\.(woff|<span class=\"type\">woff2</span>|<span class=\"type\">eot</span>|<span class=\"type\">ttf</span>|<span class=\"type\">otf</span>)$/</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<h4 id=\"下载css-loader，vue-style-loader，sass-loader，-node-sass，less，less-loader并配置css，scss，sass-less\"><a href=\"#下载css-loader，vue-style-loader，sass-loader，-node-sass，less，less-loader并配置css，scss，sass-less\" class=\"headerlink\" title=\"下载css-loader，vue-style-loader，sass-loader， node-sass，less，less-loader并配置css，scss，sass,less\"></a>下载css-loader，vue-style-loader，sass-loader， node-sass，less，less-loader并配置css，scss，sass,less</h4><p><code>npm i css-loader vue-style-loader sass-loader node-sass less-loader less -D</code></p>\n<figure class=\"highlight sml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rules:[</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        test:/\\.(sa|sc|c)ss$/,</span><br><span class=\"line\">        use:[</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                loader: <span class=\"symbol\">&#x27;vue</span>-style-loader&#x27;</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            <span class=\"symbol\">&#x27;css</span>-loader&#x27;,</span><br><span class=\"line\">            <span class=\"symbol\">&#x27;sass</span>-loader&#x27;</span><br><span class=\"line\">        ]</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        test:/\\.less$/,</span><br><span class=\"line\">        use:[</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                loader: <span class=\"symbol\">&#x27;vue</span>-style-loader&#x27;</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            <span class=\"symbol\">&#x27;css</span>-loader&#x27;,</span><br><span class=\"line\">            <span class=\"symbol\">&#x27;sass</span>-loader&#x27;</span><br><span class=\"line\">        ]</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<h3 id=\"5-处理html文件\"><a href=\"#5-处理html文件\" class=\"headerlink\" title=\"5.处理html文件\"></a>5.处理html文件</h3><p>下载html-webpack-plugin<br><code>npm i html-webpack-plugin -D</code></p>\n<figure class=\"highlight haxe\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> HtmlWebpackPlugin = require(<span class=\"string\">&#x27;html-webpack-plugin&#x27;</span>); <span class=\"comment\">//在base配置文件头部引入</span></span><br><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"type\">HtmlWebpackPlugin</span>(&#123;</span><br><span class=\"line\">    template: <span class=\"type\">path</span>.resolve(__dirname, <span class=\"string\">&#x27;../index.html&#x27;</span>)</span><br><span class=\"line\">&#125;),</span><br></pre></td></tr></table></figure>\n<h3 id=\"6-解析模块的配置和配置别名\"><a href=\"#6-解析模块的配置和配置别名\" class=\"headerlink\" title=\"6.解析模块的配置和配置别名\"></a>6.解析模块的配置和配置别名</h3><figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">resolve</span>: &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 能够使用户在引入模块时不带扩展</span></span><br><span class=\"line\">    <span class=\"attribute\">extensions</span>: [<span class=\"string\">&#x27;.js&#x27;</span>, <span class=\"string\">&#x27;.json&#x27;</span>, <span class=\"string\">&#x27;.vue&#x27;</span>, <span class=\"string\">&#x27;css&#x27;</span>],</span><br><span class=\"line\">    <span class=\"comment\">//别名</span></span><br><span class=\"line\">    <span class=\"attribute\">alias</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">&#x27;vue$&#x27;</span>:<span class=\"string\">&#x27;vue/dist/vue.esm.js&#x27;</span>,</span><br><span class=\"line\">        <span class=\"string\">&#x27;@&#x27;</span>: path.resolve(__dirname, <span class=\"string\">&#x27;../src&#x27;</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"7-配置webpack-dev-conf-js文件\"><a href=\"#7-配置webpack-dev-conf-js文件\" class=\"headerlink\" title=\"7.配置webpack.dev.conf.js文件\"></a>7.配置webpack.dev.conf.js文件</h3><p>下载 webpack-merge，用于合并配置<br><code>npm i webpack-merge -D</code></p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> merge = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;webpack-merge&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> baseConfig = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./webpack.base.conf&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;path&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> webpack = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;webpack&#x27;</span>);</span><br><span class=\"line\"><span class=\"built_in\">module</span>.<span class=\"built_in\">exports</span> = merge(baseConfig, &#123;</span><br><span class=\"line\">    devtool: <span class=\"string\">&#x27;inline-source-map&#x27;</span>, <span class=\"comment\">// 压缩方式</span></span><br><span class=\"line\">    mode: <span class=\"string\">&#x27;development&#x27;</span>,</span><br><span class=\"line\">    devServer: &#123;</span><br><span class=\"line\">        hot: <span class=\"literal\">true</span>, <span class=\"comment\">// 热更新</span></span><br><span class=\"line\">        open: <span class=\"literal\">true</span>, <span class=\"comment\">// 自动打开页面</span></span><br><span class=\"line\">        contentBase: path.resolve(__dirname, <span class=\"string\">&#x27;../src&#x27;</span>), <span class=\"comment\">// 告诉服务从哪提供内容</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    plugins: [</span><br><span class=\"line\">        <span class=\"keyword\">new</span> webpack.HotModuleReplacementPlugin(), <span class=\"comment\">//开启热更新</span></span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h3 id=\"8-配置webpack-prod-conf-js\"><a href=\"#8-配置webpack-prod-conf-js\" class=\"headerlink\" title=\"8.配置webpack.prod.conf.js\"></a>8.配置webpack.prod.conf.js</h3><figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> merge = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;webpack-merge&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> baseConfig = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./webpack.base.conf&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;path&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> webpack = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;webpack&#x27;</span>);</span><br><span class=\"line\"><span class=\"built_in\">module</span>.<span class=\"built_in\">exports</span> = merge(baseConfig, &#123;</span><br><span class=\"line\">    devtool: <span class=\"string\">&#x27;source-map&#x27;</span>, <span class=\"comment\">// 压缩方式</span></span><br><span class=\"line\">    mode: <span class=\"string\">&#x27;production&#x27;</span>,</span><br><span class=\"line\">    plugins: [</span><br><span class=\"line\"></span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h3 id=\"9-配置vue-loader\"><a href=\"#9-配置vue-loader\" class=\"headerlink\" title=\"9.配置vue-loader\"></a>9.配置vue-loader</h3><p>首先要下载vue，以及vue相关的模块<br><code>npm i vue vue-loader vue-template-compiler -D</code><br>继续完善webpack.base.cond.js</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var VueLoaderPlugin=require(<span class=\"string\">&#x27;vue-loader/lib/plugin&#x27;</span>);</span><br><span class=\"line\"><span class=\"regexp\">//</span>省略部分代码...</span><br><span class=\"line\">rules:[</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        test: <span class=\"regexp\">/\\.vue$/</span>,</span><br><span class=\"line\">        use: [<span class=\"string\">&#x27;vue-loader&#x27;</span>],</span><br><span class=\"line\">        exclude: <span class=\"regexp\">/node_modules/</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">]</span><br><span class=\"line\"><span class=\"regexp\">//</span>省略部分代码...</span><br><span class=\"line\">plugins:[</span><br><span class=\"line\">    new VueLoaderPlugin(), <span class=\"regexp\">//</span> 它的职责是将你定义过的其它规则复制并应用到 .vue 文件里相应语言的块</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<p>在src目录新建app.vue文件和main.js文件</p>\n<figure class=\"highlight handlebars\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"xml\">//app.vue</span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><span class=\"template-variable\">&#123;&#123;<span class=\"name\">str</span>&#125;&#125;</span><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">  export default &#123;</span></span><br><span class=\"line\"><span class=\"xml\">    name: &#x27;App&#x27;,</span></span><br><span class=\"line\"><span class=\"xml\">    data () &#123;</span></span><br><span class=\"line\"><span class=\"xml\">      return &#123;</span></span><br><span class=\"line\"><span class=\"xml\">        str: &#x27;欢迎来到自定义webpack4+vue构建&#x27;</span></span><br><span class=\"line\"><span class=\"xml\">      &#125;</span></span><br><span class=\"line\"><span class=\"xml\">    &#125;</span></span><br><span class=\"line\"><span class=\"xml\">  &#125;</span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;scss&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">  div &#123;</span></span><br><span class=\"line\"><span class=\"xml\">    color: red;</span></span><br><span class=\"line\"><span class=\"xml\">  &#125;</span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight coffeescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//main.js</span><br><span class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> App <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./App&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">    el: <span class=\"string\">&quot;#app&quot;</span>,</span><br><span class=\"line\">    render: <span class=\"function\"><span class=\"params\">(h)</span> =&gt;</span> h(App)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h3 id=\"10-配置命令\"><a href=\"#10-配置命令\" class=\"headerlink\" title=\"10.配置命令\"></a>10.配置命令</h3><p>打开package.json文件，并配置开发和打包命令</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"regexp\">//</span> 省略代码。。。</span><br><span class=\"line\"><span class=\"string\">&quot;scripts&quot;</span>: &#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;dev&quot;</span>: <span class=\"string\">&quot;webpack-dev-server  --progress --config build/webpack.dev.conf.js&quot;</span>,</span><br><span class=\"line\">   <span class=\"string\">&quot;build&quot;</span>: <span class=\"string\">&quot;webpack --config build/webpack.prod.conf.js&quot;</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><code>npm run dev</code> 就可以启动项目了<br><img src=\"2.png\"></p>\n<h2 id=\"继续优化…\"><a href=\"#继续优化…\" class=\"headerlink\" title=\"继续优化…\"></a>继续优化…</h2><h3 id=\"11-区分环境引入不同地址\"><a href=\"#11-区分环境引入不同地址\" class=\"headerlink\" title=\"11. 区分环境引入不同地址\"></a>11. 区分环境引入不同地址</h3><p>新建config文件夹并新建dev.env.js和prod.env.js</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//dev.env.js 开发环境配置</span></span><br><span class=\"line\"><span class=\"meta\">&#x27;use strict&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">    NODE_ENV: <span class=\"string\">&quot;development&quot;</span>,</span><br><span class=\"line\">    BASE_API: <span class=\"string\">&quot;http://1456&quot;</span>,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//prod.env.js 生产环境配置</span></span><br><span class=\"line\"><span class=\"meta\">&#x27;use strict&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">    NODE_ENV: <span class=\"string\">&quot;production&quot;</span>,    <span class=\"attr\">BASE_API</span>: <span class=\"string\">&quot;http://123.com&quot;</span>,</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"12-优化webpack配置\"><a href=\"#12-优化webpack配置\" class=\"headerlink\" title=\"12.优化webpack配置\"></a>12.优化webpack配置</h3><p>解决更改文件打包时dist文件没有清除，再次打包。<br>下载clean-webpack-plugin，并配置webpack.prod.conf.js文件<br><code>npm i clean-webpack-plugin -D</code></p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"regexp\">//</span>webpack.prod.conf.js</span><br><span class=\"line\"><span class=\"regexp\">//</span> 引入clean-webpack-plugin</span><br><span class=\"line\">var CleanWebpackPlugin = require(<span class=\"string\">&#x27;clean-webpack-plugin&#x27;</span>);</span><br><span class=\"line\"><span class=\"regexp\">//</span> 省略代码。。。。</span><br><span class=\"line\">plugins: [</span><br><span class=\"line\">    new CleanWebPackPlugin();</span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>根据不同环境提取css<br>下载mini-css-extract-plugin，并配置webpack.prod.conf.js文件<br><code>npm i mini-css-extract-plugin -D</code></p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//webpack.prod.conf.js</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> MiniCssExtractPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;mini-css-extract-plugin&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">module</span>: &#123;</span><br><span class=\"line\">    rules: [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            test: <span class=\"regexp\">/\\.(c|sc|sa)ss$/</span>,</span><br><span class=\"line\">            use: [</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                loader: MiniCssExtractPlugin.loader,</span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">                <span class=\"string\">&#x27;css-loader&#x27;</span>,</span><br><span class=\"line\">                <span class=\"string\">&#x27;sass-loader&#x27;</span></span><br><span class=\"line\">            ]</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">        test: <span class=\"regexp\">/\\.less$/</span>,</span><br><span class=\"line\">        use: [</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">            loader: MiniCssExtractPlugin.loader,</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            <span class=\"string\">&#x27;css-loader&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;less-loader&#x27;</span></span><br><span class=\"line\">            ]</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">plugins: [</span><br><span class=\"line\">    <span class=\"keyword\">new</span> MiniCssExtractPlugin(&#123;</span><br><span class=\"line\">        filename: <span class=\"string\">&#x27;[name].[hash].css&#x27;</span></span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><font color=\"red\">webpack.base.conf.js中删除使用vue-style-loader的代码，并在webpack.dev.conf.js中定义</font></p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">module</span>: &#123;</span><br><span class=\"line\">    rules: [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        test: <span class=\"regexp\">/\\.(c|sc|sa)ss$/</span>,</span><br><span class=\"line\">        use: [</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            loader: <span class=\"string\">&#x27;vue-style-loader&#x27;</span>,</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          <span class=\"string\">&#x27;css-loader&#x27;</span>,</span><br><span class=\"line\">          <span class=\"string\">&#x27;sass-loader&#x27;</span></span><br><span class=\"line\">        ]</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        test: <span class=\"regexp\">/\\.less$/</span>,</span><br><span class=\"line\">        use: [</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            loader: <span class=\"string\">&#x27;vue-style-loader&#x27;</span>,</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          <span class=\"string\">&#x27;css-loader&#x27;</span>,</span><br><span class=\"line\">          <span class=\"string\">&#x27;less-loader&#x27;</span></span><br><span class=\"line\">         ]</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"><span class=\"comment\">//以上这段webpack.base.conf.js中的代码移到webpack.dev.conf.js中</span></span><br></pre></td></tr></table></figure>\n<p><a href=\"https://link.juejin.im/?target=https://vue-loader.vuejs.org/zh/guide/extract-css.html%23webpack-4\">这个配置vue-loader中有提到</a></p>\n<h4 id=\"第三方库单独打包\"><a href=\"#第三方库单独打包\" class=\"headerlink\" title=\"第三方库单独打包\"></a>第三方库单独打包</h4><p>把依赖的第三方库抽取出来单独打包，加快打包进度<br>下载autodll-webpack-plugin<br><code>npm i autodll-webpack-plugin -D</code></p>\n<p>在webpack.base.conf.js中配置</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//webpack.base.conf.js</span></span><br><span class=\"line\"><span class=\"comment\">//省略部分代码</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> AutodllWebpackpackPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;autodll-webpack-plugin&#x27;</span>);</span><br><span class=\"line\">plugins: [</span><br><span class=\"line\">    <span class=\"keyword\">new</span> AutodllWebpackpackPlugin (&#123;</span><br><span class=\"line\">        inject: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"keyword\">debugger</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        filename: <span class=\"string\">&#x27;[name].js&#x27;</span>,</span><br><span class=\"line\">        path: <span class=\"string\">&#x27;./dll&#x27;</span>,</span><br><span class=\"line\">        entry: &#123;</span><br><span class=\"line\">            vendor: [<span class=\"string\">&#x27;vue&#x27;</span>]</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>tips: inject 为 true，插件会自动把打包出来的第三方库文件插入到 HTML。filename 是打包后文件的名称。path 是打包后的路径。entry 是入口，vendor 是你指定的名称，数组内容就是要打包的第三方库的名称，不要写全路径，Webpack 会自动去 node_modules 中找到的。</p>\n<h4 id=\"提取公共代码\"><a href=\"#提取公共代码\" class=\"headerlink\" title=\"提取公共代码\"></a>提取公共代码</h4><p>在 webpack.base.conf.js的 plugins 属性中添加如下插件对象<br><code>new webpack.optimize.SplitChunksPlugin()</code></p>\n<h4 id=\"打包时压缩js和css\"><a href=\"#打包时压缩js和css\" class=\"headerlink\" title=\"打包时压缩js和css\"></a>打包时压缩js和css</h4><p>下载optimize-css-assets-webpack-plugin和uglifyjs-webpack-plugin</p>\n<p><code>npm i uglifyjs-webpack-plugin uglifyjs-webpack-plugin optimize-css-assets-webpack-plugin -D</code></p>\n<p>在webpack.prod.conf.js中分别引入optimize-css-assets-webpack-plugin和uglifyjs-webpack-plugin并增加optimization</p>\n<figure class=\"highlight lasso\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//webpack.prod.conf.js</span></span><br><span class=\"line\"><span class=\"built_in\">var</span> OptimizeCSSAssetsPlugin = <span class=\"keyword\">require</span>(<span class=\"string\">&quot;optimize-css-assets-webpack-plugin&quot;</span>);</span><br><span class=\"line\"><span class=\"built_in\">var</span> UglifyJsPlugin = <span class=\"keyword\">require</span>(<span class=\"string\">&quot;uglifyjs-webpack-plugin&quot;</span>);</span><br><span class=\"line\"><span class=\"comment\">// 省略部分代码</span></span><br><span class=\"line\">optimization: &#123;</span><br><span class=\"line\">        minimizer: <span class=\"meta\">[</span></span><br><span class=\"line\">        <span class=\"comment\">// 压缩JS</span></span><br><span class=\"line\">        <span class=\"literal\">new</span> UglifyJsPlugin(&#123;</span><br><span class=\"line\">        uglifyOptions: &#123;</span><br><span class=\"line\">            compress: &#123;</span><br><span class=\"line\">            warnings: <span class=\"literal\">false</span>, <span class=\"comment\">// 去除警告</span></span><br><span class=\"line\">            drop_debugger: <span class=\"literal\">true</span>, <span class=\"comment\">// 去除debugger</span></span><br><span class=\"line\">            drop_console: <span class=\"literal\">true</span> <span class=\"comment\">// 去除console.log</span></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"keyword\">cache</span>: <span class=\"literal\">true</span>, <span class=\"comment\">// 开启缓存</span></span><br><span class=\"line\">        parallel: <span class=\"literal\">true</span>, <span class=\"comment\">// 平行压缩</span></span><br><span class=\"line\">        sourceMap: <span class=\"literal\">false</span> <span class=\"comment\">// set to true if you want JS source maps</span></span><br><span class=\"line\">        &#125;),</span><br><span class=\"line\">        <span class=\"comment\">// 压缩css</span></span><br><span class=\"line\">        <span class=\"literal\">new</span> OptimizeCSSAssetsPlugin(&#123;&#125;)</span><br><span class=\"line\">    <span class=\"meta\">]</span></span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h4 id=\"css自动加前缀\"><a href=\"#css自动加前缀\" class=\"headerlink\" title=\"css自动加前缀\"></a>css自动加前缀</h4><p>下载postcss-loader 和autoprefixer<br><code>npm i postcss-loader autoprefixer -D</code><br>分别在webpack.dev.conf.js和webpack.prod.conf.js的use中添加postcss-loader<br>在module中的rules中的use中追加：</p>\n<figure class=\"highlight actionscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">use</span>: [</span><br><span class=\"line\">    <span class=\"string\">&#x27;postcss-loader&#x27;</span></span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<p>在项目下增加postcss.config.js</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 配置cssz加前缀</span></span><br><span class=\"line\"><span class=\"built_in\">module</span>.<span class=\"built_in\">exports</span> = &#123;</span><br><span class=\"line\">  plugins: [</span><br><span class=\"line\">    <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;autoprefixer&#x27;</span>)</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>差不多就这样了,对了，还有一点就是打包出来的html里面引用<code>/dll/vendor.js</code>需要手动改成<code>./dll/vendor.js</code>这个下次也要优化下，我记得vue-cli 2版本中有一个地方是可以配置的</p>\n","site":{"data":{}},"excerpt":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>vue早就有成熟的vue-cli工具了，现在是vue-cli 3.0了，但是觉得很有必要自己去实现一下，有助于自己技术的提高，也能更好地去了解webpack。本人是webpack菜鸟，有些资料是网上学习整理过来的。</p>","more":"<h3 id=\"1-新建目录文件夹\"><a href=\"#1-新建目录文件夹\" class=\"headerlink\" title=\"1.新建目录文件夹\"></a>1.新建目录文件夹</h3><p>第一步当然是新建工程目录了，具体怎么建就随便了，比如我建立webpackVue这个目录</p>\n<h3 id=\"2-新建package-json文件\"><a href=\"#2-新建package-json文件\" class=\"headerlink\" title=\"2.新建package.json文件\"></a>2.新建package.json文件</h3><p>package.json是nodejs项目必需的配置文件。使用<code>npm init</code>,按照提示一步步填写项目名称，作者等信息</p>\n<h3 id=\"3-webpack配置\"><a href=\"#3-webpack配置\" class=\"headerlink\" title=\"3.webpack配置\"></a>3.webpack配置</h3><p>新建build文件夹<br>build目录下新建webpack.base.conf.js,webpack.dev.conf.js,webpack.prod.conf.js文件，webpack.base.conf.js是公共基础配置，webpack.dev.conf.js是生产环境配置文件，webpack.prod.conf.js是生产环境配置。<br>创建一个src目录，用来存放我们的项目源文件，然后创建main.js文件，创建一个index.html</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>webpack4搭建vue<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;app&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"1.jpg\"> 目录结构是这样的</p>\n<p>下载webpack webpack-dev-server webpack-cli (这里webpack是局部安装)<br><code>npm i webpack webpack-dev-server webpack-cli -D</code><br>打开webpack.base.config.js，逐步添加配置</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;path&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> webpack = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;webpack&#x27;</span>);</span><br><span class=\"line\"><span class=\"built_in\">module</span>.<span class=\"built_in\">exports</span> =&#123;</span><br><span class=\"line\">    <span class=\"comment\">//入口文件</span></span><br><span class=\"line\">    entry:&#123;</span><br><span class=\"line\">        main: path.resolve(__dirname, <span class=\"string\">&#x27;../src/main.js&#x27;</span>)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">//输出目录</span></span><br><span class=\"line\">    output:&#123;</span><br><span class=\"line\">        path: path.resolve(__dirname, <span class=\"string\">&#x27;../dist&#x27;</span>),</span><br><span class=\"line\">        filename: <span class=\"string\">&#x27;[name].[hash].js&#x27;</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"keyword\">module</span>:&#123;</span><br><span class=\"line\">        rules:[]</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    plugins:[</span><br><span class=\"line\">        <span class=\"keyword\">new</span> webpack.HashedModuleIdsPlugin(), <span class=\"comment\">// 解决vender后面的hash每次都改变</span></span><br><span class=\"line\">    ],</span><br><span class=\"line\">    resolve:&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-配置loader\"><a href=\"#4-配置loader\" class=\"headerlink\" title=\"4.配置loader\"></a>4.配置loader</h3><p>配置babel编译代码：下载babel-loader，babel-core，babel-preset-dev。<br><code>npm i babel-loader babel-core babel-preset-env -D</code></p>\n<p>babel-preset-env 帮助我们配置 babel。我们只需要告诉它我们要兼容的情况（目标运行环境），它就会自动把代码转换为兼容对应环境的代码。<br>babel-core是作为babel的核心存在，babel的核心api都在这个模块里面<br>这里有个注意的地方，就是babel的版本的问题，运行的时候根据提示安装合适的版本就好了，这里不记得是babel的哪个工具需要7的版本了。<br>在webpack.base.conf.js文件中增加babel配置</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rules:[</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        test: <span class=\"regexp\">/\\.js$/</span>, <span class=\"regexp\">//</span>匹配.js结尾的文件</span><br><span class=\"line\">        use: [<span class=\"string\">&#x27;babel-loader&#x27;</span>],</span><br><span class=\"line\">        exclude:<span class=\"regexp\">/node_modules/</span> <span class=\"regexp\">//</span>排除node_modules里面的js</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<p>新建.babelrc文件，.babelrc是babel全局配置文件</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">&quot;presets&quot;</span>:[</span><br><span class=\"line\">        [<span class=\"string\">&quot;env&quot;</span>,&#123;</span><br><span class=\"line\">            <span class=\"attr\">&quot;targets&quot;</span>: &#123;    </span><br><span class=\"line\">                <span class=\"attr\">&quot;browsers&quot;</span>: [<span class=\"string\">&quot;&gt; 1%&quot;</span>, <span class=\"string\">&quot;last 2 versions&quot;</span>, <span class=\"string\">&quot;not ie &lt;=8&quot;</span>],</span><br><span class=\"line\">                <span class=\"comment\">//&quot;chrome&quot;: 52,</span></span><br><span class=\"line\">                <span class=\"comment\">//&quot;browsers&quot;: [&quot;last 2 versions&quot;, &quot;safari 7&quot;]</span></span><br><span class=\"line\">            &#125;,       </span><br><span class=\"line\">            <span class=\"attr\">&quot;modules&quot;</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">        &#125;]</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"下载file-loader\"><a href=\"#下载file-loader\" class=\"headerlink\" title=\"下载file-loader\"></a>下载file-loader</h4><p><code>npm i file-loader -D</code><br>继续追加配置</p>\n<figure class=\"highlight coq\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rules:[</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        test: /\\.(jpg|<span class=\"type\">png</span>|<span class=\"type\">svg</span>|<span class=\"type\">gif</span>)$/,</span><br><span class=\"line\">        use:[&#x27;file-loader&#x27;]</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        test:/\\.(woff|<span class=\"type\">woff2</span>|<span class=\"type\">eot</span>|<span class=\"type\">ttf</span>|<span class=\"type\">otf</span>)$/</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<h4 id=\"下载css-loader，vue-style-loader，sass-loader，-node-sass，less，less-loader并配置css，scss，sass-less\"><a href=\"#下载css-loader，vue-style-loader，sass-loader，-node-sass，less，less-loader并配置css，scss，sass-less\" class=\"headerlink\" title=\"下载css-loader，vue-style-loader，sass-loader， node-sass，less，less-loader并配置css，scss，sass,less\"></a>下载css-loader，vue-style-loader，sass-loader， node-sass，less，less-loader并配置css，scss，sass,less</h4><p><code>npm i css-loader vue-style-loader sass-loader node-sass less-loader less -D</code></p>\n<figure class=\"highlight sml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rules:[</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        test:/\\.(sa|sc|c)ss$/,</span><br><span class=\"line\">        use:[</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                loader: <span class=\"symbol\">&#x27;vue</span>-style-loader&#x27;</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            <span class=\"symbol\">&#x27;css</span>-loader&#x27;,</span><br><span class=\"line\">            <span class=\"symbol\">&#x27;sass</span>-loader&#x27;</span><br><span class=\"line\">        ]</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        test:/\\.less$/,</span><br><span class=\"line\">        use:[</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                loader: <span class=\"symbol\">&#x27;vue</span>-style-loader&#x27;</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            <span class=\"symbol\">&#x27;css</span>-loader&#x27;,</span><br><span class=\"line\">            <span class=\"symbol\">&#x27;sass</span>-loader&#x27;</span><br><span class=\"line\">        ]</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<h3 id=\"5-处理html文件\"><a href=\"#5-处理html文件\" class=\"headerlink\" title=\"5.处理html文件\"></a>5.处理html文件</h3><p>下载html-webpack-plugin<br><code>npm i html-webpack-plugin -D</code></p>\n<figure class=\"highlight haxe\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> HtmlWebpackPlugin = require(<span class=\"string\">&#x27;html-webpack-plugin&#x27;</span>); <span class=\"comment\">//在base配置文件头部引入</span></span><br><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"type\">HtmlWebpackPlugin</span>(&#123;</span><br><span class=\"line\">    template: <span class=\"type\">path</span>.resolve(__dirname, <span class=\"string\">&#x27;../index.html&#x27;</span>)</span><br><span class=\"line\">&#125;),</span><br></pre></td></tr></table></figure>\n<h3 id=\"6-解析模块的配置和配置别名\"><a href=\"#6-解析模块的配置和配置别名\" class=\"headerlink\" title=\"6.解析模块的配置和配置别名\"></a>6.解析模块的配置和配置别名</h3><figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">resolve</span>: &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 能够使用户在引入模块时不带扩展</span></span><br><span class=\"line\">    <span class=\"attribute\">extensions</span>: [<span class=\"string\">&#x27;.js&#x27;</span>, <span class=\"string\">&#x27;.json&#x27;</span>, <span class=\"string\">&#x27;.vue&#x27;</span>, <span class=\"string\">&#x27;css&#x27;</span>],</span><br><span class=\"line\">    <span class=\"comment\">//别名</span></span><br><span class=\"line\">    <span class=\"attribute\">alias</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">&#x27;vue$&#x27;</span>:<span class=\"string\">&#x27;vue/dist/vue.esm.js&#x27;</span>,</span><br><span class=\"line\">        <span class=\"string\">&#x27;@&#x27;</span>: path.resolve(__dirname, <span class=\"string\">&#x27;../src&#x27;</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"7-配置webpack-dev-conf-js文件\"><a href=\"#7-配置webpack-dev-conf-js文件\" class=\"headerlink\" title=\"7.配置webpack.dev.conf.js文件\"></a>7.配置webpack.dev.conf.js文件</h3><p>下载 webpack-merge，用于合并配置<br><code>npm i webpack-merge -D</code></p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> merge = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;webpack-merge&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> baseConfig = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./webpack.base.conf&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;path&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> webpack = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;webpack&#x27;</span>);</span><br><span class=\"line\"><span class=\"built_in\">module</span>.<span class=\"built_in\">exports</span> = merge(baseConfig, &#123;</span><br><span class=\"line\">    devtool: <span class=\"string\">&#x27;inline-source-map&#x27;</span>, <span class=\"comment\">// 压缩方式</span></span><br><span class=\"line\">    mode: <span class=\"string\">&#x27;development&#x27;</span>,</span><br><span class=\"line\">    devServer: &#123;</span><br><span class=\"line\">        hot: <span class=\"literal\">true</span>, <span class=\"comment\">// 热更新</span></span><br><span class=\"line\">        open: <span class=\"literal\">true</span>, <span class=\"comment\">// 自动打开页面</span></span><br><span class=\"line\">        contentBase: path.resolve(__dirname, <span class=\"string\">&#x27;../src&#x27;</span>), <span class=\"comment\">// 告诉服务从哪提供内容</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    plugins: [</span><br><span class=\"line\">        <span class=\"keyword\">new</span> webpack.HotModuleReplacementPlugin(), <span class=\"comment\">//开启热更新</span></span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h3 id=\"8-配置webpack-prod-conf-js\"><a href=\"#8-配置webpack-prod-conf-js\" class=\"headerlink\" title=\"8.配置webpack.prod.conf.js\"></a>8.配置webpack.prod.conf.js</h3><figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> merge = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;webpack-merge&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> baseConfig = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./webpack.base.conf&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;path&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> webpack = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;webpack&#x27;</span>);</span><br><span class=\"line\"><span class=\"built_in\">module</span>.<span class=\"built_in\">exports</span> = merge(baseConfig, &#123;</span><br><span class=\"line\">    devtool: <span class=\"string\">&#x27;source-map&#x27;</span>, <span class=\"comment\">// 压缩方式</span></span><br><span class=\"line\">    mode: <span class=\"string\">&#x27;production&#x27;</span>,</span><br><span class=\"line\">    plugins: [</span><br><span class=\"line\"></span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h3 id=\"9-配置vue-loader\"><a href=\"#9-配置vue-loader\" class=\"headerlink\" title=\"9.配置vue-loader\"></a>9.配置vue-loader</h3><p>首先要下载vue，以及vue相关的模块<br><code>npm i vue vue-loader vue-template-compiler -D</code><br>继续完善webpack.base.cond.js</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var VueLoaderPlugin=require(<span class=\"string\">&#x27;vue-loader/lib/plugin&#x27;</span>);</span><br><span class=\"line\"><span class=\"regexp\">//</span>省略部分代码...</span><br><span class=\"line\">rules:[</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        test: <span class=\"regexp\">/\\.vue$/</span>,</span><br><span class=\"line\">        use: [<span class=\"string\">&#x27;vue-loader&#x27;</span>],</span><br><span class=\"line\">        exclude: <span class=\"regexp\">/node_modules/</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">]</span><br><span class=\"line\"><span class=\"regexp\">//</span>省略部分代码...</span><br><span class=\"line\">plugins:[</span><br><span class=\"line\">    new VueLoaderPlugin(), <span class=\"regexp\">//</span> 它的职责是将你定义过的其它规则复制并应用到 .vue 文件里相应语言的块</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<p>在src目录新建app.vue文件和main.js文件</p>\n<figure class=\"highlight handlebars\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"xml\">//app.vue</span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><span class=\"template-variable\">&#123;&#123;<span class=\"name\">str</span>&#125;&#125;</span><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">  export default &#123;</span></span><br><span class=\"line\"><span class=\"xml\">    name: &#x27;App&#x27;,</span></span><br><span class=\"line\"><span class=\"xml\">    data () &#123;</span></span><br><span class=\"line\"><span class=\"xml\">      return &#123;</span></span><br><span class=\"line\"><span class=\"xml\">        str: &#x27;欢迎来到自定义webpack4+vue构建&#x27;</span></span><br><span class=\"line\"><span class=\"xml\">      &#125;</span></span><br><span class=\"line\"><span class=\"xml\">    &#125;</span></span><br><span class=\"line\"><span class=\"xml\">  &#125;</span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;scss&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">  div &#123;</span></span><br><span class=\"line\"><span class=\"xml\">    color: red;</span></span><br><span class=\"line\"><span class=\"xml\">  &#125;</span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight coffeescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//main.js</span><br><span class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> App <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./App&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">    el: <span class=\"string\">&quot;#app&quot;</span>,</span><br><span class=\"line\">    render: <span class=\"function\"><span class=\"params\">(h)</span> =&gt;</span> h(App)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h3 id=\"10-配置命令\"><a href=\"#10-配置命令\" class=\"headerlink\" title=\"10.配置命令\"></a>10.配置命令</h3><p>打开package.json文件，并配置开发和打包命令</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"regexp\">//</span> 省略代码。。。</span><br><span class=\"line\"><span class=\"string\">&quot;scripts&quot;</span>: &#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;dev&quot;</span>: <span class=\"string\">&quot;webpack-dev-server  --progress --config build/webpack.dev.conf.js&quot;</span>,</span><br><span class=\"line\">   <span class=\"string\">&quot;build&quot;</span>: <span class=\"string\">&quot;webpack --config build/webpack.prod.conf.js&quot;</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><code>npm run dev</code> 就可以启动项目了<br><img src=\"2.png\"></p>\n<h2 id=\"继续优化…\"><a href=\"#继续优化…\" class=\"headerlink\" title=\"继续优化…\"></a>继续优化…</h2><h3 id=\"11-区分环境引入不同地址\"><a href=\"#11-区分环境引入不同地址\" class=\"headerlink\" title=\"11. 区分环境引入不同地址\"></a>11. 区分环境引入不同地址</h3><p>新建config文件夹并新建dev.env.js和prod.env.js</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//dev.env.js 开发环境配置</span></span><br><span class=\"line\"><span class=\"meta\">&#x27;use strict&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">    NODE_ENV: <span class=\"string\">&quot;development&quot;</span>,</span><br><span class=\"line\">    BASE_API: <span class=\"string\">&quot;http://1456&quot;</span>,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//prod.env.js 生产环境配置</span></span><br><span class=\"line\"><span class=\"meta\">&#x27;use strict&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">    NODE_ENV: <span class=\"string\">&quot;production&quot;</span>,    <span class=\"attr\">BASE_API</span>: <span class=\"string\">&quot;http://123.com&quot;</span>,</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"12-优化webpack配置\"><a href=\"#12-优化webpack配置\" class=\"headerlink\" title=\"12.优化webpack配置\"></a>12.优化webpack配置</h3><p>解决更改文件打包时dist文件没有清除，再次打包。<br>下载clean-webpack-plugin，并配置webpack.prod.conf.js文件<br><code>npm i clean-webpack-plugin -D</code></p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"regexp\">//</span>webpack.prod.conf.js</span><br><span class=\"line\"><span class=\"regexp\">//</span> 引入clean-webpack-plugin</span><br><span class=\"line\">var CleanWebpackPlugin = require(<span class=\"string\">&#x27;clean-webpack-plugin&#x27;</span>);</span><br><span class=\"line\"><span class=\"regexp\">//</span> 省略代码。。。。</span><br><span class=\"line\">plugins: [</span><br><span class=\"line\">    new CleanWebPackPlugin();</span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>根据不同环境提取css<br>下载mini-css-extract-plugin，并配置webpack.prod.conf.js文件<br><code>npm i mini-css-extract-plugin -D</code></p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//webpack.prod.conf.js</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> MiniCssExtractPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;mini-css-extract-plugin&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">module</span>: &#123;</span><br><span class=\"line\">    rules: [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            test: <span class=\"regexp\">/\\.(c|sc|sa)ss$/</span>,</span><br><span class=\"line\">            use: [</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                loader: MiniCssExtractPlugin.loader,</span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">                <span class=\"string\">&#x27;css-loader&#x27;</span>,</span><br><span class=\"line\">                <span class=\"string\">&#x27;sass-loader&#x27;</span></span><br><span class=\"line\">            ]</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">        test: <span class=\"regexp\">/\\.less$/</span>,</span><br><span class=\"line\">        use: [</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">            loader: MiniCssExtractPlugin.loader,</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            <span class=\"string\">&#x27;css-loader&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;less-loader&#x27;</span></span><br><span class=\"line\">            ]</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">plugins: [</span><br><span class=\"line\">    <span class=\"keyword\">new</span> MiniCssExtractPlugin(&#123;</span><br><span class=\"line\">        filename: <span class=\"string\">&#x27;[name].[hash].css&#x27;</span></span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><font color=\"red\">webpack.base.conf.js中删除使用vue-style-loader的代码，并在webpack.dev.conf.js中定义</font></p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">module</span>: &#123;</span><br><span class=\"line\">    rules: [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        test: <span class=\"regexp\">/\\.(c|sc|sa)ss$/</span>,</span><br><span class=\"line\">        use: [</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            loader: <span class=\"string\">&#x27;vue-style-loader&#x27;</span>,</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          <span class=\"string\">&#x27;css-loader&#x27;</span>,</span><br><span class=\"line\">          <span class=\"string\">&#x27;sass-loader&#x27;</span></span><br><span class=\"line\">        ]</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        test: <span class=\"regexp\">/\\.less$/</span>,</span><br><span class=\"line\">        use: [</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            loader: <span class=\"string\">&#x27;vue-style-loader&#x27;</span>,</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          <span class=\"string\">&#x27;css-loader&#x27;</span>,</span><br><span class=\"line\">          <span class=\"string\">&#x27;less-loader&#x27;</span></span><br><span class=\"line\">         ]</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"><span class=\"comment\">//以上这段webpack.base.conf.js中的代码移到webpack.dev.conf.js中</span></span><br></pre></td></tr></table></figure>\n<p><a href=\"https://link.juejin.im/?target=https://vue-loader.vuejs.org/zh/guide/extract-css.html%23webpack-4\">这个配置vue-loader中有提到</a></p>\n<h4 id=\"第三方库单独打包\"><a href=\"#第三方库单独打包\" class=\"headerlink\" title=\"第三方库单独打包\"></a>第三方库单独打包</h4><p>把依赖的第三方库抽取出来单独打包，加快打包进度<br>下载autodll-webpack-plugin<br><code>npm i autodll-webpack-plugin -D</code></p>\n<p>在webpack.base.conf.js中配置</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//webpack.base.conf.js</span></span><br><span class=\"line\"><span class=\"comment\">//省略部分代码</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> AutodllWebpackpackPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;autodll-webpack-plugin&#x27;</span>);</span><br><span class=\"line\">plugins: [</span><br><span class=\"line\">    <span class=\"keyword\">new</span> AutodllWebpackpackPlugin (&#123;</span><br><span class=\"line\">        inject: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"keyword\">debugger</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        filename: <span class=\"string\">&#x27;[name].js&#x27;</span>,</span><br><span class=\"line\">        path: <span class=\"string\">&#x27;./dll&#x27;</span>,</span><br><span class=\"line\">        entry: &#123;</span><br><span class=\"line\">            vendor: [<span class=\"string\">&#x27;vue&#x27;</span>]</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>tips: inject 为 true，插件会自动把打包出来的第三方库文件插入到 HTML。filename 是打包后文件的名称。path 是打包后的路径。entry 是入口，vendor 是你指定的名称，数组内容就是要打包的第三方库的名称，不要写全路径，Webpack 会自动去 node_modules 中找到的。</p>\n<h4 id=\"提取公共代码\"><a href=\"#提取公共代码\" class=\"headerlink\" title=\"提取公共代码\"></a>提取公共代码</h4><p>在 webpack.base.conf.js的 plugins 属性中添加如下插件对象<br><code>new webpack.optimize.SplitChunksPlugin()</code></p>\n<h4 id=\"打包时压缩js和css\"><a href=\"#打包时压缩js和css\" class=\"headerlink\" title=\"打包时压缩js和css\"></a>打包时压缩js和css</h4><p>下载optimize-css-assets-webpack-plugin和uglifyjs-webpack-plugin</p>\n<p><code>npm i uglifyjs-webpack-plugin uglifyjs-webpack-plugin optimize-css-assets-webpack-plugin -D</code></p>\n<p>在webpack.prod.conf.js中分别引入optimize-css-assets-webpack-plugin和uglifyjs-webpack-plugin并增加optimization</p>\n<figure class=\"highlight lasso\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//webpack.prod.conf.js</span></span><br><span class=\"line\"><span class=\"built_in\">var</span> OptimizeCSSAssetsPlugin = <span class=\"keyword\">require</span>(<span class=\"string\">&quot;optimize-css-assets-webpack-plugin&quot;</span>);</span><br><span class=\"line\"><span class=\"built_in\">var</span> UglifyJsPlugin = <span class=\"keyword\">require</span>(<span class=\"string\">&quot;uglifyjs-webpack-plugin&quot;</span>);</span><br><span class=\"line\"><span class=\"comment\">// 省略部分代码</span></span><br><span class=\"line\">optimization: &#123;</span><br><span class=\"line\">        minimizer: <span class=\"meta\">[</span></span><br><span class=\"line\">        <span class=\"comment\">// 压缩JS</span></span><br><span class=\"line\">        <span class=\"literal\">new</span> UglifyJsPlugin(&#123;</span><br><span class=\"line\">        uglifyOptions: &#123;</span><br><span class=\"line\">            compress: &#123;</span><br><span class=\"line\">            warnings: <span class=\"literal\">false</span>, <span class=\"comment\">// 去除警告</span></span><br><span class=\"line\">            drop_debugger: <span class=\"literal\">true</span>, <span class=\"comment\">// 去除debugger</span></span><br><span class=\"line\">            drop_console: <span class=\"literal\">true</span> <span class=\"comment\">// 去除console.log</span></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"keyword\">cache</span>: <span class=\"literal\">true</span>, <span class=\"comment\">// 开启缓存</span></span><br><span class=\"line\">        parallel: <span class=\"literal\">true</span>, <span class=\"comment\">// 平行压缩</span></span><br><span class=\"line\">        sourceMap: <span class=\"literal\">false</span> <span class=\"comment\">// set to true if you want JS source maps</span></span><br><span class=\"line\">        &#125;),</span><br><span class=\"line\">        <span class=\"comment\">// 压缩css</span></span><br><span class=\"line\">        <span class=\"literal\">new</span> OptimizeCSSAssetsPlugin(&#123;&#125;)</span><br><span class=\"line\">    <span class=\"meta\">]</span></span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h4 id=\"css自动加前缀\"><a href=\"#css自动加前缀\" class=\"headerlink\" title=\"css自动加前缀\"></a>css自动加前缀</h4><p>下载postcss-loader 和autoprefixer<br><code>npm i postcss-loader autoprefixer -D</code><br>分别在webpack.dev.conf.js和webpack.prod.conf.js的use中添加postcss-loader<br>在module中的rules中的use中追加：</p>\n<figure class=\"highlight actionscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">use</span>: [</span><br><span class=\"line\">    <span class=\"string\">&#x27;postcss-loader&#x27;</span></span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<p>在项目下增加postcss.config.js</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 配置cssz加前缀</span></span><br><span class=\"line\"><span class=\"built_in\">module</span>.<span class=\"built_in\">exports</span> = &#123;</span><br><span class=\"line\">  plugins: [</span><br><span class=\"line\">    <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;autoprefixer&#x27;</span>)</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>差不多就这样了,对了，还有一点就是打包出来的html里面引用<code>/dll/vendor.js</code>需要手动改成<code>./dll/vendor.js</code>这个下次也要优化下，我记得vue-cli 2版本中有一个地方是可以配置的</p>"},{"title":"ubantu apt-get install方式安装mysql","abbrlink":13666,"date":"2019-05-15T06:41:02.000Z","_content":"\n# 在ubantu上安装mysql并不难，主要是记录下安装数据库时居然不像windows那样选择安装位置，设置用户和密码等\n\n1. `sudo apt-get install mysql-server` 安装mysql核心服务\n2. `sudo apt-get install mysql-server` 安装mysql客户端\n<!-- more -->\n\n安装完成后我们需要去mysql目录查看用户名和密码\n`sudo vim /etc/mysql/debain.cnf`\n```\n[client]\nhost     = localhost\nuser     = debian-sys-maint\npassword = wrMqzOiffsyheEe1\nsocket   = /var/run/mysqld/mysqld.sock\n[mysql_upgrade]\nhost     = localhost\nuser     = debian-sys-maint\npassword = wrMqzOiffsyheEe1\nsocket   = /var/run/mysqld/mysqld.sock\n\n```\n我们用debian-sys-maint用户来登陆\n`mysql -u debian-sys-maint -p`\n输入密码：`wrMqzOiffsyheEe1`\n然后修改密码：\n```\nupdate mysql.user set authentication_string=PASSWORD('root'), plugin='mysql_native_password' where user='root';\n```\n<font color=\"red\">\n注意，authentication_string是密码 ，plugin是验证方式，这两个一定要同时改。从mysql5.7开始root的默认验证方式是auth_socket\n</font>\n可以输入 ` select user, plugin from mysql.user;` 查看到以下内容：\n```\n+------------------+-----------------------+\n| user             | plugin                |\n+------------------+-----------------------+\n| root             | auth_socket           |\n| mysql.session    | mysql_native_password |\n| mysql.sys        | mysql_native_password |\n| debian-sys-maint | mysql_native_password |\n+------------------+-----------------------+\n4 rows in set (0.02 sec)\n\n```\n修改后的：\n```\n+------------------+-----------------------+\n| user             | plugin                |\n+------------------+-----------------------+\n| root             | mysql_native_password |\n| mysql.session    | mysql_native_password |\n| mysql.sys        | mysql_native_password |\n| debian-sys-maint | mysql_native_password |\n+------------------+-----------------------+\n4 rows in set (0.02 sec)\n```\nmysql_native_password这种系统root用户登录时才可以登录数据库的root用户。所以需要把auth_socket改为mysql_native_password，才可以不受系统用户限制。\n\n然后`exit;`推出mysql。`sudo service mysql restart` 重启mysql服务\n\n","source":"_posts/ubantu-apt-get-install方式安装mysql.md","raw":"---\ntitle: ubantu apt-get install方式安装mysql\nabbrlink: 13666\ndate: 2019-05-15 14:41:02\ntags: linux\ncategories: linux\n---\n\n# 在ubantu上安装mysql并不难，主要是记录下安装数据库时居然不像windows那样选择安装位置，设置用户和密码等\n\n1. `sudo apt-get install mysql-server` 安装mysql核心服务\n2. `sudo apt-get install mysql-server` 安装mysql客户端\n<!-- more -->\n\n安装完成后我们需要去mysql目录查看用户名和密码\n`sudo vim /etc/mysql/debain.cnf`\n```\n[client]\nhost     = localhost\nuser     = debian-sys-maint\npassword = wrMqzOiffsyheEe1\nsocket   = /var/run/mysqld/mysqld.sock\n[mysql_upgrade]\nhost     = localhost\nuser     = debian-sys-maint\npassword = wrMqzOiffsyheEe1\nsocket   = /var/run/mysqld/mysqld.sock\n\n```\n我们用debian-sys-maint用户来登陆\n`mysql -u debian-sys-maint -p`\n输入密码：`wrMqzOiffsyheEe1`\n然后修改密码：\n```\nupdate mysql.user set authentication_string=PASSWORD('root'), plugin='mysql_native_password' where user='root';\n```\n<font color=\"red\">\n注意，authentication_string是密码 ，plugin是验证方式，这两个一定要同时改。从mysql5.7开始root的默认验证方式是auth_socket\n</font>\n可以输入 ` select user, plugin from mysql.user;` 查看到以下内容：\n```\n+------------------+-----------------------+\n| user             | plugin                |\n+------------------+-----------------------+\n| root             | auth_socket           |\n| mysql.session    | mysql_native_password |\n| mysql.sys        | mysql_native_password |\n| debian-sys-maint | mysql_native_password |\n+------------------+-----------------------+\n4 rows in set (0.02 sec)\n\n```\n修改后的：\n```\n+------------------+-----------------------+\n| user             | plugin                |\n+------------------+-----------------------+\n| root             | mysql_native_password |\n| mysql.session    | mysql_native_password |\n| mysql.sys        | mysql_native_password |\n| debian-sys-maint | mysql_native_password |\n+------------------+-----------------------+\n4 rows in set (0.02 sec)\n```\nmysql_native_password这种系统root用户登录时才可以登录数据库的root用户。所以需要把auth_socket改为mysql_native_password，才可以不受系统用户限制。\n\n然后`exit;`推出mysql。`sudo service mysql restart` 重启mysql服务\n\n","slug":"ubantu-apt-get-install方式安装mysql","published":1,"updated":"2020-08-12T04:55:36.317Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdqxnc32000fd7m0bgxacy2g","content":"<h1 id=\"在ubantu上安装mysql并不难，主要是记录下安装数据库时居然不像windows那样选择安装位置，设置用户和密码等\"><a href=\"#在ubantu上安装mysql并不难，主要是记录下安装数据库时居然不像windows那样选择安装位置，设置用户和密码等\" class=\"headerlink\" title=\"在ubantu上安装mysql并不难，主要是记录下安装数据库时居然不像windows那样选择安装位置，设置用户和密码等\"></a>在ubantu上安装mysql并不难，主要是记录下安装数据库时居然不像windows那样选择安装位置，设置用户和密码等</h1><ol>\n<li><code>sudo apt-get install mysql-server</code> 安装mysql核心服务</li>\n<li><code>sudo apt-get install mysql-server</code> 安装mysql客户端<a id=\"more\"></a>\n\n</li>\n</ol>\n<p>安装完成后我们需要去mysql目录查看用户名和密码<br><code>sudo vim /etc/mysql/debain.cnf</code></p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[client]</span><br><span class=\"line\">host     = localhost</span><br><span class=\"line\">user     = debian-sys-maint</span><br><span class=\"line\">password = wrMqzOiffsyheEe1</span><br><span class=\"line\">socket   = /var/run/mysqld/mysqld.sock</span><br><span class=\"line\">[mysql_upgrade]</span><br><span class=\"line\">host     = localhost</span><br><span class=\"line\">user     = debian-sys-maint</span><br><span class=\"line\">password = wrMqzOiffsyheEe1</span><br><span class=\"line\">socket   = /var/run/mysqld/mysqld.sock</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>我们用debian-sys-maint用户来登陆<br><code>mysql -u debian-sys-maint -p</code><br>输入密码：<code>wrMqzOiffsyheEe1</code><br>然后修改密码：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">update</span> mysql.user <span class=\"keyword\">set</span> authentication_string=<span class=\"keyword\">PASSWORD</span>(<span class=\"string\">&#x27;root&#x27;</span>), <span class=\"keyword\">plugin</span>=<span class=\"string\">&#x27;mysql_native_password&#x27;</span> <span class=\"keyword\">where</span> <span class=\"keyword\">user</span>=<span class=\"string\">&#x27;root&#x27;</span>;</span><br></pre></td></tr></table></figure>\n<font color=\"red\">\n注意，authentication_string是密码 ，plugin是验证方式，这两个一定要同时改。从mysql5.7开始root的默认验证方式是auth_socket\n</font>\n可以输入 ` select user, plugin from mysql.user;` 查看到以下内容：\n<figure class=\"highlight gherkin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">+------------------+-----------------------+</span><br><span class=\"line\">|<span class=\"string\"> user             </span>|<span class=\"string\"> plugin                </span>|</span><br><span class=\"line\">+------------------+-----------------------+</span><br><span class=\"line\">|<span class=\"string\"> root             </span>|<span class=\"string\"> auth_socket           </span>|</span><br><span class=\"line\">|<span class=\"string\"> mysql.session    </span>|<span class=\"string\"> mysql_native_password </span>|</span><br><span class=\"line\">|<span class=\"string\"> mysql.sys        </span>|<span class=\"string\"> mysql_native_password </span>|</span><br><span class=\"line\">|<span class=\"string\"> debian-sys-maint </span>|<span class=\"string\"> mysql_native_password </span>|</span><br><span class=\"line\">+------------------+-----------------------+</span><br><span class=\"line\">4 rows in set (0.02 sec)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n修改后的：\n<figure class=\"highlight asciidoc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"code\">+------------------+</span>-----------------------+</span><br><span class=\"line\">| user             | plugin                |</span><br><span class=\"line\"><span class=\"code\">+------------------+</span>-----------------------+</span><br><span class=\"line\">| root             | mysql<span class=\"emphasis\">_native_</span>password |</span><br><span class=\"line\">| mysql.session    | mysql<span class=\"emphasis\">_native_</span>password |</span><br><span class=\"line\">| mysql.sys        | mysql<span class=\"emphasis\">_native_</span>password |</span><br><span class=\"line\">| debian-sys-maint | mysql<span class=\"emphasis\">_native_</span>password |</span><br><span class=\"line\"><span class=\"code\">+------------------+</span>-----------------------+</span><br><span class=\"line\">4 rows in set (0.02 sec)</span><br></pre></td></tr></table></figure>\nmysql_native_password这种系统root用户登录时才可以登录数据库的root用户。所以需要把auth_socket改为mysql_native_password，才可以不受系统用户限制。\n\n<p>然后<code>exit;</code>推出mysql。<code>sudo service mysql restart</code> 重启mysql服务</p>\n","site":{"data":{}},"excerpt":"<h1 id=\"在ubantu上安装mysql并不难，主要是记录下安装数据库时居然不像windows那样选择安装位置，设置用户和密码等\"><a href=\"#在ubantu上安装mysql并不难，主要是记录下安装数据库时居然不像windows那样选择安装位置，设置用户和密码等\" class=\"headerlink\" title=\"在ubantu上安装mysql并不难，主要是记录下安装数据库时居然不像windows那样选择安装位置，设置用户和密码等\"></a>在ubantu上安装mysql并不难，主要是记录下安装数据库时居然不像windows那样选择安装位置，设置用户和密码等</h1><ol>\n<li><code>sudo apt-get install mysql-server</code> 安装mysql核心服务</li>\n<li><code>sudo apt-get install mysql-server</code> 安装mysql客户端","more":"</li>\n</ol>\n<p>安装完成后我们需要去mysql目录查看用户名和密码<br><code>sudo vim /etc/mysql/debain.cnf</code></p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[client]</span><br><span class=\"line\">host     = localhost</span><br><span class=\"line\">user     = debian-sys-maint</span><br><span class=\"line\">password = wrMqzOiffsyheEe1</span><br><span class=\"line\">socket   = /var/run/mysqld/mysqld.sock</span><br><span class=\"line\">[mysql_upgrade]</span><br><span class=\"line\">host     = localhost</span><br><span class=\"line\">user     = debian-sys-maint</span><br><span class=\"line\">password = wrMqzOiffsyheEe1</span><br><span class=\"line\">socket   = /var/run/mysqld/mysqld.sock</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>我们用debian-sys-maint用户来登陆<br><code>mysql -u debian-sys-maint -p</code><br>输入密码：<code>wrMqzOiffsyheEe1</code><br>然后修改密码：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">update</span> mysql.user <span class=\"keyword\">set</span> authentication_string=<span class=\"keyword\">PASSWORD</span>(<span class=\"string\">&#x27;root&#x27;</span>), <span class=\"keyword\">plugin</span>=<span class=\"string\">&#x27;mysql_native_password&#x27;</span> <span class=\"keyword\">where</span> <span class=\"keyword\">user</span>=<span class=\"string\">&#x27;root&#x27;</span>;</span><br></pre></td></tr></table></figure>\n<font color=\"red\">\n注意，authentication_string是密码 ，plugin是验证方式，这两个一定要同时改。从mysql5.7开始root的默认验证方式是auth_socket\n</font>\n可以输入 ` select user, plugin from mysql.user;` 查看到以下内容：\n<figure class=\"highlight gherkin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">+------------------+-----------------------+</span><br><span class=\"line\">|<span class=\"string\"> user             </span>|<span class=\"string\"> plugin                </span>|</span><br><span class=\"line\">+------------------+-----------------------+</span><br><span class=\"line\">|<span class=\"string\"> root             </span>|<span class=\"string\"> auth_socket           </span>|</span><br><span class=\"line\">|<span class=\"string\"> mysql.session    </span>|<span class=\"string\"> mysql_native_password </span>|</span><br><span class=\"line\">|<span class=\"string\"> mysql.sys        </span>|<span class=\"string\"> mysql_native_password </span>|</span><br><span class=\"line\">|<span class=\"string\"> debian-sys-maint </span>|<span class=\"string\"> mysql_native_password </span>|</span><br><span class=\"line\">+------------------+-----------------------+</span><br><span class=\"line\">4 rows in set (0.02 sec)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n修改后的：\n<figure class=\"highlight asciidoc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"code\">+------------------+</span>-----------------------+</span><br><span class=\"line\">| user             | plugin                |</span><br><span class=\"line\"><span class=\"code\">+------------------+</span>-----------------------+</span><br><span class=\"line\">| root             | mysql<span class=\"emphasis\">_native_</span>password |</span><br><span class=\"line\">| mysql.session    | mysql<span class=\"emphasis\">_native_</span>password |</span><br><span class=\"line\">| mysql.sys        | mysql<span class=\"emphasis\">_native_</span>password |</span><br><span class=\"line\">| debian-sys-maint | mysql<span class=\"emphasis\">_native_</span>password |</span><br><span class=\"line\"><span class=\"code\">+------------------+</span>-----------------------+</span><br><span class=\"line\">4 rows in set (0.02 sec)</span><br></pre></td></tr></table></figure>\nmysql_native_password这种系统root用户登录时才可以登录数据库的root用户。所以需要把auth_socket改为mysql_native_password，才可以不受系统用户限制。\n\n<p>然后<code>exit;</code>推出mysql。<code>sudo service mysql restart</code> 重启mysql服务</p>"},{"title":"windows下使用nexus搭建私有仓库并使用vue-cli 3 搭建组件库","abbrlink":"73a5b140","date":"2019-08-13T02:21:42.000Z","_content":"\n主要分为两部分：第一部分是nexus私有仓库的搭建，第二部分是vue-cli 3的组件搭建并发布到nexus本地仓库。\n## nexus私有仓库的搭建\n<!-- more -->\n### 环境搭建\n1. 首先需要在[<font style=\"color:red\">官网</font>](https://www.sonatype.com/oss-thank-you-win64.zip?submissionGuid=2c6a43fc-9aa5-4acc-b995-87cb63b04d66)下载nexus windows版本（注意：需要翻墙，自备梯子）。\n2. 以管理员身份运行cmd（注意：必须是管理员运行且必须是cmd，win10的powershell都会报错），然后切换到`C:\\node\\nexus\\nexus-3.18.0-01-win64\\nexus-3.18.0-01\\bin` 软件下载后的解压目录。\n<font style=\"color:red\">nexus启动前，最好修改下`C:\\node\\nexus\\nexus-3.18.0-01-win64\\nexus-3.18.0-01\\bin\\nexus.vmoptions`的配置</font>，防止出现内存不足的报错导致无法启动，我这里修改为\n```\n-Xms600m\n-Xmx600m\n-XX:MaxDirectMemorySize=1G\n```\n默认都是约2G\n\n```\nnexus.exe /install #执行安装命令， 成功后会提示Installed service 'nexus\nnexus.exe /run #运行服务，首次运行需要等待1~2分钟\n```\n3. 启动完毕后,进入 http://(本机IP):8081（最好是自定义电脑ip），点击右上角Sign In进行登录，默认账号 admin\n默认密码存放在`C:\\node\\nexus\\nexus-3.18.0-01-win64\\sonatype-work\\nexus3\\**.password` 打开文件后复制密码串进行登录，\n登录后会提示修改密码，修改完重新登录即可。然后`**.password`文件就会自动删除。\n\n### 添加npm仓库\n\n点击左侧菜单Repositories 查看仓库列表\n![](1.png)\n* 点击Create repository按钮创建仓库\n* group表示分组 hosted表示本机私有 proxy表示远程代理（中央仓库）\n* 若registry配置为group（包括hosted和proxy）,首次会从hosted拉取，若无则从proxy拉取并缓存，下次则直接从缓存取\n\n1. 添加npm(proxy)仓库：\n选择npm(proxy)\n输入`Name: npmjs.org`\n`Remote storage: https://registry.npmjs.org`\n如图：\n![](2.png)\n\n2. 添加npm(hosted)仓库：\n选择npm(hosted)\n输入`Name：npm-hosted`用于存放自己发布的私有包\n如图：\n![](3.png)\n3. 添加npm(group)仓库：\n选择npm(group)\n输入`Name: npm-group`，并在Member repositories里选择之前添加的两个移到右边\n如图：\n![](4.png)\n\n### 配置与验证npm仓库\n添加发布角色用户及权限\n1. 添加权限认证 将npm Beared Token Realm 添加至右边\n如图：\n![](5.png)\n2. 创建nx-deploy角色并赋予一个nx-repository-view---*的权限码\n![](6.png)\n3. 创建deployer用户 同时设定角色为nx-deploy\n![](7.png)\n\n### 变更依赖源\n安装nrm `npm i -g nrm`\n\n```\nnpm config set registry https://registry.npm.taobao.org #设置为探宝源\nnrm add private http://192.168.38.64:8081/repository/npm-all/ #本机ip\nnrm use private #使用私有源\n```\n### 发布流程\n每次发布前记得在package.json中检查version 有没有修改，要确认比上一个版本号高\n### 编译文件\n`yarn lib`或者使用npm\n### 登录npm\n`npm login -registry http://192.168.38.64:8081/repository/npm-hosted/`\n### 发布\n`npm publish -registry http://192.168.38.64:8081/repository/npm-hosted/`\n发布成功后在npm-hosted 能看到发布后的包\n![](8.png)\n### 使用方式\n\n```\n\"dependencies\": {\n\"组件库名称\": \"版本号\"\n}\n\nimport 组件库名称 from '组件库名称'\nVue.use(组件库名称)\n```\n### 项目启动\n`yarn serve`或者使用npm\n### 组件库文件目录结构\n\n```\n├── examples                      # 示例展示  \n│   ├── api                       # 接口类  \n│   ├── assets                    # 资源文件夹  \n│   ├── common                    # 工具类  \n│   ├── components                # 项目内部组件  \n│   ├── page                      # 页面  \n│   ├── router                    # 路由配置  \n│   ├── style                     # 页面样式问题，主题等  \n│   ├── App.vue                   # 入口页面  \n│   ├── main.js                   # 入口文件 加载组件 初始化等  \n├── lib                           # 编译后输出的组件目录  \n├── packages                      # 公共组件目录    \n│   ├── query-drop-box            # demo组件  \n│   ├── simple-input              # demo组件  \n│   ├── index.js                  # 组件入口文件  \n├── public                        # 静态资源  \n│   │── favicon.ico               # favicon图标  \n│   └── index.html                # html模板  \n├── .gitignore                    # git 配置  \n├── .npmignore                    # npm 配置  \n├── vue.config.js                 # vue-cli 配置  \n├── babel.config.js               # babel 配置  \n├── yarn.lock                     # yarn依赖 配置  \n└── package.json                  # package.json  \n```\n这里贴一下`vue.config.js`文件的配置：\n```\nconst path = require('path');\nfunction resolve(dir) {\n    return path.join(__dirname, dir)\n}\n\nmodule.exports = {\n    pages: {\n        index: {\n            entry: 'examples/main.js',\n            template: 'public/index.html',\n            filename: 'index.html'\n        }\n    },\n    productionSourceMap: false,\n    css: {\n        extract: false,\n        modules: false,\n        sourceMap: false,\n        loaderOptions: {}\n    },\n\n    // 扩展 webpack 配置，使 packages 加入编译\n    chainWebpack: config => {\n        config.module\n            .rule('js')\n            .include\n            .add('/packages/')\n            .end()\n            .use('babel')\n            .loader('babel-loader')\n            .tap(options => {\n                // 修改它的选项...\n                return options\n            })\n        config.resolve.alias\n            .set('@', resolve('examples'))\n            .set('src', resolve('examples'))\n            .set('components', resolve('examples/components'))\n            .set('examples', resolve('examples'))\n            .set('common', resolve('examples/common'))\n            .set('packages', resolve('packages'))\n            .set('api', resolve('examples/api'))\n            /* 添加分析工具*/\n        if (process.env.NODE_ENV === 'production') {\n            if (process.env.npm_config_report) {\n                config\n                    .plugin('webpack-bundle-analyzer')\n                    .use(require('webpack-bundle-analyzer').BundleAnalyzerPlugin)\n                    .end()\n                config.plugins.delete('prefetch')\n            }\n        }\n    }\n}\n```","source":"_posts/windows下使用nexus搭建私有仓库并使用vue-cli-3-搭建组件库.md","raw":"---\ntitle: windows下使用nexus搭建私有仓库并使用vue-cli 3 搭建组件库\nabbrlink: 73a5b140\ndate: 2019-08-13 10:21:42\ntags:\n  - nexus\n  - vue\ncategories: 前端\n---\n\n主要分为两部分：第一部分是nexus私有仓库的搭建，第二部分是vue-cli 3的组件搭建并发布到nexus本地仓库。\n## nexus私有仓库的搭建\n<!-- more -->\n### 环境搭建\n1. 首先需要在[<font style=\"color:red\">官网</font>](https://www.sonatype.com/oss-thank-you-win64.zip?submissionGuid=2c6a43fc-9aa5-4acc-b995-87cb63b04d66)下载nexus windows版本（注意：需要翻墙，自备梯子）。\n2. 以管理员身份运行cmd（注意：必须是管理员运行且必须是cmd，win10的powershell都会报错），然后切换到`C:\\node\\nexus\\nexus-3.18.0-01-win64\\nexus-3.18.0-01\\bin` 软件下载后的解压目录。\n<font style=\"color:red\">nexus启动前，最好修改下`C:\\node\\nexus\\nexus-3.18.0-01-win64\\nexus-3.18.0-01\\bin\\nexus.vmoptions`的配置</font>，防止出现内存不足的报错导致无法启动，我这里修改为\n```\n-Xms600m\n-Xmx600m\n-XX:MaxDirectMemorySize=1G\n```\n默认都是约2G\n\n```\nnexus.exe /install #执行安装命令， 成功后会提示Installed service 'nexus\nnexus.exe /run #运行服务，首次运行需要等待1~2分钟\n```\n3. 启动完毕后,进入 http://(本机IP):8081（最好是自定义电脑ip），点击右上角Sign In进行登录，默认账号 admin\n默认密码存放在`C:\\node\\nexus\\nexus-3.18.0-01-win64\\sonatype-work\\nexus3\\**.password` 打开文件后复制密码串进行登录，\n登录后会提示修改密码，修改完重新登录即可。然后`**.password`文件就会自动删除。\n\n### 添加npm仓库\n\n点击左侧菜单Repositories 查看仓库列表\n![](1.png)\n* 点击Create repository按钮创建仓库\n* group表示分组 hosted表示本机私有 proxy表示远程代理（中央仓库）\n* 若registry配置为group（包括hosted和proxy）,首次会从hosted拉取，若无则从proxy拉取并缓存，下次则直接从缓存取\n\n1. 添加npm(proxy)仓库：\n选择npm(proxy)\n输入`Name: npmjs.org`\n`Remote storage: https://registry.npmjs.org`\n如图：\n![](2.png)\n\n2. 添加npm(hosted)仓库：\n选择npm(hosted)\n输入`Name：npm-hosted`用于存放自己发布的私有包\n如图：\n![](3.png)\n3. 添加npm(group)仓库：\n选择npm(group)\n输入`Name: npm-group`，并在Member repositories里选择之前添加的两个移到右边\n如图：\n![](4.png)\n\n### 配置与验证npm仓库\n添加发布角色用户及权限\n1. 添加权限认证 将npm Beared Token Realm 添加至右边\n如图：\n![](5.png)\n2. 创建nx-deploy角色并赋予一个nx-repository-view---*的权限码\n![](6.png)\n3. 创建deployer用户 同时设定角色为nx-deploy\n![](7.png)\n\n### 变更依赖源\n安装nrm `npm i -g nrm`\n\n```\nnpm config set registry https://registry.npm.taobao.org #设置为探宝源\nnrm add private http://192.168.38.64:8081/repository/npm-all/ #本机ip\nnrm use private #使用私有源\n```\n### 发布流程\n每次发布前记得在package.json中检查version 有没有修改，要确认比上一个版本号高\n### 编译文件\n`yarn lib`或者使用npm\n### 登录npm\n`npm login -registry http://192.168.38.64:8081/repository/npm-hosted/`\n### 发布\n`npm publish -registry http://192.168.38.64:8081/repository/npm-hosted/`\n发布成功后在npm-hosted 能看到发布后的包\n![](8.png)\n### 使用方式\n\n```\n\"dependencies\": {\n\"组件库名称\": \"版本号\"\n}\n\nimport 组件库名称 from '组件库名称'\nVue.use(组件库名称)\n```\n### 项目启动\n`yarn serve`或者使用npm\n### 组件库文件目录结构\n\n```\n├── examples                      # 示例展示  \n│   ├── api                       # 接口类  \n│   ├── assets                    # 资源文件夹  \n│   ├── common                    # 工具类  \n│   ├── components                # 项目内部组件  \n│   ├── page                      # 页面  \n│   ├── router                    # 路由配置  \n│   ├── style                     # 页面样式问题，主题等  \n│   ├── App.vue                   # 入口页面  \n│   ├── main.js                   # 入口文件 加载组件 初始化等  \n├── lib                           # 编译后输出的组件目录  \n├── packages                      # 公共组件目录    \n│   ├── query-drop-box            # demo组件  \n│   ├── simple-input              # demo组件  \n│   ├── index.js                  # 组件入口文件  \n├── public                        # 静态资源  \n│   │── favicon.ico               # favicon图标  \n│   └── index.html                # html模板  \n├── .gitignore                    # git 配置  \n├── .npmignore                    # npm 配置  \n├── vue.config.js                 # vue-cli 配置  \n├── babel.config.js               # babel 配置  \n├── yarn.lock                     # yarn依赖 配置  \n└── package.json                  # package.json  \n```\n这里贴一下`vue.config.js`文件的配置：\n```\nconst path = require('path');\nfunction resolve(dir) {\n    return path.join(__dirname, dir)\n}\n\nmodule.exports = {\n    pages: {\n        index: {\n            entry: 'examples/main.js',\n            template: 'public/index.html',\n            filename: 'index.html'\n        }\n    },\n    productionSourceMap: false,\n    css: {\n        extract: false,\n        modules: false,\n        sourceMap: false,\n        loaderOptions: {}\n    },\n\n    // 扩展 webpack 配置，使 packages 加入编译\n    chainWebpack: config => {\n        config.module\n            .rule('js')\n            .include\n            .add('/packages/')\n            .end()\n            .use('babel')\n            .loader('babel-loader')\n            .tap(options => {\n                // 修改它的选项...\n                return options\n            })\n        config.resolve.alias\n            .set('@', resolve('examples'))\n            .set('src', resolve('examples'))\n            .set('components', resolve('examples/components'))\n            .set('examples', resolve('examples'))\n            .set('common', resolve('examples/common'))\n            .set('packages', resolve('packages'))\n            .set('api', resolve('examples/api'))\n            /* 添加分析工具*/\n        if (process.env.NODE_ENV === 'production') {\n            if (process.env.npm_config_report) {\n                config\n                    .plugin('webpack-bundle-analyzer')\n                    .use(require('webpack-bundle-analyzer').BundleAnalyzerPlugin)\n                    .end()\n                config.plugins.delete('prefetch')\n            }\n        }\n    }\n}\n```","slug":"windows下使用nexus搭建私有仓库并使用vue-cli-3-搭建组件库","published":1,"updated":"2020-08-12T04:57:21.546Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdqxnc33000hd7m03fu67fed","content":"<p>主要分为两部分：第一部分是nexus私有仓库的搭建，第二部分是vue-cli 3的组件搭建并发布到nexus本地仓库。</p>\n<h2 id=\"nexus私有仓库的搭建\"><a href=\"#nexus私有仓库的搭建\" class=\"headerlink\" title=\"nexus私有仓库的搭建\"></a>nexus私有仓库的搭建</h2><a id=\"more\"></a>\n<h3 id=\"环境搭建\"><a href=\"#环境搭建\" class=\"headerlink\" title=\"环境搭建\"></a>环境搭建</h3><ol>\n<li>首先需要在<a href=\"https://www.sonatype.com/oss-thank-you-win64.zip?submissionGuid=2c6a43fc-9aa5-4acc-b995-87cb63b04d66\"><font style=\"color:red\">官网</font></a>下载nexus windows版本（注意：需要翻墙，自备梯子）。</li>\n<li>以管理员身份运行cmd（注意：必须是管理员运行且必须是cmd，win10的powershell都会报错），然后切换到<code>C:\\node\\nexus\\nexus-3.18.0-01-win64\\nexus-3.18.0-01\\bin</code> 软件下载后的解压目录。<br><font style=\"color:red\">nexus启动前，最好修改下<code>C:\\node\\nexus\\nexus-3.18.0-01-win64\\nexus-3.18.0-01\\bin\\nexus.vmoptions</code>的配置</font>，防止出现内存不足的报错导致无法启动，我这里修改为<figure class=\"highlight diff\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"deletion\">-Xms600m</span></span><br><span class=\"line\"><span class=\"deletion\">-Xmx600m</span></span><br><span class=\"line\"><span class=\"deletion\">-XX:MaxDirectMemorySize=1G</span></span><br></pre></td></tr></table></figure>\n默认都是约2G</li>\n</ol>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nexus.exe /install #执行安装命令， 成功后会提示Installed<span class=\"built_in\"> service </span><span class=\"string\">&#x27;nexus</span></span><br><span class=\"line\"><span class=\"string\">nexus.exe /run #运行服务，首次运行需要等待1~2分钟</span></span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>启动完毕后,进入 http://(本机IP):8081（最好是自定义电脑ip），点击右上角Sign In进行登录，默认账号 admin<br>默认密码存放在<code>C:\\node\\nexus\\nexus-3.18.0-01-win64\\sonatype-work\\nexus3\\**.password</code> 打开文件后复制密码串进行登录，<br>登录后会提示修改密码，修改完重新登录即可。然后<code>**.password</code>文件就会自动删除。</li>\n</ol>\n<h3 id=\"添加npm仓库\"><a href=\"#添加npm仓库\" class=\"headerlink\" title=\"添加npm仓库\"></a>添加npm仓库</h3><p>点击左侧菜单Repositories 查看仓库列表<br><img src=\"1.png\"></p>\n<ul>\n<li>点击Create repository按钮创建仓库</li>\n<li>group表示分组 hosted表示本机私有 proxy表示远程代理（中央仓库）</li>\n<li>若registry配置为group（包括hosted和proxy）,首次会从hosted拉取，若无则从proxy拉取并缓存，下次则直接从缓存取</li>\n</ul>\n<ol>\n<li><p>添加npm(proxy)仓库：<br>选择npm(proxy)<br>输入<code>Name: npmjs.org</code><br><code>Remote storage: https://registry.npmjs.org</code><br>如图：<br><img src=\"2.png\"></p>\n</li>\n<li><p>添加npm(hosted)仓库：<br>选择npm(hosted)<br>输入<code>Name：npm-hosted</code>用于存放自己发布的私有包<br>如图：<br><img src=\"3.png\"></p>\n</li>\n<li><p>添加npm(group)仓库：<br>选择npm(group)<br>输入<code>Name: npm-group</code>，并在Member repositories里选择之前添加的两个移到右边<br>如图：<br><img src=\"4.png\"></p>\n</li>\n</ol>\n<h3 id=\"配置与验证npm仓库\"><a href=\"#配置与验证npm仓库\" class=\"headerlink\" title=\"配置与验证npm仓库\"></a>配置与验证npm仓库</h3><p>添加发布角色用户及权限</p>\n<ol>\n<li>添加权限认证 将npm Beared Token Realm 添加至右边<br>如图：<br><img src=\"5.png\"></li>\n<li>创建nx-deploy角色并赋予一个nx-repository-view—*的权限码<br><img src=\"6.png\"></li>\n<li>创建deployer用户 同时设定角色为nx-deploy<br><img src=\"7.png\"></li>\n</ol>\n<h3 id=\"变更依赖源\"><a href=\"#变更依赖源\" class=\"headerlink\" title=\"变更依赖源\"></a>变更依赖源</h3><p>安装nrm <code>npm i -g nrm</code></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm config <span class=\"keyword\">set</span> registry https://registry.npm.taobao.org <span class=\"comment\">#设置为探宝源</span></span><br><span class=\"line\">nrm <span class=\"keyword\">add</span> <span class=\"keyword\">private</span> <span class=\"keyword\">http</span>://<span class=\"number\">192.168</span><span class=\"number\">.38</span><span class=\"number\">.64</span>:<span class=\"number\">8081</span>/repository/npm-<span class=\"keyword\">all</span>/ <span class=\"comment\">#本机ip</span></span><br><span class=\"line\">nrm <span class=\"keyword\">use</span> <span class=\"keyword\">private</span> <span class=\"comment\">#使用私有源</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"发布流程\"><a href=\"#发布流程\" class=\"headerlink\" title=\"发布流程\"></a>发布流程</h3><p>每次发布前记得在package.json中检查version 有没有修改，要确认比上一个版本号高</p>\n<h3 id=\"编译文件\"><a href=\"#编译文件\" class=\"headerlink\" title=\"编译文件\"></a>编译文件</h3><p><code>yarn lib</code>或者使用npm</p>\n<h3 id=\"登录npm\"><a href=\"#登录npm\" class=\"headerlink\" title=\"登录npm\"></a>登录npm</h3><p><code>npm login -registry http://192.168.38.64:8081/repository/npm-hosted/</code></p>\n<h3 id=\"发布\"><a href=\"#发布\" class=\"headerlink\" title=\"发布\"></a>发布</h3><p><code>npm publish -registry http://192.168.38.64:8081/repository/npm-hosted/</code><br>发布成功后在npm-hosted 能看到发布后的包<br><img src=\"8.png\"></p>\n<h3 id=\"使用方式\"><a href=\"#使用方式\" class=\"headerlink\" title=\"使用方式\"></a>使用方式</h3><figure class=\"highlight clean\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;dependencies&quot;</span>: &#123;</span><br><span class=\"line\"><span class=\"string\">&quot;组件库名称&quot;</span>: <span class=\"string\">&quot;版本号&quot;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> 组件库名称 <span class=\"keyword\">from</span> <span class=\"string\">&#x27;组件库名称&#x27;</span></span><br><span class=\"line\">Vue.use(组件库名称)</span><br></pre></td></tr></table></figure>\n<h3 id=\"项目启动\"><a href=\"#项目启动\" class=\"headerlink\" title=\"项目启动\"></a>项目启动</h3><p><code>yarn serve</code>或者使用npm</p>\n<h3 id=\"组件库文件目录结构\"><a href=\"#组件库文件目录结构\" class=\"headerlink\" title=\"组件库文件目录结构\"></a>组件库文件目录结构</h3><figure class=\"highlight crystal\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">├── examples                      <span class=\"comment\"># 示例展示  </span></span><br><span class=\"line\">│   ├── api                       <span class=\"comment\"># 接口类  </span></span><br><span class=\"line\">│   ├── assets                    <span class=\"comment\"># 资源文件夹  </span></span><br><span class=\"line\">│   ├── common                    <span class=\"comment\"># 工具类  </span></span><br><span class=\"line\">│   ├── components                <span class=\"comment\"># 项目内部组件  </span></span><br><span class=\"line\">│   ├── page                      <span class=\"comment\"># 页面  </span></span><br><span class=\"line\">│   ├── router                    <span class=\"comment\"># 路由配置  </span></span><br><span class=\"line\">│   ├── style                     <span class=\"comment\"># 页面样式问题，主题等  </span></span><br><span class=\"line\">│   ├── App.vue                   <span class=\"comment\"># 入口页面  </span></span><br><span class=\"line\">│   ├── main.js                   <span class=\"comment\"># 入口文件 加载组件 初始化等  </span></span><br><span class=\"line\">├── <span class=\"class\"><span class=\"keyword\">lib</span>                           <span class=\"comment\"># 编译后输出的组件目录  </span></span></span><br><span class=\"line\">├── packages                      <span class=\"comment\"># 公共组件目录    </span></span><br><span class=\"line\">│   ├── query-drop-box            <span class=\"comment\"># demo组件  </span></span><br><span class=\"line\">│   ├── simple-input              <span class=\"comment\"># demo组件  </span></span><br><span class=\"line\">│   ├── index.js                  <span class=\"comment\"># 组件入口文件  </span></span><br><span class=\"line\">├── public                        <span class=\"comment\"># 静态资源  </span></span><br><span class=\"line\">│   │── favicon.ico               <span class=\"comment\"># favicon图标  </span></span><br><span class=\"line\">│   └── index.html                <span class=\"comment\"># html模板  </span></span><br><span class=\"line\">├── .gitignore                    <span class=\"comment\"># git 配置  </span></span><br><span class=\"line\">├── .npmignore                    <span class=\"comment\"># npm 配置  </span></span><br><span class=\"line\">├── vue.config.js                 <span class=\"comment\"># vue-cli 配置  </span></span><br><span class=\"line\">├── babel.config.js               <span class=\"comment\"># babel 配置  </span></span><br><span class=\"line\">├── yarn.lock                     <span class=\"comment\"># yarn依赖 配置  </span></span><br><span class=\"line\">└── package.json                  <span class=\"comment\"># package.json  </span></span><br></pre></td></tr></table></figure>\n<p>这里贴一下<code>vue.config.js</code>文件的配置：</p>\n<figure class=\"highlight sas\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const path = require(<span class=\"string\">&#x27;path&#x27;</span>);</span><br><span class=\"line\">function<span class=\"meta\"> resolve(</span>dir) &#123;</span><br><span class=\"line\">    <span class=\"meta\">return</span> path.jo<span class=\"meta\">in(</span>__dirname, dir)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">module.exports = &#123;</span><br><span class=\"line\">    pages: &#123;</span><br><span class=\"line\">        <span class=\"meta\">index</span>: &#123;</span><br><span class=\"line\">            entry: <span class=\"string\">&#x27;examples/main.js&#x27;</span>,</span><br><span class=\"line\">            template: <span class=\"string\">&#x27;public/index.html&#x27;</span>,</span><br><span class=\"line\">            <span class=\"meta\">filename</span>: <span class=\"string\">&#x27;index.html&#x27;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    productionSourceMap: false,</span><br><span class=\"line\">    css: &#123;</span><br><span class=\"line\">        extract: false,</span><br><span class=\"line\">        modules: false,</span><br><span class=\"line\">        sourceMap: false,</span><br><span class=\"line\">        loaderOptions: &#123;&#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    // 扩展 webpack 配置，使 packages 加入编译</span><br><span class=\"line\">    chainWebpack: config =&gt; &#123;</span><br><span class=\"line\">        config.module</span><br><span class=\"line\">            .rule(<span class=\"string\">&#x27;js&#x27;</span>)</span><br><span class=\"line\">            .include</span><br><span class=\"line\">            .<span class=\"meta\">add</span>(<span class=\"string\">&#x27;/packages/&#x27;</span>)</span><br><span class=\"line\">            .<span class=\"meta\">end</span>()</span><br><span class=\"line\">            .use(<span class=\"string\">&#x27;babel&#x27;</span>)</span><br><span class=\"line\">            .loader(<span class=\"string\">&#x27;babel-loader&#x27;</span>)</span><br><span class=\"line\">            .tap(<span class=\"meta\">options</span> =&gt; &#123;</span><br><span class=\"line\">                // 修改它的选项...</span><br><span class=\"line\">                <span class=\"meta\">return</span> <span class=\"meta\">options</span></span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">        config.resolve.alias</span><br><span class=\"line\">            .<span class=\"meta\">set</span>(<span class=\"string\">&#x27;@&#x27;</span>,<span class=\"meta\"> resolve(</span><span class=\"string\">&#x27;examples&#x27;</span>))</span><br><span class=\"line\">            .<span class=\"meta\">set</span>(<span class=\"string\">&#x27;src&#x27;</span>,<span class=\"meta\"> resolve(</span><span class=\"string\">&#x27;examples&#x27;</span>))</span><br><span class=\"line\">            .<span class=\"meta\">set</span>(<span class=\"string\">&#x27;components&#x27;</span>,<span class=\"meta\"> resolve(</span><span class=\"string\">&#x27;examples/components&#x27;</span>))</span><br><span class=\"line\">            .<span class=\"meta\">set</span>(<span class=\"string\">&#x27;examples&#x27;</span>,<span class=\"meta\"> resolve(</span><span class=\"string\">&#x27;examples&#x27;</span>))</span><br><span class=\"line\">            .<span class=\"meta\">set</span>(<span class=\"string\">&#x27;common&#x27;</span>,<span class=\"meta\"> resolve(</span><span class=\"string\">&#x27;examples/common&#x27;</span>))</span><br><span class=\"line\">            .<span class=\"meta\">set</span>(<span class=\"string\">&#x27;packages&#x27;</span>,<span class=\"meta\"> resolve(</span><span class=\"string\">&#x27;packages&#x27;</span>))</span><br><span class=\"line\">            .<span class=\"meta\">set</span>(<span class=\"string\">&#x27;api&#x27;</span>,<span class=\"meta\"> resolve(</span><span class=\"string\">&#x27;examples/api&#x27;</span>))</span><br><span class=\"line\">            <span class=\"comment\">/* 添加分析工具*/</span></span><br><span class=\"line\">        <span class=\"meta\">if</span> (process.env.NODE_ENV === <span class=\"string\">&#x27;production&#x27;</span>) &#123;</span><br><span class=\"line\">            <span class=\"meta\">if</span> (process.env.npm_config_report) &#123;</span><br><span class=\"line\">                config</span><br><span class=\"line\">                    .plug<span class=\"meta\">in(</span><span class=\"string\">&#x27;webpack-bundle-analyzer&#x27;</span>)</span><br><span class=\"line\">                    .use(require(<span class=\"string\">&#x27;webpack-bundle-analyzer&#x27;</span>).BundleAnalyzerPlugin)</span><br><span class=\"line\">                    .<span class=\"meta\">end</span>()</span><br><span class=\"line\">                config.plugins.<span class=\"meta\">delete</span>(<span class=\"string\">&#x27;prefetch&#x27;</span>)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<p>主要分为两部分：第一部分是nexus私有仓库的搭建，第二部分是vue-cli 3的组件搭建并发布到nexus本地仓库。</p>\n<h2 id=\"nexus私有仓库的搭建\"><a href=\"#nexus私有仓库的搭建\" class=\"headerlink\" title=\"nexus私有仓库的搭建\"></a>nexus私有仓库的搭建</h2>","more":"<h3 id=\"环境搭建\"><a href=\"#环境搭建\" class=\"headerlink\" title=\"环境搭建\"></a>环境搭建</h3><ol>\n<li>首先需要在<a href=\"https://www.sonatype.com/oss-thank-you-win64.zip?submissionGuid=2c6a43fc-9aa5-4acc-b995-87cb63b04d66\"><font style=\"color:red\">官网</font></a>下载nexus windows版本（注意：需要翻墙，自备梯子）。</li>\n<li>以管理员身份运行cmd（注意：必须是管理员运行且必须是cmd，win10的powershell都会报错），然后切换到<code>C:\\node\\nexus\\nexus-3.18.0-01-win64\\nexus-3.18.0-01\\bin</code> 软件下载后的解压目录。<br><font style=\"color:red\">nexus启动前，最好修改下<code>C:\\node\\nexus\\nexus-3.18.0-01-win64\\nexus-3.18.0-01\\bin\\nexus.vmoptions</code>的配置</font>，防止出现内存不足的报错导致无法启动，我这里修改为<figure class=\"highlight diff\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"deletion\">-Xms600m</span></span><br><span class=\"line\"><span class=\"deletion\">-Xmx600m</span></span><br><span class=\"line\"><span class=\"deletion\">-XX:MaxDirectMemorySize=1G</span></span><br></pre></td></tr></table></figure>\n默认都是约2G</li>\n</ol>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nexus.exe /install #执行安装命令， 成功后会提示Installed<span class=\"built_in\"> service </span><span class=\"string\">&#x27;nexus</span></span><br><span class=\"line\"><span class=\"string\">nexus.exe /run #运行服务，首次运行需要等待1~2分钟</span></span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>启动完毕后,进入 http://(本机IP):8081（最好是自定义电脑ip），点击右上角Sign In进行登录，默认账号 admin<br>默认密码存放在<code>C:\\node\\nexus\\nexus-3.18.0-01-win64\\sonatype-work\\nexus3\\**.password</code> 打开文件后复制密码串进行登录，<br>登录后会提示修改密码，修改完重新登录即可。然后<code>**.password</code>文件就会自动删除。</li>\n</ol>\n<h3 id=\"添加npm仓库\"><a href=\"#添加npm仓库\" class=\"headerlink\" title=\"添加npm仓库\"></a>添加npm仓库</h3><p>点击左侧菜单Repositories 查看仓库列表<br><img src=\"1.png\"></p>\n<ul>\n<li>点击Create repository按钮创建仓库</li>\n<li>group表示分组 hosted表示本机私有 proxy表示远程代理（中央仓库）</li>\n<li>若registry配置为group（包括hosted和proxy）,首次会从hosted拉取，若无则从proxy拉取并缓存，下次则直接从缓存取</li>\n</ul>\n<ol>\n<li><p>添加npm(proxy)仓库：<br>选择npm(proxy)<br>输入<code>Name: npmjs.org</code><br><code>Remote storage: https://registry.npmjs.org</code><br>如图：<br><img src=\"2.png\"></p>\n</li>\n<li><p>添加npm(hosted)仓库：<br>选择npm(hosted)<br>输入<code>Name：npm-hosted</code>用于存放自己发布的私有包<br>如图：<br><img src=\"3.png\"></p>\n</li>\n<li><p>添加npm(group)仓库：<br>选择npm(group)<br>输入<code>Name: npm-group</code>，并在Member repositories里选择之前添加的两个移到右边<br>如图：<br><img src=\"4.png\"></p>\n</li>\n</ol>\n<h3 id=\"配置与验证npm仓库\"><a href=\"#配置与验证npm仓库\" class=\"headerlink\" title=\"配置与验证npm仓库\"></a>配置与验证npm仓库</h3><p>添加发布角色用户及权限</p>\n<ol>\n<li>添加权限认证 将npm Beared Token Realm 添加至右边<br>如图：<br><img src=\"5.png\"></li>\n<li>创建nx-deploy角色并赋予一个nx-repository-view—*的权限码<br><img src=\"6.png\"></li>\n<li>创建deployer用户 同时设定角色为nx-deploy<br><img src=\"7.png\"></li>\n</ol>\n<h3 id=\"变更依赖源\"><a href=\"#变更依赖源\" class=\"headerlink\" title=\"变更依赖源\"></a>变更依赖源</h3><p>安装nrm <code>npm i -g nrm</code></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm config <span class=\"keyword\">set</span> registry https://registry.npm.taobao.org <span class=\"comment\">#设置为探宝源</span></span><br><span class=\"line\">nrm <span class=\"keyword\">add</span> <span class=\"keyword\">private</span> <span class=\"keyword\">http</span>://<span class=\"number\">192.168</span><span class=\"number\">.38</span><span class=\"number\">.64</span>:<span class=\"number\">8081</span>/repository/npm-<span class=\"keyword\">all</span>/ <span class=\"comment\">#本机ip</span></span><br><span class=\"line\">nrm <span class=\"keyword\">use</span> <span class=\"keyword\">private</span> <span class=\"comment\">#使用私有源</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"发布流程\"><a href=\"#发布流程\" class=\"headerlink\" title=\"发布流程\"></a>发布流程</h3><p>每次发布前记得在package.json中检查version 有没有修改，要确认比上一个版本号高</p>\n<h3 id=\"编译文件\"><a href=\"#编译文件\" class=\"headerlink\" title=\"编译文件\"></a>编译文件</h3><p><code>yarn lib</code>或者使用npm</p>\n<h3 id=\"登录npm\"><a href=\"#登录npm\" class=\"headerlink\" title=\"登录npm\"></a>登录npm</h3><p><code>npm login -registry http://192.168.38.64:8081/repository/npm-hosted/</code></p>\n<h3 id=\"发布\"><a href=\"#发布\" class=\"headerlink\" title=\"发布\"></a>发布</h3><p><code>npm publish -registry http://192.168.38.64:8081/repository/npm-hosted/</code><br>发布成功后在npm-hosted 能看到发布后的包<br><img src=\"8.png\"></p>\n<h3 id=\"使用方式\"><a href=\"#使用方式\" class=\"headerlink\" title=\"使用方式\"></a>使用方式</h3><figure class=\"highlight clean\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;dependencies&quot;</span>: &#123;</span><br><span class=\"line\"><span class=\"string\">&quot;组件库名称&quot;</span>: <span class=\"string\">&quot;版本号&quot;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> 组件库名称 <span class=\"keyword\">from</span> <span class=\"string\">&#x27;组件库名称&#x27;</span></span><br><span class=\"line\">Vue.use(组件库名称)</span><br></pre></td></tr></table></figure>\n<h3 id=\"项目启动\"><a href=\"#项目启动\" class=\"headerlink\" title=\"项目启动\"></a>项目启动</h3><p><code>yarn serve</code>或者使用npm</p>\n<h3 id=\"组件库文件目录结构\"><a href=\"#组件库文件目录结构\" class=\"headerlink\" title=\"组件库文件目录结构\"></a>组件库文件目录结构</h3><figure class=\"highlight crystal\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">├── examples                      <span class=\"comment\"># 示例展示  </span></span><br><span class=\"line\">│   ├── api                       <span class=\"comment\"># 接口类  </span></span><br><span class=\"line\">│   ├── assets                    <span class=\"comment\"># 资源文件夹  </span></span><br><span class=\"line\">│   ├── common                    <span class=\"comment\"># 工具类  </span></span><br><span class=\"line\">│   ├── components                <span class=\"comment\"># 项目内部组件  </span></span><br><span class=\"line\">│   ├── page                      <span class=\"comment\"># 页面  </span></span><br><span class=\"line\">│   ├── router                    <span class=\"comment\"># 路由配置  </span></span><br><span class=\"line\">│   ├── style                     <span class=\"comment\"># 页面样式问题，主题等  </span></span><br><span class=\"line\">│   ├── App.vue                   <span class=\"comment\"># 入口页面  </span></span><br><span class=\"line\">│   ├── main.js                   <span class=\"comment\"># 入口文件 加载组件 初始化等  </span></span><br><span class=\"line\">├── <span class=\"class\"><span class=\"keyword\">lib</span>                           <span class=\"comment\"># 编译后输出的组件目录  </span></span></span><br><span class=\"line\">├── packages                      <span class=\"comment\"># 公共组件目录    </span></span><br><span class=\"line\">│   ├── query-drop-box            <span class=\"comment\"># demo组件  </span></span><br><span class=\"line\">│   ├── simple-input              <span class=\"comment\"># demo组件  </span></span><br><span class=\"line\">│   ├── index.js                  <span class=\"comment\"># 组件入口文件  </span></span><br><span class=\"line\">├── public                        <span class=\"comment\"># 静态资源  </span></span><br><span class=\"line\">│   │── favicon.ico               <span class=\"comment\"># favicon图标  </span></span><br><span class=\"line\">│   └── index.html                <span class=\"comment\"># html模板  </span></span><br><span class=\"line\">├── .gitignore                    <span class=\"comment\"># git 配置  </span></span><br><span class=\"line\">├── .npmignore                    <span class=\"comment\"># npm 配置  </span></span><br><span class=\"line\">├── vue.config.js                 <span class=\"comment\"># vue-cli 配置  </span></span><br><span class=\"line\">├── babel.config.js               <span class=\"comment\"># babel 配置  </span></span><br><span class=\"line\">├── yarn.lock                     <span class=\"comment\"># yarn依赖 配置  </span></span><br><span class=\"line\">└── package.json                  <span class=\"comment\"># package.json  </span></span><br></pre></td></tr></table></figure>\n<p>这里贴一下<code>vue.config.js</code>文件的配置：</p>\n<figure class=\"highlight sas\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const path = require(<span class=\"string\">&#x27;path&#x27;</span>);</span><br><span class=\"line\">function<span class=\"meta\"> resolve(</span>dir) &#123;</span><br><span class=\"line\">    <span class=\"meta\">return</span> path.jo<span class=\"meta\">in(</span>__dirname, dir)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">module.exports = &#123;</span><br><span class=\"line\">    pages: &#123;</span><br><span class=\"line\">        <span class=\"meta\">index</span>: &#123;</span><br><span class=\"line\">            entry: <span class=\"string\">&#x27;examples/main.js&#x27;</span>,</span><br><span class=\"line\">            template: <span class=\"string\">&#x27;public/index.html&#x27;</span>,</span><br><span class=\"line\">            <span class=\"meta\">filename</span>: <span class=\"string\">&#x27;index.html&#x27;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    productionSourceMap: false,</span><br><span class=\"line\">    css: &#123;</span><br><span class=\"line\">        extract: false,</span><br><span class=\"line\">        modules: false,</span><br><span class=\"line\">        sourceMap: false,</span><br><span class=\"line\">        loaderOptions: &#123;&#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    // 扩展 webpack 配置，使 packages 加入编译</span><br><span class=\"line\">    chainWebpack: config =&gt; &#123;</span><br><span class=\"line\">        config.module</span><br><span class=\"line\">            .rule(<span class=\"string\">&#x27;js&#x27;</span>)</span><br><span class=\"line\">            .include</span><br><span class=\"line\">            .<span class=\"meta\">add</span>(<span class=\"string\">&#x27;/packages/&#x27;</span>)</span><br><span class=\"line\">            .<span class=\"meta\">end</span>()</span><br><span class=\"line\">            .use(<span class=\"string\">&#x27;babel&#x27;</span>)</span><br><span class=\"line\">            .loader(<span class=\"string\">&#x27;babel-loader&#x27;</span>)</span><br><span class=\"line\">            .tap(<span class=\"meta\">options</span> =&gt; &#123;</span><br><span class=\"line\">                // 修改它的选项...</span><br><span class=\"line\">                <span class=\"meta\">return</span> <span class=\"meta\">options</span></span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">        config.resolve.alias</span><br><span class=\"line\">            .<span class=\"meta\">set</span>(<span class=\"string\">&#x27;@&#x27;</span>,<span class=\"meta\"> resolve(</span><span class=\"string\">&#x27;examples&#x27;</span>))</span><br><span class=\"line\">            .<span class=\"meta\">set</span>(<span class=\"string\">&#x27;src&#x27;</span>,<span class=\"meta\"> resolve(</span><span class=\"string\">&#x27;examples&#x27;</span>))</span><br><span class=\"line\">            .<span class=\"meta\">set</span>(<span class=\"string\">&#x27;components&#x27;</span>,<span class=\"meta\"> resolve(</span><span class=\"string\">&#x27;examples/components&#x27;</span>))</span><br><span class=\"line\">            .<span class=\"meta\">set</span>(<span class=\"string\">&#x27;examples&#x27;</span>,<span class=\"meta\"> resolve(</span><span class=\"string\">&#x27;examples&#x27;</span>))</span><br><span class=\"line\">            .<span class=\"meta\">set</span>(<span class=\"string\">&#x27;common&#x27;</span>,<span class=\"meta\"> resolve(</span><span class=\"string\">&#x27;examples/common&#x27;</span>))</span><br><span class=\"line\">            .<span class=\"meta\">set</span>(<span class=\"string\">&#x27;packages&#x27;</span>,<span class=\"meta\"> resolve(</span><span class=\"string\">&#x27;packages&#x27;</span>))</span><br><span class=\"line\">            .<span class=\"meta\">set</span>(<span class=\"string\">&#x27;api&#x27;</span>,<span class=\"meta\"> resolve(</span><span class=\"string\">&#x27;examples/api&#x27;</span>))</span><br><span class=\"line\">            <span class=\"comment\">/* 添加分析工具*/</span></span><br><span class=\"line\">        <span class=\"meta\">if</span> (process.env.NODE_ENV === <span class=\"string\">&#x27;production&#x27;</span>) &#123;</span><br><span class=\"line\">            <span class=\"meta\">if</span> (process.env.npm_config_report) &#123;</span><br><span class=\"line\">                config</span><br><span class=\"line\">                    .plug<span class=\"meta\">in(</span><span class=\"string\">&#x27;webpack-bundle-analyzer&#x27;</span>)</span><br><span class=\"line\">                    .use(require(<span class=\"string\">&#x27;webpack-bundle-analyzer&#x27;</span>).BundleAnalyzerPlugin)</span><br><span class=\"line\">                    .<span class=\"meta\">end</span>()</span><br><span class=\"line\">                config.plugins.<span class=\"meta\">delete</span>(<span class=\"string\">&#x27;prefetch&#x27;</span>)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"一个奇葩的表格统计需求","abbrlink":"507fa396","date":"2019-06-17T07:41:51.000Z","_content":"\n有个报表统计的需求，先上需求图：\n<!-- more -->\n![](1.jpg)\n咋一看，好像挺简单啊，不就是一个表格吗？\n这么想那就大错特错了。这个需求实际上只有三行，也就是说需要统计“数量”，“项目造价金额”，“项目合同金额”这三个字段在不同状态下的值，也就是各列的“已报备”，“已中标”.... 等等。我们知道如果要实现这一的需求，必须要把“数量”，“项目造价金额”，“项目合同金额”这三个字段在各列中当成一个字段来处理，这样才会显示三行。比如element-ui的table的简单例子：\n![](2.jpg)\n![](3.jpg)\n那后端就要返回这样的格式了\n![](4.jpg)\n<font color=red>坑就坑在我们这个后端返回的数据结构上，他说他只能按照状态查询结果返回给我！</font>\n### 来看看他返回的数据结构是什么：\n```\n{\n\t\"code\":\"200\",\n\t\"message\":\"成功\",\n\t\"responseBody\":{\n\t\t\"code\":\"1\",\n\t\t\"data\":[\n\t\t\t{\n\t\t\t\t\"averageContractAmount\":0,\n\t\t\t\t\"countBuliding\":0,\n\t\t\t\t\"countContract\":0,\n\t\t\t\t\"countProject\":2,\n\t\t\t\t\"dayTime\":null,\n\t\t\t\t\"projStatus\":0,\n\t\t\t\t\"projStatusName\":\"草稿\",\n\t\t\t\t\"totalContractAmount\":0.00,\n\t\t\t\t\"totalProjectAmount\":17.94,\n\t\t\t\t\"totalReturnAmount\":0.00\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"averageContractAmount\":0,\n\t\t\t\t\"countBuliding\":0,\n\t\t\t\t\"countContract\":0,\n\t\t\t\t\"countProject\":12,\n\t\t\t\t\"dayTime\":null,\n\t\t\t\t\"projStatus\":1,\n\t\t\t\t\"projStatusName\":\"报备中\",\n\t\t\t\t\"totalContractAmount\":0.00,\n\t\t\t\t\"totalProjectAmount\":103.65,\n\t\t\t\t\"totalReturnAmount\":0.00\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"averageContractAmount\":0,\n\t\t\t\t\"countBuliding\":0,\n\t\t\t\t\"countContract\":0,\n\t\t\t\t\"countProject\":17,\n\t\t\t\t\"dayTime\":null,\n\t\t\t\t\"projStatus\":2,\n\t\t\t\t\"projStatusName\":\"已报备\",\n\t\t\t\t\"totalContractAmount\":0.00,\n\t\t\t\t\"totalProjectAmount\":5732.99,\n\t\t\t\t\"totalReturnAmount\":0.00\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"averageContractAmount\":0,\n\t\t\t\t\"countBuliding\":0,\n\t\t\t\t\"countContract\":0,\n\t\t\t\t\"countProject\":5,\n\t\t\t\t\"dayTime\":null,\n\t\t\t\t\"projStatus\":4,\n\t\t\t\t\"projStatusName\":\"已中标\",\n\t\t\t\t\"totalContractAmount\":4478.88,\n\t\t\t\t\"totalProjectAmount\":18.11,\n\t\t\t\t\"totalReturnAmount\":0.00\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"averageContractAmount\":0,\n\t\t\t\t\"countBuliding\":0,\n\t\t\t\t\"countContract\":0,\n\t\t\t\t\"countProject\":6,\n\t\t\t\t\"dayTime\":null,\n\t\t\t\t\"projStatus\":6,\n\t\t\t\t\"projStatusName\":\"建设中\",\n\t\t\t\t\"totalContractAmount\":14.10,\n\t\t\t\t\"totalProjectAmount\":154.01,\n\t\t\t\t\"totalReturnAmount\":0.00\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"averageContractAmount\":0,\n\t\t\t\t\"countBuliding\":0,\n\t\t\t\t\"countContract\":0,\n\t\t\t\t\"countProject\":1,\n\t\t\t\t\"dayTime\":null,\n\t\t\t\t\"projStatus\":7,\n\t\t\t\t\"projStatusName\":\"已竣工\",\n\t\t\t\t\"totalContractAmount\":1.00,\n\t\t\t\t\"totalProjectAmount\":1.00,\n\t\t\t\t\"totalReturnAmount\":0.00\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"averageContractAmount\":0,\n\t\t\t\t\"countBuliding\":0,\n\t\t\t\t\"countContract\":0,\n\t\t\t\t\"countProject\":1,\n\t\t\t\t\"dayTime\":null,\n\t\t\t\t\"projStatus\":10,\n\t\t\t\t\"projStatusName\":\"已删除\",\n\t\t\t\t\"totalContractAmount\":0.00,\n\t\t\t\t\"totalProjectAmount\":0.12,\n\t\t\t\t\"totalReturnAmount\":0.00\n\t\t\t}\n\t\t],\n\t\t\"message\":\"操作成功\"\n\t}\n}\n```\n其中`projStatus`就是上面提到的“报备中”，“已中标”等等列的状态值了，但是这样渲染出来的表格是10行，因为他数组没有处理，直接有多少个状态有值就返回多少条记录。实际上我前端这边需要的字段是这样的 \n```\n[\n    { typeName: '数量', projStatus: 1, total_1: 2, total_2: 2, total_3: 2, total_4: 2, total_5: 2, total_6: 2, total_7: 2, total_8: 2, total_9: 2, total_10: 2 },\n    { typeName: '项目造价金额（万）', projStatus: 1, total_1: 2, total_2: 2, total_3: 2, total_4: 2, total_5: 2, total_6: 2, total_7: 2, total_8: 2, total_9: 2, total_10: 2 },\n\n    { typeName: '项目合同金额（万）', projStatus: 1, total_1: 2, total_2: 2, total_3: 2, total_4: 2, total_5: 2, total_6: 2, total_7: 2, total_8: 2, total_9: 2, total_10: 2 } \n]\n```\n\n这就需要自己进行艰苦的数据处理了。。。\n根据他字段返回的 `countProject //数量` `totalProjectAmount //项目造价` `totalContractAmount //项目合同`  这三个字段分类把数据重新组合成三个数组。\n```\ndeepDealArr(data, num) {\n    let countProject = [];\n    let totalProjectAmount = [];\n    let totalContractAmount = [];\n    if (num === 1) {\n        let _data = this.utils.copy(data);\n        for (let i = 0; i < _data.length; i++) {\n            let ind = _data[i].projStatus\n            const dataObj = {}\n            dataObj.projStatus = _data[i].projStatus\n            dataObj['total_' + ind] = _data[i].countProject\n            countProject.push(dataObj)\n        }\n        countProject.splice(0, 0, { typeName: '数量' })\n        return countProject;\n    } else if (num === 2) {\n        let _data = this.utils.copy(data);\n        for (let i = 0; i < _data.length; i++) {\n            let ind = _data[i].projStatus\n            const dataObj = {}\n            dataObj.projStatus = _data[i].projStatus\n            dataObj['total_' + ind] = _data[i].totalProjectAmount\n            totalProjectAmount.push(dataObj)\n        }\n        totalProjectAmount.splice(0, 0, { typeName: '项目造价金额（万）' })\n        return totalProjectAmount;\n    } else {\n        let _data = this.utils.copy(data);\n        for (let i = 0; i < _data.length; i++) {\n            let ind = _data[i].projStatus\n            const dataObj = {}\n            dataObj.projStatus = _data[i].projStatus\n            dataObj['total_' + ind] = _data[i].totalContractAmount\n            totalContractAmount.push(dataObj)\n        }\n        totalContractAmount.splice(0, 0, { typeName: '项目合同金额（万）' })\n        return totalContractAmount;\n    }\n\n}\n\n\n/**\n* 处理返回数组\n*/\ndealArry(data) {\n    let _data = this.utils.copy(data);//这个data 就是后端返回的初始结构的数据\n    let countProject = []; //数量\n    let totalProjectAmount = [];//项目造价\n    let totalContractAmount = []; //项目合同\n\n\n    //处理出来的结果是类似 [{ typeName: '数量', projStatus: 1, total_1: 2, total_2: 2, total_3: 2, total_4: 2, total_5: 2, total_6: 2, total_7: 2, total_8: 2, total_9: 2, total_10: 2 }]这种数组结构\n\n    for (let i = 0; i < _data.length; i++) {\n        if (_data[i].countProject || _data[i].countProject === 0) {\n            countProject.push({\n                projStatus: _data[i].projStatus,\n                countProject: _data[i].countProject\n            })\n        }\n        if (_data[i].totalProjectAmount || _data[i].totalProjectAmount === 0) {\n            totalProjectAmount.push({\n                projStatus: _data[i].projStatus,\n                totalProjectAmount:  _data[i].totalProjectAmount\n            })\n        }\n        if (_data[i].totalContractAmount || _data[i].totalContractAmount === 0) {\n            totalContractAmount.push({\n                projStatus: _data[i].projStatus,\n                totalContractAmount: _data[i].totalContractAmount\n            })\n        }\n    }\n\n    //因为有三行，所以需要调用deepDealArr这个函数三次 得到各自三个数组\n\n    let _countProject = this.deepDealArr(countProject, 1)\n    let _totalProjectAmount = this.deepDealArr(totalProjectAmount, 2)\n    let _totalContractAmount = this.deepDealArr(totalContractAmount, 3)\n    \n    //以下是为了把数组转成对象，然后把三行对象塞进数组中，这样表格就能出来了，\n    关键用到了Object.assign() 函数循环数组转成对象\n    let _count = {}\n    let _totalP = {}\n    let _totalC = {}\n    _countProject.map(function (e,item) {                        \n        Object.assign(_count, e);\n    });       \n    _totalProjectAmount.map(function (e,item) {                        \n        Object.assign(_totalP, e);\n    });        \n    _totalContractAmount.map(function (e,item) {                        \n        Object.assign(_totalC, e);\n    });      \n    let _newTable = [\n        _count,\n        _totalP,\n        _totalC\n    ]\n\n    this.table.data = _newTable\n\n}\n```\n这是模板文件：\n```\n<el-table :data=\"table.data\" style=\"width: 100%; margin-top: 20px;\" :loading=\"tableLoading\">\n    <el-table-column prop=\"typeName\" label=\"条目\"></el-table-column>\n    <el-table-column prop=\"total_1\" label=\"报备中\"></el-table-column>\n    <el-table-column prop=\"total_2\" label=\"已报备\"></el-table-column>\n    <el-table-column prop=\"total_3\" label=\"投标中\"></el-table-column> \n    <el-table-column prop=\"total_4\" label=\"已中标\"></el-table-column>\n    <el-table-column prop=\"total_6\" label=\"在建中\"></el-table-column>\n    <el-table-column prop=\"total_7\" label=\"已竣工\"></el-table-column>\n    <el-table-column prop=\"total_9\" label=\"已关闭\"></el-table-column>\n    <el-table-column prop=\"total_8\" label=\"已过期\"></el-table-column>\n    <el-table-column prop=\"total_10\" label=\"已删除\"></el-table-column>\n    <empty \n        v-if=\"table.data.length == 0\"\n        slot=\"empty\"\n        style=\"height: 500px\"\n        tips=\"抱歉！暂时没有数据\" \n        smallTips=\"暂时还没有相关的数据可以展示\"\n        >\n        <img src=\"~/assets/svg/table-empty.svg\" slot=\"img\"/>\n    </empty>\n</el-table>\n```\n用total_的后面的数字来对应列的状态值，这样就能一一对应上了，最后附上完成的效果图\n\n![](5.jpg)\n\n","source":"_posts/一个奇葩的表格统计需求.md","raw":"---\ntitle: 一个奇葩的表格统计需求\nabbrlink: 507fa396\ndate: 2019-06-17 15:41:51\ntags: \n    - vue \n    - js\ncategories: \n    - vue \n    - js\n---\n\n有个报表统计的需求，先上需求图：\n<!-- more -->\n![](1.jpg)\n咋一看，好像挺简单啊，不就是一个表格吗？\n这么想那就大错特错了。这个需求实际上只有三行，也就是说需要统计“数量”，“项目造价金额”，“项目合同金额”这三个字段在不同状态下的值，也就是各列的“已报备”，“已中标”.... 等等。我们知道如果要实现这一的需求，必须要把“数量”，“项目造价金额”，“项目合同金额”这三个字段在各列中当成一个字段来处理，这样才会显示三行。比如element-ui的table的简单例子：\n![](2.jpg)\n![](3.jpg)\n那后端就要返回这样的格式了\n![](4.jpg)\n<font color=red>坑就坑在我们这个后端返回的数据结构上，他说他只能按照状态查询结果返回给我！</font>\n### 来看看他返回的数据结构是什么：\n```\n{\n\t\"code\":\"200\",\n\t\"message\":\"成功\",\n\t\"responseBody\":{\n\t\t\"code\":\"1\",\n\t\t\"data\":[\n\t\t\t{\n\t\t\t\t\"averageContractAmount\":0,\n\t\t\t\t\"countBuliding\":0,\n\t\t\t\t\"countContract\":0,\n\t\t\t\t\"countProject\":2,\n\t\t\t\t\"dayTime\":null,\n\t\t\t\t\"projStatus\":0,\n\t\t\t\t\"projStatusName\":\"草稿\",\n\t\t\t\t\"totalContractAmount\":0.00,\n\t\t\t\t\"totalProjectAmount\":17.94,\n\t\t\t\t\"totalReturnAmount\":0.00\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"averageContractAmount\":0,\n\t\t\t\t\"countBuliding\":0,\n\t\t\t\t\"countContract\":0,\n\t\t\t\t\"countProject\":12,\n\t\t\t\t\"dayTime\":null,\n\t\t\t\t\"projStatus\":1,\n\t\t\t\t\"projStatusName\":\"报备中\",\n\t\t\t\t\"totalContractAmount\":0.00,\n\t\t\t\t\"totalProjectAmount\":103.65,\n\t\t\t\t\"totalReturnAmount\":0.00\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"averageContractAmount\":0,\n\t\t\t\t\"countBuliding\":0,\n\t\t\t\t\"countContract\":0,\n\t\t\t\t\"countProject\":17,\n\t\t\t\t\"dayTime\":null,\n\t\t\t\t\"projStatus\":2,\n\t\t\t\t\"projStatusName\":\"已报备\",\n\t\t\t\t\"totalContractAmount\":0.00,\n\t\t\t\t\"totalProjectAmount\":5732.99,\n\t\t\t\t\"totalReturnAmount\":0.00\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"averageContractAmount\":0,\n\t\t\t\t\"countBuliding\":0,\n\t\t\t\t\"countContract\":0,\n\t\t\t\t\"countProject\":5,\n\t\t\t\t\"dayTime\":null,\n\t\t\t\t\"projStatus\":4,\n\t\t\t\t\"projStatusName\":\"已中标\",\n\t\t\t\t\"totalContractAmount\":4478.88,\n\t\t\t\t\"totalProjectAmount\":18.11,\n\t\t\t\t\"totalReturnAmount\":0.00\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"averageContractAmount\":0,\n\t\t\t\t\"countBuliding\":0,\n\t\t\t\t\"countContract\":0,\n\t\t\t\t\"countProject\":6,\n\t\t\t\t\"dayTime\":null,\n\t\t\t\t\"projStatus\":6,\n\t\t\t\t\"projStatusName\":\"建设中\",\n\t\t\t\t\"totalContractAmount\":14.10,\n\t\t\t\t\"totalProjectAmount\":154.01,\n\t\t\t\t\"totalReturnAmount\":0.00\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"averageContractAmount\":0,\n\t\t\t\t\"countBuliding\":0,\n\t\t\t\t\"countContract\":0,\n\t\t\t\t\"countProject\":1,\n\t\t\t\t\"dayTime\":null,\n\t\t\t\t\"projStatus\":7,\n\t\t\t\t\"projStatusName\":\"已竣工\",\n\t\t\t\t\"totalContractAmount\":1.00,\n\t\t\t\t\"totalProjectAmount\":1.00,\n\t\t\t\t\"totalReturnAmount\":0.00\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"averageContractAmount\":0,\n\t\t\t\t\"countBuliding\":0,\n\t\t\t\t\"countContract\":0,\n\t\t\t\t\"countProject\":1,\n\t\t\t\t\"dayTime\":null,\n\t\t\t\t\"projStatus\":10,\n\t\t\t\t\"projStatusName\":\"已删除\",\n\t\t\t\t\"totalContractAmount\":0.00,\n\t\t\t\t\"totalProjectAmount\":0.12,\n\t\t\t\t\"totalReturnAmount\":0.00\n\t\t\t}\n\t\t],\n\t\t\"message\":\"操作成功\"\n\t}\n}\n```\n其中`projStatus`就是上面提到的“报备中”，“已中标”等等列的状态值了，但是这样渲染出来的表格是10行，因为他数组没有处理，直接有多少个状态有值就返回多少条记录。实际上我前端这边需要的字段是这样的 \n```\n[\n    { typeName: '数量', projStatus: 1, total_1: 2, total_2: 2, total_3: 2, total_4: 2, total_5: 2, total_6: 2, total_7: 2, total_8: 2, total_9: 2, total_10: 2 },\n    { typeName: '项目造价金额（万）', projStatus: 1, total_1: 2, total_2: 2, total_3: 2, total_4: 2, total_5: 2, total_6: 2, total_7: 2, total_8: 2, total_9: 2, total_10: 2 },\n\n    { typeName: '项目合同金额（万）', projStatus: 1, total_1: 2, total_2: 2, total_3: 2, total_4: 2, total_5: 2, total_6: 2, total_7: 2, total_8: 2, total_9: 2, total_10: 2 } \n]\n```\n\n这就需要自己进行艰苦的数据处理了。。。\n根据他字段返回的 `countProject //数量` `totalProjectAmount //项目造价` `totalContractAmount //项目合同`  这三个字段分类把数据重新组合成三个数组。\n```\ndeepDealArr(data, num) {\n    let countProject = [];\n    let totalProjectAmount = [];\n    let totalContractAmount = [];\n    if (num === 1) {\n        let _data = this.utils.copy(data);\n        for (let i = 0; i < _data.length; i++) {\n            let ind = _data[i].projStatus\n            const dataObj = {}\n            dataObj.projStatus = _data[i].projStatus\n            dataObj['total_' + ind] = _data[i].countProject\n            countProject.push(dataObj)\n        }\n        countProject.splice(0, 0, { typeName: '数量' })\n        return countProject;\n    } else if (num === 2) {\n        let _data = this.utils.copy(data);\n        for (let i = 0; i < _data.length; i++) {\n            let ind = _data[i].projStatus\n            const dataObj = {}\n            dataObj.projStatus = _data[i].projStatus\n            dataObj['total_' + ind] = _data[i].totalProjectAmount\n            totalProjectAmount.push(dataObj)\n        }\n        totalProjectAmount.splice(0, 0, { typeName: '项目造价金额（万）' })\n        return totalProjectAmount;\n    } else {\n        let _data = this.utils.copy(data);\n        for (let i = 0; i < _data.length; i++) {\n            let ind = _data[i].projStatus\n            const dataObj = {}\n            dataObj.projStatus = _data[i].projStatus\n            dataObj['total_' + ind] = _data[i].totalContractAmount\n            totalContractAmount.push(dataObj)\n        }\n        totalContractAmount.splice(0, 0, { typeName: '项目合同金额（万）' })\n        return totalContractAmount;\n    }\n\n}\n\n\n/**\n* 处理返回数组\n*/\ndealArry(data) {\n    let _data = this.utils.copy(data);//这个data 就是后端返回的初始结构的数据\n    let countProject = []; //数量\n    let totalProjectAmount = [];//项目造价\n    let totalContractAmount = []; //项目合同\n\n\n    //处理出来的结果是类似 [{ typeName: '数量', projStatus: 1, total_1: 2, total_2: 2, total_3: 2, total_4: 2, total_5: 2, total_6: 2, total_7: 2, total_8: 2, total_9: 2, total_10: 2 }]这种数组结构\n\n    for (let i = 0; i < _data.length; i++) {\n        if (_data[i].countProject || _data[i].countProject === 0) {\n            countProject.push({\n                projStatus: _data[i].projStatus,\n                countProject: _data[i].countProject\n            })\n        }\n        if (_data[i].totalProjectAmount || _data[i].totalProjectAmount === 0) {\n            totalProjectAmount.push({\n                projStatus: _data[i].projStatus,\n                totalProjectAmount:  _data[i].totalProjectAmount\n            })\n        }\n        if (_data[i].totalContractAmount || _data[i].totalContractAmount === 0) {\n            totalContractAmount.push({\n                projStatus: _data[i].projStatus,\n                totalContractAmount: _data[i].totalContractAmount\n            })\n        }\n    }\n\n    //因为有三行，所以需要调用deepDealArr这个函数三次 得到各自三个数组\n\n    let _countProject = this.deepDealArr(countProject, 1)\n    let _totalProjectAmount = this.deepDealArr(totalProjectAmount, 2)\n    let _totalContractAmount = this.deepDealArr(totalContractAmount, 3)\n    \n    //以下是为了把数组转成对象，然后把三行对象塞进数组中，这样表格就能出来了，\n    关键用到了Object.assign() 函数循环数组转成对象\n    let _count = {}\n    let _totalP = {}\n    let _totalC = {}\n    _countProject.map(function (e,item) {                        \n        Object.assign(_count, e);\n    });       \n    _totalProjectAmount.map(function (e,item) {                        \n        Object.assign(_totalP, e);\n    });        \n    _totalContractAmount.map(function (e,item) {                        \n        Object.assign(_totalC, e);\n    });      \n    let _newTable = [\n        _count,\n        _totalP,\n        _totalC\n    ]\n\n    this.table.data = _newTable\n\n}\n```\n这是模板文件：\n```\n<el-table :data=\"table.data\" style=\"width: 100%; margin-top: 20px;\" :loading=\"tableLoading\">\n    <el-table-column prop=\"typeName\" label=\"条目\"></el-table-column>\n    <el-table-column prop=\"total_1\" label=\"报备中\"></el-table-column>\n    <el-table-column prop=\"total_2\" label=\"已报备\"></el-table-column>\n    <el-table-column prop=\"total_3\" label=\"投标中\"></el-table-column> \n    <el-table-column prop=\"total_4\" label=\"已中标\"></el-table-column>\n    <el-table-column prop=\"total_6\" label=\"在建中\"></el-table-column>\n    <el-table-column prop=\"total_7\" label=\"已竣工\"></el-table-column>\n    <el-table-column prop=\"total_9\" label=\"已关闭\"></el-table-column>\n    <el-table-column prop=\"total_8\" label=\"已过期\"></el-table-column>\n    <el-table-column prop=\"total_10\" label=\"已删除\"></el-table-column>\n    <empty \n        v-if=\"table.data.length == 0\"\n        slot=\"empty\"\n        style=\"height: 500px\"\n        tips=\"抱歉！暂时没有数据\" \n        smallTips=\"暂时还没有相关的数据可以展示\"\n        >\n        <img src=\"~/assets/svg/table-empty.svg\" slot=\"img\"/>\n    </empty>\n</el-table>\n```\n用total_的后面的数字来对应列的状态值，这样就能一一对应上了，最后附上完成的效果图\n\n![](5.jpg)\n\n","slug":"一个奇葩的表格统计需求","published":1,"updated":"2020-08-12T04:59:27.759Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdqxnc35000ld7m065d27nlv","content":"<p>有个报表统计的需求，先上需求图：</p>\n<a id=\"more\"></a>\n<p><img src=\"1.jpg\"><br>咋一看，好像挺简单啊，不就是一个表格吗？<br>这么想那就大错特错了。这个需求实际上只有三行，也就是说需要统计“数量”，“项目造价金额”，“项目合同金额”这三个字段在不同状态下的值，也就是各列的“已报备”，“已中标”…. 等等。我们知道如果要实现这一的需求，必须要把“数量”，“项目造价金额”，“项目合同金额”这三个字段在各列中当成一个字段来处理，这样才会显示三行。比如element-ui的table的简单例子：<br><img src=\"2.jpg\"><br><img src=\"3.jpg\"><br>那后端就要返回这样的格式了<br><img src=\"4.jpg\"><br><font color=red>坑就坑在我们这个后端返回的数据结构上，他说他只能按照状态查询结果返回给我！</font></p>\n<h3 id=\"来看看他返回的数据结构是什么：\"><a href=\"#来看看他返回的数据结构是什么：\" class=\"headerlink\" title=\"来看看他返回的数据结构是什么：\"></a>来看看他返回的数据结构是什么：</h3><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">&quot;code&quot;</span>:<span class=\"string\">&quot;200&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;message&quot;</span>:<span class=\"string\">&quot;成功&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;responseBody&quot;</span>:&#123;</span><br><span class=\"line\">        <span class=\"attr\">&quot;code&quot;</span>:<span class=\"string\">&quot;1&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;data&quot;</span>:[</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"attr\">&quot;averageContractAmount&quot;</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;countBuliding&quot;</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;countContract&quot;</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;countProject&quot;</span>:<span class=\"number\">2</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;dayTime&quot;</span>:<span class=\"literal\">null</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;projStatus&quot;</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;projStatusName&quot;</span>:<span class=\"string\">&quot;草稿&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;totalContractAmount&quot;</span>:<span class=\"number\">0.00</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;totalProjectAmount&quot;</span>:<span class=\"number\">17.94</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;totalReturnAmount&quot;</span>:<span class=\"number\">0.00</span></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"attr\">&quot;averageContractAmount&quot;</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;countBuliding&quot;</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;countContract&quot;</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;countProject&quot;</span>:<span class=\"number\">12</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;dayTime&quot;</span>:<span class=\"literal\">null</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;projStatus&quot;</span>:<span class=\"number\">1</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;projStatusName&quot;</span>:<span class=\"string\">&quot;报备中&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;totalContractAmount&quot;</span>:<span class=\"number\">0.00</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;totalProjectAmount&quot;</span>:<span class=\"number\">103.65</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;totalReturnAmount&quot;</span>:<span class=\"number\">0.00</span></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"attr\">&quot;averageContractAmount&quot;</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;countBuliding&quot;</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;countContract&quot;</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;countProject&quot;</span>:<span class=\"number\">17</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;dayTime&quot;</span>:<span class=\"literal\">null</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;projStatus&quot;</span>:<span class=\"number\">2</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;projStatusName&quot;</span>:<span class=\"string\">&quot;已报备&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;totalContractAmount&quot;</span>:<span class=\"number\">0.00</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;totalProjectAmount&quot;</span>:<span class=\"number\">5732.99</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;totalReturnAmount&quot;</span>:<span class=\"number\">0.00</span></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"attr\">&quot;averageContractAmount&quot;</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;countBuliding&quot;</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;countContract&quot;</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;countProject&quot;</span>:<span class=\"number\">5</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;dayTime&quot;</span>:<span class=\"literal\">null</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;projStatus&quot;</span>:<span class=\"number\">4</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;projStatusName&quot;</span>:<span class=\"string\">&quot;已中标&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;totalContractAmount&quot;</span>:<span class=\"number\">4478.88</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;totalProjectAmount&quot;</span>:<span class=\"number\">18.11</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;totalReturnAmount&quot;</span>:<span class=\"number\">0.00</span></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"attr\">&quot;averageContractAmount&quot;</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;countBuliding&quot;</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;countContract&quot;</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;countProject&quot;</span>:<span class=\"number\">6</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;dayTime&quot;</span>:<span class=\"literal\">null</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;projStatus&quot;</span>:<span class=\"number\">6</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;projStatusName&quot;</span>:<span class=\"string\">&quot;建设中&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;totalContractAmount&quot;</span>:<span class=\"number\">14.10</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;totalProjectAmount&quot;</span>:<span class=\"number\">154.01</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;totalReturnAmount&quot;</span>:<span class=\"number\">0.00</span></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"attr\">&quot;averageContractAmount&quot;</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;countBuliding&quot;</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;countContract&quot;</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;countProject&quot;</span>:<span class=\"number\">1</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;dayTime&quot;</span>:<span class=\"literal\">null</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;projStatus&quot;</span>:<span class=\"number\">7</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;projStatusName&quot;</span>:<span class=\"string\">&quot;已竣工&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;totalContractAmount&quot;</span>:<span class=\"number\">1.00</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;totalProjectAmount&quot;</span>:<span class=\"number\">1.00</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;totalReturnAmount&quot;</span>:<span class=\"number\">0.00</span></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"attr\">&quot;averageContractAmount&quot;</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;countBuliding&quot;</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;countContract&quot;</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;countProject&quot;</span>:<span class=\"number\">1</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;dayTime&quot;</span>:<span class=\"literal\">null</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;projStatus&quot;</span>:<span class=\"number\">10</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;projStatusName&quot;</span>:<span class=\"string\">&quot;已删除&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;totalContractAmount&quot;</span>:<span class=\"number\">0.00</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;totalProjectAmount&quot;</span>:<span class=\"number\">0.12</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;totalReturnAmount&quot;</span>:<span class=\"number\">0.00</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        ],</span><br><span class=\"line\">        <span class=\"attr\">&quot;message&quot;</span>:<span class=\"string\">&quot;操作成功&quot;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>其中<code>projStatus</code>就是上面提到的“报备中”，“已中标”等等列的状态值了，但是这样渲染出来的表格是10行，因为他数组没有处理，直接有多少个状态有值就返回多少条记录。实际上我前端这边需要的字段是这样的 </p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[</span><br><span class=\"line\">    &#123; <span class=\"attr\">typeName:</span> <span class=\"string\">&#x27;数量&#x27;</span>, <span class=\"attr\">projStatus:</span> <span class=\"number\">1</span>, <span class=\"attr\">total_1:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_2:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_3:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_4:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_5:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_6:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_7:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_8:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_9:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_10:</span> <span class=\"number\">2</span> &#125;,</span><br><span class=\"line\">    &#123; <span class=\"attr\">typeName:</span> <span class=\"string\">&#x27;项目造价金额（万）&#x27;</span>, <span class=\"attr\">projStatus:</span> <span class=\"number\">1</span>, <span class=\"attr\">total_1:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_2:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_3:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_4:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_5:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_6:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_7:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_8:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_9:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_10:</span> <span class=\"number\">2</span> &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    &#123; <span class=\"attr\">typeName:</span> <span class=\"string\">&#x27;项目合同金额（万）&#x27;</span>, <span class=\"attr\">projStatus:</span> <span class=\"number\">1</span>, <span class=\"attr\">total_1:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_2:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_3:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_4:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_5:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_6:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_7:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_8:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_9:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_10:</span> <span class=\"number\">2</span> &#125; </span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n\n<p>这就需要自己进行艰苦的数据处理了。。。<br>根据他字段返回的 <code>countProject //数量</code> <code>totalProjectAmount //项目造价</code> <code>totalContractAmount //项目合同</code>  这三个字段分类把数据重新组合成三个数组。</p>\n<figure class=\"highlight reasonml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deep<span class=\"constructor\">DealArr(<span class=\"params\">data</span>, <span class=\"params\">num</span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> countProject = <span class=\"literal\">[]</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> totalProjectAmount = <span class=\"literal\">[]</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> totalContractAmount = <span class=\"literal\">[]</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (num<span class=\"operator\"> === </span><span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> _data = this.utils.copy(data);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">_data</span>.</span></span>length; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> ind = _data<span class=\"literal\">[<span class=\"identifier\">i</span>]</span>.projStatus</span><br><span class=\"line\">            const dataObj = &#123;&#125;</span><br><span class=\"line\">            dataObj.projStatus = _data<span class=\"literal\">[<span class=\"identifier\">i</span>]</span>.projStatus</span><br><span class=\"line\">            dataObj<span class=\"literal\">[&#x27;<span class=\"identifier\">total_</span>&#x27; + <span class=\"identifier\">ind</span>]</span> = _data<span class=\"literal\">[<span class=\"identifier\">i</span>]</span>.countProject</span><br><span class=\"line\">            countProject.push(dataObj)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        countProject.splice(<span class=\"number\">0</span>, <span class=\"number\">0</span>, &#123; typeName: &#x27;数量&#x27; &#125;)</span><br><span class=\"line\">        return countProject;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (num<span class=\"operator\"> === </span><span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> _data = this.utils.copy(data);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">_data</span>.</span></span>length; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> ind = _data<span class=\"literal\">[<span class=\"identifier\">i</span>]</span>.projStatus</span><br><span class=\"line\">            const dataObj = &#123;&#125;</span><br><span class=\"line\">            dataObj.projStatus = _data<span class=\"literal\">[<span class=\"identifier\">i</span>]</span>.projStatus</span><br><span class=\"line\">            dataObj<span class=\"literal\">[&#x27;<span class=\"identifier\">total_</span>&#x27; + <span class=\"identifier\">ind</span>]</span> = _data<span class=\"literal\">[<span class=\"identifier\">i</span>]</span>.totalProjectAmount</span><br><span class=\"line\">            totalProjectAmount.push(dataObj)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        totalProjectAmount.splice(<span class=\"number\">0</span>, <span class=\"number\">0</span>, &#123; typeName: &#x27;项目造价金额（万）&#x27; &#125;)</span><br><span class=\"line\">        return totalProjectAmount;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> _data = this.utils.copy(data);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">_data</span>.</span></span>length; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> ind = _data<span class=\"literal\">[<span class=\"identifier\">i</span>]</span>.projStatus</span><br><span class=\"line\">            const dataObj = &#123;&#125;</span><br><span class=\"line\">            dataObj.projStatus = _data<span class=\"literal\">[<span class=\"identifier\">i</span>]</span>.projStatus</span><br><span class=\"line\">            dataObj<span class=\"literal\">[&#x27;<span class=\"identifier\">total_</span>&#x27; + <span class=\"identifier\">ind</span>]</span> = _data<span class=\"literal\">[<span class=\"identifier\">i</span>]</span>.totalContractAmount</span><br><span class=\"line\">            totalContractAmount.push(dataObj)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        totalContractAmount.splice(<span class=\"number\">0</span>, <span class=\"number\">0</span>, &#123; typeName: &#x27;项目合同金额（万）&#x27; &#125;)</span><br><span class=\"line\">        return totalContractAmount;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">* 处理返回数组</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\">deal<span class=\"constructor\">Arry(<span class=\"params\">data</span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> _data = this.utils.copy(data);<span class=\"comment\">//这个data 就是后端返回的初始结构的数据</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> countProject = <span class=\"literal\">[]</span>; <span class=\"comment\">//数量</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> totalProjectAmount = <span class=\"literal\">[]</span>;<span class=\"comment\">//项目造价</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> totalContractAmount = <span class=\"literal\">[]</span>; <span class=\"comment\">//项目合同</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//处理出来的结果是类似 [&#123; typeName: &#x27;数量&#x27;, projStatus: 1, total_1: 2, total_2: 2, total_3: 2, total_4: 2, total_5: 2, total_6: 2, total_7: 2, total_8: 2, total_9: 2, total_10: 2 &#125;]这种数组结构</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">_data</span>.</span></span>length; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (_data<span class=\"literal\">[<span class=\"identifier\">i</span>]</span>.countProject<span class=\"operator\"> || </span>_data<span class=\"literal\">[<span class=\"identifier\">i</span>]</span>.countProject<span class=\"operator\"> === </span><span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            countProject.push(&#123;</span><br><span class=\"line\">                projStatus: _data<span class=\"literal\">[<span class=\"identifier\">i</span>]</span>.projStatus,</span><br><span class=\"line\">                countProject: _data<span class=\"literal\">[<span class=\"identifier\">i</span>]</span>.countProject</span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (_data<span class=\"literal\">[<span class=\"identifier\">i</span>]</span>.totalProjectAmount<span class=\"operator\"> || </span>_data<span class=\"literal\">[<span class=\"identifier\">i</span>]</span>.totalProjectAmount<span class=\"operator\"> === </span><span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            totalProjectAmount.push(&#123;</span><br><span class=\"line\">                projStatus: _data<span class=\"literal\">[<span class=\"identifier\">i</span>]</span>.projStatus,</span><br><span class=\"line\">                totalProjectAmount:  _data<span class=\"literal\">[<span class=\"identifier\">i</span>]</span>.totalProjectAmount</span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (_data<span class=\"literal\">[<span class=\"identifier\">i</span>]</span>.totalContractAmount<span class=\"operator\"> || </span>_data<span class=\"literal\">[<span class=\"identifier\">i</span>]</span>.totalContractAmount<span class=\"operator\"> === </span><span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            totalContractAmount.push(&#123;</span><br><span class=\"line\">                projStatus: _data<span class=\"literal\">[<span class=\"identifier\">i</span>]</span>.projStatus,</span><br><span class=\"line\">                totalContractAmount: _data<span class=\"literal\">[<span class=\"identifier\">i</span>]</span>.totalContractAmount</span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//因为有三行，所以需要调用deepDealArr这个函数三次 得到各自三个数组</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">let</span> _countProject = this.deep<span class=\"constructor\">DealArr(<span class=\"params\">countProject</span>, 1)</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> _totalProjectAmount = this.deep<span class=\"constructor\">DealArr(<span class=\"params\">totalProjectAmount</span>, 2)</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> _totalContractAmount = this.deep<span class=\"constructor\">DealArr(<span class=\"params\">totalContractAmount</span>, 3)</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//以下是为了把数组转成对象，然后把三行对象塞进数组中，这样表格就能出来了，</span></span><br><span class=\"line\">    关键用到了<span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">Object</span>.</span></span>assign<span class=\"literal\">()</span> 函数循环数组转成对象</span><br><span class=\"line\">    <span class=\"keyword\">let</span> _count = &#123;&#125;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> _totalP = &#123;&#125;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> _totalC = &#123;&#125;</span><br><span class=\"line\">    <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">_countProject</span>.</span></span>map(<span class=\"keyword\">function</span> (e,item) &#123;                        </span><br><span class=\"line\">        <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">Object</span>.</span></span>assign(_count, e);</span><br><span class=\"line\">    &#125;);       </span><br><span class=\"line\">    <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">_totalProjectAmount</span>.</span></span>map(<span class=\"keyword\">function</span> (e,item) &#123;                        </span><br><span class=\"line\">        <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">Object</span>.</span></span>assign(_totalP, e);</span><br><span class=\"line\">    &#125;);        </span><br><span class=\"line\">    <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">_totalContractAmount</span>.</span></span>map(<span class=\"keyword\">function</span> (e,item) &#123;                        </span><br><span class=\"line\">        <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">Object</span>.</span></span>assign(_totalC, e);</span><br><span class=\"line\">    &#125;);      </span><br><span class=\"line\">    <span class=\"keyword\">let</span> _newTable = <span class=\"literal\">[</span></span><br><span class=\"line\"><span class=\"literal\">        <span class=\"identifier\">_count</span>,</span></span><br><span class=\"line\"><span class=\"literal\">        <span class=\"identifier\">_totalP</span>,</span></span><br><span class=\"line\"><span class=\"literal\">        <span class=\"identifier\">_totalC</span></span></span><br><span class=\"line\"><span class=\"literal\">    ]</span></span><br><span class=\"line\"></span><br><span class=\"line\">    this.table.data = _newTable</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这是模板文件：</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;el-<span class=\"keyword\">table</span> :data=&quot;table.data&quot; style=&quot;width: 100%; margin-top: 20px;&quot; :loading=&quot;tableLoading&quot;&gt;</span><br><span class=\"line\">    &lt;el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span> prop=&quot;typeName&quot; label=&quot;条目&quot;&gt;&lt;/el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span>&gt;</span><br><span class=\"line\">    &lt;el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span> prop=&quot;total_1&quot; label=&quot;报备中&quot;&gt;&lt;/el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span>&gt;</span><br><span class=\"line\">    &lt;el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span> prop=&quot;total_2&quot; label=&quot;已报备&quot;&gt;&lt;/el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span>&gt;</span><br><span class=\"line\">    &lt;el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span> prop=&quot;total_3&quot; label=&quot;投标中&quot;&gt;&lt;/el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span>&gt; </span><br><span class=\"line\">    &lt;el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span> prop=&quot;total_4&quot; label=&quot;已中标&quot;&gt;&lt;/el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span>&gt;</span><br><span class=\"line\">    &lt;el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span> prop=&quot;total_6&quot; label=&quot;在建中&quot;&gt;&lt;/el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span>&gt;</span><br><span class=\"line\">    &lt;el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span> prop=&quot;total_7&quot; label=&quot;已竣工&quot;&gt;&lt;/el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span>&gt;</span><br><span class=\"line\">    &lt;el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span> prop=&quot;total_9&quot; label=&quot;已关闭&quot;&gt;&lt;/el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span>&gt;</span><br><span class=\"line\">    &lt;el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span> prop=&quot;total_8&quot; label=&quot;已过期&quot;&gt;&lt;/el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span>&gt;</span><br><span class=\"line\">    &lt;el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span> prop=&quot;total_10&quot; label=&quot;已删除&quot;&gt;&lt;/el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span>&gt;</span><br><span class=\"line\">    &lt;empty </span><br><span class=\"line\">        v-<span class=\"keyword\">if</span>=&quot;table.data.length == 0&quot;</span><br><span class=\"line\">        slot=&quot;empty&quot;</span><br><span class=\"line\">        style=&quot;height: 500px&quot;</span><br><span class=\"line\">        tips=&quot;抱歉！暂时没有数据&quot; </span><br><span class=\"line\">        smallTips=&quot;暂时还没有相关的数据可以展示&quot;</span><br><span class=\"line\">        &gt;</span><br><span class=\"line\">        &lt;img src=&quot;~/assets/svg/table-empty.svg&quot; slot=&quot;img&quot;/&gt;</span><br><span class=\"line\">    &lt;/empty&gt;</span><br><span class=\"line\">&lt;/el-<span class=\"keyword\">table</span>&gt;</span><br></pre></td></tr></table></figure>\n<p>用total_的后面的数字来对应列的状态值，这样就能一一对应上了，最后附上完成的效果图</p>\n<p><img src=\"5.jpg\"></p>\n","site":{"data":{}},"excerpt":"<p>有个报表统计的需求，先上需求图：</p>","more":"<p><img src=\"1.jpg\"><br>咋一看，好像挺简单啊，不就是一个表格吗？<br>这么想那就大错特错了。这个需求实际上只有三行，也就是说需要统计“数量”，“项目造价金额”，“项目合同金额”这三个字段在不同状态下的值，也就是各列的“已报备”，“已中标”…. 等等。我们知道如果要实现这一的需求，必须要把“数量”，“项目造价金额”，“项目合同金额”这三个字段在各列中当成一个字段来处理，这样才会显示三行。比如element-ui的table的简单例子：<br><img src=\"2.jpg\"><br><img src=\"3.jpg\"><br>那后端就要返回这样的格式了<br><img src=\"4.jpg\"><br><font color=red>坑就坑在我们这个后端返回的数据结构上，他说他只能按照状态查询结果返回给我！</font></p>\n<h3 id=\"来看看他返回的数据结构是什么：\"><a href=\"#来看看他返回的数据结构是什么：\" class=\"headerlink\" title=\"来看看他返回的数据结构是什么：\"></a>来看看他返回的数据结构是什么：</h3><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">&quot;code&quot;</span>:<span class=\"string\">&quot;200&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;message&quot;</span>:<span class=\"string\">&quot;成功&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;responseBody&quot;</span>:&#123;</span><br><span class=\"line\">        <span class=\"attr\">&quot;code&quot;</span>:<span class=\"string\">&quot;1&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;data&quot;</span>:[</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"attr\">&quot;averageContractAmount&quot;</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;countBuliding&quot;</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;countContract&quot;</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;countProject&quot;</span>:<span class=\"number\">2</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;dayTime&quot;</span>:<span class=\"literal\">null</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;projStatus&quot;</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;projStatusName&quot;</span>:<span class=\"string\">&quot;草稿&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;totalContractAmount&quot;</span>:<span class=\"number\">0.00</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;totalProjectAmount&quot;</span>:<span class=\"number\">17.94</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;totalReturnAmount&quot;</span>:<span class=\"number\">0.00</span></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"attr\">&quot;averageContractAmount&quot;</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;countBuliding&quot;</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;countContract&quot;</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;countProject&quot;</span>:<span class=\"number\">12</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;dayTime&quot;</span>:<span class=\"literal\">null</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;projStatus&quot;</span>:<span class=\"number\">1</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;projStatusName&quot;</span>:<span class=\"string\">&quot;报备中&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;totalContractAmount&quot;</span>:<span class=\"number\">0.00</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;totalProjectAmount&quot;</span>:<span class=\"number\">103.65</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;totalReturnAmount&quot;</span>:<span class=\"number\">0.00</span></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"attr\">&quot;averageContractAmount&quot;</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;countBuliding&quot;</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;countContract&quot;</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;countProject&quot;</span>:<span class=\"number\">17</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;dayTime&quot;</span>:<span class=\"literal\">null</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;projStatus&quot;</span>:<span class=\"number\">2</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;projStatusName&quot;</span>:<span class=\"string\">&quot;已报备&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;totalContractAmount&quot;</span>:<span class=\"number\">0.00</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;totalProjectAmount&quot;</span>:<span class=\"number\">5732.99</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;totalReturnAmount&quot;</span>:<span class=\"number\">0.00</span></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"attr\">&quot;averageContractAmount&quot;</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;countBuliding&quot;</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;countContract&quot;</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;countProject&quot;</span>:<span class=\"number\">5</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;dayTime&quot;</span>:<span class=\"literal\">null</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;projStatus&quot;</span>:<span class=\"number\">4</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;projStatusName&quot;</span>:<span class=\"string\">&quot;已中标&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;totalContractAmount&quot;</span>:<span class=\"number\">4478.88</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;totalProjectAmount&quot;</span>:<span class=\"number\">18.11</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;totalReturnAmount&quot;</span>:<span class=\"number\">0.00</span></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"attr\">&quot;averageContractAmount&quot;</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;countBuliding&quot;</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;countContract&quot;</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;countProject&quot;</span>:<span class=\"number\">6</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;dayTime&quot;</span>:<span class=\"literal\">null</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;projStatus&quot;</span>:<span class=\"number\">6</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;projStatusName&quot;</span>:<span class=\"string\">&quot;建设中&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;totalContractAmount&quot;</span>:<span class=\"number\">14.10</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;totalProjectAmount&quot;</span>:<span class=\"number\">154.01</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;totalReturnAmount&quot;</span>:<span class=\"number\">0.00</span></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"attr\">&quot;averageContractAmount&quot;</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;countBuliding&quot;</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;countContract&quot;</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;countProject&quot;</span>:<span class=\"number\">1</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;dayTime&quot;</span>:<span class=\"literal\">null</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;projStatus&quot;</span>:<span class=\"number\">7</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;projStatusName&quot;</span>:<span class=\"string\">&quot;已竣工&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;totalContractAmount&quot;</span>:<span class=\"number\">1.00</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;totalProjectAmount&quot;</span>:<span class=\"number\">1.00</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;totalReturnAmount&quot;</span>:<span class=\"number\">0.00</span></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"attr\">&quot;averageContractAmount&quot;</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;countBuliding&quot;</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;countContract&quot;</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;countProject&quot;</span>:<span class=\"number\">1</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;dayTime&quot;</span>:<span class=\"literal\">null</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;projStatus&quot;</span>:<span class=\"number\">10</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;projStatusName&quot;</span>:<span class=\"string\">&quot;已删除&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;totalContractAmount&quot;</span>:<span class=\"number\">0.00</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;totalProjectAmount&quot;</span>:<span class=\"number\">0.12</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;totalReturnAmount&quot;</span>:<span class=\"number\">0.00</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        ],</span><br><span class=\"line\">        <span class=\"attr\">&quot;message&quot;</span>:<span class=\"string\">&quot;操作成功&quot;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>其中<code>projStatus</code>就是上面提到的“报备中”，“已中标”等等列的状态值了，但是这样渲染出来的表格是10行，因为他数组没有处理，直接有多少个状态有值就返回多少条记录。实际上我前端这边需要的字段是这样的 </p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[</span><br><span class=\"line\">    &#123; <span class=\"attr\">typeName:</span> <span class=\"string\">&#x27;数量&#x27;</span>, <span class=\"attr\">projStatus:</span> <span class=\"number\">1</span>, <span class=\"attr\">total_1:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_2:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_3:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_4:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_5:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_6:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_7:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_8:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_9:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_10:</span> <span class=\"number\">2</span> &#125;,</span><br><span class=\"line\">    &#123; <span class=\"attr\">typeName:</span> <span class=\"string\">&#x27;项目造价金额（万）&#x27;</span>, <span class=\"attr\">projStatus:</span> <span class=\"number\">1</span>, <span class=\"attr\">total_1:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_2:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_3:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_4:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_5:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_6:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_7:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_8:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_9:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_10:</span> <span class=\"number\">2</span> &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    &#123; <span class=\"attr\">typeName:</span> <span class=\"string\">&#x27;项目合同金额（万）&#x27;</span>, <span class=\"attr\">projStatus:</span> <span class=\"number\">1</span>, <span class=\"attr\">total_1:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_2:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_3:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_4:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_5:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_6:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_7:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_8:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_9:</span> <span class=\"number\">2</span>, <span class=\"attr\">total_10:</span> <span class=\"number\">2</span> &#125; </span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n\n<p>这就需要自己进行艰苦的数据处理了。。。<br>根据他字段返回的 <code>countProject //数量</code> <code>totalProjectAmount //项目造价</code> <code>totalContractAmount //项目合同</code>  这三个字段分类把数据重新组合成三个数组。</p>\n<figure class=\"highlight reasonml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deep<span class=\"constructor\">DealArr(<span class=\"params\">data</span>, <span class=\"params\">num</span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> countProject = <span class=\"literal\">[]</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> totalProjectAmount = <span class=\"literal\">[]</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> totalContractAmount = <span class=\"literal\">[]</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (num<span class=\"operator\"> === </span><span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> _data = this.utils.copy(data);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">_data</span>.</span></span>length; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> ind = _data<span class=\"literal\">[<span class=\"identifier\">i</span>]</span>.projStatus</span><br><span class=\"line\">            const dataObj = &#123;&#125;</span><br><span class=\"line\">            dataObj.projStatus = _data<span class=\"literal\">[<span class=\"identifier\">i</span>]</span>.projStatus</span><br><span class=\"line\">            dataObj<span class=\"literal\">[&#x27;<span class=\"identifier\">total_</span>&#x27; + <span class=\"identifier\">ind</span>]</span> = _data<span class=\"literal\">[<span class=\"identifier\">i</span>]</span>.countProject</span><br><span class=\"line\">            countProject.push(dataObj)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        countProject.splice(<span class=\"number\">0</span>, <span class=\"number\">0</span>, &#123; typeName: &#x27;数量&#x27; &#125;)</span><br><span class=\"line\">        return countProject;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (num<span class=\"operator\"> === </span><span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> _data = this.utils.copy(data);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">_data</span>.</span></span>length; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> ind = _data<span class=\"literal\">[<span class=\"identifier\">i</span>]</span>.projStatus</span><br><span class=\"line\">            const dataObj = &#123;&#125;</span><br><span class=\"line\">            dataObj.projStatus = _data<span class=\"literal\">[<span class=\"identifier\">i</span>]</span>.projStatus</span><br><span class=\"line\">            dataObj<span class=\"literal\">[&#x27;<span class=\"identifier\">total_</span>&#x27; + <span class=\"identifier\">ind</span>]</span> = _data<span class=\"literal\">[<span class=\"identifier\">i</span>]</span>.totalProjectAmount</span><br><span class=\"line\">            totalProjectAmount.push(dataObj)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        totalProjectAmount.splice(<span class=\"number\">0</span>, <span class=\"number\">0</span>, &#123; typeName: &#x27;项目造价金额（万）&#x27; &#125;)</span><br><span class=\"line\">        return totalProjectAmount;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> _data = this.utils.copy(data);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">_data</span>.</span></span>length; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> ind = _data<span class=\"literal\">[<span class=\"identifier\">i</span>]</span>.projStatus</span><br><span class=\"line\">            const dataObj = &#123;&#125;</span><br><span class=\"line\">            dataObj.projStatus = _data<span class=\"literal\">[<span class=\"identifier\">i</span>]</span>.projStatus</span><br><span class=\"line\">            dataObj<span class=\"literal\">[&#x27;<span class=\"identifier\">total_</span>&#x27; + <span class=\"identifier\">ind</span>]</span> = _data<span class=\"literal\">[<span class=\"identifier\">i</span>]</span>.totalContractAmount</span><br><span class=\"line\">            totalContractAmount.push(dataObj)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        totalContractAmount.splice(<span class=\"number\">0</span>, <span class=\"number\">0</span>, &#123; typeName: &#x27;项目合同金额（万）&#x27; &#125;)</span><br><span class=\"line\">        return totalContractAmount;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">* 处理返回数组</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\">deal<span class=\"constructor\">Arry(<span class=\"params\">data</span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> _data = this.utils.copy(data);<span class=\"comment\">//这个data 就是后端返回的初始结构的数据</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> countProject = <span class=\"literal\">[]</span>; <span class=\"comment\">//数量</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> totalProjectAmount = <span class=\"literal\">[]</span>;<span class=\"comment\">//项目造价</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> totalContractAmount = <span class=\"literal\">[]</span>; <span class=\"comment\">//项目合同</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//处理出来的结果是类似 [&#123; typeName: &#x27;数量&#x27;, projStatus: 1, total_1: 2, total_2: 2, total_3: 2, total_4: 2, total_5: 2, total_6: 2, total_7: 2, total_8: 2, total_9: 2, total_10: 2 &#125;]这种数组结构</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">_data</span>.</span></span>length; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (_data<span class=\"literal\">[<span class=\"identifier\">i</span>]</span>.countProject<span class=\"operator\"> || </span>_data<span class=\"literal\">[<span class=\"identifier\">i</span>]</span>.countProject<span class=\"operator\"> === </span><span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            countProject.push(&#123;</span><br><span class=\"line\">                projStatus: _data<span class=\"literal\">[<span class=\"identifier\">i</span>]</span>.projStatus,</span><br><span class=\"line\">                countProject: _data<span class=\"literal\">[<span class=\"identifier\">i</span>]</span>.countProject</span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (_data<span class=\"literal\">[<span class=\"identifier\">i</span>]</span>.totalProjectAmount<span class=\"operator\"> || </span>_data<span class=\"literal\">[<span class=\"identifier\">i</span>]</span>.totalProjectAmount<span class=\"operator\"> === </span><span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            totalProjectAmount.push(&#123;</span><br><span class=\"line\">                projStatus: _data<span class=\"literal\">[<span class=\"identifier\">i</span>]</span>.projStatus,</span><br><span class=\"line\">                totalProjectAmount:  _data<span class=\"literal\">[<span class=\"identifier\">i</span>]</span>.totalProjectAmount</span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (_data<span class=\"literal\">[<span class=\"identifier\">i</span>]</span>.totalContractAmount<span class=\"operator\"> || </span>_data<span class=\"literal\">[<span class=\"identifier\">i</span>]</span>.totalContractAmount<span class=\"operator\"> === </span><span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            totalContractAmount.push(&#123;</span><br><span class=\"line\">                projStatus: _data<span class=\"literal\">[<span class=\"identifier\">i</span>]</span>.projStatus,</span><br><span class=\"line\">                totalContractAmount: _data<span class=\"literal\">[<span class=\"identifier\">i</span>]</span>.totalContractAmount</span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//因为有三行，所以需要调用deepDealArr这个函数三次 得到各自三个数组</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">let</span> _countProject = this.deep<span class=\"constructor\">DealArr(<span class=\"params\">countProject</span>, 1)</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> _totalProjectAmount = this.deep<span class=\"constructor\">DealArr(<span class=\"params\">totalProjectAmount</span>, 2)</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> _totalContractAmount = this.deep<span class=\"constructor\">DealArr(<span class=\"params\">totalContractAmount</span>, 3)</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//以下是为了把数组转成对象，然后把三行对象塞进数组中，这样表格就能出来了，</span></span><br><span class=\"line\">    关键用到了<span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">Object</span>.</span></span>assign<span class=\"literal\">()</span> 函数循环数组转成对象</span><br><span class=\"line\">    <span class=\"keyword\">let</span> _count = &#123;&#125;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> _totalP = &#123;&#125;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> _totalC = &#123;&#125;</span><br><span class=\"line\">    <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">_countProject</span>.</span></span>map(<span class=\"keyword\">function</span> (e,item) &#123;                        </span><br><span class=\"line\">        <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">Object</span>.</span></span>assign(_count, e);</span><br><span class=\"line\">    &#125;);       </span><br><span class=\"line\">    <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">_totalProjectAmount</span>.</span></span>map(<span class=\"keyword\">function</span> (e,item) &#123;                        </span><br><span class=\"line\">        <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">Object</span>.</span></span>assign(_totalP, e);</span><br><span class=\"line\">    &#125;);        </span><br><span class=\"line\">    <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">_totalContractAmount</span>.</span></span>map(<span class=\"keyword\">function</span> (e,item) &#123;                        </span><br><span class=\"line\">        <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">Object</span>.</span></span>assign(_totalC, e);</span><br><span class=\"line\">    &#125;);      </span><br><span class=\"line\">    <span class=\"keyword\">let</span> _newTable = <span class=\"literal\">[</span></span><br><span class=\"line\"><span class=\"literal\">        <span class=\"identifier\">_count</span>,</span></span><br><span class=\"line\"><span class=\"literal\">        <span class=\"identifier\">_totalP</span>,</span></span><br><span class=\"line\"><span class=\"literal\">        <span class=\"identifier\">_totalC</span></span></span><br><span class=\"line\"><span class=\"literal\">    ]</span></span><br><span class=\"line\"></span><br><span class=\"line\">    this.table.data = _newTable</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这是模板文件：</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;el-<span class=\"keyword\">table</span> :data=&quot;table.data&quot; style=&quot;width: 100%; margin-top: 20px;&quot; :loading=&quot;tableLoading&quot;&gt;</span><br><span class=\"line\">    &lt;el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span> prop=&quot;typeName&quot; label=&quot;条目&quot;&gt;&lt;/el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span>&gt;</span><br><span class=\"line\">    &lt;el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span> prop=&quot;total_1&quot; label=&quot;报备中&quot;&gt;&lt;/el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span>&gt;</span><br><span class=\"line\">    &lt;el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span> prop=&quot;total_2&quot; label=&quot;已报备&quot;&gt;&lt;/el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span>&gt;</span><br><span class=\"line\">    &lt;el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span> prop=&quot;total_3&quot; label=&quot;投标中&quot;&gt;&lt;/el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span>&gt; </span><br><span class=\"line\">    &lt;el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span> prop=&quot;total_4&quot; label=&quot;已中标&quot;&gt;&lt;/el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span>&gt;</span><br><span class=\"line\">    &lt;el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span> prop=&quot;total_6&quot; label=&quot;在建中&quot;&gt;&lt;/el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span>&gt;</span><br><span class=\"line\">    &lt;el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span> prop=&quot;total_7&quot; label=&quot;已竣工&quot;&gt;&lt;/el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span>&gt;</span><br><span class=\"line\">    &lt;el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span> prop=&quot;total_9&quot; label=&quot;已关闭&quot;&gt;&lt;/el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span>&gt;</span><br><span class=\"line\">    &lt;el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span> prop=&quot;total_8&quot; label=&quot;已过期&quot;&gt;&lt;/el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span>&gt;</span><br><span class=\"line\">    &lt;el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span> prop=&quot;total_10&quot; label=&quot;已删除&quot;&gt;&lt;/el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span>&gt;</span><br><span class=\"line\">    &lt;empty </span><br><span class=\"line\">        v-<span class=\"keyword\">if</span>=&quot;table.data.length == 0&quot;</span><br><span class=\"line\">        slot=&quot;empty&quot;</span><br><span class=\"line\">        style=&quot;height: 500px&quot;</span><br><span class=\"line\">        tips=&quot;抱歉！暂时没有数据&quot; </span><br><span class=\"line\">        smallTips=&quot;暂时还没有相关的数据可以展示&quot;</span><br><span class=\"line\">        &gt;</span><br><span class=\"line\">        &lt;img src=&quot;~/assets/svg/table-empty.svg&quot; slot=&quot;img&quot;/&gt;</span><br><span class=\"line\">    &lt;/empty&gt;</span><br><span class=\"line\">&lt;/el-<span class=\"keyword\">table</span>&gt;</span><br></pre></td></tr></table></figure>\n<p>用total_的后面的数字来对应列的状态值，这样就能一一对应上了，最后附上完成的效果图</p>\n<p><img src=\"5.jpg\"></p>"},{"title":"在 create-react-app 中使用Ant Design中的坑","abbrlink":"204a2bf8","date":"2020-06-04T10:51:08.000Z","_content":"\n## Ant Design 中的文档有错误，参数变了\n\n这是原来的配置：\n<!-- more -->\n```\n// craco.config.js\nconst CracoLessPlugin = require('craco-less');\n\nmodule.exports = {\n  plugins: [\n    {\n      plugin: CracoLessPlugin,\n      options: {\n        lessLoaderOptions: {\n          modifyVars: { '@primary-color': '#1DA57A' },\n          javascriptEnabled: true,\n        },\n      },\n    },\n  ],\n};\n```\n\n这是正确的配置：\n\n```\n// craco.config.js\nconst CracoLessPlugin = require('craco-less');\n\nmodule.exports = {\n  plugins: [\n    {\n      plugin: CracoLessPlugin,\n      options: {\n        lessLoaderOptions: {\n           lessOptions:{\n                modifyVars: { '@primary-color': '#1DA57A' },\n                javascriptEnabled: true,\n            }\n        },\n      },\n    },\n  ],\n};\n```\n","source":"_posts/在-create-react-app-中使用Ant-Design中的坑.md","raw":"---\ntitle: 在 create-react-app 中使用Ant Design中的坑\nabbrlink: 204a2bf8\ndate: 2020-06-04 18:51:08\ntags: react,\ncategories: 前端\n---\n\n## Ant Design 中的文档有错误，参数变了\n\n这是原来的配置：\n<!-- more -->\n```\n// craco.config.js\nconst CracoLessPlugin = require('craco-less');\n\nmodule.exports = {\n  plugins: [\n    {\n      plugin: CracoLessPlugin,\n      options: {\n        lessLoaderOptions: {\n          modifyVars: { '@primary-color': '#1DA57A' },\n          javascriptEnabled: true,\n        },\n      },\n    },\n  ],\n};\n```\n\n这是正确的配置：\n\n```\n// craco.config.js\nconst CracoLessPlugin = require('craco-less');\n\nmodule.exports = {\n  plugins: [\n    {\n      plugin: CracoLessPlugin,\n      options: {\n        lessLoaderOptions: {\n           lessOptions:{\n                modifyVars: { '@primary-color': '#1DA57A' },\n                javascriptEnabled: true,\n            }\n        },\n      },\n    },\n  ],\n};\n```\n","slug":"在-create-react-app-中使用Ant-Design中的坑","published":1,"updated":"2020-08-12T04:54:47.229Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdqxnc37000nd7m0bgqrbjwz","content":"<h2 id=\"Ant-Design-中的文档有错误，参数变了\"><a href=\"#Ant-Design-中的文档有错误，参数变了\" class=\"headerlink\" title=\"Ant Design 中的文档有错误，参数变了\"></a>Ant Design 中的文档有错误，参数变了</h2><p>这是原来的配置：</p>\n<a id=\"more\"></a>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// craco.config.js</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> CracoLessPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;craco-less&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.<span class=\"built_in\">exports</span> = &#123;</span><br><span class=\"line\">  plugins: [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      plugin: CracoLessPlugin,</span><br><span class=\"line\">      options: &#123;</span><br><span class=\"line\">        lessLoaderOptions: &#123;</span><br><span class=\"line\">          modifyVars: &#123; <span class=\"string\">&#x27;@primary-color&#x27;</span>: <span class=\"string\">&#x27;#1DA57A&#x27;</span> &#125;,</span><br><span class=\"line\">          javascriptEnabled: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  ],</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>这是正确的配置：</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// craco.config.js</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> CracoLessPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;craco-less&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.<span class=\"built_in\">exports</span> = &#123;</span><br><span class=\"line\">  plugins: [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      plugin: CracoLessPlugin,</span><br><span class=\"line\">      options: &#123;</span><br><span class=\"line\">        lessLoaderOptions: &#123;</span><br><span class=\"line\">           lessOptions:&#123;</span><br><span class=\"line\">                modifyVars: &#123; <span class=\"string\">&#x27;@primary-color&#x27;</span>: <span class=\"string\">&#x27;#1DA57A&#x27;</span> &#125;,</span><br><span class=\"line\">                javascriptEnabled: <span class=\"literal\">true</span>,</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  ],</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<h2 id=\"Ant-Design-中的文档有错误，参数变了\"><a href=\"#Ant-Design-中的文档有错误，参数变了\" class=\"headerlink\" title=\"Ant Design 中的文档有错误，参数变了\"></a>Ant Design 中的文档有错误，参数变了</h2><p>这是原来的配置：</p>","more":"<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// craco.config.js</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> CracoLessPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;craco-less&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.<span class=\"built_in\">exports</span> = &#123;</span><br><span class=\"line\">  plugins: [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      plugin: CracoLessPlugin,</span><br><span class=\"line\">      options: &#123;</span><br><span class=\"line\">        lessLoaderOptions: &#123;</span><br><span class=\"line\">          modifyVars: &#123; <span class=\"string\">&#x27;@primary-color&#x27;</span>: <span class=\"string\">&#x27;#1DA57A&#x27;</span> &#125;,</span><br><span class=\"line\">          javascriptEnabled: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  ],</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>这是正确的配置：</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// craco.config.js</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> CracoLessPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;craco-less&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.<span class=\"built_in\">exports</span> = &#123;</span><br><span class=\"line\">  plugins: [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      plugin: CracoLessPlugin,</span><br><span class=\"line\">      options: &#123;</span><br><span class=\"line\">        lessLoaderOptions: &#123;</span><br><span class=\"line\">           lessOptions:&#123;</span><br><span class=\"line\">                modifyVars: &#123; <span class=\"string\">&#x27;@primary-color&#x27;</span>: <span class=\"string\">&#x27;#1DA57A&#x27;</span> &#125;,</span><br><span class=\"line\">                javascriptEnabled: <span class=\"literal\">true</span>,</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  ],</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>"},{"title":"在重启阿里云ubantu后nginx、mysql、pm2等的重启","abbrlink":"c20fd3fa","date":"2019-07-05T01:25:24.000Z","_content":"由于对linux的不熟，很多命令都记不住，2018年也是花了几天时间才把服务器环境搭起来，部署了nodejs的水研村官网前后端、部署了“账目随身记”小程序后端，并且利用nginx做了小程序需要的ssl证书转发https，现在已经忘了具体的操作了，免费ssl证书准备过期了，准备又得重新折腾了，下次一定得记录下来。\n<!-- more -->\n好了，在重启服务器之前得做点准备工作，得先找出nginx安装得目录，mysql安装得目录，到时候可以直接去到目录下直接执行例如./nginx这样来启动。我以为大多数linux安装目录都差不多，于是直接网上搜别人得，结果结果不是我想要的，后来我问了位前同事，用whereis nginx 来查找nginx的位置，然后出现了以下目录：\n![](2.png)\n红色圈起来的才是我的nginx的安装目录，nginx就是可执行文件，另外，经过多次摸索和回忆，配置文件在蓝色圈起来的地方，\n具体的位置是：\n![](1.png)\n`nginx -t`为查找nginx配置文件所在的目录。\n然后默认的default配置文件我没用，我自己写了个small.conf配置文件，里面配置了syc.iyuge.cn 水研村官网前台的转发地址，以及小程序需要的account后端的https的ssl配置\n具体代码如下：\n```\n\nserver {\n    listen 443;\n    server_name small.iyuge.cn;\n    access_log /var/www/log/small-access.log;\n    error_log  /var/www/log/small-error.log;\n    ssl on;\n    ssl_certificate   /etc/nginx/cert/214999081890300.pem; #指定服务器证书路径 \n    ssl_certificate_key /etc/nginx/cert/214999081890300.key; #指定私钥证书路径\n    ssl_session_timeout 5m;\n    #ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;\n    ssl_ciphers  ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP; #指定加密算法 \n    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;#指定SSL服务器端支持的协议版本 \n    ssl_prefer_server_ciphers on;\n\n    location / {\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header Host $http_host;\n        proxy_set_header X-NginX-Proxy true;\n        proxy_pass http://127.0.0.1:3000/;\n        proxy_redirect off;\n    }\n}\n\nserver {\n    listen 80;\n    server_name syc.iyuge.cn; #这是水研村前台官网的映射\n    \n    location / {\n       \n\troot /root/code/shuiyancun_vue;\n\tindex  index.html index.htm;\n    }\n}\n\n```\n至于这个证书是怎么跟我的account关联起来的，这个我还真的忘了，我没记错的话，account和shuiyancun_back都有个nginx.conf文件,去看了下，account居然没有？只有shuiyancun_back才有。\n想起来了，原来是需要在阿里云官网开放相应的端口后，外网才能访问的，而我是用pm2来启动项目的，也会有端口号，如图：\n![](3.png)\n<font color=#ff6a00>至于怎么制作ssl证书，等我两个月后证书过期了，再摸索一次记录下来吧</font>\n重启mginx的方法可以去到`/usr/sbin/nginx`目录，执行./nginx 启动。启动mysql的方式可以有两种：1.和nginx一样，但是要加用户名和密码，`./mysql  -u root -p` 然后输入密码就打开数据库了；2.直接 `mysql -u root -p` 输入密码。\n\n另外如果发现停止了PM2中某个项目的时候，还能运行，则说明这个程序已经以另外一种方式在运行了，我们需要查找正在运行的nodejs进程:`ps aux | grep node`\n发现有进程后，直接`kill 具体pid `就可以了\n\n最后就是项目的启动了，进到项目目录执行 `pm2 restart（或者start） pm2.json\n（因为有配置文件了）` 就可以启动项目了\n注意：<font color=#ff6a00>不知道为什么pm2只能监控watch一个项目，如果是两个都watch，另一个项目无法跑起来，所以我的水研村后台就不watch了</font>","source":"_posts/在重启阿里云ubantu后nginx、mysql、pm2等的重启.md","raw":"---\ntitle: 在重启阿里云ubantu后nginx、mysql、pm2等的重启\nabbrlink: c20fd3fa\ndate: 2019-07-05 09:25:24\ntags: linux\ncategories: linux\n---\n由于对linux的不熟，很多命令都记不住，2018年也是花了几天时间才把服务器环境搭起来，部署了nodejs的水研村官网前后端、部署了“账目随身记”小程序后端，并且利用nginx做了小程序需要的ssl证书转发https，现在已经忘了具体的操作了，免费ssl证书准备过期了，准备又得重新折腾了，下次一定得记录下来。\n<!-- more -->\n好了，在重启服务器之前得做点准备工作，得先找出nginx安装得目录，mysql安装得目录，到时候可以直接去到目录下直接执行例如./nginx这样来启动。我以为大多数linux安装目录都差不多，于是直接网上搜别人得，结果结果不是我想要的，后来我问了位前同事，用whereis nginx 来查找nginx的位置，然后出现了以下目录：\n![](2.png)\n红色圈起来的才是我的nginx的安装目录，nginx就是可执行文件，另外，经过多次摸索和回忆，配置文件在蓝色圈起来的地方，\n具体的位置是：\n![](1.png)\n`nginx -t`为查找nginx配置文件所在的目录。\n然后默认的default配置文件我没用，我自己写了个small.conf配置文件，里面配置了syc.iyuge.cn 水研村官网前台的转发地址，以及小程序需要的account后端的https的ssl配置\n具体代码如下：\n```\n\nserver {\n    listen 443;\n    server_name small.iyuge.cn;\n    access_log /var/www/log/small-access.log;\n    error_log  /var/www/log/small-error.log;\n    ssl on;\n    ssl_certificate   /etc/nginx/cert/214999081890300.pem; #指定服务器证书路径 \n    ssl_certificate_key /etc/nginx/cert/214999081890300.key; #指定私钥证书路径\n    ssl_session_timeout 5m;\n    #ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;\n    ssl_ciphers  ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP; #指定加密算法 \n    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;#指定SSL服务器端支持的协议版本 \n    ssl_prefer_server_ciphers on;\n\n    location / {\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header Host $http_host;\n        proxy_set_header X-NginX-Proxy true;\n        proxy_pass http://127.0.0.1:3000/;\n        proxy_redirect off;\n    }\n}\n\nserver {\n    listen 80;\n    server_name syc.iyuge.cn; #这是水研村前台官网的映射\n    \n    location / {\n       \n\troot /root/code/shuiyancun_vue;\n\tindex  index.html index.htm;\n    }\n}\n\n```\n至于这个证书是怎么跟我的account关联起来的，这个我还真的忘了，我没记错的话，account和shuiyancun_back都有个nginx.conf文件,去看了下，account居然没有？只有shuiyancun_back才有。\n想起来了，原来是需要在阿里云官网开放相应的端口后，外网才能访问的，而我是用pm2来启动项目的，也会有端口号，如图：\n![](3.png)\n<font color=#ff6a00>至于怎么制作ssl证书，等我两个月后证书过期了，再摸索一次记录下来吧</font>\n重启mginx的方法可以去到`/usr/sbin/nginx`目录，执行./nginx 启动。启动mysql的方式可以有两种：1.和nginx一样，但是要加用户名和密码，`./mysql  -u root -p` 然后输入密码就打开数据库了；2.直接 `mysql -u root -p` 输入密码。\n\n另外如果发现停止了PM2中某个项目的时候，还能运行，则说明这个程序已经以另外一种方式在运行了，我们需要查找正在运行的nodejs进程:`ps aux | grep node`\n发现有进程后，直接`kill 具体pid `就可以了\n\n最后就是项目的启动了，进到项目目录执行 `pm2 restart（或者start） pm2.json\n（因为有配置文件了）` 就可以启动项目了\n注意：<font color=#ff6a00>不知道为什么pm2只能监控watch一个项目，如果是两个都watch，另一个项目无法跑起来，所以我的水研村后台就不watch了</font>","slug":"在重启阿里云ubantu后nginx、mysql、pm2等的重启","published":1,"updated":"2020-08-12T04:54:53.265Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdqxnc38000sd7m059w04lz4","content":"<p>由于对linux的不熟，很多命令都记不住，2018年也是花了几天时间才把服务器环境搭起来，部署了nodejs的水研村官网前后端、部署了“账目随身记”小程序后端，并且利用nginx做了小程序需要的ssl证书转发https，现在已经忘了具体的操作了，免费ssl证书准备过期了，准备又得重新折腾了，下次一定得记录下来。</p>\n<a id=\"more\"></a>\n<p>好了，在重启服务器之前得做点准备工作，得先找出nginx安装得目录，mysql安装得目录，到时候可以直接去到目录下直接执行例如./nginx这样来启动。我以为大多数linux安装目录都差不多，于是直接网上搜别人得，结果结果不是我想要的，后来我问了位前同事，用whereis nginx 来查找nginx的位置，然后出现了以下目录：<br><img src=\"2.png\"><br>红色圈起来的才是我的nginx的安装目录，nginx就是可执行文件，另外，经过多次摸索和回忆，配置文件在蓝色圈起来的地方，<br>具体的位置是：<br><img src=\"1.png\"><br><code>nginx -t</code>为查找nginx配置文件所在的目录。<br>然后默认的default配置文件我没用，我自己写了个small.conf配置文件，里面配置了syc.iyuge.cn 水研村官网前台的转发地址，以及小程序需要的account后端的https的ssl配置<br>具体代码如下：</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">server</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">listen</span> <span class=\"number\">443</span>;</span><br><span class=\"line\">    <span class=\"attribute\">server_name</span> small.iyuge.cn;</span><br><span class=\"line\">    <span class=\"attribute\">access_log</span> /var/www/log/small-access.log;</span><br><span class=\"line\">    <span class=\"attribute\">error_log</span>  /var/www/log/small-<span class=\"literal\">error</span>.log;</span><br><span class=\"line\">    <span class=\"attribute\">ssl</span> <span class=\"literal\">on</span>;</span><br><span class=\"line\">    <span class=\"attribute\">ssl_certificate</span>   /etc/nginx/cert/<span class=\"number\">214999081890300</span>.pem; <span class=\"comment\">#指定服务器证书路径 </span></span><br><span class=\"line\">    <span class=\"attribute\">ssl_certificate_key</span> /etc/nginx/cert/<span class=\"number\">214999081890300</span>.key; <span class=\"comment\">#指定私钥证书路径</span></span><br><span class=\"line\">    <span class=\"attribute\">ssl_session_timeout</span> <span class=\"number\">5m</span>;</span><br><span class=\"line\">    <span class=\"comment\">#ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;</span></span><br><span class=\"line\">    <span class=\"attribute\">ssl_ciphers</span>  ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP; <span class=\"comment\">#指定加密算法 </span></span><br><span class=\"line\">    <span class=\"attribute\">ssl_protocols</span> TLSv1 TLSv1.<span class=\"number\">1</span> TLSv1.<span class=\"number\">2</span>;<span class=\"comment\">#指定SSL服务器端支持的协议版本 </span></span><br><span class=\"line\">    <span class=\"attribute\">ssl_prefer_server_ciphers</span> <span class=\"literal\">on</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"attribute\">location</span> / &#123;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_set_header</span> X-Real-IP <span class=\"variable\">$remote_addr</span>;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_set_header</span> X-Forwarded-For <span class=\"variable\">$proxy_add_x_forwarded_for</span>;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_set_header</span> Host <span class=\"variable\">$http_host</span>;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_set_header</span> X-NginX-Proxy <span class=\"literal\">true</span>;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_pass</span> http://127.0.0.1:3000/;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_redirect</span> <span class=\"literal\">off</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">server</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">listen</span> <span class=\"number\">80</span>;</span><br><span class=\"line\">    <span class=\"attribute\">server_name</span> syc.iyuge.cn; <span class=\"comment\">#这是水研村前台官网的映射</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"attribute\">location</span> / &#123;</span><br><span class=\"line\">       </span><br><span class=\"line\">    <span class=\"attribute\">root</span> /root/code/shuiyancun_vue;</span><br><span class=\"line\">    <span class=\"attribute\">index</span>  index.html index.htm;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>至于这个证书是怎么跟我的account关联起来的，这个我还真的忘了，我没记错的话，account和shuiyancun_back都有个nginx.conf文件,去看了下，account居然没有？只有shuiyancun_back才有。<br>想起来了，原来是需要在阿里云官网开放相应的端口后，外网才能访问的，而我是用pm2来启动项目的，也会有端口号，如图：<br><img src=\"3.png\"><br><font color=#ff6a00>至于怎么制作ssl证书，等我两个月后证书过期了，再摸索一次记录下来吧</font><br>重启mginx的方法可以去到<code>/usr/sbin/nginx</code>目录，执行./nginx 启动。启动mysql的方式可以有两种：1.和nginx一样，但是要加用户名和密码，<code>./mysql  -u root -p</code> 然后输入密码就打开数据库了；2.直接 <code>mysql -u root -p</code> 输入密码。</p>\n<p>另外如果发现停止了PM2中某个项目的时候，还能运行，则说明这个程序已经以另外一种方式在运行了，我们需要查找正在运行的nodejs进程:<code>ps aux | grep node</code><br>发现有进程后，直接<code>kill 具体pid </code>就可以了</p>\n<p>最后就是项目的启动了，进到项目目录执行 <code>pm2 restart（或者start） pm2.json （因为有配置文件了）</code> 就可以启动项目了<br>注意：<font color=#ff6a00>不知道为什么pm2只能监控watch一个项目，如果是两个都watch，另一个项目无法跑起来，所以我的水研村后台就不watch了</font></p>\n","site":{"data":{}},"excerpt":"<p>由于对linux的不熟，很多命令都记不住，2018年也是花了几天时间才把服务器环境搭起来，部署了nodejs的水研村官网前后端、部署了“账目随身记”小程序后端，并且利用nginx做了小程序需要的ssl证书转发https，现在已经忘了具体的操作了，免费ssl证书准备过期了，准备又得重新折腾了，下次一定得记录下来。</p>","more":"<p>好了，在重启服务器之前得做点准备工作，得先找出nginx安装得目录，mysql安装得目录，到时候可以直接去到目录下直接执行例如./nginx这样来启动。我以为大多数linux安装目录都差不多，于是直接网上搜别人得，结果结果不是我想要的，后来我问了位前同事，用whereis nginx 来查找nginx的位置，然后出现了以下目录：<br><img src=\"2.png\"><br>红色圈起来的才是我的nginx的安装目录，nginx就是可执行文件，另外，经过多次摸索和回忆，配置文件在蓝色圈起来的地方，<br>具体的位置是：<br><img src=\"1.png\"><br><code>nginx -t</code>为查找nginx配置文件所在的目录。<br>然后默认的default配置文件我没用，我自己写了个small.conf配置文件，里面配置了syc.iyuge.cn 水研村官网前台的转发地址，以及小程序需要的account后端的https的ssl配置<br>具体代码如下：</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">server</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">listen</span> <span class=\"number\">443</span>;</span><br><span class=\"line\">    <span class=\"attribute\">server_name</span> small.iyuge.cn;</span><br><span class=\"line\">    <span class=\"attribute\">access_log</span> /var/www/log/small-access.log;</span><br><span class=\"line\">    <span class=\"attribute\">error_log</span>  /var/www/log/small-<span class=\"literal\">error</span>.log;</span><br><span class=\"line\">    <span class=\"attribute\">ssl</span> <span class=\"literal\">on</span>;</span><br><span class=\"line\">    <span class=\"attribute\">ssl_certificate</span>   /etc/nginx/cert/<span class=\"number\">214999081890300</span>.pem; <span class=\"comment\">#指定服务器证书路径 </span></span><br><span class=\"line\">    <span class=\"attribute\">ssl_certificate_key</span> /etc/nginx/cert/<span class=\"number\">214999081890300</span>.key; <span class=\"comment\">#指定私钥证书路径</span></span><br><span class=\"line\">    <span class=\"attribute\">ssl_session_timeout</span> <span class=\"number\">5m</span>;</span><br><span class=\"line\">    <span class=\"comment\">#ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;</span></span><br><span class=\"line\">    <span class=\"attribute\">ssl_ciphers</span>  ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP; <span class=\"comment\">#指定加密算法 </span></span><br><span class=\"line\">    <span class=\"attribute\">ssl_protocols</span> TLSv1 TLSv1.<span class=\"number\">1</span> TLSv1.<span class=\"number\">2</span>;<span class=\"comment\">#指定SSL服务器端支持的协议版本 </span></span><br><span class=\"line\">    <span class=\"attribute\">ssl_prefer_server_ciphers</span> <span class=\"literal\">on</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"attribute\">location</span> / &#123;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_set_header</span> X-Real-IP <span class=\"variable\">$remote_addr</span>;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_set_header</span> X-Forwarded-For <span class=\"variable\">$proxy_add_x_forwarded_for</span>;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_set_header</span> Host <span class=\"variable\">$http_host</span>;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_set_header</span> X-NginX-Proxy <span class=\"literal\">true</span>;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_pass</span> http://127.0.0.1:3000/;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_redirect</span> <span class=\"literal\">off</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">server</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">listen</span> <span class=\"number\">80</span>;</span><br><span class=\"line\">    <span class=\"attribute\">server_name</span> syc.iyuge.cn; <span class=\"comment\">#这是水研村前台官网的映射</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"attribute\">location</span> / &#123;</span><br><span class=\"line\">       </span><br><span class=\"line\">    <span class=\"attribute\">root</span> /root/code/shuiyancun_vue;</span><br><span class=\"line\">    <span class=\"attribute\">index</span>  index.html index.htm;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>至于这个证书是怎么跟我的account关联起来的，这个我还真的忘了，我没记错的话，account和shuiyancun_back都有个nginx.conf文件,去看了下，account居然没有？只有shuiyancun_back才有。<br>想起来了，原来是需要在阿里云官网开放相应的端口后，外网才能访问的，而我是用pm2来启动项目的，也会有端口号，如图：<br><img src=\"3.png\"><br><font color=#ff6a00>至于怎么制作ssl证书，等我两个月后证书过期了，再摸索一次记录下来吧</font><br>重启mginx的方法可以去到<code>/usr/sbin/nginx</code>目录，执行./nginx 启动。启动mysql的方式可以有两种：1.和nginx一样，但是要加用户名和密码，<code>./mysql  -u root -p</code> 然后输入密码就打开数据库了；2.直接 <code>mysql -u root -p</code> 输入密码。</p>\n<p>另外如果发现停止了PM2中某个项目的时候，还能运行，则说明这个程序已经以另外一种方式在运行了，我们需要查找正在运行的nodejs进程:<code>ps aux | grep node</code><br>发现有进程后，直接<code>kill 具体pid </code>就可以了</p>\n<p>最后就是项目的启动了，进到项目目录执行 <code>pm2 restart（或者start） pm2.json （因为有配置文件了）</code> 就可以启动项目了<br>注意：<font color=#ff6a00>不知道为什么pm2只能监控watch一个项目，如果是两个都watch，另一个项目无法跑起来，所以我的水研村后台就不watch了</font></p>"},{"title":"实现一个简单的深拷贝","abbrlink":"25ca6631","date":"2019-03-30T11:42:44.000Z","_content":"\n在js中经常需要用到变量的拷贝，比如`var a=1;var b=a;` 这个时候修改b的值，a不会改变`b=2;console.log(a); //1`,但是需要注意，这种方式拷贝属于浅拷贝，只局限在简单类型的拷贝：string、number、boolean、null、undefiend。如果你用这种方式拷贝一个数组或者对象，那么就得注意了，\n<!-- more -->\n```\nvar a=[1,2,3]; \nvar b=a;\nb[0]=66;\nconsole.log(a); //[66,2,3];\n```\n可以看到，b的值变了，a也变了，所以对于数组和对象不能用这种浅拷贝，因为拷贝的只是引用地址，实际上还是同一个，不过在有一种情况下，修改复制后的变量，被复制的变量不会跟着改变，那就是复制后，给复制变量重新定义值得时候，原来的变量不会受影响，因为此时已经给复制后的变量重新分配指针了，如下面所示：\n```\nvar arr = [1,2,3,4];\nvar arr_copy = arr ;\narr_copy = [1,2,3,4,5];\n\nconsole.log(arr); //[1,2,3,4]\nconsole.log(arr_copy);//[1,2,3,4,5]\n\nvar obj = {\n    name:'张三',\n    age:20\n};\nvar obj_copy = obj ;\nobj_copy = {\n    name:'李四',\n    age:20\n};\nconsole.log(obj.name);//张三\nconsole.log(obj_copy.name);//李四\n\n```\n\n### 使用递归进行深拷贝。\n```\nvar car = {\n    name : '宝马',\n    color:'红色',\n}\n//判断是数组还是对象\nfunction getType(obj){\n    if(Object.prototype.toString.call(obj)=='[object Object]'){\n        return 'Object';\n    }else if(Object.prototype.toString.call(obj)=='[object Array]'){\n        return 'Array';\n    }else{\n        return 'nomal';\n    }\n}\n\nfunction deepCopy(obj) {\n    if (getType(obj)=='nomal') {\n        return obj ;  //如果是基本类型则直接返回\n    }else{\n        var newObj = getType(obj)=='Object'?{}:[];\n        for(var key in obj){\n            if(obj.hasOwnProperty(key)){\n                newObj[key] = deepCopy(obj[key]); //递归\n            }\n        }\n    }\n    return newObj;\n}\nvar newCar = deepCopy(car) ;\nnewInfo.name = '奔驰';\nconsole.log(newCar); //{name:'奔驰',color:'红色'}\nconsole.log(car);//{name:'宝马',color:'红色'}\n```\n这里用到.hasOwnProperty是为了避免在有继承时拷贝到继承自对象中的值（也就是a继承b时,使用.hasOwnProperty就是为了只拷贝a中的变量，过滤继承自b中的变量）","source":"_posts/实现一个简单的深拷贝.md","raw":"---\ntitle: 实现一个简单的深拷贝\ntags: js\ncategories: 前端\nabbrlink: 25ca6631\ndate: 2019-03-30 19:42:44\n---\n\n在js中经常需要用到变量的拷贝，比如`var a=1;var b=a;` 这个时候修改b的值，a不会改变`b=2;console.log(a); //1`,但是需要注意，这种方式拷贝属于浅拷贝，只局限在简单类型的拷贝：string、number、boolean、null、undefiend。如果你用这种方式拷贝一个数组或者对象，那么就得注意了，\n<!-- more -->\n```\nvar a=[1,2,3]; \nvar b=a;\nb[0]=66;\nconsole.log(a); //[66,2,3];\n```\n可以看到，b的值变了，a也变了，所以对于数组和对象不能用这种浅拷贝，因为拷贝的只是引用地址，实际上还是同一个，不过在有一种情况下，修改复制后的变量，被复制的变量不会跟着改变，那就是复制后，给复制变量重新定义值得时候，原来的变量不会受影响，因为此时已经给复制后的变量重新分配指针了，如下面所示：\n```\nvar arr = [1,2,3,4];\nvar arr_copy = arr ;\narr_copy = [1,2,3,4,5];\n\nconsole.log(arr); //[1,2,3,4]\nconsole.log(arr_copy);//[1,2,3,4,5]\n\nvar obj = {\n    name:'张三',\n    age:20\n};\nvar obj_copy = obj ;\nobj_copy = {\n    name:'李四',\n    age:20\n};\nconsole.log(obj.name);//张三\nconsole.log(obj_copy.name);//李四\n\n```\n\n### 使用递归进行深拷贝。\n```\nvar car = {\n    name : '宝马',\n    color:'红色',\n}\n//判断是数组还是对象\nfunction getType(obj){\n    if(Object.prototype.toString.call(obj)=='[object Object]'){\n        return 'Object';\n    }else if(Object.prototype.toString.call(obj)=='[object Array]'){\n        return 'Array';\n    }else{\n        return 'nomal';\n    }\n}\n\nfunction deepCopy(obj) {\n    if (getType(obj)=='nomal') {\n        return obj ;  //如果是基本类型则直接返回\n    }else{\n        var newObj = getType(obj)=='Object'?{}:[];\n        for(var key in obj){\n            if(obj.hasOwnProperty(key)){\n                newObj[key] = deepCopy(obj[key]); //递归\n            }\n        }\n    }\n    return newObj;\n}\nvar newCar = deepCopy(car) ;\nnewInfo.name = '奔驰';\nconsole.log(newCar); //{name:'奔驰',color:'红色'}\nconsole.log(car);//{name:'宝马',color:'红色'}\n```\n这里用到.hasOwnProperty是为了避免在有继承时拷贝到继承自对象中的值（也就是a继承b时,使用.hasOwnProperty就是为了只拷贝a中的变量，过滤继承自b中的变量）","slug":"实现一个简单的深拷贝","published":1,"updated":"2020-08-12T04:54:08.841Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdqxnc39000vd7m05nlb0kno","content":"<p>在js中经常需要用到变量的拷贝，比如<code>var a=1;var b=a;</code> 这个时候修改b的值，a不会改变<code>b=2;console.log(a); //1</code>,但是需要注意，这种方式拷贝属于浅拷贝，只局限在简单类型的拷贝：string、number、boolean、null、undefiend。如果你用这种方式拷贝一个数组或者对象，那么就得注意了，</p>\n<a id=\"more\"></a>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">var</span> a=[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>]; </span><br><span class=\"line\"><span class=\"attribute\">var</span> b=a;</span><br><span class=\"line\"><span class=\"attribute\">b</span>[<span class=\"number\">0</span>]=<span class=\"number\">66</span>;</span><br><span class=\"line\"><span class=\"attribute\">console</span>.log(a); //[<span class=\"number\">66</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>];</span><br></pre></td></tr></table></figure>\n<p>可以看到，b的值变了，a也变了，所以对于数组和对象不能用这种浅拷贝，因为拷贝的只是引用地址，实际上还是同一个，不过在有一种情况下，修改复制后的变量，被复制的变量不会跟着改变，那就是复制后，给复制变量重新定义值得时候，原来的变量不会受影响，因为此时已经给复制后的变量重新分配指针了，如下面所示：</p>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var arr = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>];</span><br><span class=\"line\">var arr_copy = arr ;</span><br><span class=\"line\">arr_copy = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">console.log(arr); <span class=\"comment\">//[1,2,3,4]</span></span><br><span class=\"line\">console.log(arr_copy);<span class=\"comment\">//[1,2,3,4,5]</span></span><br><span class=\"line\"></span><br><span class=\"line\">var obj = &#123;</span><br><span class=\"line\">    name:<span class=\"string\">&#x27;张三&#x27;</span>,</span><br><span class=\"line\">    age:<span class=\"number\">20</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">var obj_copy = obj ;</span><br><span class=\"line\">obj_copy = &#123;</span><br><span class=\"line\">    name:<span class=\"string\">&#x27;李四&#x27;</span>,</span><br><span class=\"line\">    age:<span class=\"number\">20</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">console.log(obj.name);<span class=\"comment\">//张三</span></span><br><span class=\"line\">console.log(obj_copy.name);<span class=\"comment\">//李四</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"使用递归进行深拷贝。\"><a href=\"#使用递归进行深拷贝。\" class=\"headerlink\" title=\"使用递归进行深拷贝。\"></a>使用递归进行深拷贝。</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> car = &#123;</span><br><span class=\"line\">    name : <span class=\"string\">&#x27;宝马&#x27;</span>,</span><br><span class=\"line\">    color:<span class=\"string\">&#x27;红色&#x27;</span>,</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//判断是数组还是对象</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getType</span>(<span class=\"params\">obj</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"built_in\">Object</span>.prototype.toString.call(obj)==<span class=\"string\">&#x27;[object Object]&#x27;</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&#x27;Object&#x27;</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(<span class=\"built_in\">Object</span>.prototype.toString.call(obj)==<span class=\"string\">&#x27;[object Array]&#x27;</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&#x27;Array&#x27;</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&#x27;nomal&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">deepCopy</span>(<span class=\"params\">obj</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (getType(obj)==<span class=\"string\">&#x27;nomal&#x27;</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> obj ;  <span class=\"comment\">//如果是基本类型则直接返回</span></span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> newObj = getType(obj)==<span class=\"string\">&#x27;Object&#x27;</span>?&#123;&#125;:[];</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> key <span class=\"keyword\">in</span> obj)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(obj.hasOwnProperty(key))&#123;</span><br><span class=\"line\">                newObj[key] = deepCopy(obj[key]); <span class=\"comment\">//递归</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> newObj;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> newCar = deepCopy(car) ;</span><br><span class=\"line\">newInfo.name = <span class=\"string\">&#x27;奔驰&#x27;</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(newCar); <span class=\"comment\">//&#123;name:&#x27;奔驰&#x27;,color:&#x27;红色&#x27;&#125;</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(car);<span class=\"comment\">//&#123;name:&#x27;宝马&#x27;,color:&#x27;红色&#x27;&#125;</span></span><br></pre></td></tr></table></figure>\n<p>这里用到.hasOwnProperty是为了避免在有继承时拷贝到继承自对象中的值（也就是a继承b时,使用.hasOwnProperty就是为了只拷贝a中的变量，过滤继承自b中的变量）</p>\n","site":{"data":{}},"excerpt":"<p>在js中经常需要用到变量的拷贝，比如<code>var a=1;var b=a;</code> 这个时候修改b的值，a不会改变<code>b=2;console.log(a); //1</code>,但是需要注意，这种方式拷贝属于浅拷贝，只局限在简单类型的拷贝：string、number、boolean、null、undefiend。如果你用这种方式拷贝一个数组或者对象，那么就得注意了，</p>","more":"<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">var</span> a=[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>]; </span><br><span class=\"line\"><span class=\"attribute\">var</span> b=a;</span><br><span class=\"line\"><span class=\"attribute\">b</span>[<span class=\"number\">0</span>]=<span class=\"number\">66</span>;</span><br><span class=\"line\"><span class=\"attribute\">console</span>.log(a); //[<span class=\"number\">66</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>];</span><br></pre></td></tr></table></figure>\n<p>可以看到，b的值变了，a也变了，所以对于数组和对象不能用这种浅拷贝，因为拷贝的只是引用地址，实际上还是同一个，不过在有一种情况下，修改复制后的变量，被复制的变量不会跟着改变，那就是复制后，给复制变量重新定义值得时候，原来的变量不会受影响，因为此时已经给复制后的变量重新分配指针了，如下面所示：</p>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var arr = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>];</span><br><span class=\"line\">var arr_copy = arr ;</span><br><span class=\"line\">arr_copy = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">console.log(arr); <span class=\"comment\">//[1,2,3,4]</span></span><br><span class=\"line\">console.log(arr_copy);<span class=\"comment\">//[1,2,3,4,5]</span></span><br><span class=\"line\"></span><br><span class=\"line\">var obj = &#123;</span><br><span class=\"line\">    name:<span class=\"string\">&#x27;张三&#x27;</span>,</span><br><span class=\"line\">    age:<span class=\"number\">20</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">var obj_copy = obj ;</span><br><span class=\"line\">obj_copy = &#123;</span><br><span class=\"line\">    name:<span class=\"string\">&#x27;李四&#x27;</span>,</span><br><span class=\"line\">    age:<span class=\"number\">20</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">console.log(obj.name);<span class=\"comment\">//张三</span></span><br><span class=\"line\">console.log(obj_copy.name);<span class=\"comment\">//李四</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"使用递归进行深拷贝。\"><a href=\"#使用递归进行深拷贝。\" class=\"headerlink\" title=\"使用递归进行深拷贝。\"></a>使用递归进行深拷贝。</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> car = &#123;</span><br><span class=\"line\">    name : <span class=\"string\">&#x27;宝马&#x27;</span>,</span><br><span class=\"line\">    color:<span class=\"string\">&#x27;红色&#x27;</span>,</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//判断是数组还是对象</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getType</span>(<span class=\"params\">obj</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"built_in\">Object</span>.prototype.toString.call(obj)==<span class=\"string\">&#x27;[object Object]&#x27;</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&#x27;Object&#x27;</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(<span class=\"built_in\">Object</span>.prototype.toString.call(obj)==<span class=\"string\">&#x27;[object Array]&#x27;</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&#x27;Array&#x27;</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&#x27;nomal&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">deepCopy</span>(<span class=\"params\">obj</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (getType(obj)==<span class=\"string\">&#x27;nomal&#x27;</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> obj ;  <span class=\"comment\">//如果是基本类型则直接返回</span></span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> newObj = getType(obj)==<span class=\"string\">&#x27;Object&#x27;</span>?&#123;&#125;:[];</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> key <span class=\"keyword\">in</span> obj)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(obj.hasOwnProperty(key))&#123;</span><br><span class=\"line\">                newObj[key] = deepCopy(obj[key]); <span class=\"comment\">//递归</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> newObj;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> newCar = deepCopy(car) ;</span><br><span class=\"line\">newInfo.name = <span class=\"string\">&#x27;奔驰&#x27;</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(newCar); <span class=\"comment\">//&#123;name:&#x27;奔驰&#x27;,color:&#x27;红色&#x27;&#125;</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(car);<span class=\"comment\">//&#123;name:&#x27;宝马&#x27;,color:&#x27;红色&#x27;&#125;</span></span><br></pre></td></tr></table></figure>\n<p>这里用到.hasOwnProperty是为了避免在有继承时拷贝到继承自对象中的值（也就是a继承b时,使用.hasOwnProperty就是为了只拷贝a中的变量，过滤继承自b中的变量）</p>"},{"title":"怎么样在别的电脑同步更新发表hexo博客？","abbrlink":"301aa86","date":"2019-04-24T14:12:23.000Z","_content":"在git上放两个分支，一个master分支，用来存放hexo 生成public代码的（发布），另一个分支随便取名字吧比如hexo，就是放整个hexo源码的，到时候在别的电脑直接克隆hexo代码，然后写文章，发布，然后同步hexo分支代码。就可以了，很简单。\n<!-- more -->\n<font color=\"red\">注意：如果主题文件是从git克隆下来的，比如next主题，再提交之前先把next下的.git和.github文件夹删掉。如果之前没有删掉，发现next无法提交到github。此时要删掉你博客目录下的.git目录价下的index.lock文件</font>\n然后：\n```\n git rm --cached themes/next/\n git add themes/next/\n ```\n 如果一次不行，尝试多几次。\n 这个时候就可以提交到github了","source":"_posts/怎么样在别的电脑同步更新发表hexo博客？.md","raw":"---\ntitle: 怎么样在别的电脑同步更新发表hexo博客？\ntags: 技术\ncategories: 技术\nabbrlink: 301aa86\ndate: 2019-04-24 22:12:23\n---\n在git上放两个分支，一个master分支，用来存放hexo 生成public代码的（发布），另一个分支随便取名字吧比如hexo，就是放整个hexo源码的，到时候在别的电脑直接克隆hexo代码，然后写文章，发布，然后同步hexo分支代码。就可以了，很简单。\n<!-- more -->\n<font color=\"red\">注意：如果主题文件是从git克隆下来的，比如next主题，再提交之前先把next下的.git和.github文件夹删掉。如果之前没有删掉，发现next无法提交到github。此时要删掉你博客目录下的.git目录价下的index.lock文件</font>\n然后：\n```\n git rm --cached themes/next/\n git add themes/next/\n ```\n 如果一次不行，尝试多几次。\n 这个时候就可以提交到github了","slug":"怎么样在别的电脑同步更新发表hexo博客？","published":1,"updated":"2020-08-12T04:54:59.637Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdqxnc3b0010d7m02nbj0p16","content":"<p>在git上放两个分支，一个master分支，用来存放hexo 生成public代码的（发布），另一个分支随便取名字吧比如hexo，就是放整个hexo源码的，到时候在别的电脑直接克隆hexo代码，然后写文章，发布，然后同步hexo分支代码。就可以了，很简单。</p>\n<a id=\"more\"></a>\n<p><font color=\"red\">注意：如果主题文件是从git克隆下来的，比如next主题，再提交之前先把next下的.git和.github文件夹删掉。如果之前没有删掉，发现next无法提交到github。此时要删掉你博客目录下的.git目录价下的index.lock文件</font><br>然后：</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git rm --cached themes<span class=\"regexp\">/next/</span></span><br><span class=\"line\">git add themes<span class=\"regexp\">/next/</span></span><br></pre></td></tr></table></figure>\n<p> 如果一次不行，尝试多几次。<br> 这个时候就可以提交到github了</p>\n","site":{"data":{}},"excerpt":"<p>在git上放两个分支，一个master分支，用来存放hexo 生成public代码的（发布），另一个分支随便取名字吧比如hexo，就是放整个hexo源码的，到时候在别的电脑直接克隆hexo代码，然后写文章，发布，然后同步hexo分支代码。就可以了，很简单。</p>","more":"<p><font color=\"red\">注意：如果主题文件是从git克隆下来的，比如next主题，再提交之前先把next下的.git和.github文件夹删掉。如果之前没有删掉，发现next无法提交到github。此时要删掉你博客目录下的.git目录价下的index.lock文件</font><br>然后：</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git rm --cached themes<span class=\"regexp\">/next/</span></span><br><span class=\"line\">git add themes<span class=\"regexp\">/next/</span></span><br></pre></td></tr></table></figure>\n<p> 如果一次不行，尝试多几次。<br> 这个时候就可以提交到github了</p>"},{"title":"用Xshell登录阿里云服务器","abbrlink":"d86f9c95","date":"2019-06-12T03:42:29.000Z","_content":"使用Xshell登录阿里云最需要注意的一个地方就是要使用阿里云服务器的公共ip，阿里云一个有两个ip，一个是公共的，一个是私有的，这个登录管理后台查看实例就可以看得到\n<!-- more -->\n![](1.jpg)\n![](2.jpg)\n最后会弹出是否接受密钥什么的，点确定就好，或者是弹出密码不对的，也重新输入密码即可。","source":"_posts/用Xshell登录阿里云服务器.md","raw":"---\ntitle: 用Xshell登录阿里云服务器\nabbrlink: d86f9c95\ndate: 2019-06-12 11:42:29\ntags: linux\ncategories: linux\n---\n使用Xshell登录阿里云最需要注意的一个地方就是要使用阿里云服务器的公共ip，阿里云一个有两个ip，一个是公共的，一个是私有的，这个登录管理后台查看实例就可以看得到\n<!-- more -->\n![](1.jpg)\n![](2.jpg)\n最后会弹出是否接受密钥什么的，点确定就好，或者是弹出密码不对的，也重新输入密码即可。","slug":"用Xshell登录阿里云服务器","published":1,"updated":"2020-08-12T04:59:33.807Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdqxnc3c0013d7m0bfaebvoj","content":"<p>使用Xshell登录阿里云最需要注意的一个地方就是要使用阿里云服务器的公共ip，阿里云一个有两个ip，一个是公共的，一个是私有的，这个登录管理后台查看实例就可以看得到</p>\n<a id=\"more\"></a>\n<p><img src=\"1.jpg\"><br><img src=\"2.jpg\"><br>最后会弹出是否接受密钥什么的，点确定就好，或者是弹出密码不对的，也重新输入密码即可。</p>\n","site":{"data":{}},"excerpt":"<p>使用Xshell登录阿里云最需要注意的一个地方就是要使用阿里云服务器的公共ip，阿里云一个有两个ip，一个是公共的，一个是私有的，这个登录管理后台查看实例就可以看得到</p>","more":"<p><img src=\"1.jpg\"><br><img src=\"2.jpg\"><br>最后会弹出是否接受密钥什么的，点确定就好，或者是弹出密码不对的，也重新输入密码即可。</p>"},{"title":"用hexo+github搭建个人博客","abbrlink":"4443dac6","date":"2019-02-27T07:33:57.000Z","_content":"## 用hexo+github page快速搭建个人静态博客\n\n### 1.hexo环境搭建\n\n首先需要电脑安装好了nodejs（具体安装步骤略过），还需要有github账号。打开cmd命令行，全局安装hexo ``npm install -g hexo-cli`` 可以使用 ``hexo v`` 来检查是否安装成功。\n<!-- more -->\n接下来使用hexo cli来创建项目：使用``hexo init`` 就会在当前文件夹下创建了项目，当然也可以使用``hexo init 文件夹名称`` 来创建文件夹的同时创建项目。接着运行 ``npm install``安装依赖，注意，安装hexo的文件夹需要是空文件夹。\n\n### 2.hexo的基本使用及常见的命令\n\n``hexo s`` 使用这个命令可以在本地跑起来，可以看到cmd窗口提示项目运行在 ``http://localhost:4000``，打开浏览器输入提示的地址即可访问了，不过可以看到，默认的主题有点丑，我们可以换一个，在这里我们换next这个简洁的主题。我们可以直接百度搜索hexo next主题官网或者去hexo官网找next主题都可以，我们找到next的github，克隆下来，放到博客项目的themes目录下，接下来打开根目录的配置文件_config.yml文件找到 theme，把默认的该为next，然后命令行``hexo clean && hexo s``刷新页面即可成功替换主题了。\n快速创建文章命令为 ``hexo new \"文章名字\"``  执行完这个命令后就会在sources下的_posts目录下创建名称为 刚刚创建的同名md文件，可以用编辑器直接打开编辑了。\n#### 这里需要注意：在next主题的配置文件下添加了菜单后，点击了提示找不到页面，不要慌，是因为默认只生产home和Archive页面，需要自己创建相应的页面，比如about页面 ``hexo new page \"about\"`` 这时 source里面多了个目录about，里面有个index.md，就可以正常访问了，内容就在那个index.md里添加\n\n### 与github对接\n\n在github上新建一个名为xxx.github.io 的仓库，然后在hexo的_config.yml中的\n\n``` \ndeploy: \n  type: git \n  repository: git@github.com:hongyu2016/hongyu2016.github.io.git \n  branch: master\n```\n填写相应的git地址，然后需要把本地项目与git仓库相关联起来，需要使用ssh来连接，git ssh连接请参考 [配置git ssh](https://www.cnblogs.com/superGG1990/p/6844952.html) 。在本地仓库与远程仓库连接的过程中可能会出现分支不匹配等错误，需要具体问题然后再进行针对性解决。本地仓库与远程仓库关联上后就可以在本地进行发布了，``hexo d``为发布命令，会将项目发布到github page，发布成功后，会在本地生成的静态文件推送到到github，其他文件是不会推送的，这个时候会把原本在github上的readme文件删除，不要慌，在resoures下新建readme文件再次发布就好了，注意：千万不要使用github的git push发布，这样发布是没有效果的，github会在每次push时发编译失败的邮件给你，因为github page只支持静态文件，所以只能使用``hexo d``命令，另外在发布前最好先``hexo clean && hexo g``先清除和重新生成静态文件发发布。发布成功后，输入xxx.github.io就可以正常访问博客了。\n\n## 结语：搭建hexo博客还是比较简单的，个人觉得在推送到github的过程中比较麻烦，容易出各种问题，这个地方需要注意。","source":"_posts/用hexo-github搭建个人博客.md","raw":"---\ntitle: 用hexo+github搭建个人博客\ntags: 技术\ncategories: 技术\nabbrlink: 4443dac6\ndate: 2019-02-27 15:33:57\n---\n## 用hexo+github page快速搭建个人静态博客\n\n### 1.hexo环境搭建\n\n首先需要电脑安装好了nodejs（具体安装步骤略过），还需要有github账号。打开cmd命令行，全局安装hexo ``npm install -g hexo-cli`` 可以使用 ``hexo v`` 来检查是否安装成功。\n<!-- more -->\n接下来使用hexo cli来创建项目：使用``hexo init`` 就会在当前文件夹下创建了项目，当然也可以使用``hexo init 文件夹名称`` 来创建文件夹的同时创建项目。接着运行 ``npm install``安装依赖，注意，安装hexo的文件夹需要是空文件夹。\n\n### 2.hexo的基本使用及常见的命令\n\n``hexo s`` 使用这个命令可以在本地跑起来，可以看到cmd窗口提示项目运行在 ``http://localhost:4000``，打开浏览器输入提示的地址即可访问了，不过可以看到，默认的主题有点丑，我们可以换一个，在这里我们换next这个简洁的主题。我们可以直接百度搜索hexo next主题官网或者去hexo官网找next主题都可以，我们找到next的github，克隆下来，放到博客项目的themes目录下，接下来打开根目录的配置文件_config.yml文件找到 theme，把默认的该为next，然后命令行``hexo clean && hexo s``刷新页面即可成功替换主题了。\n快速创建文章命令为 ``hexo new \"文章名字\"``  执行完这个命令后就会在sources下的_posts目录下创建名称为 刚刚创建的同名md文件，可以用编辑器直接打开编辑了。\n#### 这里需要注意：在next主题的配置文件下添加了菜单后，点击了提示找不到页面，不要慌，是因为默认只生产home和Archive页面，需要自己创建相应的页面，比如about页面 ``hexo new page \"about\"`` 这时 source里面多了个目录about，里面有个index.md，就可以正常访问了，内容就在那个index.md里添加\n\n### 与github对接\n\n在github上新建一个名为xxx.github.io 的仓库，然后在hexo的_config.yml中的\n\n``` \ndeploy: \n  type: git \n  repository: git@github.com:hongyu2016/hongyu2016.github.io.git \n  branch: master\n```\n填写相应的git地址，然后需要把本地项目与git仓库相关联起来，需要使用ssh来连接，git ssh连接请参考 [配置git ssh](https://www.cnblogs.com/superGG1990/p/6844952.html) 。在本地仓库与远程仓库连接的过程中可能会出现分支不匹配等错误，需要具体问题然后再进行针对性解决。本地仓库与远程仓库关联上后就可以在本地进行发布了，``hexo d``为发布命令，会将项目发布到github page，发布成功后，会在本地生成的静态文件推送到到github，其他文件是不会推送的，这个时候会把原本在github上的readme文件删除，不要慌，在resoures下新建readme文件再次发布就好了，注意：千万不要使用github的git push发布，这样发布是没有效果的，github会在每次push时发编译失败的邮件给你，因为github page只支持静态文件，所以只能使用``hexo d``命令，另外在发布前最好先``hexo clean && hexo g``先清除和重新生成静态文件发发布。发布成功后，输入xxx.github.io就可以正常访问博客了。\n\n## 结语：搭建hexo博客还是比较简单的，个人觉得在推送到github的过程中比较麻烦，容易出各种问题，这个地方需要注意。","slug":"用hexo-github搭建个人博客","published":1,"updated":"2020-08-12T04:59:30.899Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdqxnc3d0018d7m02swl5rt2","content":"<h2 id=\"用hexo-github-page快速搭建个人静态博客\"><a href=\"#用hexo-github-page快速搭建个人静态博客\" class=\"headerlink\" title=\"用hexo+github page快速搭建个人静态博客\"></a>用hexo+github page快速搭建个人静态博客</h2><h3 id=\"1-hexo环境搭建\"><a href=\"#1-hexo环境搭建\" class=\"headerlink\" title=\"1.hexo环境搭建\"></a>1.hexo环境搭建</h3><p>首先需要电脑安装好了nodejs（具体安装步骤略过），还需要有github账号。打开cmd命令行，全局安装hexo <code>npm install -g hexo-cli</code> 可以使用 <code>hexo v</code> 来检查是否安装成功。</p>\n<a id=\"more\"></a>\n<p>接下来使用hexo cli来创建项目：使用<code>hexo init</code> 就会在当前文件夹下创建了项目，当然也可以使用<code>hexo init 文件夹名称</code> 来创建文件夹的同时创建项目。接着运行 <code>npm install</code>安装依赖，注意，安装hexo的文件夹需要是空文件夹。</p>\n<h3 id=\"2-hexo的基本使用及常见的命令\"><a href=\"#2-hexo的基本使用及常见的命令\" class=\"headerlink\" title=\"2.hexo的基本使用及常见的命令\"></a>2.hexo的基本使用及常见的命令</h3><p><code>hexo s</code> 使用这个命令可以在本地跑起来，可以看到cmd窗口提示项目运行在 <code>http://localhost:4000</code>，打开浏览器输入提示的地址即可访问了，不过可以看到，默认的主题有点丑，我们可以换一个，在这里我们换next这个简洁的主题。我们可以直接百度搜索hexo next主题官网或者去hexo官网找next主题都可以，我们找到next的github，克隆下来，放到博客项目的themes目录下，接下来打开根目录的配置文件_config.yml文件找到 theme，把默认的该为next，然后命令行<code>hexo clean &amp;&amp; hexo s</code>刷新页面即可成功替换主题了。<br>快速创建文章命令为 <code>hexo new &quot;文章名字&quot;</code>  执行完这个命令后就会在sources下的_posts目录下创建名称为 刚刚创建的同名md文件，可以用编辑器直接打开编辑了。</p>\n<h4 id=\"这里需要注意：在next主题的配置文件下添加了菜单后，点击了提示找不到页面，不要慌，是因为默认只生产home和Archive页面，需要自己创建相应的页面，比如about页面-hexo-new-page-quot-about-quot-这时-source里面多了个目录about，里面有个index-md，就可以正常访问了，内容就在那个index-md里添加\"><a href=\"#这里需要注意：在next主题的配置文件下添加了菜单后，点击了提示找不到页面，不要慌，是因为默认只生产home和Archive页面，需要自己创建相应的页面，比如about页面-hexo-new-page-quot-about-quot-这时-source里面多了个目录about，里面有个index-md，就可以正常访问了，内容就在那个index-md里添加\" class=\"headerlink\" title=\"这里需要注意：在next主题的配置文件下添加了菜单后，点击了提示找不到页面，不要慌，是因为默认只生产home和Archive页面，需要自己创建相应的页面，比如about页面 hexo new page &quot;about&quot; 这时 source里面多了个目录about，里面有个index.md，就可以正常访问了，内容就在那个index.md里添加\"></a>这里需要注意：在next主题的配置文件下添加了菜单后，点击了提示找不到页面，不要慌，是因为默认只生产home和Archive页面，需要自己创建相应的页面，比如about页面 <code>hexo new page &quot;about&quot;</code> 这时 source里面多了个目录about，里面有个index.md，就可以正常访问了，内容就在那个index.md里添加</h4><h3 id=\"与github对接\"><a href=\"#与github对接\" class=\"headerlink\" title=\"与github对接\"></a>与github对接</h3><p>在github上新建一个名为xxx.github.io 的仓库，然后在hexo的_config.yml中的</p>\n<figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">deploy</span>: </span><br><span class=\"line\">  <span class=\"attribute\">type</span>: git </span><br><span class=\"line\">  <span class=\"attribute\">repository</span>: git<span class=\"variable\">@github</span>.<span class=\"attribute\">com</span>:hongyu2016/hongyu2016.github.io.git </span><br><span class=\"line\">  <span class=\"attribute\">branch</span>: master</span><br></pre></td></tr></table></figure>\n<p>填写相应的git地址，然后需要把本地项目与git仓库相关联起来，需要使用ssh来连接，git ssh连接请参考 <a href=\"https://www.cnblogs.com/superGG1990/p/6844952.html\">配置git ssh</a> 。在本地仓库与远程仓库连接的过程中可能会出现分支不匹配等错误，需要具体问题然后再进行针对性解决。本地仓库与远程仓库关联上后就可以在本地进行发布了，<code>hexo d</code>为发布命令，会将项目发布到github page，发布成功后，会在本地生成的静态文件推送到到github，其他文件是不会推送的，这个时候会把原本在github上的readme文件删除，不要慌，在resoures下新建readme文件再次发布就好了，注意：千万不要使用github的git push发布，这样发布是没有效果的，github会在每次push时发编译失败的邮件给你，因为github page只支持静态文件，所以只能使用<code>hexo d</code>命令，另外在发布前最好先<code>hexo clean &amp;&amp; hexo g</code>先清除和重新生成静态文件发发布。发布成功后，输入xxx.github.io就可以正常访问博客了。</p>\n<h2 id=\"结语：搭建hexo博客还是比较简单的，个人觉得在推送到github的过程中比较麻烦，容易出各种问题，这个地方需要注意。\"><a href=\"#结语：搭建hexo博客还是比较简单的，个人觉得在推送到github的过程中比较麻烦，容易出各种问题，这个地方需要注意。\" class=\"headerlink\" title=\"结语：搭建hexo博客还是比较简单的，个人觉得在推送到github的过程中比较麻烦，容易出各种问题，这个地方需要注意。\"></a>结语：搭建hexo博客还是比较简单的，个人觉得在推送到github的过程中比较麻烦，容易出各种问题，这个地方需要注意。</h2>","site":{"data":{}},"excerpt":"<h2 id=\"用hexo-github-page快速搭建个人静态博客\"><a href=\"#用hexo-github-page快速搭建个人静态博客\" class=\"headerlink\" title=\"用hexo+github page快速搭建个人静态博客\"></a>用hexo+github page快速搭建个人静态博客</h2><h3 id=\"1-hexo环境搭建\"><a href=\"#1-hexo环境搭建\" class=\"headerlink\" title=\"1.hexo环境搭建\"></a>1.hexo环境搭建</h3><p>首先需要电脑安装好了nodejs（具体安装步骤略过），还需要有github账号。打开cmd命令行，全局安装hexo <code>npm install -g hexo-cli</code> 可以使用 <code>hexo v</code> 来检查是否安装成功。</p>","more":"<p>接下来使用hexo cli来创建项目：使用<code>hexo init</code> 就会在当前文件夹下创建了项目，当然也可以使用<code>hexo init 文件夹名称</code> 来创建文件夹的同时创建项目。接着运行 <code>npm install</code>安装依赖，注意，安装hexo的文件夹需要是空文件夹。</p>\n<h3 id=\"2-hexo的基本使用及常见的命令\"><a href=\"#2-hexo的基本使用及常见的命令\" class=\"headerlink\" title=\"2.hexo的基本使用及常见的命令\"></a>2.hexo的基本使用及常见的命令</h3><p><code>hexo s</code> 使用这个命令可以在本地跑起来，可以看到cmd窗口提示项目运行在 <code>http://localhost:4000</code>，打开浏览器输入提示的地址即可访问了，不过可以看到，默认的主题有点丑，我们可以换一个，在这里我们换next这个简洁的主题。我们可以直接百度搜索hexo next主题官网或者去hexo官网找next主题都可以，我们找到next的github，克隆下来，放到博客项目的themes目录下，接下来打开根目录的配置文件_config.yml文件找到 theme，把默认的该为next，然后命令行<code>hexo clean &amp;&amp; hexo s</code>刷新页面即可成功替换主题了。<br>快速创建文章命令为 <code>hexo new &quot;文章名字&quot;</code>  执行完这个命令后就会在sources下的_posts目录下创建名称为 刚刚创建的同名md文件，可以用编辑器直接打开编辑了。</p>\n<h4 id=\"这里需要注意：在next主题的配置文件下添加了菜单后，点击了提示找不到页面，不要慌，是因为默认只生产home和Archive页面，需要自己创建相应的页面，比如about页面-hexo-new-page-quot-about-quot-这时-source里面多了个目录about，里面有个index-md，就可以正常访问了，内容就在那个index-md里添加\"><a href=\"#这里需要注意：在next主题的配置文件下添加了菜单后，点击了提示找不到页面，不要慌，是因为默认只生产home和Archive页面，需要自己创建相应的页面，比如about页面-hexo-new-page-quot-about-quot-这时-source里面多了个目录about，里面有个index-md，就可以正常访问了，内容就在那个index-md里添加\" class=\"headerlink\" title=\"这里需要注意：在next主题的配置文件下添加了菜单后，点击了提示找不到页面，不要慌，是因为默认只生产home和Archive页面，需要自己创建相应的页面，比如about页面 hexo new page &quot;about&quot; 这时 source里面多了个目录about，里面有个index.md，就可以正常访问了，内容就在那个index.md里添加\"></a>这里需要注意：在next主题的配置文件下添加了菜单后，点击了提示找不到页面，不要慌，是因为默认只生产home和Archive页面，需要自己创建相应的页面，比如about页面 <code>hexo new page &quot;about&quot;</code> 这时 source里面多了个目录about，里面有个index.md，就可以正常访问了，内容就在那个index.md里添加</h4><h3 id=\"与github对接\"><a href=\"#与github对接\" class=\"headerlink\" title=\"与github对接\"></a>与github对接</h3><p>在github上新建一个名为xxx.github.io 的仓库，然后在hexo的_config.yml中的</p>\n<figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">deploy</span>: </span><br><span class=\"line\">  <span class=\"attribute\">type</span>: git </span><br><span class=\"line\">  <span class=\"attribute\">repository</span>: git<span class=\"variable\">@github</span>.<span class=\"attribute\">com</span>:hongyu2016/hongyu2016.github.io.git </span><br><span class=\"line\">  <span class=\"attribute\">branch</span>: master</span><br></pre></td></tr></table></figure>\n<p>填写相应的git地址，然后需要把本地项目与git仓库相关联起来，需要使用ssh来连接，git ssh连接请参考 <a href=\"https://www.cnblogs.com/superGG1990/p/6844952.html\">配置git ssh</a> 。在本地仓库与远程仓库连接的过程中可能会出现分支不匹配等错误，需要具体问题然后再进行针对性解决。本地仓库与远程仓库关联上后就可以在本地进行发布了，<code>hexo d</code>为发布命令，会将项目发布到github page，发布成功后，会在本地生成的静态文件推送到到github，其他文件是不会推送的，这个时候会把原本在github上的readme文件删除，不要慌，在resoures下新建readme文件再次发布就好了，注意：千万不要使用github的git push发布，这样发布是没有效果的，github会在每次push时发编译失败的邮件给你，因为github page只支持静态文件，所以只能使用<code>hexo d</code>命令，另外在发布前最好先<code>hexo clean &amp;&amp; hexo g</code>先清除和重新生成静态文件发发布。发布成功后，输入xxx.github.io就可以正常访问博客了。</p>\n<h2 id=\"结语：搭建hexo博客还是比较简单的，个人觉得在推送到github的过程中比较麻烦，容易出各种问题，这个地方需要注意。\"><a href=\"#结语：搭建hexo博客还是比较简单的，个人觉得在推送到github的过程中比较麻烦，容易出各种问题，这个地方需要注意。\" class=\"headerlink\" title=\"结语：搭建hexo博客还是比较简单的，个人觉得在推送到github的过程中比较麻烦，容易出各种问题，这个地方需要注意。\"></a>结语：搭建hexo博客还是比较简单的，个人觉得在推送到github的过程中比较麻烦，容易出各种问题，这个地方需要注意。</h2>"},{"title":"解决npm install安装任何包都报错的问题","abbrlink":60785,"date":"2019-05-13T10:21:10.000Z","_content":"在ubantu18系统上，之前不知道哪里设置错了，结果用nodejs的npm install任何一个包都报错，报错信息如下：\n<!-- more -->\n```\nnpm ERR! code ENOTFOUND\nnpm ERR! errno ENOTFOUND\nnpm ERR! network request to http://registry.cnpmjs.org/cnpm failed, reason: getaddrinfo ENOTFOUND registry.cnpmjs.org registry.cnpmjs.org:80\nnpm ERR! network This is a problem related to network connectivity.\nnpm ERR! network In most cases you are behind a proxy or have bad network settings.\nnpm ERR! network \nnpm ERR! network If you are behind a proxy, please make sure that the\nnpm ERR! network 'proxy' config is set properly.  See: 'npm help config'\n\nnpm ERR! A complete log of this run can be found in:\nnpm ERR!     /home/liu/.npm/_logs/2019-05-13T12_45_42_040Z-debug.log\n\n```\n按照字面意思，应该是代理出了点问题，由于对npm的设置不是很了解，没办法，百度查查别人的解决办法吧。然后就真查到了，\n```\nnpm config set registry http://registry.cnpmjs.org\n```\n如果提示要sudo那就加上sudo就行了。\n验证一下 ： npm info underscore 如果有返回underscore的相应信息就表示成功了。\n以上内容参考网址：[http://www.cnblogs.com/nurdun/p/6824480.html](http://www.cnblogs.com/nurdun/p/6824480.html) \n","source":"_posts/解决npm-install安装任何包都报错的问题.md","raw":"---\ntitle: 解决npm install安装任何包都报错的问题\ntags: nodejs\ncategories: 前端\nabbrlink: 60785\ndate: 2019-05-13 18:21:10\n---\n在ubantu18系统上，之前不知道哪里设置错了，结果用nodejs的npm install任何一个包都报错，报错信息如下：\n<!-- more -->\n```\nnpm ERR! code ENOTFOUND\nnpm ERR! errno ENOTFOUND\nnpm ERR! network request to http://registry.cnpmjs.org/cnpm failed, reason: getaddrinfo ENOTFOUND registry.cnpmjs.org registry.cnpmjs.org:80\nnpm ERR! network This is a problem related to network connectivity.\nnpm ERR! network In most cases you are behind a proxy or have bad network settings.\nnpm ERR! network \nnpm ERR! network If you are behind a proxy, please make sure that the\nnpm ERR! network 'proxy' config is set properly.  See: 'npm help config'\n\nnpm ERR! A complete log of this run can be found in:\nnpm ERR!     /home/liu/.npm/_logs/2019-05-13T12_45_42_040Z-debug.log\n\n```\n按照字面意思，应该是代理出了点问题，由于对npm的设置不是很了解，没办法，百度查查别人的解决办法吧。然后就真查到了，\n```\nnpm config set registry http://registry.cnpmjs.org\n```\n如果提示要sudo那就加上sudo就行了。\n验证一下 ： npm info underscore 如果有返回underscore的相应信息就表示成功了。\n以上内容参考网址：[http://www.cnblogs.com/nurdun/p/6824480.html](http://www.cnblogs.com/nurdun/p/6824480.html) \n","slug":"解决npm-install安装任何包都报错的问题","published":1,"updated":"2020-08-12T04:54:03.700Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdqxnc3e001bd7m03k182ajw","content":"<p>在ubantu18系统上，之前不知道哪里设置错了，结果用nodejs的npm install任何一个包都报错，报错信息如下：</p>\n<a id=\"more\"></a>\n<figure class=\"highlight coffeescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">npm</span> ERR! code ENOTFOUND</span><br><span class=\"line\"><span class=\"built_in\">npm</span> ERR! errno ENOTFOUND</span><br><span class=\"line\"><span class=\"built_in\">npm</span> ERR! network request to http://registry.cnpmjs.org/cnpm failed, reason: getaddrinfo ENOTFOUND registry.cnpmjs.org registry.cnpmjs.org:<span class=\"number\">80</span></span><br><span class=\"line\"><span class=\"built_in\">npm</span> ERR! network This <span class=\"keyword\">is</span> a problem related to network connectivity.</span><br><span class=\"line\"><span class=\"built_in\">npm</span> ERR! network In most cases you are behind a proxy <span class=\"keyword\">or</span> have bad network settings.</span><br><span class=\"line\"><span class=\"built_in\">npm</span> ERR! network </span><br><span class=\"line\"><span class=\"built_in\">npm</span> ERR! network If you are behind a proxy, please make sure that the</span><br><span class=\"line\"><span class=\"built_in\">npm</span> ERR! network <span class=\"string\">&#x27;proxy&#x27;</span> config <span class=\"keyword\">is</span> set properly.  See: <span class=\"string\">&#x27;npm help config&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">npm</span> ERR! A complete log <span class=\"keyword\">of</span> <span class=\"built_in\">this</span> run can be found in:</span><br><span class=\"line\"><span class=\"built_in\">npm</span> ERR!     <span class=\"regexp\">/home/liu/</span>.<span class=\"built_in\">npm</span>/_logs/<span class=\"number\">2019</span><span class=\"number\">-05</span><span class=\"number\">-13</span>T12_45_42_040Z-debug.log</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>按照字面意思，应该是代理出了点问题，由于对npm的设置不是很了解，没办法，百度查查别人的解决办法吧。然后就真查到了，</p>\n<figure class=\"highlight tcl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm config <span class=\"keyword\">set</span> <span class=\"keyword\">registry</span> <span class=\"keyword\">http</span>://<span class=\"keyword\">registry</span>.cnpmjs.org</span><br></pre></td></tr></table></figure>\n<p>如果提示要sudo那就加上sudo就行了。<br>验证一下 ： npm info underscore 如果有返回underscore的相应信息就表示成功了。<br>以上内容参考网址：<a href=\"http://www.cnblogs.com/nurdun/p/6824480.html\">http://www.cnblogs.com/nurdun/p/6824480.html</a> </p>\n","site":{"data":{}},"excerpt":"<p>在ubantu18系统上，之前不知道哪里设置错了，结果用nodejs的npm install任何一个包都报错，报错信息如下：</p>","more":"<figure class=\"highlight coffeescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">npm</span> ERR! code ENOTFOUND</span><br><span class=\"line\"><span class=\"built_in\">npm</span> ERR! errno ENOTFOUND</span><br><span class=\"line\"><span class=\"built_in\">npm</span> ERR! network request to http://registry.cnpmjs.org/cnpm failed, reason: getaddrinfo ENOTFOUND registry.cnpmjs.org registry.cnpmjs.org:<span class=\"number\">80</span></span><br><span class=\"line\"><span class=\"built_in\">npm</span> ERR! network This <span class=\"keyword\">is</span> a problem related to network connectivity.</span><br><span class=\"line\"><span class=\"built_in\">npm</span> ERR! network In most cases you are behind a proxy <span class=\"keyword\">or</span> have bad network settings.</span><br><span class=\"line\"><span class=\"built_in\">npm</span> ERR! network </span><br><span class=\"line\"><span class=\"built_in\">npm</span> ERR! network If you are behind a proxy, please make sure that the</span><br><span class=\"line\"><span class=\"built_in\">npm</span> ERR! network <span class=\"string\">&#x27;proxy&#x27;</span> config <span class=\"keyword\">is</span> set properly.  See: <span class=\"string\">&#x27;npm help config&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">npm</span> ERR! A complete log <span class=\"keyword\">of</span> <span class=\"built_in\">this</span> run can be found in:</span><br><span class=\"line\"><span class=\"built_in\">npm</span> ERR!     <span class=\"regexp\">/home/liu/</span>.<span class=\"built_in\">npm</span>/_logs/<span class=\"number\">2019</span><span class=\"number\">-05</span><span class=\"number\">-13</span>T12_45_42_040Z-debug.log</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>按照字面意思，应该是代理出了点问题，由于对npm的设置不是很了解，没办法，百度查查别人的解决办法吧。然后就真查到了，</p>\n<figure class=\"highlight tcl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm config <span class=\"keyword\">set</span> <span class=\"keyword\">registry</span> <span class=\"keyword\">http</span>://<span class=\"keyword\">registry</span>.cnpmjs.org</span><br></pre></td></tr></table></figure>\n<p>如果提示要sudo那就加上sudo就行了。<br>验证一下 ： npm info underscore 如果有返回underscore的相应信息就表示成功了。<br>以上内容参考网址：<a href=\"http://www.cnblogs.com/nurdun/p/6824480.html\">http://www.cnblogs.com/nurdun/p/6824480.html</a> </p>"},{"title":"记录element-ui 二次封装table时formatter的使用问题","abbrlink":"7f247ba3","date":"2019-04-24T14:11:01.000Z","_content":"\n### 二次封装element table表格中遇到的问题记录\n我们都知道element-ui 的table 中表格行的通过prop指定显示数据源中的字段，我们在进行二次封装时，如果数据都是很简单的字符串或者数字之类的，那就可以直接使用prop就行了，不需要做特殊的操作，但是如果是数组，那就得进行特殊的处理了。\n<!-- more -->\n我们知道element 对于表格行还提供了一个格式化的函数：formatter，常规的用法没有什么好说的了，格式化显示货币，时间等，这里要说的是当字段是数组的时候，而且要在当前列显示html元素的时候就有点蛋疼了，如果是不需要html元素，直接循环数组就行。\n下面是element table的formatter的常规用法（来自element官网）：\n```\n<template>\n  <el-table\n    :data=\"tableData\"\n    style=\"width: 100%\"\n    :default-sort = \"{prop: 'date', order: 'descending'}\"\n    >\n    <el-table-column\n      prop=\"date\"\n      label=\"日期\"\n      sortable\n      width=\"180\">\n    </el-table-column>\n    <el-table-column\n      prop=\"name\"\n      label=\"姓名\"\n      sortable\n      width=\"180\">\n    </el-table-column>\n    <el-table-column\n      prop=\"address\"\n      label=\"地址\"\n      :formatter=\"formatter\">\n    </el-table-column>\n  </el-table>\n</template>\n\n<script>\n  export default {\n    data() {\n      return {\n        tableData: [{\n          date: '2016-05-02',\n          name: '王小虎',\n          address: '上海市普陀区金沙江路 1518 弄'\n        }, {\n          date: '2016-05-04',\n          name: '王小虎',\n          address: '上海市普陀区金沙江路 1517 弄'\n        }, {\n          date: '2016-05-01',\n          name: '王小虎',\n          address: '上海市普陀区金沙江路 1519 弄'\n        }, {\n          date: '2016-05-03',\n          name: '王小虎',\n          address: '上海市普陀区金沙江路 1516 弄'\n        }]\n      }\n    },\n    methods: {\n      formatter(row, column) {\n        return row.address;\n      }\n    }\n  }\n</script>\n\n```\n下面来说下我们项目的需求\n![](1.png)\n如果不是二次封装也很容易解决，可以用template，但是我们这里说的是二次封装，这里只能用formatter函数了，父组件在调用时需要提供类似这样的数据：\n```\ntablelable:[\n    {lable:'表格行1',prop:'prop_1'},\n    {lable:'时间',prop:'time'},\n    {lable:'附件',prop:'files',\n    formatter:(row,column,cellvalue,index)={\n            //在这里进行格式化输出\n        }\n    },\n]\n// 这里提供的数据源\ntableData:[\n    {prop_1:'***',time:'2015-20-2',files:[name:'12.jpg',url:'']},\n    {prop_1:'***',time:'2015-20-2',files:[name:'12.jpg',url:'']}\n]\n```\n下面贴出图片吧\n![](2.png)\n![](3.png)\n这里的formatter必须要返回一个对象才能渲染出html，如果是返回一个字符串是没有用的，会原样输出字符串，比如'<a heref=\"\">12.jpg</a>' 他不会渲染出可点击的a  而是把一整个当成字符串输出，没有渲染。<font color=\"red\">还有一个需要注意的地方就是在这里返回的对象中的元素的属性要采用原生的写法，比如class要写成className，还有变量等也需要注意写法</font>。好了，记录下，以后再遇到就懂得处理了。\n","source":"_posts/记录element-ui-二次封装table时formatter的使用问题.md","raw":"---\ntitle: 记录element-ui 二次封装table时formatter的使用问题\ntags:\n  - element-ui\n  - vue\ncategories: 前端\nabbrlink: 7f247ba3\ndate: 2019-04-24 22:11:01\n---\n\n### 二次封装element table表格中遇到的问题记录\n我们都知道element-ui 的table 中表格行的通过prop指定显示数据源中的字段，我们在进行二次封装时，如果数据都是很简单的字符串或者数字之类的，那就可以直接使用prop就行了，不需要做特殊的操作，但是如果是数组，那就得进行特殊的处理了。\n<!-- more -->\n我们知道element 对于表格行还提供了一个格式化的函数：formatter，常规的用法没有什么好说的了，格式化显示货币，时间等，这里要说的是当字段是数组的时候，而且要在当前列显示html元素的时候就有点蛋疼了，如果是不需要html元素，直接循环数组就行。\n下面是element table的formatter的常规用法（来自element官网）：\n```\n<template>\n  <el-table\n    :data=\"tableData\"\n    style=\"width: 100%\"\n    :default-sort = \"{prop: 'date', order: 'descending'}\"\n    >\n    <el-table-column\n      prop=\"date\"\n      label=\"日期\"\n      sortable\n      width=\"180\">\n    </el-table-column>\n    <el-table-column\n      prop=\"name\"\n      label=\"姓名\"\n      sortable\n      width=\"180\">\n    </el-table-column>\n    <el-table-column\n      prop=\"address\"\n      label=\"地址\"\n      :formatter=\"formatter\">\n    </el-table-column>\n  </el-table>\n</template>\n\n<script>\n  export default {\n    data() {\n      return {\n        tableData: [{\n          date: '2016-05-02',\n          name: '王小虎',\n          address: '上海市普陀区金沙江路 1518 弄'\n        }, {\n          date: '2016-05-04',\n          name: '王小虎',\n          address: '上海市普陀区金沙江路 1517 弄'\n        }, {\n          date: '2016-05-01',\n          name: '王小虎',\n          address: '上海市普陀区金沙江路 1519 弄'\n        }, {\n          date: '2016-05-03',\n          name: '王小虎',\n          address: '上海市普陀区金沙江路 1516 弄'\n        }]\n      }\n    },\n    methods: {\n      formatter(row, column) {\n        return row.address;\n      }\n    }\n  }\n</script>\n\n```\n下面来说下我们项目的需求\n![](1.png)\n如果不是二次封装也很容易解决，可以用template，但是我们这里说的是二次封装，这里只能用formatter函数了，父组件在调用时需要提供类似这样的数据：\n```\ntablelable:[\n    {lable:'表格行1',prop:'prop_1'},\n    {lable:'时间',prop:'time'},\n    {lable:'附件',prop:'files',\n    formatter:(row,column,cellvalue,index)={\n            //在这里进行格式化输出\n        }\n    },\n]\n// 这里提供的数据源\ntableData:[\n    {prop_1:'***',time:'2015-20-2',files:[name:'12.jpg',url:'']},\n    {prop_1:'***',time:'2015-20-2',files:[name:'12.jpg',url:'']}\n]\n```\n下面贴出图片吧\n![](2.png)\n![](3.png)\n这里的formatter必须要返回一个对象才能渲染出html，如果是返回一个字符串是没有用的，会原样输出字符串，比如'<a heref=\"\">12.jpg</a>' 他不会渲染出可点击的a  而是把一整个当成字符串输出，没有渲染。<font color=\"red\">还有一个需要注意的地方就是在这里返回的对象中的元素的属性要采用原生的写法，比如class要写成className，还有变量等也需要注意写法</font>。好了，记录下，以后再遇到就懂得处理了。\n","slug":"记录element-ui-二次封装table时formatter的使用问题","published":1,"updated":"2020-08-12T05:00:40.868Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdqxnc3f001fd7m0eyiu0bot","content":"<h3 id=\"二次封装element-table表格中遇到的问题记录\"><a href=\"#二次封装element-table表格中遇到的问题记录\" class=\"headerlink\" title=\"二次封装element table表格中遇到的问题记录\"></a>二次封装element table表格中遇到的问题记录</h3><p>我们都知道element-ui 的table 中表格行的通过prop指定显示数据源中的字段，我们在进行二次封装时，如果数据都是很简单的字符串或者数字之类的，那就可以直接使用prop就行了，不需要做特殊的操作，但是如果是数组，那就得进行特殊的处理了。</p>\n<a id=\"more\"></a>\n<p>我们知道element 对于表格行还提供了一个格式化的函数：formatter，常规的用法没有什么好说的了，格式化显示货币，时间等，这里要说的是当字段是数组的时候，而且要在当前列显示html元素的时候就有点蛋疼了，如果是不需要html元素，直接循环数组就行。<br>下面是element table的formatter的常规用法（来自element官网）：</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;<span class=\"keyword\">template</span>&gt;</span><br><span class=\"line\">  &lt;el-<span class=\"keyword\">table</span></span><br><span class=\"line\">    :data=&quot;tableData&quot;</span><br><span class=\"line\">    style=&quot;width: 100%&quot;</span><br><span class=\"line\">    :<span class=\"keyword\">default</span>-sort = &quot;&#123;prop: &#x27;date&#x27;, order: &#x27;descending&#x27;&#125;&quot;</span><br><span class=\"line\">    &gt;</span><br><span class=\"line\">    &lt;el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span></span><br><span class=\"line\">      prop=&quot;date&quot;</span><br><span class=\"line\">      label=&quot;日期&quot;</span><br><span class=\"line\">      sortable</span><br><span class=\"line\">      width=&quot;180&quot;&gt;</span><br><span class=\"line\">    &lt;/el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span>&gt;</span><br><span class=\"line\">    &lt;el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span></span><br><span class=\"line\">      prop=&quot;name&quot;</span><br><span class=\"line\">      label=&quot;姓名&quot;</span><br><span class=\"line\">      sortable</span><br><span class=\"line\">      width=&quot;180&quot;&gt;</span><br><span class=\"line\">    &lt;/el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span>&gt;</span><br><span class=\"line\">    &lt;el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span></span><br><span class=\"line\">      prop=&quot;address&quot;</span><br><span class=\"line\">      label=&quot;地址&quot;</span><br><span class=\"line\">      :formatter=&quot;formatter&quot;&gt;</span><br><span class=\"line\">    &lt;/el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span>&gt;</span><br><span class=\"line\">  &lt;/el-<span class=\"keyword\">table</span>&gt;</span><br><span class=\"line\">&lt;/<span class=\"keyword\">template</span>&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  export <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">    data() &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">        tableData: [&#123;</span><br><span class=\"line\">          <span class=\"type\">date</span>: <span class=\"string\">&#x27;2016-05-02&#x27;</span>,</span><br><span class=\"line\">          <span class=\"type\">name</span>: <span class=\"string\">&#x27;王小虎&#x27;</span>,</span><br><span class=\"line\">          address: <span class=\"string\">&#x27;上海市普陀区金沙江路 1518 弄&#x27;</span></span><br><span class=\"line\">        &#125;, &#123;</span><br><span class=\"line\">          <span class=\"type\">date</span>: <span class=\"string\">&#x27;2016-05-04&#x27;</span>,</span><br><span class=\"line\">          <span class=\"type\">name</span>: <span class=\"string\">&#x27;王小虎&#x27;</span>,</span><br><span class=\"line\">          address: <span class=\"string\">&#x27;上海市普陀区金沙江路 1517 弄&#x27;</span></span><br><span class=\"line\">        &#125;, &#123;</span><br><span class=\"line\">          <span class=\"type\">date</span>: <span class=\"string\">&#x27;2016-05-01&#x27;</span>,</span><br><span class=\"line\">          <span class=\"type\">name</span>: <span class=\"string\">&#x27;王小虎&#x27;</span>,</span><br><span class=\"line\">          address: <span class=\"string\">&#x27;上海市普陀区金沙江路 1519 弄&#x27;</span></span><br><span class=\"line\">        &#125;, &#123;</span><br><span class=\"line\">          <span class=\"type\">date</span>: <span class=\"string\">&#x27;2016-05-03&#x27;</span>,</span><br><span class=\"line\">          <span class=\"type\">name</span>: <span class=\"string\">&#x27;王小虎&#x27;</span>,</span><br><span class=\"line\">          address: <span class=\"string\">&#x27;上海市普陀区金沙江路 1516 弄&#x27;</span></span><br><span class=\"line\">        &#125;]</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    methods: &#123;</span><br><span class=\"line\">      formatter(<span class=\"keyword\">row</span>, <span class=\"keyword\">column</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">row</span>.address;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>下面来说下我们项目的需求<br><img src=\"1.png\"><br>如果不是二次封装也很容易解决，可以用template，但是我们这里说的是二次封装，这里只能用formatter函数了，父组件在调用时需要提供类似这样的数据：</p>\n<figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">tablelable:</span>[</span><br><span class=\"line\">    &#123;<span class=\"attr\">lable:</span><span class=\"string\">&#x27;表格行1&#x27;</span>,<span class=\"attr\">prop:</span><span class=\"string\">&#x27;prop_1&#x27;</span>&#125;,</span><br><span class=\"line\">    &#123;<span class=\"attr\">lable:</span><span class=\"string\">&#x27;时间&#x27;</span>,<span class=\"attr\">prop:</span><span class=\"string\">&#x27;time&#x27;</span>&#125;,</span><br><span class=\"line\">    &#123;<span class=\"attr\">lable:</span><span class=\"string\">&#x27;附件&#x27;</span>,<span class=\"attr\">prop:</span><span class=\"string\">&#x27;files&#x27;</span>,</span><br><span class=\"line\">    <span class=\"symbol\">formatter:</span>(row,column,cellvalue,index)=&#123;</span><br><span class=\"line\">            <span class=\"comment\">//在这里进行格式化输出</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">]</span><br><span class=\"line\"><span class=\"comment\">// 这里提供的数据源</span></span><br><span class=\"line\"><span class=\"attr\">tableData:</span>[</span><br><span class=\"line\">    &#123;<span class=\"attr\">prop_1:</span><span class=\"string\">&#x27;***&#x27;</span>,<span class=\"attr\">time:</span><span class=\"string\">&#x27;2015-20-2&#x27;</span>,<span class=\"attr\">files:</span>[<span class=\"attr\">name:</span><span class=\"string\">&#x27;12.jpg&#x27;</span>,<span class=\"attr\">url:</span><span class=\"string\">&#x27;&#x27;</span>]&#125;,</span><br><span class=\"line\">    &#123;<span class=\"attr\">prop_1:</span><span class=\"string\">&#x27;***&#x27;</span>,<span class=\"attr\">time:</span><span class=\"string\">&#x27;2015-20-2&#x27;</span>,<span class=\"attr\">files:</span>[<span class=\"attr\">name:</span><span class=\"string\">&#x27;12.jpg&#x27;</span>,<span class=\"attr\">url:</span><span class=\"string\">&#x27;&#x27;</span>]&#125;</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<p>下面贴出图片吧<br><img src=\"2.png\"><br><img src=\"3.png\"><br>这里的formatter必须要返回一个对象才能渲染出html，如果是返回一个字符串是没有用的，会原样输出字符串，比如’<a heref=\"\">12.jpg</a>‘ 他不会渲染出可点击的a  而是把一整个当成字符串输出，没有渲染。<font color=\"red\">还有一个需要注意的地方就是在这里返回的对象中的元素的属性要采用原生的写法，比如class要写成className，还有变量等也需要注意写法</font>。好了，记录下，以后再遇到就懂得处理了。</p>\n","site":{"data":{}},"excerpt":"<h3 id=\"二次封装element-table表格中遇到的问题记录\"><a href=\"#二次封装element-table表格中遇到的问题记录\" class=\"headerlink\" title=\"二次封装element table表格中遇到的问题记录\"></a>二次封装element table表格中遇到的问题记录</h3><p>我们都知道element-ui 的table 中表格行的通过prop指定显示数据源中的字段，我们在进行二次封装时，如果数据都是很简单的字符串或者数字之类的，那就可以直接使用prop就行了，不需要做特殊的操作，但是如果是数组，那就得进行特殊的处理了。</p>","more":"<p>我们知道element 对于表格行还提供了一个格式化的函数：formatter，常规的用法没有什么好说的了，格式化显示货币，时间等，这里要说的是当字段是数组的时候，而且要在当前列显示html元素的时候就有点蛋疼了，如果是不需要html元素，直接循环数组就行。<br>下面是element table的formatter的常规用法（来自element官网）：</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;<span class=\"keyword\">template</span>&gt;</span><br><span class=\"line\">  &lt;el-<span class=\"keyword\">table</span></span><br><span class=\"line\">    :data=&quot;tableData&quot;</span><br><span class=\"line\">    style=&quot;width: 100%&quot;</span><br><span class=\"line\">    :<span class=\"keyword\">default</span>-sort = &quot;&#123;prop: &#x27;date&#x27;, order: &#x27;descending&#x27;&#125;&quot;</span><br><span class=\"line\">    &gt;</span><br><span class=\"line\">    &lt;el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span></span><br><span class=\"line\">      prop=&quot;date&quot;</span><br><span class=\"line\">      label=&quot;日期&quot;</span><br><span class=\"line\">      sortable</span><br><span class=\"line\">      width=&quot;180&quot;&gt;</span><br><span class=\"line\">    &lt;/el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span>&gt;</span><br><span class=\"line\">    &lt;el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span></span><br><span class=\"line\">      prop=&quot;name&quot;</span><br><span class=\"line\">      label=&quot;姓名&quot;</span><br><span class=\"line\">      sortable</span><br><span class=\"line\">      width=&quot;180&quot;&gt;</span><br><span class=\"line\">    &lt;/el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span>&gt;</span><br><span class=\"line\">    &lt;el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span></span><br><span class=\"line\">      prop=&quot;address&quot;</span><br><span class=\"line\">      label=&quot;地址&quot;</span><br><span class=\"line\">      :formatter=&quot;formatter&quot;&gt;</span><br><span class=\"line\">    &lt;/el-<span class=\"keyword\">table</span>-<span class=\"keyword\">column</span>&gt;</span><br><span class=\"line\">  &lt;/el-<span class=\"keyword\">table</span>&gt;</span><br><span class=\"line\">&lt;/<span class=\"keyword\">template</span>&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  export <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">    data() &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">        tableData: [&#123;</span><br><span class=\"line\">          <span class=\"type\">date</span>: <span class=\"string\">&#x27;2016-05-02&#x27;</span>,</span><br><span class=\"line\">          <span class=\"type\">name</span>: <span class=\"string\">&#x27;王小虎&#x27;</span>,</span><br><span class=\"line\">          address: <span class=\"string\">&#x27;上海市普陀区金沙江路 1518 弄&#x27;</span></span><br><span class=\"line\">        &#125;, &#123;</span><br><span class=\"line\">          <span class=\"type\">date</span>: <span class=\"string\">&#x27;2016-05-04&#x27;</span>,</span><br><span class=\"line\">          <span class=\"type\">name</span>: <span class=\"string\">&#x27;王小虎&#x27;</span>,</span><br><span class=\"line\">          address: <span class=\"string\">&#x27;上海市普陀区金沙江路 1517 弄&#x27;</span></span><br><span class=\"line\">        &#125;, &#123;</span><br><span class=\"line\">          <span class=\"type\">date</span>: <span class=\"string\">&#x27;2016-05-01&#x27;</span>,</span><br><span class=\"line\">          <span class=\"type\">name</span>: <span class=\"string\">&#x27;王小虎&#x27;</span>,</span><br><span class=\"line\">          address: <span class=\"string\">&#x27;上海市普陀区金沙江路 1519 弄&#x27;</span></span><br><span class=\"line\">        &#125;, &#123;</span><br><span class=\"line\">          <span class=\"type\">date</span>: <span class=\"string\">&#x27;2016-05-03&#x27;</span>,</span><br><span class=\"line\">          <span class=\"type\">name</span>: <span class=\"string\">&#x27;王小虎&#x27;</span>,</span><br><span class=\"line\">          address: <span class=\"string\">&#x27;上海市普陀区金沙江路 1516 弄&#x27;</span></span><br><span class=\"line\">        &#125;]</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    methods: &#123;</span><br><span class=\"line\">      formatter(<span class=\"keyword\">row</span>, <span class=\"keyword\">column</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">row</span>.address;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>下面来说下我们项目的需求<br><img src=\"1.png\"><br>如果不是二次封装也很容易解决，可以用template，但是我们这里说的是二次封装，这里只能用formatter函数了，父组件在调用时需要提供类似这样的数据：</p>\n<figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">tablelable:</span>[</span><br><span class=\"line\">    &#123;<span class=\"attr\">lable:</span><span class=\"string\">&#x27;表格行1&#x27;</span>,<span class=\"attr\">prop:</span><span class=\"string\">&#x27;prop_1&#x27;</span>&#125;,</span><br><span class=\"line\">    &#123;<span class=\"attr\">lable:</span><span class=\"string\">&#x27;时间&#x27;</span>,<span class=\"attr\">prop:</span><span class=\"string\">&#x27;time&#x27;</span>&#125;,</span><br><span class=\"line\">    &#123;<span class=\"attr\">lable:</span><span class=\"string\">&#x27;附件&#x27;</span>,<span class=\"attr\">prop:</span><span class=\"string\">&#x27;files&#x27;</span>,</span><br><span class=\"line\">    <span class=\"symbol\">formatter:</span>(row,column,cellvalue,index)=&#123;</span><br><span class=\"line\">            <span class=\"comment\">//在这里进行格式化输出</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">]</span><br><span class=\"line\"><span class=\"comment\">// 这里提供的数据源</span></span><br><span class=\"line\"><span class=\"attr\">tableData:</span>[</span><br><span class=\"line\">    &#123;<span class=\"attr\">prop_1:</span><span class=\"string\">&#x27;***&#x27;</span>,<span class=\"attr\">time:</span><span class=\"string\">&#x27;2015-20-2&#x27;</span>,<span class=\"attr\">files:</span>[<span class=\"attr\">name:</span><span class=\"string\">&#x27;12.jpg&#x27;</span>,<span class=\"attr\">url:</span><span class=\"string\">&#x27;&#x27;</span>]&#125;,</span><br><span class=\"line\">    &#123;<span class=\"attr\">prop_1:</span><span class=\"string\">&#x27;***&#x27;</span>,<span class=\"attr\">time:</span><span class=\"string\">&#x27;2015-20-2&#x27;</span>,<span class=\"attr\">files:</span>[<span class=\"attr\">name:</span><span class=\"string\">&#x27;12.jpg&#x27;</span>,<span class=\"attr\">url:</span><span class=\"string\">&#x27;&#x27;</span>]&#125;</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<p>下面贴出图片吧<br><img src=\"2.png\"><br><img src=\"3.png\"><br>这里的formatter必须要返回一个对象才能渲染出html，如果是返回一个字符串是没有用的，会原样输出字符串，比如’<a heref=\"\">12.jpg</a>‘ 他不会渲染出可点击的a  而是把一整个当成字符串输出，没有渲染。<font color=\"red\">还有一个需要注意的地方就是在这里返回的对象中的元素的属性要采用原生的写法，比如class要写成className，还有变量等也需要注意写法</font>。好了，记录下，以后再遇到就懂得处理了。</p>"},{"title":"运行yarn eject 后 yarn start 报错","abbrlink":"e1691e31","date":"2020-06-04T11:00:34.000Z","_content":"运行 yarn eject 把webpack配置暴露出来后，运行yarn start后报错，\n报错的内容大致是 找不到 react-scripts下的config/env.js文件，然后查了下，发现node_module下 react-scripts被清空了，package.json文件\n<!-- more -->\n下也没有这个记录了，找了很多资料都没有结果，然后索性就按照这个包，按照好后就报各种插件版本低，比如webpack，babel等，然后全部升级后，启动就没有报错了。","source":"_posts/运行yarn-eject-后-yarn-start-报错.md","raw":"---\ntitle: 运行yarn eject 后 yarn start 报错\ntags: 'react,'\ncategories: 前端\nabbrlink: e1691e31\ndate: 2020-06-04 19:00:34\n---\n运行 yarn eject 把webpack配置暴露出来后，运行yarn start后报错，\n报错的内容大致是 找不到 react-scripts下的config/env.js文件，然后查了下，发现node_module下 react-scripts被清空了，package.json文件\n<!-- more -->\n下也没有这个记录了，找了很多资料都没有结果，然后索性就按照这个包，按照好后就报各种插件版本低，比如webpack，babel等，然后全部升级后，启动就没有报错了。","slug":"运行yarn-eject-后-yarn-start-报错","published":1,"updated":"2020-08-12T04:53:26.440Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdqxnc3h001jd7m0hsjb8lpj","content":"<p>运行 yarn eject 把webpack配置暴露出来后，运行yarn start后报错，<br>报错的内容大致是 找不到 react-scripts下的config/env.js文件，然后查了下，发现node_module下 react-scripts被清空了，package.json文件</p>\n<a id=\"more\"></a>\n<p>下也没有这个记录了，找了很多资料都没有结果，然后索性就按照这个包，按照好后就报各种插件版本低，比如webpack，babel等，然后全部升级后，启动就没有报错了。</p>\n","site":{"data":{}},"excerpt":"<p>运行 yarn eject 把webpack配置暴露出来后，运行yarn start后报错，<br>报错的内容大致是 找不到 react-scripts下的config/env.js文件，然后查了下，发现node_module下 react-scripts被清空了，package.json文件</p>","more":"<p>下也没有这个记录了，找了很多资料都没有结果，然后索性就按照这个包，按照好后就报各种插件版本低，比如webpack，babel等，然后全部升级后，启动就没有报错了。</p>"},{"title":"部署在github page的hexo博客绑定二级域名","abbrlink":"a7642960","date":"2019-02-26T11:45:45.000Z","_content":"## 前提：已经有了域名（这里以阿里云为例）以及能成功访问的github page（这里以hexo部署的博客为例）。\n### 1.增加域名解析：\n<!-- more -->\n![](/images/2019-2-26.png)\n这里需要注意，记录类型需要选择CNAME，主机记录为除www和@外的字符，因为我要用blog作为二级域名，所以写blog。解析线路选默认就好了，一开始我选境外，结果不行。记录值为``` ***.github.io ```(即你的github page地址)。到这里解析设置完成了。\n\n### 2.增加域名解析：\n\n在GitHub博客仓库的根目录中新建文件CNAME （没有后缀），里面填写 ``` blog.iyuge.cn ``` 注意，因为hexo在部署至github时会重新删除github的文件，所以我们必须在本地的source目录下新建CNAME文件，然后``` hexo clean && hexo g && hexo d github ```上就有CNAME文件了\n\n### 结语：至此，给github page绑定二级域名就完成了，很简单，但是需要注意的是第一次有可能不成功需要重试几次，每次可能需要等一段时间才会生效！","source":"_posts/部署在github-page的hexo博客绑定二级域名.md","raw":"---\ntitle: 部署在github page的hexo博客绑定二级域名\ntags: 技术\ncategories: 技术\nabbrlink: a7642960\ndate: 2019-02-26 19:45:45\n---\n## 前提：已经有了域名（这里以阿里云为例）以及能成功访问的github page（这里以hexo部署的博客为例）。\n### 1.增加域名解析：\n<!-- more -->\n![](/images/2019-2-26.png)\n这里需要注意，记录类型需要选择CNAME，主机记录为除www和@外的字符，因为我要用blog作为二级域名，所以写blog。解析线路选默认就好了，一开始我选境外，结果不行。记录值为``` ***.github.io ```(即你的github page地址)。到这里解析设置完成了。\n\n### 2.增加域名解析：\n\n在GitHub博客仓库的根目录中新建文件CNAME （没有后缀），里面填写 ``` blog.iyuge.cn ``` 注意，因为hexo在部署至github时会重新删除github的文件，所以我们必须在本地的source目录下新建CNAME文件，然后``` hexo clean && hexo g && hexo d github ```上就有CNAME文件了\n\n### 结语：至此，给github page绑定二级域名就完成了，很简单，但是需要注意的是第一次有可能不成功需要重试几次，每次可能需要等一段时间才会生效！","slug":"部署在github-page的hexo博客绑定二级域名","published":1,"updated":"2020-08-12T04:53:45.768Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckdqxnc3i001md7m0458o5lls","content":"<h2 id=\"前提：已经有了域名（这里以阿里云为例）以及能成功访问的github-page（这里以hexo部署的博客为例）。\"><a href=\"#前提：已经有了域名（这里以阿里云为例）以及能成功访问的github-page（这里以hexo部署的博客为例）。\" class=\"headerlink\" title=\"前提：已经有了域名（这里以阿里云为例）以及能成功访问的github page（这里以hexo部署的博客为例）。\"></a>前提：已经有了域名（这里以阿里云为例）以及能成功访问的github page（这里以hexo部署的博客为例）。</h2><h3 id=\"1-增加域名解析：\"><a href=\"#1-增加域名解析：\" class=\"headerlink\" title=\"1.增加域名解析：\"></a>1.增加域名解析：</h3><a id=\"more\"></a>\n<p><img src=\"/images/2019-2-26.png\"><br>这里需要注意，记录类型需要选择CNAME，主机记录为除www和@外的字符，因为我要用blog作为二级域名，所以写blog。解析线路选默认就好了，一开始我选境外，结果不行。记录值为<code>***.github.io</code>(即你的github page地址)。到这里解析设置完成了。</p>\n<h3 id=\"2-增加域名解析：\"><a href=\"#2-增加域名解析：\" class=\"headerlink\" title=\"2.增加域名解析：\"></a>2.增加域名解析：</h3><p>在GitHub博客仓库的根目录中新建文件CNAME （没有后缀），里面填写 <code>blog.iyuge.cn</code> 注意，因为hexo在部署至github时会重新删除github的文件，所以我们必须在本地的source目录下新建CNAME文件，然后<code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo d github</code>上就有CNAME文件了</p>\n<h3 id=\"结语：至此，给github-page绑定二级域名就完成了，很简单，但是需要注意的是第一次有可能不成功需要重试几次，每次可能需要等一段时间才会生效！\"><a href=\"#结语：至此，给github-page绑定二级域名就完成了，很简单，但是需要注意的是第一次有可能不成功需要重试几次，每次可能需要等一段时间才会生效！\" class=\"headerlink\" title=\"结语：至此，给github page绑定二级域名就完成了，很简单，但是需要注意的是第一次有可能不成功需要重试几次，每次可能需要等一段时间才会生效！\"></a>结语：至此，给github page绑定二级域名就完成了，很简单，但是需要注意的是第一次有可能不成功需要重试几次，每次可能需要等一段时间才会生效！</h3>","site":{"data":{}},"excerpt":"<h2 id=\"前提：已经有了域名（这里以阿里云为例）以及能成功访问的github-page（这里以hexo部署的博客为例）。\"><a href=\"#前提：已经有了域名（这里以阿里云为例）以及能成功访问的github-page（这里以hexo部署的博客为例）。\" class=\"headerlink\" title=\"前提：已经有了域名（这里以阿里云为例）以及能成功访问的github page（这里以hexo部署的博客为例）。\"></a>前提：已经有了域名（这里以阿里云为例）以及能成功访问的github page（这里以hexo部署的博客为例）。</h2><h3 id=\"1-增加域名解析：\"><a href=\"#1-增加域名解析：\" class=\"headerlink\" title=\"1.增加域名解析：\"></a>1.增加域名解析：</h3>","more":"<p><img src=\"/images/2019-2-26.png\"><br>这里需要注意，记录类型需要选择CNAME，主机记录为除www和@外的字符，因为我要用blog作为二级域名，所以写blog。解析线路选默认就好了，一开始我选境外，结果不行。记录值为<code>***.github.io</code>(即你的github page地址)。到这里解析设置完成了。</p>\n<h3 id=\"2-增加域名解析：\"><a href=\"#2-增加域名解析：\" class=\"headerlink\" title=\"2.增加域名解析：\"></a>2.增加域名解析：</h3><p>在GitHub博客仓库的根目录中新建文件CNAME （没有后缀），里面填写 <code>blog.iyuge.cn</code> 注意，因为hexo在部署至github时会重新删除github的文件，所以我们必须在本地的source目录下新建CNAME文件，然后<code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo d github</code>上就有CNAME文件了</p>\n<h3 id=\"结语：至此，给github-page绑定二级域名就完成了，很简单，但是需要注意的是第一次有可能不成功需要重试几次，每次可能需要等一段时间才会生效！\"><a href=\"#结语：至此，给github-page绑定二级域名就完成了，很简单，但是需要注意的是第一次有可能不成功需要重试几次，每次可能需要等一段时间才会生效！\" class=\"headerlink\" title=\"结语：至此，给github page绑定二级域名就完成了，很简单，但是需要注意的是第一次有可能不成功需要重试几次，每次可能需要等一段时间才会生效！\"></a>结语：至此，给github page绑定二级域名就完成了，很简单，但是需要注意的是第一次有可能不成功需要重试几次，每次可能需要等一段时间才会生效！</h3>"}],"PostAsset":[{"_id":"source/_posts/element-ui-上传组件函数自定义参数传递/1.png","slug":"1.png","post":"ckdqxnc2q0003d7m06eigadxa","modified":0,"renderable":0},{"_id":"source/_posts/element-ui-上传组件函数自定义参数传递/2.png","slug":"2.png","post":"ckdqxnc2q0003d7m06eigadxa","modified":0,"renderable":0},{"_id":"source/_posts/element-ui-上传组件函数自定义参数传递/3.png","slug":"3.png","post":"ckdqxnc2q0003d7m06eigadxa","modified":0,"renderable":0},{"_id":"source/_posts/element-ui-表格中的form的input动态验证规则/1.png","slug":"1.png","post":"ckdqxnc2u0007d7m09ype70cj","modified":0,"renderable":0},{"_id":"source/_posts/element-ui-表格中的form的input动态验证规则/2.png","slug":"2.png","post":"ckdqxnc2u0007d7m09ype70cj","modified":0,"renderable":0},{"_id":"source/_posts/element-ui-表格中的form的input动态验证规则/3.png","slug":"3.png","post":"ckdqxnc2u0007d7m09ype70cj","modified":0,"renderable":0},{"_id":"source/_posts/element-ui-表格中的form的input动态验证规则/4.png","slug":"4.png","post":"ckdqxnc2u0007d7m09ype70cj","modified":0,"renderable":0},{"_id":"source/_posts/element-ui-表格中的form的input动态验证规则/5.png","slug":"5.png","post":"ckdqxnc2u0007d7m09ype70cj","modified":0,"renderable":0},{"_id":"source/_posts/js判断一个变量是对象还是数组的实用方法记录/1.jpg","slug":"1.jpg","post":"ckdqxnc2x0009d7m0d9149m2f","modified":0,"renderable":0},{"_id":"source/_posts/js判断一个变量是对象还是数组的实用方法记录/2.jpg","slug":"2.jpg","post":"ckdqxnc2x0009d7m0d9149m2f","modified":0,"renderable":0},{"_id":"source/_posts/webpack4从头构建一个简单的vue2项目/1.png","slug":"1.png","post":"ckdqxnc2y000bd7m0cu4ebqhd","modified":0,"renderable":0},{"_id":"source/_posts/webpack4从头构建一个简单的vue2项目/2.png","slug":"2.png","post":"ckdqxnc2y000bd7m0cu4ebqhd","modified":0,"renderable":0},{"_id":"source/_posts/windows下使用nexus搭建私有仓库并使用vue-cli-3-搭建组件库/1.png","slug":"1.png","post":"ckdqxnc33000hd7m03fu67fed","modified":0,"renderable":0},{"_id":"source/_posts/windows下使用nexus搭建私有仓库并使用vue-cli-3-搭建组件库/2.png","slug":"2.png","post":"ckdqxnc33000hd7m03fu67fed","modified":0,"renderable":0},{"_id":"source/_posts/windows下使用nexus搭建私有仓库并使用vue-cli-3-搭建组件库/3.png","slug":"3.png","post":"ckdqxnc33000hd7m03fu67fed","modified":0,"renderable":0},{"_id":"source/_posts/windows下使用nexus搭建私有仓库并使用vue-cli-3-搭建组件库/4.png","slug":"4.png","post":"ckdqxnc33000hd7m03fu67fed","modified":0,"renderable":0},{"_id":"source/_posts/windows下使用nexus搭建私有仓库并使用vue-cli-3-搭建组件库/5.png","slug":"5.png","post":"ckdqxnc33000hd7m03fu67fed","modified":0,"renderable":0},{"_id":"source/_posts/windows下使用nexus搭建私有仓库并使用vue-cli-3-搭建组件库/6.png","slug":"6.png","post":"ckdqxnc33000hd7m03fu67fed","modified":0,"renderable":0},{"_id":"source/_posts/windows下使用nexus搭建私有仓库并使用vue-cli-3-搭建组件库/7.png","slug":"7.png","post":"ckdqxnc33000hd7m03fu67fed","modified":0,"renderable":0},{"_id":"source/_posts/windows下使用nexus搭建私有仓库并使用vue-cli-3-搭建组件库/8.png","slug":"8.png","post":"ckdqxnc33000hd7m03fu67fed","modified":0,"renderable":0},{"_id":"source/_posts/一个奇葩的表格统计需求/1.jpg","slug":"1.jpg","post":"ckdqxnc35000ld7m065d27nlv","modified":0,"renderable":0},{"_id":"source/_posts/一个奇葩的表格统计需求/2.jpg","slug":"2.jpg","post":"ckdqxnc35000ld7m065d27nlv","modified":0,"renderable":0},{"_id":"source/_posts/一个奇葩的表格统计需求/3.jpg","slug":"3.jpg","post":"ckdqxnc35000ld7m065d27nlv","modified":0,"renderable":0},{"_id":"source/_posts/一个奇葩的表格统计需求/4.jpg","slug":"4.jpg","post":"ckdqxnc35000ld7m065d27nlv","modified":0,"renderable":0},{"_id":"source/_posts/一个奇葩的表格统计需求/5.jpg","slug":"5.jpg","post":"ckdqxnc35000ld7m065d27nlv","modified":0,"renderable":0},{"_id":"source/_posts/在重启阿里云ubantu后nginx、mysql、pm2等的重启/1.png","slug":"1.png","post":"ckdqxnc38000sd7m059w04lz4","modified":0,"renderable":0},{"_id":"source/_posts/在重启阿里云ubantu后nginx、mysql、pm2等的重启/2.png","slug":"2.png","post":"ckdqxnc38000sd7m059w04lz4","modified":0,"renderable":0},{"_id":"source/_posts/在重启阿里云ubantu后nginx、mysql、pm2等的重启/3.png","slug":"3.png","post":"ckdqxnc38000sd7m059w04lz4","modified":0,"renderable":0},{"_id":"source/_posts/用Xshell登录阿里云服务器/1.jpg","slug":"1.jpg","post":"ckdqxnc3c0013d7m0bfaebvoj","modified":0,"renderable":0},{"_id":"source/_posts/用Xshell登录阿里云服务器/2.jpg","slug":"2.jpg","post":"ckdqxnc3c0013d7m0bfaebvoj","modified":0,"renderable":0},{"_id":"source/_posts/记录element-ui-二次封装table时formatter的使用问题/1.png","slug":"1.png","post":"ckdqxnc3f001fd7m0eyiu0bot","modified":0,"renderable":0},{"_id":"source/_posts/记录element-ui-二次封装table时formatter的使用问题/2.png","slug":"2.png","post":"ckdqxnc3f001fd7m0eyiu0bot","modified":0,"renderable":0},{"_id":"source/_posts/记录element-ui-二次封装table时formatter的使用问题/3.png","slug":"3.png","post":"ckdqxnc3f001fd7m0eyiu0bot","modified":0,"renderable":0}],"PostCategory":[{"post_id":"ckdqxnc2x0009d7m0d9149m2f","category_id":"ckdqxnc2s0004d7m0c05f9mwf","_id":"ckdqxnc34000id7m035ie5nsr"},{"post_id":"ckdqxnc2l0001d7m07jz7e5yt","category_id":"ckdqxnc2s0004d7m0c05f9mwf","_id":"ckdqxnc36000md7m0fpj22vjv"},{"post_id":"ckdqxnc2y000bd7m0cu4ebqhd","category_id":"ckdqxnc2s0004d7m0c05f9mwf","_id":"ckdqxnc37000od7m0dsem3r75"},{"post_id":"ckdqxnc2q0003d7m06eigadxa","category_id":"ckdqxnc2s0004d7m0c05f9mwf","_id":"ckdqxnc39000td7m0gpo2bh97"},{"post_id":"ckdqxnc33000hd7m03fu67fed","category_id":"ckdqxnc2s0004d7m0c05f9mwf","_id":"ckdqxnc3a000wd7m00g2iebcc"},{"post_id":"ckdqxnc2u0007d7m09ype70cj","category_id":"ckdqxnc2s0004d7m0c05f9mwf","_id":"ckdqxnc3b0011d7m03bb2fe2q"},{"post_id":"ckdqxnc37000nd7m0bgqrbjwz","category_id":"ckdqxnc2s0004d7m0c05f9mwf","_id":"ckdqxnc3c0014d7m070g5hbf0"},{"post_id":"ckdqxnc38000sd7m059w04lz4","category_id":"ckdqxnc37000pd7m04w8z5h4y","_id":"ckdqxnc3e0019d7m08wltb1mv"},{"post_id":"ckdqxnc32000fd7m0bgxacy2g","category_id":"ckdqxnc37000pd7m04w8z5h4y","_id":"ckdqxnc3e001cd7m05ke91oy8"},{"post_id":"ckdqxnc39000vd7m05nlb0kno","category_id":"ckdqxnc2s0004d7m0c05f9mwf","_id":"ckdqxnc3g001hd7m0gsuh85op"},{"post_id":"ckdqxnc3c0013d7m0bfaebvoj","category_id":"ckdqxnc37000pd7m04w8z5h4y","_id":"ckdqxnc3h001kd7m01kfpgsgf"},{"post_id":"ckdqxnc3e001bd7m03k182ajw","category_id":"ckdqxnc2s0004d7m0c05f9mwf","_id":"ckdqxnc3i001nd7m095qp9ko6"},{"post_id":"ckdqxnc3b0010d7m02nbj0p16","category_id":"ckdqxnc3d0016d7m0a5tfa74d","_id":"ckdqxnc3l001rd7m01zfnggvh"},{"post_id":"ckdqxnc3f001fd7m0eyiu0bot","category_id":"ckdqxnc2s0004d7m0c05f9mwf","_id":"ckdqxnc3m001sd7m05yah1nhc"},{"post_id":"ckdqxnc3h001jd7m0hsjb8lpj","category_id":"ckdqxnc2s0004d7m0c05f9mwf","_id":"ckdqxnc3n001vd7m08rsw2ha4"},{"post_id":"ckdqxnc35000ld7m065d27nlv","category_id":"ckdqxnc3a000xd7m08w8a1kl5","_id":"ckdqxnc3n001xd7m06kmb2amp"},{"post_id":"ckdqxnc35000ld7m065d27nlv","category_id":"ckdqxnc3f001gd7m0a2oh3cqk","_id":"ckdqxnc3n0020d7m08olme9tu"},{"post_id":"ckdqxnc3i001md7m0458o5lls","category_id":"ckdqxnc3d0016d7m0a5tfa74d","_id":"ckdqxnc3o0022d7m0ef8eccpd"},{"post_id":"ckdqxnc3d0018d7m02swl5rt2","category_id":"ckdqxnc3d0016d7m0a5tfa74d","_id":"ckdqxnc3o0024d7m02ub5a90d"}],"PostTag":[{"post_id":"ckdqxnc2x0009d7m0d9149m2f","tag_id":"ckdqxnc2t0005d7m0h6qxcaor","_id":"ckdqxnc32000ed7m0bcli4nrw"},{"post_id":"ckdqxnc2l0001d7m07jz7e5yt","tag_id":"ckdqxnc2t0005d7m0h6qxcaor","_id":"ckdqxnc33000gd7m0frbfgezm"},{"post_id":"ckdqxnc35000ld7m065d27nlv","tag_id":"ckdqxnc35000kd7m0fc628z9d","_id":"ckdqxnc38000rd7m02lxscoyk"},{"post_id":"ckdqxnc35000ld7m065d27nlv","tag_id":"ckdqxnc2t0005d7m0h6qxcaor","_id":"ckdqxnc39000ud7m0etqghdva"},{"post_id":"ckdqxnc2q0003d7m06eigadxa","tag_id":"ckdqxnc2z000dd7m07snebpp6","_id":"ckdqxnc3a000zd7m0fb61dh21"},{"post_id":"ckdqxnc2q0003d7m06eigadxa","tag_id":"ckdqxnc35000kd7m0fc628z9d","_id":"ckdqxnc3c0012d7m080s3240v"},{"post_id":"ckdqxnc39000vd7m05nlb0kno","tag_id":"ckdqxnc2t0005d7m0h6qxcaor","_id":"ckdqxnc3d0017d7m08zm4hp5x"},{"post_id":"ckdqxnc2u0007d7m09ype70cj","tag_id":"ckdqxnc2z000dd7m07snebpp6","_id":"ckdqxnc3e001ad7m07pt86jqt"},{"post_id":"ckdqxnc2u0007d7m09ype70cj","tag_id":"ckdqxnc35000kd7m0fc628z9d","_id":"ckdqxnc3f001dd7m0ety9c4j9"},{"post_id":"ckdqxnc3e001bd7m03k182ajw","tag_id":"ckdqxnc3d0015d7m0dl0dbwd5","_id":"ckdqxnc3g001id7m0d0pia4bu"},{"post_id":"ckdqxnc3f001fd7m0eyiu0bot","tag_id":"ckdqxnc2z000dd7m07snebpp6","_id":"ckdqxnc3i001ld7m0gpz10cop"},{"post_id":"ckdqxnc3f001fd7m0eyiu0bot","tag_id":"ckdqxnc35000kd7m0fc628z9d","_id":"ckdqxnc3k001qd7m08gv12w89"},{"post_id":"ckdqxnc2y000bd7m0cu4ebqhd","tag_id":"ckdqxnc3d0015d7m0dl0dbwd5","_id":"ckdqxnc3n001ud7m0ckm9hjvl"},{"post_id":"ckdqxnc2y000bd7m0cu4ebqhd","tag_id":"ckdqxnc3f001ed7m0ebl0522v","_id":"ckdqxnc3n001wd7m0a6nh7lkh"},{"post_id":"ckdqxnc2y000bd7m0cu4ebqhd","tag_id":"ckdqxnc35000kd7m0fc628z9d","_id":"ckdqxnc3n001zd7m0gdek2tso"},{"post_id":"ckdqxnc32000fd7m0bgxacy2g","tag_id":"ckdqxnc3m001td7m094jl8cd1","_id":"ckdqxnc3n0021d7m00eq01h4l"},{"post_id":"ckdqxnc33000hd7m03fu67fed","tag_id":"ckdqxnc3n001yd7m02ai9eohw","_id":"ckdqxnc3u0026d7m0eczpgj6j"},{"post_id":"ckdqxnc33000hd7m03fu67fed","tag_id":"ckdqxnc35000kd7m0fc628z9d","_id":"ckdqxnc3v0027d7m0aabv938h"},{"post_id":"ckdqxnc37000nd7m0bgqrbjwz","tag_id":"ckdqxnc3o0025d7m01hc8fuwf","_id":"ckdqxnc3v0029d7m09ehif5do"},{"post_id":"ckdqxnc38000sd7m059w04lz4","tag_id":"ckdqxnc3m001td7m094jl8cd1","_id":"ckdqxnc3w002bd7m0emcu1iea"},{"post_id":"ckdqxnc3b0010d7m02nbj0p16","tag_id":"ckdqxnc3v002ad7m03rh448j4","_id":"ckdqxnc3w002dd7m08ful4lx4"},{"post_id":"ckdqxnc3c0013d7m0bfaebvoj","tag_id":"ckdqxnc3m001td7m094jl8cd1","_id":"ckdqxnc3x002fd7m05k6x3j9l"},{"post_id":"ckdqxnc3d0018d7m02swl5rt2","tag_id":"ckdqxnc3v002ad7m03rh448j4","_id":"ckdqxnc3x002hd7m0b9yk7tmp"},{"post_id":"ckdqxnc3h001jd7m0hsjb8lpj","tag_id":"ckdqxnc3o0025d7m01hc8fuwf","_id":"ckdqxnc3x002jd7m08cvy8ptu"},{"post_id":"ckdqxnc3i001md7m0458o5lls","tag_id":"ckdqxnc3v002ad7m03rh448j4","_id":"ckdqxnc3y002kd7m0anxkbl8j"}],"Tag":[{"name":"js","_id":"ckdqxnc2t0005d7m0h6qxcaor"},{"name":"element-ui","_id":"ckdqxnc2z000dd7m07snebpp6"},{"name":"vue","_id":"ckdqxnc35000kd7m0fc628z9d"},{"name":"nodejs","_id":"ckdqxnc3d0015d7m0dl0dbwd5"},{"name":"webpack","_id":"ckdqxnc3f001ed7m0ebl0522v"},{"name":"linux","_id":"ckdqxnc3m001td7m094jl8cd1"},{"name":"nexus","_id":"ckdqxnc3n001yd7m02ai9eohw"},{"name":"react,","_id":"ckdqxnc3o0025d7m01hc8fuwf"},{"name":"技术","_id":"ckdqxnc3v002ad7m03rh448j4"}]}}